[{"url":"https://api.github.com/repos/expressjs/express/issues/3187","repository_url":"https://api.github.com/repos/expressjs/express","labels_url":"https://api.github.com/repos/expressjs/express/issues/3187/labels{/name}","comments_url":"https://api.github.com/repos/expressjs/express/issues/3187/comments","events_url":"https://api.github.com/repos/expressjs/express/issues/3187/events","html_url":"https://github.com/expressjs/express/pull/3187","id":203848655,"node_id":"MDExOlB1bGxSZXF1ZXN0MTAzNjM0Mjg1","number":3187,"title":"Release 4.15","user":{"login":"dougwilson","id":67512,"node_id":"MDQ6VXNlcjY3NTEy","avatar_url":"https://avatars.githubusercontent.com/u/67512?v=4","gravatar_id":"","url":"https://api.github.com/users/dougwilson","html_url":"https://github.com/dougwilson","followers_url":"https://api.github.com/users/dougwilson/followers","following_url":"https://api.github.com/users/dougwilson/following{/other_user}","gists_url":"https://api.github.com/users/dougwilson/gists{/gist_id}","starred_url":"https://api.github.com/users/dougwilson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dougwilson/subscriptions","organizations_url":"https://api.github.com/users/dougwilson/orgs","repos_url":"https://api.github.com/users/dougwilson/repos","events_url":"https://api.github.com/users/dougwilson/events{/privacy}","received_events_url":"https://api.github.com/users/dougwilson/received_events","type":"User","site_admin":false},"labels":[{"id":206149,"node_id":"MDU6TGFiZWwyMDYxNDk=","url":"https://api.github.com/repos/expressjs/express/labels/4.x","name":"4.x","color":"ededed","default":false,"description":null},{"id":113897193,"node_id":"MDU6TGFiZWwxMTM4OTcxOTM=","url":"https://api.github.com/repos/expressjs/express/labels/release","name":"release","color":"000000","default":false,"description":null},{"id":133578713,"node_id":"MDU6TGFiZWwxMzM1Nzg3MTM=","url":"https://api.github.com/repos/expressjs/express/labels/pr","name":"pr","color":"006b75","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"dougwilson","id":67512,"node_id":"MDQ6VXNlcjY3NTEy","avatar_url":"https://avatars.githubusercontent.com/u/67512?v=4","gravatar_id":"","url":"https://api.github.com/users/dougwilson","html_url":"https://github.com/dougwilson","followers_url":"https://api.github.com/users/dougwilson/followers","following_url":"https://api.github.com/users/dougwilson/following{/other_user}","gists_url":"https://api.github.com/users/dougwilson/gists{/gist_id}","starred_url":"https://api.github.com/users/dougwilson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dougwilson/subscriptions","organizations_url":"https://api.github.com/users/dougwilson/orgs","repos_url":"https://api.github.com/users/dougwilson/repos","events_url":"https://api.github.com/users/dougwilson/events{/privacy}","received_events_url":"https://api.github.com/users/dougwilson/received_events","type":"User","site_admin":false},"assignees":[{"login":"dougwilson","id":67512,"node_id":"MDQ6VXNlcjY3NTEy","avatar_url":"https://avatars.githubusercontent.com/u/67512?v=4","gravatar_id":"","url":"https://api.github.com/users/dougwilson","html_url":"https://github.com/dougwilson","followers_url":"https://api.github.com/users/dougwilson/followers","following_url":"https://api.github.com/users/dougwilson/following{/other_user}","gists_url":"https://api.github.com/users/dougwilson/gists{/gist_id}","starred_url":"https://api.github.com/users/dougwilson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dougwilson/subscriptions","organizations_url":"https://api.github.com/users/dougwilson/orgs","repos_url":"https://api.github.com/users/dougwilson/repos","events_url":"https://api.github.com/users/dougwilson/events{/privacy}","received_events_url":"https://api.github.com/users/dougwilson/received_events","type":"User","site_admin":false}],"milestone":null,"comments":14,"created_at":"2017-01-29T03:48:33Z","updated_at":"2018-03-26T16:18:46Z","closed_at":"2017-03-01T22:14:07Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/expressjs/express/pulls/3187","html_url":"https://github.com/expressjs/express/pull/3187","diff_url":"https://github.com/expressjs/express/pull/3187.diff","patch_url":"https://github.com/expressjs/express/pull/3187.patch","merged_at":"2017-03-01T22:14:07Z"},"body":"This is a tracking issue for release 4.15.\r\n\r\n**Please keep feature requests in their own issues**\r\n\r\nIf you want to make a comment on a particular change, please make the comment in the \"Files changed\" tab so comments are not lost during a rebase.\r\n\r\nList of changes for release:\r\n- [x] Add debug message when loading view engine #3158\r\n- [x] Backport changes in `router@1.3.0`\r\n  - [x] Add `next(\"router\")` to exit from router #2241 #2371 \r\n  - [x] Fix case where `router.use` skipped requests routes did not #3037\r\n  - [x] Skip routing when `req.url` is not set\r\n  - [x] Use `%o` in path debug to tell types apart\r\n  - [x] lint: consolidate layer match failure path\r\n  - [x] lint: remove unreachable code\r\n  - [x] perf: add fast match path for `*` route\r\n- [x] Improve `req.ips` performance #2723\r\n- [x] Remove usage of `res._headers` private field #3174\r\n- [x] Support Node.js 7.x\r\n- [x] Upgrade `debug` module to 2.6.1\r\n- [x] Upgrade `etag` module to 1.8.0 to bring in OOB FIPS compliance\r\n- [x] Upgrade `finalhandler` module to 1.0.0 to bring in full HTML documents and security headers\r\n- [x] Upgrade `fresh` module to 0.5.0 to bring in bug fixes and perf improvements\r\n- [x] Upgrade `qs` module to 6.3.1 to bring in minor bug fixes\r\n- [x] Upgrade `send` module to 0.15.0 to bring in precondition checks\r\n- [x] Upgrade `serve-static` module to 1.12.0\r\n- [x] Use `Object.create` to setup request & response prototypes\r\n- [x] Use `setprototypeof` module to replace `__proto__` setting #3164 #3103 #2613 #1967\r\n- [x] Use `statuses` instead of `http` module for status messages #3215\r\n\r\n**Testing this release**\r\n\r\nIf you want to try out this release, you can install it with the following commands:\r\n\r\n``` bash\r\n$ npm cache clean express\r\n$ npm install expressjs/express#4.15\r\n```\r\n\r\nOwners/collaborators: please do not merge this PR :)","reactions":{"url":"https://api.github.com/repos/expressjs/express/issues/3187/reactions","total_count":6,"+1":6,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/expressjs/express/issues/3187/timeline","performed_via_github_app":null,"state_reason":null,"score":1,"files":[{"sha":"e6139739cc491202c1bd95332d22de9a4076505b","filename":".travis.yml","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/.travis.yml","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/.travis.yml","contents_url":"https://api.github.com/repos/expressjs/express/contents/.travis.yml?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -8,6 +8,14 @@ node_js:\n   - \"4.7\"\n   - \"5.12\"\n   - \"6.9\"\n+  - \"7.5\"\n+matrix:\n+  include:\n+    - node_js: \"8.0\"\n+      env: \"NVM_NODEJS_ORG_MIRROR=https://nodejs.org/download/nightly\"\n+  allow_failures:\n+    # Allow the nightly installs to fail\n+    - env: \"NVM_NODEJS_ORG_MIRROR=https://nodejs.org/download/nightly\"\n sudo: false\n cache:\n   directories:"},{"sha":"824f2443d3e3ac5d5e3524d7ebbdb68dc36d1ab8","filename":"History.md","status":"modified","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/History.md","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/History.md","contents_url":"https://api.github.com/repos/expressjs/express/contents/History.md?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -1,3 +1,73 @@\n+unreleased\n+==========\n+\n+  * Add debug message when loading view engine\n+  * Add `next(\"router\")` to exit from router\n+  * Fix case where `router.use` skipped requests routes did not\n+  * Remove usage of `res._headers` private field\n+    - Improves compatibility with Node.js 8 nightly\n+  * Skip routing when `req.url` is not set\n+  * Use `%o` in path debug to tell types apart\n+  * Use `Object.create` to setup request & response prototypes\n+  * Use `setprototypeof` module to replace `__proto__` setting\n+  * Use `statuses` instead of `http` module for status messages\n+  * deps: debug@2.6.1\n+    - Allow colors in workers\n+    - Deprecated `DEBUG_FD` environment variable set to `3` or higher\n+    - Fix error when running under React Native\n+    - Use same color for same namespace\n+    - deps: ms@0.7.2\n+  * deps: etag@~1.8.0\n+    - Use SHA1 instead of MD5 for ETag hashing\n+    - Works with FIPS 140-2 OpenSSL configuration\n+  * deps: finalhandler@~1.0.0\n+    - Fix exception when `err` cannot be converted to a string\n+    - Fully URL-encode the pathname in the 404\n+    - Only include the pathname in the 404 message\n+    - Send complete HTML document\n+    - Set `Content-Security-Policy: default-src 'self'` header\n+    - deps: debug@2.6.1\n+  * deps: fresh@0.5.0\n+    - Fix false detection of `no-cache` request directive\n+    - Fix incorrect result when `If-None-Match` has both `*` and ETags\n+    - Fix weak `ETag` matching to match spec\n+    - perf: delay reading header values until needed\n+    - perf: enable strict mode\n+    - perf: hoist regular expressions\n+    - perf: remove duplicate conditional\n+    - perf: remove unnecessary boolean coercions\n+    - perf: skip checking modified time if ETag check failed\n+    - perf: skip parsing `If-None-Match` when no `ETag` header\n+    - perf: use `Date.parse` instead of `new Date`\n+  * deps: qs@6.3.1\n+    - Fix array parsing from skipping empty values\n+    - Fix compacting nested arrays\n+  * deps: send@0.15.0\n+    - Fix false detection of `no-cache` request directive\n+    - Fix incorrect result when `If-None-Match` has both `*` and ETags\n+    - Fix weak `ETag` matching to match spec\n+    - Remove usage of `res._headers` private field\n+    - Support `If-Match` and `If-Unmodified-Since` headers\n+    - Use `res.getHeaderNames()` when available\n+    - Use `res.headersSent` when available\n+    - deps: debug@2.6.1\n+    - deps: etag@~1.8.0\n+    - deps: fresh@0.5.0\n+    - deps: http-errors@~1.6.1\n+  * deps: serve-static@1.12.0\n+    - Fix false detection of `no-cache` request directive\n+    - Fix incorrect result when `If-None-Match` has both `*` and ETags\n+    - Fix weak `ETag` matching to match spec\n+    - Remove usage of `res._headers` private field\n+    - Send complete HTML document in redirect response\n+    - Set default CSP header in redirect response\n+    - Support `If-Match` and `If-Unmodified-Since` headers\n+    - Use `res.getHeaderNames()` when available\n+    - Use `res.headersSent` when available\n+    - deps: send@0.15.0\n+  * perf: add fast match path for `*` route\n+  * perf: improve `req.ips` performance\n+\n 4.14.1 / 2017-01-28\n ===================\n "},{"sha":"4717f2735a843c8661b734c7ded08d1b0c820a4f","filename":"appveyor.yml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/appveyor.yml","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/appveyor.yml","contents_url":"https://api.github.com/repos/expressjs/express/contents/appveyor.yml?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -8,6 +8,7 @@ environment:\n     - nodejs_version: \"4.7\"\n     - nodejs_version: \"5.12\"\n     - nodejs_version: \"6.9\"\n+    - nodejs_version: \"7.5\"\n cache:\n   - node_modules\n install:"},{"sha":"0fe0eb440237f98f912256a62dde5389245b25e0","filename":"lib/application.js","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Fapplication.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Fapplication.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Fapplication.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -28,6 +28,7 @@ var deprecate = require('depd')('express');\n var flatten = require('array-flatten');\n var merge = require('utils-merge');\n var resolve = require('path').resolve;\n+var setPrototyeOf = require('setprototypeof')\n var slice = Array.prototype.slice;\n \n /**\n@@ -94,10 +95,10 @@ app.defaultConfiguration = function defaultConfiguration() {\n     }\n \n     // inherit protos\n-    this.request.__proto__ = parent.request;\n-    this.response.__proto__ = parent.response;\n-    this.engines.__proto__ = parent.engines;\n-    this.settings.__proto__ = parent.settings;\n+    setPrototyeOf(this.request, parent.request)\n+    setPrototyeOf(this.response, parent.response)\n+    setPrototyeOf(this.engines, parent.engines)\n+    setPrototyeOf(this.settings, parent.settings)\n   });\n \n   // setup locals\n@@ -227,8 +228,8 @@ app.use = function use(fn) {\n     router.use(path, function mounted_app(req, res, next) {\n       var orig = req.app;\n       fn.handle(req, res, function (err) {\n-        req.__proto__ = orig.request;\n-        res.__proto__ = orig.response;\n+        setPrototyeOf(req, orig.request)\n+        setPrototyeOf(res, orig.response)\n         next(err);\n       });\n     });"},{"sha":"187e4e2d7cafbecaeaf26280ec398b8f1b62a837","filename":"lib/express.js","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Fexpress.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Fexpress.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Fexpress.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -41,8 +41,16 @@ function createApplication() {\n   mixin(app, EventEmitter.prototype, false);\n   mixin(app, proto, false);\n \n-  app.request = { __proto__: req, app: app };\n-  app.response = { __proto__: res, app: app };\n+  // expose the prototype that will get set on requests\n+  app.request = Object.create(req, {\n+    app: { configurable: true, enumerable: true, writable: true, value: app }\n+  })\n+\n+  // expose the prototype that will get set on responses\n+  app.response = Object.create(res, {\n+    app: { configurable: true, enumerable: true, writable: true, value: app }\n+  })\n+\n   app.init();\n   return app;\n }"},{"sha":"328c4a863d91f61000d1a649d7b4f7b58c59a7bb","filename":"lib/middleware/init.js","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Fmiddleware%2Finit.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Fmiddleware%2Finit.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Fmiddleware%2Finit.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -8,6 +8,13 @@\n \n 'use strict';\n \n+/**\n+ * Module dependencies.\n+ * @private\n+ */\n+\n+var setPrototyeOf = require('setprototypeof')\n+\n /**\n  * Initialization middleware, exposing the\n  * request and response to each other, as well\n@@ -25,8 +32,8 @@ exports.init = function(app){\n     res.req = req;\n     req.next = next;\n \n-    req.__proto__ = app.request;\n-    res.__proto__ = app.response;\n+    setPrototyeOf(req, app.request)\n+    setPrototyeOf(res, app.response)\n \n     res.locals = res.locals || Object.create(null);\n "},{"sha":"3432e6776fe4d9b9afc6c265a3648828ee45fc2a","filename":"lib/request.js","status":"modified","additions":22,"deletions":7,"changes":29,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Frequest.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Frequest.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Frequest.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -25,11 +25,17 @@ var proxyaddr = require('proxy-addr');\n \n /**\n  * Request prototype.\n+ * @public\n  */\n \n-var req = exports = module.exports = {\n-  __proto__: http.IncomingMessage.prototype\n-};\n+var req = Object.create(http.IncomingMessage.prototype)\n+\n+/**\n+ * Module exports.\n+ * @public\n+ */\n+\n+module.exports = req\n \n /**\n  * Return request header.\n@@ -356,7 +362,12 @@ defineGetter(req, 'ip', function ip(){\n defineGetter(req, 'ips', function ips() {\n   var trust = this.app.get('trust proxy fn');\n   var addrs = proxyaddr.all(this, trust);\n-  return addrs.slice(1).reverse();\n+\n+  // reverse the order (to farthest -> closest)\n+  // and remove socket address\n+  addrs.reverse().pop()\n+\n+  return addrs\n });\n \n /**\n@@ -447,14 +458,18 @@ defineGetter(req, 'host', deprecate.function(function host(){\n \n defineGetter(req, 'fresh', function(){\n   var method = this.method;\n-  var s = this.res.statusCode;\n+  var res = this.res\n+  var status = res.statusCode\n \n   // GET or HEAD for weak freshness validation only\n   if ('GET' !== method && 'HEAD' !== method) return false;\n \n   // 2xx or 304 as per rfc2616 14.26\n-  if ((s >= 200 && s < 300) || 304 === s) {\n-    return fresh(this.headers, (this.res._headers || {}));\n+  if ((status >= 200 && status < 300) || 304 === status) {\n+    return fresh(this.headers, {\n+      'etag': res.get('ETag'),\n+      'last-modified': res.get('Last-Modified')\n+    })\n   }\n \n   return false;"},{"sha":"6aefe1b17824916f51b8b52f5cc9a8a404d72416","filename":"lib/response.js","status":"modified","additions":14,"deletions":8,"changes":22,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Fresponse.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Fresponse.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Fresponse.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -20,12 +20,12 @@ var http = require('http');\n var isAbsolute = require('./utils').isAbsolute;\n var onFinished = require('on-finished');\n var path = require('path');\n+var statuses = require('statuses')\n var merge = require('utils-merge');\n var sign = require('cookie-signature').sign;\n var normalizeType = require('./utils').normalizeType;\n var normalizeTypes = require('./utils').normalizeTypes;\n var setCharset = require('./utils').setCharset;\n-var statusCodes = http.STATUS_CODES;\n var cookie = require('cookie');\n var send = require('send');\n var extname = path.extname;\n@@ -35,11 +35,17 @@ var vary = require('vary');\n \n /**\n  * Response prototype.\n+ * @public\n  */\n \n-var res = module.exports = {\n-  __proto__: http.ServerResponse.prototype\n-};\n+var res = Object.create(http.ServerResponse.prototype)\n+\n+/**\n+ * Module exports.\n+ * @public\n+ */\n+\n+module.exports = res\n \n /**\n  * Module variables.\n@@ -129,7 +135,7 @@ res.send = function send(body) {\n \n     deprecate('res.send(status): Use res.sendStatus(status) instead');\n     this.statusCode = chunk;\n-    chunk = statusCodes[chunk];\n+    chunk = statuses[chunk]\n   }\n \n   switch (typeof chunk) {\n@@ -334,7 +340,7 @@ res.jsonp = function jsonp(obj) {\n  */\n \n res.sendStatus = function sendStatus(statusCode) {\n-  var body = statusCodes[statusCode] || String(statusCode);\n+  var body = statuses[statusCode] || String(statusCode)\n \n   this.statusCode = statusCode;\n   this.type('txt');\n@@ -876,12 +882,12 @@ res.redirect = function redirect(url) {\n   // Support text/{plain,html} by default\n   this.format({\n     text: function(){\n-      body = statusCodes[status] + '. Redirecting to ' + address;\n+      body = statuses[status] + '. Redirecting to ' + address\n     },\n \n     html: function(){\n       var u = escapeHtml(address);\n-      body = '<p>' + statusCodes[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>';\n+      body = '<p>' + statuses[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\n     },\n \n     default: function(){"},{"sha":"1f426068d7ed4bd7568a6a1c7d369cc44158ea68","filename":"lib/router/index.js","status":"modified","additions":34,"deletions":17,"changes":51,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Frouter%2Findex.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Frouter%2Findex.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Frouter%2Findex.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -21,6 +21,7 @@ var debug = require('debug')('express:router');\n var deprecate = require('depd')('express');\n var flatten = require('array-flatten');\n var parseUrl = require('parseurl');\n+var setPrototypeOf = require('setprototypeof')\n \n /**\n  * Module variables.\n@@ -47,7 +48,7 @@ var proto = module.exports = function(options) {\n   }\n \n   // mixin Router class functions\n-  router.__proto__ = proto;\n+  setPrototypeOf(router, proto)\n \n   router.params = {};\n   router._params = [];\n@@ -137,11 +138,8 @@ proto.handle = function handle(req, res, out) {\n \n   debug('dispatching %s %s', req.method, req.url);\n \n-  var search = 1 + req.url.indexOf('?');\n-  var pathlength = search ? search - 1 : req.url.length;\n-  var fqdn = req.url[0] !== '/' && 1 + req.url.substr(0, pathlength).indexOf('://');\n-  var protohost = fqdn ? req.url.substr(0, req.url.indexOf('/', 2 + fqdn)) : '';\n   var idx = 0;\n+  var protohost = getProtohost(req.url) || ''\n   var removed = '';\n   var slashAdded = false;\n   var paramcalled = {};\n@@ -193,6 +191,12 @@ proto.handle = function handle(req, res, out) {\n       removed = '';\n     }\n \n+    // signal to exit router\n+    if (layerError === 'router') {\n+      setImmediate(done, null)\n+      return\n+    }\n+\n     // no more matching layers\n     if (idx >= stack.length) {\n       setImmediate(done, layerError);\n@@ -282,18 +286,19 @@ proto.handle = function handle(req, res, out) {\n   }\n \n   function trim_prefix(layer, layerError, layerPath, path) {\n-    var c = path[layerPath.length];\n-    if (c && '/' !== c && '.' !== c) return next(layerError);\n-\n-     // Trim off the part of the url that matches the route\n-     // middleware (.use stuff) needs to have the path stripped\n     if (layerPath.length !== 0) {\n+      // Validate path breaks on a path separator\n+      var c = path[layerPath.length]\n+      if (c && c !== '/' && c !== '.') return next(layerError)\n+\n+      // Trim off the part of the url that matches the route\n+      // middleware (.use stuff) needs to have the path stripped\n       debug('trim prefix (%s) from url %s', layerPath, req.url);\n       removed = layerPath;\n       req.url = protohost + req.url.substr(protohost.length + removed.length);\n \n       // Ensure leading slash\n-      if (!fqdn && req.url[0] !== '/') {\n+      if (!protohost && req.url[0] !== '/') {\n         req.url = '/' + req.url;\n         slashAdded = true;\n       }\n@@ -351,11 +356,6 @@ proto.process_params = function process_params(layer, called, req, res, done) {\n \n     paramIndex = 0;\n     key = keys[i++];\n-\n-    if (!key) {\n-      return done();\n-    }\n-\n     name = key.name;\n     paramVal = req.params[name];\n     paramCallbacks = params[name];\n@@ -459,7 +459,7 @@ proto.use = function use(fn) {\n     }\n \n     // add the middleware\n-    debug('use %s %s', path, fn.name || '<anonymous>');\n+    debug('use %o %s', path, fn.name || '<anonymous>')\n \n     var layer = new Layer(path, {\n       sensitive: this.caseSensitive,\n@@ -531,6 +531,23 @@ function getPathname(req) {\n   }\n }\n \n+// Get get protocol + host for a URL\n+function getProtohost(url) {\n+  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n+    return undefined\n+  }\n+\n+  var searchIndex = url.indexOf('?')\n+  var pathLength = searchIndex !== -1\n+    ? searchIndex\n+    : url.length\n+  var fqdnIndex = url.substr(0, pathLength).indexOf('://')\n+\n+  return fqdnIndex !== -1\n+    ? url.substr(0, url.indexOf('/', 3 + fqdnIndex))\n+    : undefined\n+}\n+\n // get type for error message\n function gettype(obj) {\n   var type = typeof obj;"},{"sha":"4dc8e86d4f7fac6a5849ec236359e2300b4e3654","filename":"lib/router/layer.js","status":"modified","additions":26,"deletions":21,"changes":47,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Frouter%2Flayer.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Frouter%2Flayer.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Frouter%2Flayer.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -35,7 +35,7 @@ function Layer(path, options, fn) {\n     return new Layer(path, options, fn);\n   }\n \n-  debug('new %s', path);\n+  debug('new %o', path)\n   var opts = options || {};\n \n   this.handle = fn;\n@@ -44,9 +44,9 @@ function Layer(path, options, fn) {\n   this.path = undefined;\n   this.regexp = pathRegexp(path, this.keys = [], opts);\n \n-  if (path === '/' && opts.end === false) {\n-    this.regexp.fast_slash = true;\n-  }\n+  // set fast path flags\n+  this.regexp.fast_star = path === '*'\n+  this.regexp.fast_slash = path === '/' && opts.end === false\n }\n \n /**\n@@ -108,39 +108,44 @@ Layer.prototype.handle_request = function handle(req, res, next) {\n  */\n \n Layer.prototype.match = function match(path) {\n-  if (path == null) {\n-    // no path, nothing matches\n-    this.params = undefined;\n-    this.path = undefined;\n-    return false;\n-  }\n+  var match\n+\n+  if (path != null) {\n+    // fast path non-ending match for / (any path matches)\n+    if (this.regexp.fast_slash) {\n+      this.params = {}\n+      this.path = ''\n+      return true\n+    }\n \n-  if (this.regexp.fast_slash) {\n-    // fast path non-ending match for / (everything matches)\n-    this.params = {};\n-    this.path = '';\n-    return true;\n-  }\n+    // fast path for * (everything matched in a param)\n+    if (this.regexp.fast_star) {\n+      this.params = {'0': decode_param(path)}\n+      this.path = path\n+      return true\n+    }\n \n-  var m = this.regexp.exec(path);\n+    // match the path\n+    match = this.regexp.exec(path)\n+  }\n \n-  if (!m) {\n+  if (!match) {\n     this.params = undefined;\n     this.path = undefined;\n     return false;\n   }\n \n   // store values\n   this.params = {};\n-  this.path = m[0];\n+  this.path = match[0]\n \n   var keys = this.keys;\n   var params = this.params;\n \n-  for (var i = 1; i < m.length; i++) {\n+  for (var i = 1; i < match.length; i++) {\n     var key = keys[i - 1];\n     var prop = key.name;\n-    var val = decode_param(m[i]);\n+    var val = decode_param(match[i])\n \n     if (val !== undefined || !(hasOwnProperty.call(params, prop))) {\n       params[prop] = val;"},{"sha":"ea82ed29df5e777aa936ad89a4c156c3932bac0e","filename":"lib/router/route.js","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Frouter%2Froute.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Frouter%2Froute.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Frouter%2Froute.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -44,7 +44,7 @@ function Route(path) {\n   this.path = path;\n   this.stack = [];\n \n-  debug('new %s', path);\n+  debug('new %o', path)\n \n   // route handlers for various http methods\n   this.methods = {};\n@@ -112,10 +112,16 @@ Route.prototype.dispatch = function dispatch(req, res, done) {\n   next();\n \n   function next(err) {\n+    // signal to exit route\n     if (err && err === 'route') {\n       return done();\n     }\n \n+    // signal to exit router\n+    if (err && err === 'router') {\n+      return done(err)\n+    }\n+\n     var layer = stack[idx++];\n     if (!layer) {\n       return done(err);\n@@ -196,7 +202,7 @@ methods.forEach(function(method){\n         throw new Error(msg);\n       }\n \n-      debug('%s %s', method, this.path);\n+      debug('%s %o', method, this.path)\n \n       var layer = Layer('/', {}, handle);\n       layer.method = method;"},{"sha":"1728725d291b814158d70bc250d8c5983fe11d48","filename":"lib/view.js","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Fview.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/lib%2Fview.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Fview.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -75,7 +75,9 @@ function View(name, options) {\n \n   if (!opts.engines[this.ext]) {\n     // load engine\n-    opts.engines[this.ext] = require(this.ext.substr(1)).__express;\n+    var mod = this.ext.substr(1)\n+    debug('require \"%s\"', mod)\n+    opts.engines[this.ext] = require(mod).__express\n   }\n \n   // store loaded engine"},{"sha":"79b3b0e31c59ef67c1114d4251acd9ead23c790d","filename":"package.json","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/package.json","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/package.json","contents_url":"https://api.github.com/repos/expressjs/express/contents/package.json?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -33,38 +33,40 @@\n     \"content-type\": \"~1.0.2\",\n     \"cookie\": \"0.3.1\",\n     \"cookie-signature\": \"1.0.6\",\n-    \"debug\": \"~2.2.0\",\n+    \"debug\": \"2.6.1\",\n     \"depd\": \"~1.1.0\",\n     \"encodeurl\": \"~1.0.1\",\n     \"escape-html\": \"~1.0.3\",\n-    \"etag\": \"~1.7.0\",\n-    \"finalhandler\": \"0.5.1\",\n-    \"fresh\": \"0.3.0\",\n+    \"etag\": \"~1.8.0\",\n+    \"finalhandler\": \"~1.0.0\",\n+    \"fresh\": \"0.5.0\",\n     \"merge-descriptors\": \"1.0.1\",\n     \"methods\": \"~1.1.2\",\n     \"on-finished\": \"~2.3.0\",\n     \"parseurl\": \"~1.3.1\",\n     \"path-to-regexp\": \"0.1.7\",\n     \"proxy-addr\": \"~1.1.3\",\n-    \"qs\": \"6.2.0\",\n+    \"qs\": \"6.3.1\",\n     \"range-parser\": \"~1.2.0\",\n-    \"send\": \"0.14.2\",\n-    \"serve-static\": \"~1.11.2\",\n+    \"send\": \"0.15.0\",\n+    \"serve-static\": \"1.12.0\",\n+    \"setprototypeof\": \"1.0.3\",\n+    \"statuses\": \"~1.3.1\",\n     \"type-is\": \"~1.6.14\",\n     \"utils-merge\": \"1.0.0\",\n     \"vary\": \"~1.1.0\"\n   },\n   \"devDependencies\": {\n     \"after\": \"0.8.2\",\n-    \"body-parser\": \"1.16.0\",\n+    \"body-parser\": \"1.16.1\",\n     \"cookie-parser\": \"~1.4.3\",\n-    \"ejs\": \"2.5.5\",\n-    \"express-session\": \"1.15.0\",\n+    \"ejs\": \"2.5.6\",\n+    \"express-session\": \"1.15.1\",\n     \"istanbul\": \"0.4.5\",\n     \"marked\": \"0.3.6\",\n-    \"method-override\": \"~2.3.6\",\n+    \"method-override\": \"2.3.7\",\n     \"mocha\": \"3.2.0\",\n-    \"morgan\": \"~1.7.0\",\n+    \"morgan\": \"1.8.1\",\n     \"multiparty\": \"4.1.3\",\n     \"pbkdf2-password\": \"1.2.1\",\n     \"should\": \"11.2.0\","},{"sha":"01a6e2c472bf5ed1571005e33b0e6f9d7cacb2a0","filename":"test/Router.js","status":"modified","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2FRouter.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2FRouter.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2FRouter.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -53,6 +53,16 @@ describe('Router', function(){\n     router.handle({ url: '', method: 'GET' }, {}, done);\n   });\n \n+  it('should handle missing URL', function (done) {\n+    var router = new Router()\n+\n+    router.use(function (req, res) {\n+      throw new Error('should not be called')\n+    })\n+\n+    router.handle({ method: 'GET' }, {}, done)\n+  })\n+\n   it('should not stack overflow with many registered routes', function(done){\n     var handler = function(req, res){ res.end(new Error('wrong handler')) };\n     var router = new Router();\n@@ -337,6 +347,24 @@ describe('Router', function(){\n       assert.equal(count, methods.length);\n       done();\n     })\n+\n+    it('should be called for any URL when \"*\"', function (done) {\n+      var cb = after(4, done)\n+      var router = new Router()\n+\n+      function no () {\n+        throw new Error('should not be called')\n+      }\n+\n+      router.all('*', function (req, res) {\n+        res.end()\n+      })\n+\n+      router.handle({ url: '/', method: 'GET' }, { end: cb }, no)\n+      router.handle({ url: '/foo', method: 'GET' }, { end: cb }, no)\n+      router.handle({ url: 'foo', method: 'GET' }, { end: cb }, no)\n+      router.handle({ url: '*', method: 'GET' }, { end: cb }, no)\n+    })\n   })\n \n   describe('.use', function() {\n@@ -353,6 +381,24 @@ describe('Router', function(){\n       router.use.bind(router, '/', new Date()).should.throw(/requires middleware function.*Date/)\n     })\n \n+    it('should be called for any URL', function (done) {\n+      var cb = after(4, done)\n+      var router = new Router()\n+\n+      function no () {\n+        throw new Error('should not be called')\n+      }\n+\n+      router.use(function (req, res) {\n+        res.end()\n+      })\n+\n+      router.handle({ url: '/', method: 'GET' }, { end: cb }, no)\n+      router.handle({ url: '/foo', method: 'GET' }, { end: cb }, no)\n+      router.handle({ url: 'foo', method: 'GET' }, { end: cb }, no)\n+      router.handle({ url: '*', method: 'GET' }, { end: cb }, no)\n+    })\n+\n     it('should accept array of middleware', function(done){\n       var count = 0;\n       var router = new Router();"},{"sha":"e838b2e33fcefa13999a2c5cdd4c4b916e569915","filename":"test/app.router.js","status":"modified","additions":56,"deletions":1,"changes":57,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2Fapp.router.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2Fapp.router.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fapp.router.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -77,7 +77,7 @@ describe('app.router', function(){\n \n       request(app)\n       .get('/')\n-      .expect(404, 'Cannot GET /\\n', cb);\n+      .expect(404, cb)\n \n       request(app)\n       .delete('/')\n@@ -563,6 +563,30 @@ describe('app.router', function(){\n   })\n \n   describe('*', function(){\n+    it('should capture everything', function (done) {\n+      var app = express()\n+\n+      app.get('*', function (req, res) {\n+        res.end(req.params[0])\n+      })\n+\n+      request(app)\n+      .get('/user/tobi.json')\n+      .expect('/user/tobi.json', done)\n+    })\n+\n+    it('should decore the capture', function (done) {\n+      var app = express()\n+\n+      app.get('*', function (req, res) {\n+        res.end(req.params[0])\n+      })\n+\n+      request(app)\n+      .get('/user/tobi%20and%20loki.json')\n+      .expect('/user/tobi and loki.json', done)\n+    })\n+\n     it('should denote a greedy capture group', function(done){\n       var app = express();\n \n@@ -908,6 +932,37 @@ describe('app.router', function(){\n     })\n   })\n \n+  describe('when next(\"router\") is called', function () {\n+    it('should jump out of router', function (done) {\n+      var app = express()\n+      var router = express.Router()\n+\n+      function fn (req, res, next) {\n+        res.set('X-Hit', '1')\n+        next('router')\n+      }\n+\n+      router.get('/foo', fn, function (req, res, next) {\n+        res.end('failure')\n+      })\n+\n+      router.get('/foo', function (req, res, next) {\n+        res.end('failure')\n+      })\n+\n+      app.use(router)\n+\n+      app.get('/foo', function (req, res) {\n+        res.end('success')\n+      })\n+\n+      request(app)\n+      .get('/foo')\n+      .expect('X-Hit', '1')\n+      .expect(200, 'success', done)\n+    })\n+  })\n+\n   describe('when next(err) is called', function(){\n     it('should break out of app.router', function(done){\n       var app = express()"},{"sha":"1aa8fa5b21743482a86ac7c1b796c2ed340fe05a","filename":"test/req.fresh.js","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2Freq.fresh.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2Freq.fresh.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Freq.fresh.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -36,8 +36,8 @@ describe('req', function(){\n     it('should return false without response headers', function(done){\n       var app = express();\n \n+      app.disable('x-powered-by')\n       app.use(function(req, res){\n-        res._headers = null;\n         res.send(req.fresh);\n       });\n "},{"sha":"30c9d05d51c5056b2370a18d0e7d7f366f9d0b81","filename":"test/req.stale.js","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2Freq.stale.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2Freq.stale.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Freq.stale.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -36,8 +36,8 @@ describe('req', function(){\n     it('should return true without response headers', function(done){\n       var app = express();\n \n+      app.disable('x-powered-by')\n       app.use(function(req, res){\n-        res._headers = null;\n         res.send(req.stale);\n       });\n "},{"sha":"755bb1c1c6c26da31b51e735653cd4898f5921cf","filename":"test/res.redirect.js","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2Fres.redirect.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2Fres.redirect.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.redirect.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -1,5 +1,4 @@\n \n-var http = require('http');\n var express = require('..');\n var request = require('supertest');\n var utils = require('./support/utils');\n@@ -104,7 +103,7 @@ describe('res', function(){\n       .set('Accept', 'text/html')\n       .expect('Content-Type', /html/)\n       .expect('Location', 'http://google.com')\n-      .expect(302, '<p>' + http.STATUS_CODES[302] + '. Redirecting to <a href=\"http://google.com\">http://google.com</a></p>', done);\n+      .expect(302, '<p>Found. Redirecting to <a href=\"http://google.com\">http://google.com</a></p>', done)\n     })\n \n     it('should escape the url', function(done){\n@@ -120,7 +119,7 @@ describe('res', function(){\n       .set('Accept', 'text/html')\n       .expect('Content-Type', /html/)\n       .expect('Location', '%3Cla\\'me%3E')\n-      .expect(302, '<p>' + http.STATUS_CODES[302] + '. Redirecting to <a href=\"%3Cla&#39;me%3E\">%3Cla&#39;me%3E</a></p>', done)\n+      .expect(302, '<p>Found. Redirecting to <a href=\"%3Cla&#39;me%3E\">%3Cla&#39;me%3E</a></p>', done)\n     })\n \n     it('should include the redirect type', function(done){\n@@ -152,7 +151,7 @@ describe('res', function(){\n       .set('Accept', 'text/plain, */*')\n       .expect('Content-Type', /plain/)\n       .expect('Location', 'http://google.com')\n-      .expect(302, http.STATUS_CODES[302] + '. Redirecting to http://google.com', done);\n+      .expect(302, 'Found. Redirecting to http://google.com', done)\n     })\n \n     it('should encode the url', function(done){\n@@ -168,7 +167,7 @@ describe('res', function(){\n       .set('Accept', 'text/plain, */*')\n       .expect('Content-Type', /plain/)\n       .expect('Location', 'http://example.com/?param=%3Cscript%3Ealert(%22hax%22);%3C/script%3E')\n-      .expect(302, http.STATUS_CODES[302] + '. Redirecting to http://example.com/?param=%3Cscript%3Ealert(%22hax%22);%3C/script%3E', done)\n+      .expect(302, 'Found. Redirecting to http://example.com/?param=%3Cscript%3Ealert(%22hax%22);%3C/script%3E', done)\n     })\n \n     it('should include the redirect type', function(done){"},{"sha":"f2e7d759c15fd3d3176069d6b5128e6aeeb42352","filename":"test/res.send.js","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2Fres.send.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2Fres.send.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.send.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -133,7 +133,7 @@ describe('res', function(){\n \n       request(app)\n       .get('/')\n-      .expect('ETag', 'W/\"3e7-VYgCBglFKiDVAcpzPNt4Sg\"')\n+      .expect('ETag', 'W/\"3e7-qPnkJ3CVdVhFJQvUBfF10TmVA7g\"')\n       .expect(200, done);\n     })\n \n@@ -201,7 +201,7 @@ describe('res', function(){\n \n       request(app)\n       .get('/')\n-      .expect('ETag', 'W/\"3e7-VYgCBglFKiDVAcpzPNt4Sg\"')\n+      .expect('ETag', 'W/\"3e7-qPnkJ3CVdVhFJQvUBfF10TmVA7g\"')\n       .expect(200, done);\n     })\n \n@@ -355,7 +355,7 @@ describe('res', function(){\n \n         request(app)\n         .get('/')\n-        .expect('ETag', 'W/\"c-ZUfd0NJ26qwjlKF4r8qb2g\"')\n+        .expect('ETag', 'W/\"c-IgR/L5SF7CJQff4wxKGF/vfPuZ0\"')\n         .expect(200, done);\n       });\n \n@@ -371,7 +371,7 @@ describe('res', function(){\n \n           request(app)\n           [method]('/')\n-          .expect('ETag', 'W/\"c-ZUfd0NJ26qwjlKF4r8qb2g\"')\n+          .expect('ETag', 'W/\"c-IgR/L5SF7CJQff4wxKGF/vfPuZ0\"')\n           .expect(200, done);\n         })\n       });\n@@ -387,7 +387,7 @@ describe('res', function(){\n \n         request(app)\n         .get('/')\n-        .expect('ETag', 'W/\"0-1B2M2Y8AsgTpgAmY7PhCfg\"')\n+        .expect('ETag', 'W/\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"')\n         .expect(200, done);\n       })\n \n@@ -403,7 +403,7 @@ describe('res', function(){\n \n         request(app)\n         .get('/')\n-        .expect('ETag', 'W/\"3e7-VYgCBglFKiDVAcpzPNt4Sg\"')\n+        .expect('ETag', 'W/\"3e7-qPnkJ3CVdVhFJQvUBfF10TmVA7g\"')\n         .expect(200, done);\n       });\n \n@@ -485,7 +485,7 @@ describe('res', function(){\n \n         request(app)\n         .get('/')\n-        .expect('ETag', '\"d-Otu60XkfuuPskIiUxJY4cA\"')\n+        .expect('ETag', '\"d-HwnTDHB9U/PRbFMN1z1wps51lqk\"')\n         .expect(200, done);\n       })\n     })\n@@ -502,7 +502,7 @@ describe('res', function(){\n \n         request(app)\n         .get('/')\n-        .expect('ETag', 'W/\"d-Otu60XkfuuPskIiUxJY4cA\"')\n+        .expect('ETag', 'W/\"d-HwnTDHB9U/PRbFMN1z1wps51lqk\"')\n         .expect(200, done)\n       })\n     })"},{"sha":"c49019fe1265cd7c8b8a791075601df8b1f5b254","filename":"test/utils.js","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/expressjs/express/blob/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2Futils.js","raw_url":"https://github.com/expressjs/express/raw/9722202df964bfbfc0f579e4baeb5a4e1b43b344/test%2Futils.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Futils.js?ref=9722202df964bfbfc0f579e4baeb5a4e1b43b344","patch":"@@ -5,23 +5,23 @@ var utils = require('../lib/utils');\n describe('utils.etag(body, encoding)', function(){\n   it('should support strings', function(){\n     utils.etag('express!')\n-    .should.eql('\"8-zZdv4imtWD49AHEviejT6A\"')\n+    .should.eql('\"8-O2uVAFaQ1rZvlKLT14RnuvjPIdg\"')\n   })\n \n   it('should support utf8 strings', function(){\n     utils.etag('express❤', 'utf8')\n-    .should.eql('\"a-fsFba4IxwQS6h6Umb+FNxw\"')\n+    .should.eql('\"a-JBiXf7GyzxwcrxY4hVXUwa7tmks\"')\n   })\n \n   it('should support buffer', function(){\n     var buf = new Buffer('express!')\n     utils.etag(buf)\n-    .should.eql('\"8-zZdv4imtWD49AHEviejT6A\"');\n+    .should.eql('\"8-O2uVAFaQ1rZvlKLT14RnuvjPIdg\"')\n   })\n \n   it('should support empty string', function(){\n     utils.etag('')\n-    .should.eql('\"0-1B2M2Y8AsgTpgAmY7PhCfg\"');\n+    .should.eql('\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"')\n   })\n })\n \n@@ -50,23 +50,23 @@ describe('utils.setCharset(type, charset)', function () {\n describe('utils.wetag(body, encoding)', function(){\n   it('should support strings', function(){\n     utils.wetag('express!')\n-    .should.eql('W/\"8-zZdv4imtWD49AHEviejT6A\"')\n+    .should.eql('W/\"8-O2uVAFaQ1rZvlKLT14RnuvjPIdg\"')\n   })\n \n   it('should support utf8 strings', function(){\n     utils.wetag('express❤', 'utf8')\n-    .should.eql('W/\"a-fsFba4IxwQS6h6Umb+FNxw\"')\n+    .should.eql('W/\"a-JBiXf7GyzxwcrxY4hVXUwa7tmks\"')\n   })\n \n   it('should support buffer', function(){\n     var buf = new Buffer('express!')\n     utils.wetag(buf)\n-    .should.eql('W/\"8-zZdv4imtWD49AHEviejT6A\"');\n+    .should.eql('W/\"8-O2uVAFaQ1rZvlKLT14RnuvjPIdg\"')\n   })\n \n   it('should support empty string', function(){\n     utils.wetag('')\n-    .should.eql('W/\"0-1B2M2Y8AsgTpgAmY7PhCfg\"');\n+    .should.eql('W/\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"')\n   })\n })\n "}]},{"url":"https://api.github.com/repos/expressjs/express/issues/3423","repository_url":"https://api.github.com/repos/expressjs/express","labels_url":"https://api.github.com/repos/expressjs/express/issues/3423/labels{/name}","comments_url":"https://api.github.com/repos/expressjs/express/issues/3423/comments","events_url":"https://api.github.com/repos/expressjs/express/issues/3423/events","html_url":"https://github.com/expressjs/express/pull/3423","id":260144166,"node_id":"MDExOlB1bGxSZXF1ZXN0MTQyNzg4NjI1","number":3423,"title":"Release 4.16","user":{"login":"dougwilson","id":67512,"node_id":"MDQ6VXNlcjY3NTEy","avatar_url":"https://avatars.githubusercontent.com/u/67512?v=4","gravatar_id":"","url":"https://api.github.com/users/dougwilson","html_url":"https://github.com/dougwilson","followers_url":"https://api.github.com/users/dougwilson/followers","following_url":"https://api.github.com/users/dougwilson/following{/other_user}","gists_url":"https://api.github.com/users/dougwilson/gists{/gist_id}","starred_url":"https://api.github.com/users/dougwilson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dougwilson/subscriptions","organizations_url":"https://api.github.com/users/dougwilson/orgs","repos_url":"https://api.github.com/users/dougwilson/repos","events_url":"https://api.github.com/users/dougwilson/events{/privacy}","received_events_url":"https://api.github.com/users/dougwilson/received_events","type":"User","site_admin":false},"labels":[{"id":206149,"node_id":"MDU6TGFiZWwyMDYxNDk=","url":"https://api.github.com/repos/expressjs/express/labels/4.x","name":"4.x","color":"ededed","default":false,"description":null},{"id":113897193,"node_id":"MDU6TGFiZWwxMTM4OTcxOTM=","url":"https://api.github.com/repos/expressjs/express/labels/release","name":"release","color":"000000","default":false,"description":null},{"id":133578713,"node_id":"MDU6TGFiZWwxMzM1Nzg3MTM=","url":"https://api.github.com/repos/expressjs/express/labels/pr","name":"pr","color":"006b75","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"dougwilson","id":67512,"node_id":"MDQ6VXNlcjY3NTEy","avatar_url":"https://avatars.githubusercontent.com/u/67512?v=4","gravatar_id":"","url":"https://api.github.com/users/dougwilson","html_url":"https://github.com/dougwilson","followers_url":"https://api.github.com/users/dougwilson/followers","following_url":"https://api.github.com/users/dougwilson/following{/other_user}","gists_url":"https://api.github.com/users/dougwilson/gists{/gist_id}","starred_url":"https://api.github.com/users/dougwilson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dougwilson/subscriptions","organizations_url":"https://api.github.com/users/dougwilson/orgs","repos_url":"https://api.github.com/users/dougwilson/repos","events_url":"https://api.github.com/users/dougwilson/events{/privacy}","received_events_url":"https://api.github.com/users/dougwilson/received_events","type":"User","site_admin":false},"assignees":[{"login":"dougwilson","id":67512,"node_id":"MDQ6VXNlcjY3NTEy","avatar_url":"https://avatars.githubusercontent.com/u/67512?v=4","gravatar_id":"","url":"https://api.github.com/users/dougwilson","html_url":"https://github.com/dougwilson","followers_url":"https://api.github.com/users/dougwilson/followers","following_url":"https://api.github.com/users/dougwilson/following{/other_user}","gists_url":"https://api.github.com/users/dougwilson/gists{/gist_id}","starred_url":"https://api.github.com/users/dougwilson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dougwilson/subscriptions","organizations_url":"https://api.github.com/users/dougwilson/orgs","repos_url":"https://api.github.com/users/dougwilson/repos","events_url":"https://api.github.com/users/dougwilson/events{/privacy}","received_events_url":"https://api.github.com/users/dougwilson/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/expressjs/express/milestones/16","html_url":"https://github.com/expressjs/express/milestone/16","labels_url":"https://api.github.com/repos/expressjs/express/milestones/16/labels","id":2651113,"node_id":"MDk6TWlsZXN0b25lMjY1MTExMw==","number":16,"title":"4.16","description":"","creator":{"login":"dougwilson","id":67512,"node_id":"MDQ6VXNlcjY3NTEy","avatar_url":"https://avatars.githubusercontent.com/u/67512?v=4","gravatar_id":"","url":"https://api.github.com/users/dougwilson","html_url":"https://github.com/dougwilson","followers_url":"https://api.github.com/users/dougwilson/followers","following_url":"https://api.github.com/users/dougwilson/following{/other_user}","gists_url":"https://api.github.com/users/dougwilson/gists{/gist_id}","starred_url":"https://api.github.com/users/dougwilson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dougwilson/subscriptions","organizations_url":"https://api.github.com/users/dougwilson/orgs","repos_url":"https://api.github.com/users/dougwilson/repos","events_url":"https://api.github.com/users/dougwilson/events{/privacy}","received_events_url":"https://api.github.com/users/dougwilson/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":15,"state":"closed","created_at":"2017-07-19T21:33:30Z","updated_at":"2017-09-29T01:13:34Z","due_on":null,"closed_at":"2017-09-29T01:13:34Z"},"comments":3,"created_at":"2017-09-25T03:17:26Z","updated_at":"2017-09-29T20:38:13Z","closed_at":"2017-09-28T17:46:27Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/expressjs/express/pulls/3423","html_url":"https://github.com/expressjs/express/pull/3423","diff_url":"https://github.com/expressjs/express/pull/3423.diff","patch_url":"https://github.com/expressjs/express/pull/3423.patch","merged_at":"2017-09-28T17:46:27Z"},"body":"This is a tracking issue for release 4.16.\r\n\r\n**Please keep feature requests in their own issues**\r\n\r\nIf you want to make a comment on a particular change, please make the comment in the \"Files changed\" tab so comments are not lost during a rebase.\r\n\r\nList of changes for release:\r\n- [x] Add `express.json` and `express.urlencoded` to parse bodies #2211 \r\n- [x] Add `\"json escape\"` setting for `res.json` and `res.jsonp` #3268 #3269 \r\n- [x] Add options to `res.download` #3327 #3370\r\n- [x] Improve error message when autoloading invalid view engine #3251\r\n- [x] Improve error messages when non-function provided as middleware #3426\r\n- [x] Re-use options object for ETags #3314 #3313\r\n- [x] Skip `Buffer` encoding when not generating ETag for small response\r\n- [x] Support Node.js 8.x\r\n- [x] Upgrade `content-type` module to 1.0.4 to bring in performance updates\r\n- [x] Upgrade `etag` module to 1.8.1 to bring in a performance update\r\n- [x] Upgrade `finalhandler` module to 1.1.0 to bring in a performance update and no `_header` usage\r\n- [x] Upgrade `parseurl` module to 1.3.2 to bring in a performance update\r\n- [x] Upgrade `proxy-addr` module to 2.0.2 to bring in a performance update\r\n- [x] Upgrade `qs` module to 6.5.1 to bring in a performance update\r\n- [x] Upgrade `send` module to 0.16.0 to bring in some fixes, `immutable` option, new `mime` module #3435 \r\n- [x] Upgrade `serve-static` module to 1.13.0 to bring in `send` update and `immutable` option #3197\r\n- [x] Upgrade `setprototypeof` to 1.1.0\r\n- [x] Upgrade `utils-merge` to 1.0.1\r\n- [x] Upgrade `vary` to 1.1.2 to bring in performance update #3434 \r\n- [x] Use `safe-buffer` for improved Buffer API\r\n\r\n**Testing this release**\r\n\r\nIf you want to try out this release, you can install it with the following commands:\r\n\r\n``` bash\r\n$ npm cache clean express\r\n$ npm install expressjs/express#4.16\r\n```\r\n\r\nOwners/collaborators: please do not merge this PR :)","reactions":{"url":"https://api.github.com/repos/expressjs/express/issues/3423/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/expressjs/express/issues/3423/timeline","performed_via_github_app":null,"state_reason":null,"score":1,"files":[{"sha":"5fee6a2dc97c93881b89c43ed4a58ca1b02b48b6","filename":".gitignore","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/.gitignore","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/.gitignore","contents_url":"https://api.github.com/repos/expressjs/express/contents/.gitignore?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -15,6 +15,7 @@ Desktop.ini\n \n # npm\n node_modules\n+package-lock.json\n *.log\n *.gz\n "},{"sha":"855168ff54016e29022280914845c5d3e92b8e30","filename":".travis.yml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/.travis.yml","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/.travis.yml","contents_url":"https://api.github.com/repos/expressjs/express/contents/.travis.yml?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -9,10 +9,13 @@ node_js:\n   - \"5.12\"\n   - \"6.11\"\n   - \"7.10\"\n+  - \"8.4\"\n matrix:\n   include:\n     - node_js: \"8\"\n       env: \"NVM_NODEJS_ORG_MIRROR=https://nodejs.org/download/nightly\"\n+    - node_js: \"9\"\n+      env: \"NVM_NODEJS_ORG_MIRROR=https://nodejs.org/download/nightly\"\n   allow_failures:\n     # Allow the nightly installs to fail\n     - env: \"NVM_NODEJS_ORG_MIRROR=https://nodejs.org/download/nightly\"\n@@ -21,6 +24,9 @@ cache:\n   directories:\n     - node_modules\n before_install:\n+  # Skip updating shrinkwrap / lock\n+  - \"npm config set shrinkwrap false\"\n+\n   # Remove all non-test dependencies\n   - \"npm rm --save-dev connect-redis\"\n "},{"sha":"eae41a82b1752401ba3aefae28b908a385f760f6","filename":"History.md","status":"modified","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/History.md","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/History.md","contents_url":"https://api.github.com/repos/expressjs/express/contents/History.md?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -1,3 +1,51 @@\n+unreleased\n+==========\n+\n+  * Add `\"json escape\"` setting for `res.json` and `res.jsonp`\n+  * Add `express.json` and `express.urlencoded` to parse bodies\n+  * Improve error message when autoloading invalid view engine\n+  * Improve error messages when non-function provided as middleware\n+  * Skip `Buffer` encoding when not generating ETag for small response\n+  * Use `safe-buffer` for improved Buffer API\n+  * deps: accepts@~1.3.4\n+    - deps: mime-types@~2.1.16\n+  * deps: content-type@~1.0.4\n+    - perf: remove argument reassignment\n+    - perf: skip parameter parsing when no parameters\n+  * deps: etag@~1.8.1\n+    - perf: replace regular expression with substring\n+  * deps: finalhandler@1.1.0\n+    - Use `res.headersSent` when available\n+  * deps: parseurl@~1.3.2\n+    - perf: reduce overhead for full URLs\n+    - perf: unroll the \"fast-path\" `RegExp`\n+  * deps: proxy-addr@~2.0.2\n+    - Fix trimming leading / trailing OWS in `X-Forwarded-For`\n+    - deps: forwarded@~0.1.2\n+    - deps: ipaddr.js@1.5.2\n+    - perf: reduce overhead when no `X-Forwarded-For` header\n+  * deps: qs@6.5.1\n+    - Fix parsing & compacting very deep objects\n+  * deps: send@0.16.0\n+    - Add 70 new types for file extensions\n+    - Add `immutable` option\n+    - Fix missing `</html>` in default error & redirects\n+    - Set charset as \"UTF-8\" for .js and .json\n+    - Use instance methods on steam to check for listeners\n+    - deps: mime@1.4.1\n+    - perf: improve path validation speed\n+  * deps: serve-static@1.13.0\n+    - Add 70 new types for file extensions\n+    - Add `immutable` option\n+    - Set charset as \"UTF-8\" for .js and .json\n+    - deps: send@0.16.0\n+  * deps: setprototypeof@1.1.0\n+  * deps: utils-merge@1.0.1\n+  * deps: vary@~1.1.2\n+    - perf: improve header token parsing speed\n+  * perf: re-use options object when generating ETags\n+  * perf: remove dead `.charset` set in `res.jsonp`\n+\n 4.15.5 / 2017-09-24\n ===================\n "},{"sha":"193660af715a37f650a62e2ac3340d0d37fe5f44","filename":"appveyor.yml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/appveyor.yml","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/appveyor.yml","contents_url":"https://api.github.com/repos/expressjs/express/contents/appveyor.yml?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -9,10 +9,12 @@ environment:\n     - nodejs_version: \"5.12\"\n     - nodejs_version: \"6.11\"\n     - nodejs_version: \"7.10\"\n+    - nodejs_version: \"8.4\"\n cache:\n   - node_modules\n install:\n   - ps: Install-Product node $env:nodejs_version\n+  - npm config set shrinkwrap false\n   - npm rm --save-dev connect-redis\n   - if exist node_modules npm prune\n   - if exist node_modules npm rebuild"},{"sha":"df4df2c5ac50445499eaa0bc1b7aa0646cabeb59","filename":"benchmarks/middleware.js","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/benchmarks%2Fmiddleware.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/benchmarks%2Fmiddleware.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/benchmarks%2Fmiddleware.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -13,10 +13,8 @@ while (n--) {\n   });\n }\n \n-var body = new Buffer('Hello World');\n-\n app.use(function(req, res, next){\n-  res.send(body);\n+  res.send('Hello World')\n });\n \n app.listen(3333);"},{"sha":"8df77815e3bd039b7c28aca180e313ad80361530","filename":"examples/auth/index.js","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/examples%2Fauth%2Findex.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/examples%2Fauth%2Findex.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/examples%2Fauth%2Findex.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -3,7 +3,6 @@\n  */\n \n var express = require('../..');\n-var bodyParser = require('body-parser');\n var hash = require('pbkdf2-password')()\n var path = require('path');\n var session = require('express-session');\n@@ -17,7 +16,7 @@ app.set('views', path.join(__dirname, 'views'));\n \n // middleware\n \n-app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.urlencoded({ extended: false }))\n app.use(session({\n   resave: false, // don't save session if unmodified\n   saveUninitialized: false, // don't create session until something stored"},{"sha":"34ead527669ddf54973c5a7bb15305c1bcba1fff","filename":"examples/cookies/index.js","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/examples%2Fcookies%2Findex.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/examples%2Fcookies%2Findex.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/examples%2Fcookies%2Findex.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -6,7 +6,6 @@ var express = require('../../');\n var app = module.exports = express();\n var logger = require('morgan');\n var cookieParser = require('cookie-parser');\n-var bodyParser = require('body-parser');\n \n // custom log format\n if ('test' != process.env.NODE_ENV) app.use(logger(':method :url'));\n@@ -18,7 +17,7 @@ if ('test' != process.env.NODE_ENV) app.use(logger(':method :url'));\n app.use(cookieParser('my secret here'));\n \n // parses x-www-form-urlencoded\n-app.use(bodyParser.urlencoded({ extended: false }));\n+app.use(express.urlencoded({ extended: false }))\n \n app.get('/', function(req, res){\n   if (req.cookies.remember) {"},{"sha":"77885a60ca0266d3607cb4d9ee60fe2006218497","filename":"examples/mvc/index.js","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/examples%2Fmvc%2Findex.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/examples%2Fmvc%2Findex.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/examples%2Fmvc%2Findex.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -6,7 +6,6 @@ var express = require('../..');\n var logger = require('morgan');\n var path = require('path');\n var session = require('express-session');\n-var bodyParser = require('body-parser');\n var methodOverride = require('method-override');\n \n var app = module.exports = express();\n@@ -43,7 +42,7 @@ app.use(session({\n }));\n \n // parse request bodies (req.body)\n-app.use(bodyParser.urlencoded({ extended: true }));\n+app.use(express.urlencoded({ extended: true }))\n \n // allow overriding methods in query (?_method=put)\n app.use(methodOverride('_method'));"},{"sha":"6512109134895663785454d4b540bdae270e4a97","filename":"examples/route-separation/index.js","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/examples%2Froute-separation%2Findex.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/examples%2Froute-separation%2Findex.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/examples%2Froute-separation%2Findex.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -7,7 +7,6 @@ var path = require('path');\n var app = express();\n var logger = require('morgan');\n var cookieParser = require('cookie-parser');\n-var bodyParser = require('body-parser');\n var methodOverride = require('method-override');\n var site = require('./site');\n var post = require('./post');\n@@ -27,7 +26,7 @@ if (!module.parent) {\n \n app.use(methodOverride('_method'));\n app.use(cookieParser());\n-app.use(bodyParser.urlencoded({ extended: true }));\n+app.use(express.urlencoded({ extended: true }))\n app.use(express.static(path.join(__dirname, 'public')));\n \n // General"},{"sha":"91f77d241e41400b6836ef6ecb211bd26b79055f","filename":"lib/application.js","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Fapplication.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Fapplication.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Fapplication.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -207,7 +207,7 @@ app.use = function use(fn) {\n   var fns = flatten(slice.call(arguments, offset));\n \n   if (fns.length === 0) {\n-    throw new TypeError('app.use() requires middleware functions');\n+    throw new TypeError('app.use() requires a middleware function')\n   }\n \n   // setup router\n@@ -338,7 +338,7 @@ app.param = function param(name, fn) {\n  * Assign `setting` to `val`, or return `setting`'s value.\n  *\n  *    app.set('foo', 'bar');\n- *    app.get('foo');\n+ *    app.set('foo');\n  *    // => \"bar\"\n  *\n  * Mounted servers inherit their parent server's settings."},{"sha":"485a8fc08de8c96701b8c79988e22458ac6dcdf0","filename":"lib/express.js","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Fexpress.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Fexpress.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Fexpress.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -12,6 +12,7 @@\n  * Module dependencies.\n  */\n \n+var bodyParser = require('body-parser')\n var EventEmitter = require('events').EventEmitter;\n var mixin = require('merge-descriptors');\n var proto = require('./application');\n@@ -74,16 +75,16 @@ exports.Router = Router;\n  * Expose middleware\n  */\n \n+exports.json = bodyParser.json\n exports.query = require('./middleware/query');\n exports.static = require('serve-static');\n+exports.urlencoded = bodyParser.urlencoded\n \n /**\n  * Replace removed middleware with an appropriate error message.\n  */\n \n-[\n-  'json',\n-  'urlencoded',\n+;[\n   'bodyParser',\n   'compress',\n   'cookieSession',"},{"sha":"832044be9aeac382b7fa4b200b7dfaba6ff4fdc4","filename":"lib/response.js","status":"modified","additions":80,"deletions":19,"changes":99,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Fresponse.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Fresponse.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Fresponse.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -12,6 +12,7 @@\n  * @private\n  */\n \n+var Buffer = require('safe-buffer').Buffer\n var contentDisposition = require('content-disposition');\n var deprecate = require('depd')('express');\n var encodeUrl = require('encodeurl');\n@@ -95,7 +96,7 @@ res.links = function(links){\n  *\n  * Examples:\n  *\n- *     res.send(new Buffer('wahoo'));\n+ *     res.send(Buffer.from('wahoo'));\n  *     res.send({ some: 'json' });\n  *     res.send('<p>some html</p>');\n  *\n@@ -106,7 +107,6 @@ res.links = function(links){\n res.send = function send(body) {\n   var chunk = body;\n   var encoding;\n-  var len;\n   var req = this.req;\n   var type;\n \n@@ -171,23 +171,33 @@ res.send = function send(body) {\n     }\n   }\n \n+  // determine if ETag should be generated\n+  var etagFn = app.get('etag fn')\n+  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n+\n   // populate Content-Length\n+  var len\n   if (chunk !== undefined) {\n-    if (!Buffer.isBuffer(chunk)) {\n-      // convert chunk to Buffer; saves later double conversions\n-      chunk = new Buffer(chunk, encoding);\n+    if (!generateETag && chunk.length < 1000) {\n+      // just calculate length when no ETag + small chunk\n+      len = Buffer.byteLength(chunk, encoding)\n+    } else if (!Buffer.isBuffer(chunk)) {\n+      // convert chunk to Buffer and calculate\n+      chunk = Buffer.from(chunk, encoding)\n       encoding = undefined;\n+      len = chunk.length\n+    } else {\n+      // get length of Buffer\n+      len = chunk.length\n     }\n \n-    len = chunk.length;\n     this.set('Content-Length', len);\n   }\n \n   // populate ETag\n   var etag;\n-  var generateETag = len !== undefined && app.get('etag fn');\n-  if (typeof generateETag === 'function' && !this.get('ETag')) {\n-    if ((etag = generateETag(chunk, encoding))) {\n+  if (generateETag && len !== undefined) {\n+    if ((etag = etagFn(chunk, encoding))) {\n       this.set('ETag', etag);\n     }\n   }\n@@ -244,9 +254,10 @@ res.json = function json(obj) {\n \n   // settings\n   var app = this.app;\n+  var escape = app.get('json escape')\n   var replacer = app.get('json replacer');\n   var spaces = app.get('json spaces');\n-  var body = stringify(val, replacer, spaces);\n+  var body = stringify(val, replacer, spaces, escape)\n \n   // content-type\n   if (!this.get('Content-Type')) {\n@@ -286,9 +297,10 @@ res.jsonp = function jsonp(obj) {\n \n   // settings\n   var app = this.app;\n+  var escape = app.get('json escape')\n   var replacer = app.get('json replacer');\n   var spaces = app.get('json spaces');\n-  var body = stringify(val, replacer, spaces);\n+  var body = stringify(val, replacer, spaces, escape)\n   var callback = this.req.query[app.get('jsonp callback name')];\n \n   // content-type\n@@ -304,7 +316,6 @@ res.jsonp = function jsonp(obj) {\n \n   // jsonp\n   if (typeof callback === 'string' && callback.length !== 0) {\n-    this.charset = 'utf-8';\n     this.set('X-Content-Type-Options', 'nosniff');\n     this.set('Content-Type', 'text/javascript');\n \n@@ -506,30 +517,56 @@ res.sendfile = deprecate.function(res.sendfile,\n  * when the data transfer is complete, or when an error has\n  * ocurred. Be sure to check `res.headersSent` if you plan to respond.\n  *\n- * This method uses `res.sendfile()`.\n+ * Optionally providing an `options` object to use with `res.sendFile()`.\n+ * This function will set the `Content-Disposition` header, overriding\n+ * any `Content-Disposition` header passed as header options in order\n+ * to set the attachment and filename.\n+ *\n+ * This method uses `res.sendFile()`.\n  *\n  * @public\n  */\n \n-res.download = function download(path, filename, callback) {\n+res.download = function download (path, filename, options, callback) {\n   var done = callback;\n   var name = filename;\n+  var opts = options || null\n \n-  // support function as second arg\n+  // support function as second or third arg\n   if (typeof filename === 'function') {\n     done = filename;\n     name = null;\n+    opts = null\n+  } else if (typeof options === 'function') {\n+    done = options\n+    opts = null\n   }\n \n   // set Content-Disposition when file is sent\n   var headers = {\n     'Content-Disposition': contentDisposition(name || path)\n   };\n \n+  // merge user-provided headers\n+  if (opts && opts.headers) {\n+    var keys = Object.keys(opts.headers)\n+    for (var i = 0; i < keys.length; i++) {\n+      var key = keys[i]\n+      if (key.toLowerCase() !== 'content-disposition') {\n+        headers[key] = opts.headers[key]\n+      }\n+    }\n+  }\n+\n+  // merge user-provided options\n+  opts = Object.create(opts)\n+  opts.headers = headers\n+\n   // Resolve the full path for sendFile\n   var fullPath = resolve(path);\n \n-  return this.sendFile(fullPath, { headers: headers }, done);\n+  // send file\n+  return this.sendFile(fullPath, opts, done)\n };\n \n /**\n@@ -1063,14 +1100,38 @@ function sendfile(res, file, options, callback) {\n }\n \n /**\n- * Stringify JSON, like JSON.stringify, but v8 optimized.\n+ * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n+ * ability to escape characters that can trigger HTML sniffing.\n+ *\n+ * @param {*} value\n+ * @param {function} replaces\n+ * @param {number} spaces\n+ * @param {boolean} escape\n+ * @returns {string}\n  * @private\n  */\n \n-function stringify(value, replacer, spaces) {\n+function stringify (value, replacer, spaces, escape) {\n   // v8 checks arguments.length for optimizing simple call\n   // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n-  return replacer || spaces\n+  var json = replacer || spaces\n     ? JSON.stringify(value, replacer, spaces)\n     : JSON.stringify(value);\n+\n+  if (escape) {\n+    json = json.replace(/[<>&]/g, function (c) {\n+      switch (c.charCodeAt(0)) {\n+        case 0x3c:\n+          return '\\\\u003c'\n+        case 0x3e:\n+          return '\\\\u003e'\n+        case 0x26:\n+          return '\\\\u0026'\n+        default:\n+          return c\n+      }\n+    })\n+  }\n+\n+  return json\n }"},{"sha":"60727ed6d64a49a81c149070a0af240e86f75201","filename":"lib/router/index.js","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Frouter%2Findex.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Frouter%2Findex.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Frouter%2Findex.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -448,14 +448,14 @@ proto.use = function use(fn) {\n   var callbacks = flatten(slice.call(arguments, offset));\n \n   if (callbacks.length === 0) {\n-    throw new TypeError('Router.use() requires middleware functions');\n+    throw new TypeError('Router.use() requires a middleware function')\n   }\n \n   for (var i = 0; i < callbacks.length; i++) {\n     var fn = callbacks[i];\n \n     if (typeof fn !== 'function') {\n-      throw new TypeError('Router.use() requires middleware function but got a ' + gettype(fn));\n+      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\n     }\n \n     // add the middleware"},{"sha":"178df0d5160eae9ebbcc2e0d683a433716d56946","filename":"lib/router/route.js","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Frouter%2Froute.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Frouter%2Froute.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Frouter%2Froute.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -175,7 +175,7 @@ Route.prototype.all = function all() {\n \n     if (typeof handle !== 'function') {\n       var type = toString.call(handle);\n-      var msg = 'Route.all() requires callback functions but got a ' + type;\n+      var msg = 'Route.all() requires a callback function but got a ' + type\n       throw new TypeError(msg);\n     }\n \n@@ -198,7 +198,7 @@ methods.forEach(function(method){\n \n       if (typeof handle !== 'function') {\n         var type = toString.call(handle);\n-        var msg = 'Route.' + method + '() requires callback functions but got a ' + type;\n+        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n         throw new Error(msg);\n       }\n "},{"sha":"bd81ac7f6d90235d62a8bdbce292b8b6fff7ff82","filename":"lib/utils.js","status":"modified","additions":22,"deletions":14,"changes":36,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Futils.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Futils.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Futils.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -12,6 +12,7 @@\n  * @api private\n  */\n \n+var Buffer = require('safe-buffer').Buffer\n var contentDisposition = require('content-disposition');\n var contentType = require('content-type');\n var deprecate = require('depd')('express');\n@@ -31,13 +32,7 @@ var querystring = require('querystring');\n  * @api private\n  */\n \n-exports.etag = function (body, encoding) {\n-  var buf = !Buffer.isBuffer(body)\n-    ? new Buffer(body, encoding)\n-    : body;\n-\n-  return etag(buf, {weak: false});\n-};\n+exports.etag = createETagGenerator({ weak: false })\n \n /**\n  * Return weak ETag for `body`.\n@@ -48,13 +43,7 @@ exports.etag = function (body, encoding) {\n  * @api private\n  */\n \n-exports.wetag = function wetag(body, encoding){\n-  var buf = !Buffer.isBuffer(body)\n-    ? new Buffer(body, encoding)\n-    : body;\n-\n-  return etag(buf, {weak: true});\n-};\n+exports.wetag = createETagGenerator({ weak: true })\n \n /**\n  * Check if `path` looks absolute.\n@@ -273,6 +262,25 @@ exports.setCharset = function setCharset(type, charset) {\n   return contentType.format(parsed);\n };\n \n+/**\n+ * Create an ETag generator function, generating ETags with\n+ * the given options.\n+ *\n+ * @param {object} options\n+ * @return {function}\n+ * @private\n+ */\n+\n+function createETagGenerator (options) {\n+  return function generateETag (body, encoding) {\n+    var buf = !Buffer.isBuffer(body)\n+      ? Buffer.from(body, encoding)\n+      : body\n+\n+    return etag(buf, options)\n+  }\n+}\n+\n /**\n  * Parse an extended query string with qs.\n  *"},{"sha":"cf101caeab912b013843560996183a0bc9e1654b","filename":"lib/view.js","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Fview.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/lib%2Fview.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Fview.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -76,7 +76,15 @@ function View(name, options) {\n     // load engine\n     var mod = this.ext.substr(1)\n     debug('require \"%s\"', mod)\n-    opts.engines[this.ext] = require(mod).__express\n+\n+    // default engine export\n+    var fn = require(mod).__express\n+\n+    if (typeof fn !== 'function') {\n+      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\n+    }\n+\n+    opts.engines[this.ext] = fn\n   }\n \n   // store loaded engine"},{"sha":"f20c3b9dca8d581948267d1ed7f14faf3cc4462e","filename":"package.json","status":"modified","additions":18,"deletions":17,"changes":35,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/package.json","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/package.json","contents_url":"https://api.github.com/repos/expressjs/express/contents/package.json?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -27,49 +27,50 @@\n     \"api\"\n   ],\n   \"dependencies\": {\n-    \"accepts\": \"~1.3.3\",\n+    \"accepts\": \"~1.3.4\",\n     \"array-flatten\": \"1.1.1\",\n+    \"body-parser\": \"1.18.2\",\n     \"content-disposition\": \"0.5.2\",\n-    \"content-type\": \"~1.0.2\",\n+    \"content-type\": \"~1.0.4\",\n     \"cookie\": \"0.3.1\",\n     \"cookie-signature\": \"1.0.6\",\n     \"debug\": \"2.6.9\",\n     \"depd\": \"~1.1.1\",\n     \"encodeurl\": \"~1.0.1\",\n     \"escape-html\": \"~1.0.3\",\n-    \"etag\": \"~1.8.0\",\n-    \"finalhandler\": \"~1.0.6\",\n+    \"etag\": \"~1.8.1\",\n+    \"finalhandler\": \"1.1.0\",\n     \"fresh\": \"0.5.2\",\n     \"merge-descriptors\": \"1.0.1\",\n     \"methods\": \"~1.1.2\",\n     \"on-finished\": \"~2.3.0\",\n-    \"parseurl\": \"~1.3.1\",\n+    \"parseurl\": \"~1.3.2\",\n     \"path-to-regexp\": \"0.1.7\",\n-    \"proxy-addr\": \"~1.1.5\",\n-    \"qs\": \"6.5.0\",\n+    \"proxy-addr\": \"~2.0.2\",\n+    \"qs\": \"6.5.1\",\n     \"range-parser\": \"~1.2.0\",\n-    \"send\": \"0.15.6\",\n-    \"serve-static\": \"1.12.6\",\n-    \"setprototypeof\": \"1.0.3\",\n+    \"safe-buffer\": \"5.1.1\",\n+    \"send\": \"0.16.0\",\n+    \"serve-static\": \"1.13.0\",\n+    \"setprototypeof\": \"1.1.0\",\n     \"statuses\": \"~1.3.1\",\n     \"type-is\": \"~1.6.15\",\n-    \"utils-merge\": \"1.0.0\",\n-    \"vary\": \"~1.1.1\"\n+    \"utils-merge\": \"1.0.1\",\n+    \"vary\": \"~1.1.2\"\n   },\n   \"devDependencies\": {\n     \"after\": \"0.8.2\",\n-    \"body-parser\": \"1.18.1\",\n     \"cookie-parser\": \"~1.4.3\",\n-    \"cookie-session\": \"1.3.1\",\n+    \"cookie-session\": \"1.3.2\",\n     \"ejs\": \"2.5.7\",\n     \"eslint\": \"2.13.1\",\n-    \"express-session\": \"1.15.5\",\n+    \"express-session\": \"1.15.6\",\n     \"hbs\": \"4.0.1\",\n     \"istanbul\": \"0.4.5\",\n     \"marked\": \"0.3.6\",\n-    \"method-override\": \"2.3.9\",\n+    \"method-override\": \"2.3.10\",\n     \"mocha\": \"3.5.3\",\n-    \"morgan\": \"1.8.2\",\n+    \"morgan\": \"1.9.0\",\n     \"multiparty\": \"4.1.3\",\n     \"pbkdf2-password\": \"1.2.1\",\n     \"should\": \"13.1.0\","},{"sha":"057ce443df4b20a8e9ffecb6861c04a29a6bf73b","filename":"test/Router.js","status":"modified","additions":21,"deletions":9,"changes":30,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2FRouter.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2FRouter.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2FRouter.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -368,17 +368,29 @@ describe('Router', function(){\n   })\n \n   describe('.use', function() {\n-    it('should require arguments', function(){\n-      var router = new Router();\n-      router.use.bind(router).should.throw(/requires middleware function/)\n+    it('should require middleware', function () {\n+      var router = new Router()\n+      assert.throws(function () { router.use('/') }, /requires a middleware function/)\n     })\n \n-    it('should not accept non-functions', function(){\n-      var router = new Router();\n-      router.use.bind(router, '/', 'hello').should.throw(/requires middleware function.*string/)\n-      router.use.bind(router, '/', 5).should.throw(/requires middleware function.*number/)\n-      router.use.bind(router, '/', null).should.throw(/requires middleware function.*Null/)\n-      router.use.bind(router, '/', new Date()).should.throw(/requires middleware function.*Date/)\n+    it('should reject string as middleware', function () {\n+      var router = new Router()\n+      assert.throws(function () { router.use('/', 'foo') }, /requires a middleware function but got a string/)\n+    })\n+\n+    it('should reject number as middleware', function () {\n+      var router = new Router()\n+      assert.throws(function () { router.use('/', 42) }, /requires a middleware function but got a number/)\n+    })\n+\n+    it('should reject null as middleware', function () {\n+      var router = new Router()\n+      assert.throws(function () { router.use('/', null) }, /requires a middleware function but got a Null/)\n+    })\n+\n+    it('should reject Date as middleware', function () {\n+      var router = new Router()\n+      assert.throws(function () { router.use('/', new Date()) }, /requires a middleware function but got a Date/)\n     })\n \n     it('should be called for any URL', function (done) {"},{"sha":"347937fbb3b1c15ec65a04be8f0e54cd1d8eba57","filename":"test/app.use.js","status":"modified","additions":22,"deletions":9,"changes":31,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fapp.use.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fapp.use.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fapp.use.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -1,5 +1,6 @@\n \n var after = require('after');\n+var assert = require('assert')\n var express = require('..');\n var request = require('supertest');\n \n@@ -253,17 +254,29 @@ describe('app', function(){\n   })\n \n   describe('.use(path, middleware)', function(){\n-    it('should reject missing functions', function () {\n-      var app = express();\n-      app.use.bind(app, '/').should.throw(/requires middleware function/);\n+    it('should require middleware', function () {\n+      var app = express()\n+      assert.throws(function () { app.use('/') }, /requires a middleware function/)\n     })\n \n-    it('should reject non-functions as middleware', function () {\n-      var app = express();\n-      app.use.bind(app, '/', 'hi').should.throw(/requires middleware function.*string/);\n-      app.use.bind(app, '/', 5).should.throw(/requires middleware function.*number/);\n-      app.use.bind(app, '/', null).should.throw(/requires middleware function.*Null/);\n-      app.use.bind(app, '/', new Date()).should.throw(/requires middleware function.*Date/);\n+    it('should reject string as middleware', function () {\n+      var app = express()\n+      assert.throws(function () { app.use('/', 'foo') }, /requires a middleware function but got a string/)\n+    })\n+\n+    it('should reject number as middleware', function () {\n+      var app = express()\n+      assert.throws(function () { app.use('/', 42) }, /requires a middleware function but got a number/)\n+    })\n+\n+    it('should reject null as middleware', function () {\n+      var app = express()\n+      assert.throws(function () { app.use('/', null) }, /requires a middleware function but got a Null/)\n+    })\n+\n+    it('should reject Date as middleware', function () {\n+      var app = express()\n+      assert.throws(function () { app.use('/', new Date()) }, /requires a middleware function but got a Date/)\n     })\n \n     it('should strip path from req.url', function (done) {"},{"sha":"e69de29bb2d1d6434b8b29ae775ad8c2e48c5391","filename":"test/fixtures/broken.send","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Ffixtures%2Fbroken.send","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Ffixtures%2Fbroken.send","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Ffixtures%2Fbroken.send?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c"},{"sha":"89f0295cd9df716824f079d6f2f69ebbeb1eb1f6","filename":"test/req.param.js","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Freq.param.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Freq.param.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Freq.param.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -1,7 +1,6 @@\n \n var express = require('../')\n   , request = require('supertest')\n-  , bodyParser = require('body-parser')\n \n describe('req', function(){\n   describe('.param(name, default)', function(){\n@@ -34,7 +33,7 @@ describe('req', function(){\n     it('should check req.body', function(done){\n       var app = express();\n \n-      app.use(bodyParser.json());\n+      app.use(express.json())\n \n       app.use(function(req, res){\n         res.end(req.param('name'));"},{"sha":"4c3d4aa2f1bec13ec2534f63cbbbf25aa16ab943","filename":"test/res.attachment.js","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.attachment.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.attachment.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.attachment.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -1,4 +1,5 @@\n \n+var Buffer = require('safe-buffer').Buffer\n var express = require('../')\n   , request = require('supertest');\n \n@@ -36,7 +37,7 @@ describe('res', function(){\n \n       app.use(function(req, res){\n         res.attachment('/path/to/image.png');\n-        res.send(new Buffer(4));\n+        res.send(Buffer.alloc(4, '.'))\n       });\n \n       request(app)"},{"sha":"30215bf6764ec3794622be367616a75e7b8a030a","filename":"test/res.download.js","status":"modified","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.download.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.download.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.download.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -71,6 +71,86 @@ describe('res', function(){\n     })\n   })\n \n+  describe('.download(path, filename, options, fn)', function () {\n+    it('should invoke the callback', function (done) {\n+      var app = express()\n+      var cb = after(2, done)\n+      var options = {}\n+\n+      app.use(function (req, res) {\n+        res.download('test/fixtures/user.html', 'document', options, done)\n+      })\n+\n+      request(app)\n+      .get('/')\n+      .expect(200)\n+      .expect('Content-Type', 'text/html; charset=UTF-8')\n+      .expect('Content-Disposition', 'attachment; filename=\"document\"')\n+      .end(cb)\n+    })\n+\n+    it('should allow options to res.sendFile()', function (done) {\n+      var app = express()\n+\n+      app.use(function (req, res) {\n+        res.download('test/fixtures/.name', 'document', {\n+          dotfiles: 'allow',\n+          maxAge: '4h'\n+        })\n+      })\n+\n+      request(app)\n+      .get('/')\n+      .expect(200)\n+      .expect('Content-Disposition', 'attachment; filename=\"document\"')\n+      .expect('Cache-Control', 'public, max-age=14400')\n+      .expect('tobi')\n+      .end(done)\n+    })\n+\n+    describe('when options.headers contains Content-Disposition', function () {\n+      it('should should be ignored', function (done) {\n+        var app = express()\n+\n+        app.use(function (req, res) {\n+          res.download('test/fixtures/user.html', 'document', {\n+            headers: {\n+              'Content-Type': 'text/x-custom',\n+              'Content-Disposition': 'inline'\n+            }\n+          })\n+        })\n+\n+        request(app)\n+        .get('/')\n+        .expect(200)\n+        .expect('Content-Type', 'text/x-custom')\n+        .expect('Content-Disposition', 'attachment; filename=\"document\"')\n+        .end(done)\n+      })\n+\n+      it('should should be ignored case-insensitively', function (done) {\n+        var app = express()\n+\n+        app.use(function (req, res) {\n+          res.download('test/fixtures/user.html', 'document', {\n+            headers: {\n+              'content-type': 'text/x-custom',\n+              'content-disposition': 'inline'\n+            }\n+          })\n+        })\n+\n+        request(app)\n+        .get('/')\n+        .expect(200)\n+        .expect('Content-Type', 'text/x-custom')\n+        .expect('Content-Disposition', 'attachment; filename=\"document\"')\n+        .end(done)\n+      })\n+    })\n+  })\n+\n   describe('on failure', function(){\n     it('should invoke the callback', function(done){\n       var app = express();"},{"sha":"1041376235cc756df2b6ec81c75e33e59896a81a","filename":"test/res.json.js","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.json.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.json.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.json.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -102,6 +102,28 @@ describe('res', function(){\n       })\n     })\n \n+    describe('\"json escape\" setting', function () {\n+      it('should be undefined by default', function () {\n+        var app = express()\n+        assert.strictEqual(app.get('json escape'), undefined)\n+      })\n+\n+      it('should unicode escape HTML-sniffing characters', function (done) {\n+        var app = express()\n+\n+        app.enable('json escape')\n+\n+        app.use(function (req, res) {\n+          res.json({ '&': '<script>' })\n+        })\n+\n+        request(app)\n+        .get('/')\n+        .expect('Content-Type', 'application/json; charset=utf-8')\n+        .expect(200, '{\"\\\\u0026\":\"\\\\u003cscript\\\\u003e\"}', done)\n+      })\n+    })\n+\n     describe('\"json replacer\" setting', function(){\n       it('should be passed to JSON.stringify()', function(done){\n         var app = express();"},{"sha":"9b536b541f2ee07928baf854d5c1491641045bc8","filename":"test/res.jsonp.js","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.jsonp.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.jsonp.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.jsonp.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -242,6 +242,28 @@ describe('res', function(){\n       })\n     })\n \n+    describe('\"json escape\" setting', function () {\n+      it('should be undefined by default', function () {\n+        var app = express()\n+        assert.strictEqual(app.get('json escape'), undefined)\n+      })\n+\n+      it('should unicode escape HTML-sniffing characters', function (done) {\n+        var app = express()\n+\n+        app.enable('json escape')\n+\n+        app.use(function (req, res) {\n+          res.jsonp({ '&': '\\u2028<script>\\u2029' })\n+        })\n+\n+        request(app)\n+        .get('/?callback=foo')\n+        .expect('Content-Type', 'text/javascript; charset=utf-8')\n+        .expect(200, /foo\\({\"\\\\u0026\":\"\\\\u2028\\\\u003cscript\\\\u003e\\\\u2029\"}\\)/, done)\n+      })\n+    })\n+\n     describe('\"json replacer\" setting', function(){\n       it('should be passed to JSON.stringify()', function(done){\n         var app = express();"},{"sha":"643a57002a0318a32b98a652ce709e08e80d55bb","filename":"test/res.render.js","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.render.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.render.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.render.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -35,6 +35,20 @@ describe('res', function(){\n       .expect('<p>tobi</p>', done);\n     })\n \n+    it('should error without \"view engine\" set and file extension to a non-engine module', function (done) {\n+      var app = createApp()\n+\n+      app.locals.user = { name: 'tobi' }\n+\n+      app.use(function (req, res) {\n+        res.render(path.join(__dirname, 'fixtures', 'broken.send'))\n+      })\n+\n+      request(app)\n+      .get('/')\n+      .expect(500, /does not provide a view engine/, done)\n+    })\n+\n     it('should error without \"view engine\" set and no file extension', function (done) {\n       var app = createApp();\n "},{"sha":"7aa8d7d90e215c405b9997588c146f4358600731","filename":"test/res.send.js","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.send.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.send.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.send.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -1,4 +1,5 @@\n \n+var Buffer = require('safe-buffer').Buffer\n var express = require('..');\n var methods = require('methods');\n var request = require('supertest');\n@@ -166,7 +167,7 @@ describe('res', function(){\n       var app = express();\n \n       app.use(function(req, res){\n-        res.set('Content-Type', 'text/plain; charset=iso-8859-1').send(new Buffer('hi'));\n+        res.set('Content-Type', 'text/plain; charset=iso-8859-1').send(Buffer.from('hi'))\n       });\n \n       request(app)\n@@ -181,7 +182,7 @@ describe('res', function(){\n       var app = express();\n \n       app.use(function(req, res){\n-        res.send(new Buffer('hello'));\n+        res.send(Buffer.from('hello'))\n       });\n \n       request(app)\n@@ -194,8 +195,7 @@ describe('res', function(){\n       var app = express();\n \n       app.use(function (req, res) {\n-        var str = Array(1000).join('-');\n-        res.send(new Buffer(str));\n+        res.send(Buffer.alloc(999, '-'))\n       });\n \n       request(app)\n@@ -208,7 +208,7 @@ describe('res', function(){\n       var app = express();\n \n       app.use(function(req, res){\n-        res.set('Content-Type', 'text/plain').send(new Buffer('hey'));\n+        res.set('Content-Type', 'text/plain').send(Buffer.from('hey'))\n       });\n \n       request(app)\n@@ -512,7 +512,7 @@ describe('res', function(){\n \n         app.set('etag', function (body, encoding) {\n           var chunk = !Buffer.isBuffer(body)\n-            ? new Buffer(body, encoding)\n+            ? Buffer.from(body, encoding)\n             : body;\n           chunk.toString().should.equal('hello, world!');\n           return '\"custom\"';"},{"sha":"4b1f3852f353b25d8a9492edb6d5869922082681","filename":"test/res.sendFile.js","status":"modified","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.sendFile.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.sendFile.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.sendFile.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -180,6 +180,44 @@ describe('res', function(){\n       });\n     });\n \n+    describe('with \"immutable\" option', function () {\n+      it('should add immutable cache-control directive', function (done) {\n+        var app = createApp(path.resolve(__dirname, 'fixtures/name.txt'), {\n+          immutable: true,\n+          maxAge: '4h'\n+        })\n+\n+        request(app)\n+        .get('/')\n+        .expect('Cache-Control', 'public, max-age=14400, immutable')\n+        .expect(200, done)\n+      })\n+    })\n+\n+    describe('with \"maxAge\" option', function () {\n+      it('should set cache-control max-age from number', function (done) {\n+        var app = createApp(path.resolve(__dirname, 'fixtures/name.txt'), {\n+          maxAge: 14400000\n+        })\n+\n+        request(app)\n+        .get('/')\n+        .expect('Cache-Control', 'public, max-age=14400')\n+        .expect(200, done)\n+      })\n+\n+      it('should set cache-control max-age from string', function (done) {\n+        var app = createApp(path.resolve(__dirname, 'fixtures/name.txt'), {\n+          maxAge: '4h'\n+        })\n+\n+        request(app)\n+        .get('/')\n+        .expect('Cache-Control', 'public, max-age=14400')\n+        .expect(200, done)\n+      })\n+    })\n+\n     describe('with \"root\" option', function () {\n       it('should not transfer relative with without', function (done) {\n         var app = createApp('test/fixtures/name.txt');"},{"sha":"cc1dd08d410054de3e4f7024bc9c882197e488d3","filename":"test/res.type.js","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.type.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Fres.type.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.type.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -13,7 +13,8 @@ describe('res', function(){\n \n       request(app)\n       .get('/')\n-      .expect('Content-Type', 'application/javascript', done);\n+      .expect('Content-Type', 'application/javascript; charset=utf-8')\n+      .end(done)\n     })\n \n     it('should default to application/octet-stream', function(done){"},{"sha":"b51d223af97d7cc5cca2b940e4bd54e0e8e78c42","filename":"test/utils.js","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/expressjs/express/blob/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Futils.js","raw_url":"https://github.com/expressjs/express/raw/c0136d8b48dd3526c58b2ad8666fb4b12b55116c/test%2Futils.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Futils.js?ref=c0136d8b48dd3526c58b2ad8666fb4b12b55116c","patch":"@@ -1,5 +1,6 @@\n \n var assert = require('assert');\n+var Buffer = require('safe-buffer').Buffer\n var utils = require('../lib/utils');\n \n describe('utils.etag(body, encoding)', function(){\n@@ -14,8 +15,7 @@ describe('utils.etag(body, encoding)', function(){\n   })\n \n   it('should support buffer', function(){\n-    var buf = new Buffer('express!')\n-    utils.etag(buf)\n+    utils.etag(Buffer.from('express!'))\n     .should.eql('\"8-O2uVAFaQ1rZvlKLT14RnuvjPIdg\"')\n   })\n \n@@ -59,8 +59,7 @@ describe('utils.wetag(body, encoding)', function(){\n   })\n \n   it('should support buffer', function(){\n-    var buf = new Buffer('express!')\n-    utils.wetag(buf)\n+    utils.wetag(Buffer.from('express!'))\n     .should.eql('W/\"8-O2uVAFaQ1rZvlKLT14RnuvjPIdg\"')\n   })\n "}]},{"url":"https://api.github.com/repos/expressjs/express/issues/3006","repository_url":"https://api.github.com/repos/expressjs/express","labels_url":"https://api.github.com/repos/expressjs/express/issues/3006/labels{/name}","comments_url":"https://api.github.com/repos/expressjs/express/issues/3006/comments","events_url":"https://api.github.com/repos/expressjs/express/issues/3006/events","html_url":"https://github.com/expressjs/express/pull/3006","id":156408462,"node_id":"MDExOlB1bGxSZXF1ZXN0NzExNTAyODI=","number":3006,"title":"Release 4.14","user":{"login":"dougwilson","id":67512,"node_id":"MDQ6VXNlcjY3NTEy","avatar_url":"https://avatars.githubusercontent.com/u/67512?v=4","gravatar_id":"","url":"https://api.github.com/users/dougwilson","html_url":"https://github.com/dougwilson","followers_url":"https://api.github.com/users/dougwilson/followers","following_url":"https://api.github.com/users/dougwilson/following{/other_user}","gists_url":"https://api.github.com/users/dougwilson/gists{/gist_id}","starred_url":"https://api.github.com/users/dougwilson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dougwilson/subscriptions","organizations_url":"https://api.github.com/users/dougwilson/orgs","repos_url":"https://api.github.com/users/dougwilson/repos","events_url":"https://api.github.com/users/dougwilson/events{/privacy}","received_events_url":"https://api.github.com/users/dougwilson/received_events","type":"User","site_admin":false},"labels":[{"id":206149,"node_id":"MDU6TGFiZWwyMDYxNDk=","url":"https://api.github.com/repos/expressjs/express/labels/4.x","name":"4.x","color":"ededed","default":false,"description":null},{"id":113897193,"node_id":"MDU6TGFiZWwxMTM4OTcxOTM=","url":"https://api.github.com/repos/expressjs/express/labels/release","name":"release","color":"000000","default":false,"description":null},{"id":133578713,"node_id":"MDU6TGFiZWwxMzM1Nzg3MTM=","url":"https://api.github.com/repos/expressjs/express/labels/pr","name":"pr","color":"006b75","default":false,"description":null}],"state":"closed","locked":false,"assignee":{"login":"dougwilson","id":67512,"node_id":"MDQ6VXNlcjY3NTEy","avatar_url":"https://avatars.githubusercontent.com/u/67512?v=4","gravatar_id":"","url":"https://api.github.com/users/dougwilson","html_url":"https://github.com/dougwilson","followers_url":"https://api.github.com/users/dougwilson/followers","following_url":"https://api.github.com/users/dougwilson/following{/other_user}","gists_url":"https://api.github.com/users/dougwilson/gists{/gist_id}","starred_url":"https://api.github.com/users/dougwilson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dougwilson/subscriptions","organizations_url":"https://api.github.com/users/dougwilson/orgs","repos_url":"https://api.github.com/users/dougwilson/repos","events_url":"https://api.github.com/users/dougwilson/events{/privacy}","received_events_url":"https://api.github.com/users/dougwilson/received_events","type":"User","site_admin":false},"assignees":[{"login":"dougwilson","id":67512,"node_id":"MDQ6VXNlcjY3NTEy","avatar_url":"https://avatars.githubusercontent.com/u/67512?v=4","gravatar_id":"","url":"https://api.github.com/users/dougwilson","html_url":"https://github.com/dougwilson","followers_url":"https://api.github.com/users/dougwilson/followers","following_url":"https://api.github.com/users/dougwilson/following{/other_user}","gists_url":"https://api.github.com/users/dougwilson/gists{/gist_id}","starred_url":"https://api.github.com/users/dougwilson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dougwilson/subscriptions","organizations_url":"https://api.github.com/users/dougwilson/orgs","repos_url":"https://api.github.com/users/dougwilson/repos","events_url":"https://api.github.com/users/dougwilson/events{/privacy}","received_events_url":"https://api.github.com/users/dougwilson/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/expressjs/express/milestones/14","html_url":"https://github.com/expressjs/express/milestone/14","labels_url":"https://api.github.com/repos/expressjs/express/milestones/14/labels","id":1597498,"node_id":"MDk6TWlsZXN0b25lMTU5NzQ5OA==","number":14,"title":"4.14","description":"","creator":{"login":"dougwilson","id":67512,"node_id":"MDQ6VXNlcjY3NTEy","avatar_url":"https://avatars.githubusercontent.com/u/67512?v=4","gravatar_id":"","url":"https://api.github.com/users/dougwilson","html_url":"https://github.com/dougwilson","followers_url":"https://api.github.com/users/dougwilson/followers","following_url":"https://api.github.com/users/dougwilson/following{/other_user}","gists_url":"https://api.github.com/users/dougwilson/gists{/gist_id}","starred_url":"https://api.github.com/users/dougwilson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dougwilson/subscriptions","organizations_url":"https://api.github.com/users/dougwilson/orgs","repos_url":"https://api.github.com/users/dougwilson/repos","events_url":"https://api.github.com/users/dougwilson/events{/privacy}","received_events_url":"https://api.github.com/users/dougwilson/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":6,"state":"closed","created_at":"2016-02-22T16:27:45Z","updated_at":"2016-06-16T15:07:35Z","due_on":"2016-06-16T07:00:00Z","closed_at":"2016-06-16T15:07:35Z"},"comments":2,"created_at":"2016-05-24T02:43:59Z","updated_at":"2016-06-16T15:06:34Z","closed_at":"2016-06-16T15:06:33Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/expressjs/express/pulls/3006","html_url":"https://github.com/expressjs/express/pull/3006","diff_url":"https://github.com/expressjs/express/pull/3006.diff","patch_url":"https://github.com/expressjs/express/pull/3006.patch","merged_at":"2016-06-16T15:06:33Z"},"body":"This is a tracking issue for release 4.14.\n\n**Please keep feature requests in their own issues**\n\nIf you want to make a comment on a particular change, please make the comment in the \"Files changed\" tab so comments are not lost during a rebase.\n\nList of changes for release:\n- [x] Encode URL in `res.location`/`res.redirect` if not already encoded #2897 #3003\n- [x] Fix Windows absolute path check using forward slashes #3017\n- [x] Improve `res.json`/`res.jsonp` performance in Node.js < 6 #2900\n- [x] Improve error when given non-string to `res.header` #2993\n- [x] Use strict compares #2722\n- [x] Upgrade `accepts` module to 1.3.3 which brings in lots of `negotiator` improvements\n- [x] Upgrade `content-type` module to 1.0.2\n- [x] Upgrade `cookie` module to 0.3.1 which brings new `sameSite` option\n- [x] Upgrade `finalhandler` module to 0.5.0 which brings `err.headers` support\n- [x] Upgrade `proxy-addr` module to 1.1.2\n- [x] Upgrade `qs` module to 6.2.0 which brings the `encode` option to `query` middleware\n- [x] Upgrade `range-parser` module to 1.2.0 which brings options like `combine`\n- [x] Upgrade `send` module to 0.14.1 which brings `Range` & redirect fixes and new options\n- [x] Upgrade `serve-static` module to 1.11.1 which brings `Range` & redirect fixes and new options\n- [x] Upgrade `type-is` module to 1.6.13\n- [x] Upgrade `vary` module to 1.1.0 which brings field name validation\n\n**Testing this release**\n\nIf you want to try out this release, you can install it with the following commands:\n\n``` bash\n$ npm cache clean express\n$ npm install strongloop/express#4.14\n```\n\nOwners/collaborators: please do not merge this PR :)\n","reactions":{"url":"https://api.github.com/repos/expressjs/express/issues/3006/reactions","total_count":18,"+1":9,"-1":0,"laugh":0,"hooray":4,"confused":0,"heart":5,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/expressjs/express/issues/3006/timeline","performed_via_github_app":null,"state_reason":null,"score":1,"files":[{"sha":"95034721e7517d9fb1f0219c6bc0274ba22070a2","filename":".travis.yml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/.travis.yml","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/.travis.yml","contents_url":"https://api.github.com/repos/expressjs/express/contents/.travis.yml?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -6,6 +6,8 @@ node_js:\n   - \"2.5\"\n   - \"3.3\"\n   - \"4.4\"\n+  - \"5.11\"\n+  - \"6.2\"\n sudo: false\n cache:\n   directories:"},{"sha":"6c3811a4577013532a6b35daeca5dbda1f7628be","filename":"History.md","status":"modified","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/History.md","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/History.md","contents_url":"https://api.github.com/repos/expressjs/express/contents/History.md?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -1,3 +1,83 @@\n+unreleased\n+==========\n+\n+  * Add `acceptRanges` option to `res.sendFile`/`res.sendfile`\n+  * Add `cacheControl` option to `res.sendFile`/`res.sendfile`\n+  * Add `options` argument to `req.range`\n+    - Includes the `combine` option\n+  * Encode URL in `res.location`/`res.redirect` if not already encoded\n+  * Fix some redirect handling in `res.sendFile`/`res.sendfile`\n+  * Fix Windows absolute path check using forward slashes\n+  * Improve error with invalid arguments to `req.get()`\n+  * Improve performance for `res.json`/`res.jsonp` in most cases\n+  * Improve `Range` header handling in `res.sendFile`/`res.sendfile`\n+  * deps: accepts@~1.3.3\n+    - Fix including type extensions in parameters in `Accept` parsing\n+    - Fix parsing `Accept` parameters with quoted equals\n+    - Fix parsing `Accept` parameters with quoted semicolons\n+    - Many performance improvments\n+    - deps: mime-types@~2.1.11\n+    - deps: negotiator@0.6.1\n+  * deps: content-type@~1.0.2\n+    - perf: enable strict mode\n+  * deps: cookie@0.3.1\n+    - Add `sameSite` option\n+    - Fix cookie `Max-Age` to never be a floating point number\n+    - Improve error message when `encode` is not a function\n+    - Improve error message when `expires` is not a `Date`\n+    - Throw better error for invalid argument to parse\n+    - Throw on invalid values provided to `serialize`\n+    - perf: enable strict mode\n+    - perf: hoist regular expression\n+    - perf: use for loop in parse\n+    - perf: use string concatination for serialization\n+  * deps: finalhandler@0.5.0\n+    - Change invalid or non-numeric status code to 500\n+    - Overwrite status message to match set status code\n+    - Prefer `err.statusCode` if `err.status` is invalid\n+    - Set response headers from `err.headers` object\n+    - Use `statuses` instead of `http` module for status messages\n+  * deps: proxy-addr@~1.1.2\n+    - Fix accepting various invalid netmasks\n+    - Fix IPv6-mapped IPv4 validation edge cases\n+    - IPv4 netmasks must be contingous\n+    - IPv6 addresses cannot be used as a netmask\n+    - deps: ipaddr.js@1.1.1\n+  * deps: qs@6.2.0\n+    - Add `decoder` option in `parse` function\n+  * deps: range-parser@~1.2.0\n+    - Add `combine` option to combine overlapping ranges\n+    - Fix incorrectly returning -1 when there is at least one valid range\n+    - perf: remove internal function\n+  * deps: send@0.14.1\n+    - Add `acceptRanges` option\n+    - Add `cacheControl` option\n+    - Attempt to combine multiple ranges into single range\n+    - Correctly inherit from `Stream` class\n+    - Fix `Content-Range` header in 416 responses when using `start`/`end` options\n+    - Fix `Content-Range` header missing from default 416 responses\n+    - Fix redirect error when `path` contains raw non-URL characters\n+    - Fix redirect when `path` starts with multiple forward slashes\n+    - Ignore non-byte `Range` headers\n+    - deps: http-errors@~1.5.0\n+    - deps: range-parser@~1.2.0\n+    - deps: statuses@~1.3.0\n+    - perf: remove argument reassignment\n+  * deps: serve-static@~1.11.1\n+    - Add `acceptRanges` option\n+    - Add `cacheControl` option\n+    - Attempt to combine multiple ranges into single range\n+    - Fix redirect error when `req.url` contains raw non-URL characters\n+    - Ignore non-byte `Range` headers\n+    - Use status code 301 for redirects\n+    - deps: send@0.14.1\n+  * deps: type-is@~1.6.13\n+    - Fix type error when given invalid type to match against\n+    - deps: mime-types@~2.1.11\n+  * deps: vary@~1.1.0\n+    - Only accept valid field names in the `field` argument\n+  * perf: use strict equality when possible\n+\n 4.13.4 / 2016-01-21\n ===================\n "},{"sha":"f1061373510cd9d5106dc1e4e7003589152fc408","filename":"appveyor.yml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/appveyor.yml","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/appveyor.yml","contents_url":"https://api.github.com/repos/expressjs/express/contents/appveyor.yml?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -6,6 +6,8 @@ environment:\n     - nodejs_version: \"2.5\"\n     - nodejs_version: \"3.3\"\n     - nodejs_version: \"4.4\"\n+    - nodejs_version: \"5.11\"\n+    - nodejs_version: \"6.2\"\n cache:\n   - node_modules\n install:"},{"sha":"5f76f8458f0d34513ca5f48d2579d4bec5d0cf23","filename":"lib/middleware/query.js","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/lib%2Fmiddleware%2Fquery.js","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/lib%2Fmiddleware%2Fquery.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Fmiddleware%2Fquery.js?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -30,14 +30,9 @@ module.exports = function query(options) {\n     opts = undefined;\n   }\n \n-  if (opts !== undefined) {\n-    if (opts.allowDots === undefined) {\n-      opts.allowDots = false;\n-    }\n-\n-    if (opts.allowPrototypes === undefined) {\n-      opts.allowPrototypes = true;\n-    }\n+  if (opts !== undefined && opts.allowPrototypes === undefined) {\n+    // back-compat for qs module\n+    opts.allowPrototypes = true;\n   }\n \n   return function query(req, res, next){"},{"sha":"557d050ffb584726efde47eada5dfaa85e8b27a8","filename":"lib/request.js","status":"modified","additions":31,"deletions":18,"changes":49,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/lib%2Frequest.js","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/lib%2Frequest.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Frequest.js?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -57,6 +57,14 @@ var req = exports = module.exports = {\n \n req.get =\n req.header = function header(name) {\n+  if (!name) {\n+    throw new TypeError('name argument is required to req.get');\n+  }\n+\n+  if (typeof name !== 'string') {\n+    throw new TypeError('name must be a string to req.get');\n+  }\n+\n   var lc = name.toLowerCase();\n \n   switch (lc) {\n@@ -171,29 +179,34 @@ req.acceptsLanguage = deprecate.function(req.acceptsLanguages,\n   'req.acceptsLanguage: Use acceptsLanguages instead');\n \n /**\n- * Parse Range header field,\n- * capping to the given `size`.\n+ * Parse Range header field, capping to the given `size`.\n  *\n- * Unspecified ranges such as \"0-\" require\n- * knowledge of your resource length. In\n- * the case of a byte range this is of course\n- * the total number of bytes. If the Range\n- * header field is not given `null` is returned,\n- * `-1` when unsatisfiable, `-2` when syntactically invalid.\n+ * Unspecified ranges such as \"0-\" require knowledge of your resource length. In\n+ * the case of a byte range this is of course the total number of bytes. If the\n+ * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\n+ * and `-2` when syntactically invalid.\n  *\n- * NOTE: remember that ranges are inclusive, so\n- * for example \"Range: users=0-3\" should respond\n- * with 4 users when available, not 3.\n+ * When ranges are returned, the array has a \"type\" property which is the type of\n+ * range that is required (most commonly, \"bytes\"). Each array element is an object\n+ * with a \"start\" and \"end\" property for the portion of the range.\n  *\n- * @param {Number} size\n- * @return {Array}\n+ * The \"combine\" option can be set to `true` and overlapping & adjacent ranges\n+ * will be combined into a single range.\n+ *\n+ * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\n+ * should respond with 4 users when available, not 3.\n+ *\n+ * @param {number} size\n+ * @param {object} [options]\n+ * @param {boolean} [options.combine=false]\n+ * @return {number|array}\n  * @public\n  */\n \n-req.range = function(size){\n+req.range = function range(size, options) {\n   var range = this.get('Range');\n   if (!range) return;\n-  return parseRange(size, range);\n+  return parseRange(size, range, options);\n };\n \n /**\n@@ -303,7 +316,7 @@ defineGetter(req, 'protocol', function protocol(){\n /**\n  * Short-hand for:\n  *\n- *    req.protocol == 'https'\n+ *    req.protocol === 'https'\n  *\n  * @return {Boolean}\n  * @public\n@@ -437,10 +450,10 @@ defineGetter(req, 'fresh', function(){\n   var s = this.res.statusCode;\n \n   // GET or HEAD for weak freshness validation only\n-  if ('GET' != method && 'HEAD' != method) return false;\n+  if ('GET' !== method && 'HEAD' !== method) return false;\n \n   // 2xx or 304 as per rfc2616 14.26\n-  if ((s >= 200 && s < 300) || 304 == s) {\n+  if ((s >= 200 && s < 300) || 304 === s) {\n     return fresh(this.headers, (this.res._headers || {}));\n   }\n "},{"sha":"6128f450a94903c222804ad18757d9b273610d26","filename":"lib/response.js","status":"modified","additions":20,"deletions":8,"changes":28,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/lib%2Fresponse.js","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/lib%2Fresponse.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Fresponse.js?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -14,6 +14,7 @@\n \n var contentDisposition = require('content-disposition');\n var deprecate = require('depd')('express');\n+var encodeUrl = require('encodeurl');\n var escapeHtml = require('escape-html');\n var http = require('http');\n var isAbsolute = require('./utils').isAbsolute;\n@@ -189,7 +190,7 @@ res.send = function send(body) {\n   if (req.fresh) this.statusCode = 304;\n \n   // strip irrelevant headers\n-  if (204 == this.statusCode || 304 == this.statusCode) {\n+  if (204 === this.statusCode || 304 === this.statusCode) {\n     this.removeHeader('Content-Type');\n     this.removeHeader('Content-Length');\n     this.removeHeader('Transfer-Encoding');\n@@ -239,7 +240,7 @@ res.json = function json(obj) {\n   var app = this.app;\n   var replacer = app.get('json replacer');\n   var spaces = app.get('json spaces');\n-  var body = JSON.stringify(val, replacer, spaces);\n+  var body = stringify(val, replacer, spaces);\n \n   // content-type\n   if (!this.get('Content-Type')) {\n@@ -281,7 +282,7 @@ res.jsonp = function jsonp(obj) {\n   var app = this.app;\n   var replacer = app.get('json replacer');\n   var spaces = app.get('json spaces');\n-  var body = JSON.stringify(val, replacer, spaces);\n+  var body = stringify(val, replacer, spaces);\n   var callback = this.req.query[app.get('jsonp callback name')];\n \n   // content-type\n@@ -832,8 +833,7 @@ res.location = function location(url) {\n   }\n \n   // set location\n-  this.set('Location', loc);\n-  return this;\n+  return this.set('Location', encodeUrl(loc));\n };\n \n /**\n@@ -871,13 +871,12 @@ res.redirect = function redirect(url) {\n   }\n \n   // Set location header\n-  this.location(address);\n-  address = this.get('Location');\n+  address = this.location(address).get('Location');\n \n   // Support text/{plain,html} by default\n   this.format({\n     text: function(){\n-      body = statusCodes[status] + '. Redirecting to ' + encodeURI(address);\n+      body = statusCodes[status] + '. Redirecting to ' + address;\n     },\n \n     html: function(){\n@@ -1051,3 +1050,16 @@ function sendfile(res, file, options, callback) {\n   // pipe\n   file.pipe(res);\n }\n+\n+/**\n+ * Stringify JSON, like JSON.stringify, but v8 optimized.\n+ * @private\n+ */\n+\n+function stringify(value, replacer, spaces) {\n+  // v8 checks arguments.length for optimizing simple call\n+  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n+  return replacer || spaces\n+    ? JSON.stringify(value, replacer, spaces)\n+    : JSON.stringify(value);\n+}"},{"sha":"dac2514815be22be58c3f6b4d5e7ba7a9465a37f","filename":"lib/router/index.js","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/lib%2Frouter%2Findex.js","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/lib%2Frouter%2Findex.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Frouter%2Findex.js?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -119,7 +119,7 @@ proto.param = function param(name, fn) {\n \n   // ensure we end up with a\n   // middleware function\n-  if ('function' != typeof fn) {\n+  if ('function' !== typeof fn) {\n     throw new Error('invalid param() call for ' + name + ', got ' + fn);\n   }\n "},{"sha":"f418c5807c7b1ade534c7f956fee9750e1f2050e","filename":"lib/utils.js","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/lib%2Futils.js","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/lib%2Futils.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/lib%2Futils.js?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -66,9 +66,9 @@ exports.wetag = function wetag(body, encoding){\n  */\n \n exports.isAbsolute = function(path){\n-  if ('/' == path[0]) return true;\n-  if (':' == path[1] && '\\\\' == path[2]) return true;\n-  if ('\\\\\\\\' == path.substring(0, 2)) return true; // Microsoft Azure absolute path\n+  if ('/' === path[0]) return true;\n+  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n+  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n };\n \n /**\n@@ -142,7 +142,7 @@ function acceptParams(str, index) {\n \n   for (var i = 1; i < parts.length; ++i) {\n     var pms = parts[i].split(/ *= */);\n-    if ('q' == pms[0]) {\n+    if ('q' === pms[0]) {\n       ret.quality = parseFloat(pms[1]);\n     } else {\n       ret.params[pms[0]] = pms[1];\n@@ -283,7 +283,6 @@ exports.setCharset = function setCharset(type, charset) {\n \n function parseExtendedQueryString(str) {\n   return qs.parse(str, {\n-    allowDots: false,\n     allowPrototypes: true\n   });\n }"},{"sha":"6b3b11b1e60317649d981f2f120f70c57b8da1b4","filename":"package.json","status":"modified","additions":21,"deletions":20,"changes":41,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/package.json","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/package.json","contents_url":"https://api.github.com/repos/expressjs/express/contents/package.json?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -27,50 +27,51 @@\n     \"api\"\n   ],\n   \"dependencies\": {\n-    \"accepts\": \"~1.2.12\",\n+    \"accepts\": \"~1.3.3\",\n     \"array-flatten\": \"1.1.1\",\n     \"content-disposition\": \"0.5.1\",\n-    \"content-type\": \"~1.0.1\",\n-    \"cookie\": \"0.1.5\",\n+    \"content-type\": \"~1.0.2\",\n+    \"cookie\": \"0.3.1\",\n     \"cookie-signature\": \"1.0.6\",\n     \"debug\": \"~2.2.0\",\n     \"depd\": \"~1.1.0\",\n+    \"encodeurl\": \"~1.0.1\",\n     \"escape-html\": \"~1.0.3\",\n     \"etag\": \"~1.7.0\",\n-    \"finalhandler\": \"0.4.1\",\n+    \"finalhandler\": \"0.5.0\",\n     \"fresh\": \"0.3.0\",\n     \"merge-descriptors\": \"1.0.1\",\n     \"methods\": \"~1.1.2\",\n     \"on-finished\": \"~2.3.0\",\n     \"parseurl\": \"~1.3.1\",\n     \"path-to-regexp\": \"0.1.7\",\n-    \"proxy-addr\": \"~1.0.10\",\n-    \"qs\": \"4.0.0\",\n-    \"range-parser\": \"~1.0.3\",\n-    \"send\": \"0.13.1\",\n-    \"serve-static\": \"~1.10.2\",\n-    \"type-is\": \"~1.6.6\",\n+    \"proxy-addr\": \"~1.1.2\",\n+    \"qs\": \"6.2.0\",\n+    \"range-parser\": \"~1.2.0\",\n+    \"send\": \"0.14.1\",\n+    \"serve-static\": \"~1.11.1\",\n+    \"type-is\": \"~1.6.13\",\n     \"utils-merge\": \"1.0.0\",\n-    \"vary\": \"~1.0.1\"\n+    \"vary\": \"~1.1.0\"\n   },\n   \"devDependencies\": {\n     \"after\": \"0.8.1\",\n-    \"ejs\": \"2.4.1\",\n+    \"body-parser\": \"~1.15.1\",\n+    \"cookie-parser\": \"~1.4.3\",\n+    \"ejs\": \"2.4.2\",\n     \"istanbul\": \"0.4.3\",\n     \"marked\": \"0.3.5\",\n-    \"mocha\": \"2.5.1\",\n-    \"should\": \"8.4.0\",\n-    \"supertest\": \"1.1.0\",\n-    \"body-parser\": \"~1.14.2\",\n+    \"method-override\": \"~2.3.6\",\n+    \"mocha\": \"2.5.3\",\n+    \"morgan\": \"~1.7.0\",\n+    \"should\": \"9.0.2\",\n+    \"supertest\": \"1.2.0\",\n     \"connect-redis\": \"~2.4.1\",\n-    \"cookie-parser\": \"~1.4.1\",\n     \"cookie-session\": \"~1.2.0\",\n     \"express-session\": \"~1.13.0\",\n     \"jade\": \"~1.11.0\",\n-    \"method-override\": \"~2.3.5\",\n-    \"morgan\": \"~1.6.1\",\n     \"multiparty\": \"~4.1.2\",\n-    \"vhost\": \"~3.0.1\"\n+    \"vhost\": \"~3.0.2\"\n   },\n   \"engines\": {\n     \"node\": \">= 0.10.0\""},{"sha":"109a2d90ce770592ae35b71deac814426628bf07","filename":"test/req.get.js","status":"modified","additions":25,"deletions":1,"changes":26,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Freq.get.js","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Freq.get.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Freq.get.js?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -31,5 +31,29 @@ describe('req', function(){\n       .set('Referrer', 'http://foobar.com')\n       .expect('http://foobar.com', done);\n     })\n+\n+    it('should throw missing header name', function (done) {\n+      var app = express()\n+\n+      app.use(function (req, res) {\n+        res.end(req.get())\n+      })\n+\n+      request(app)\n+      .get('/')\n+      .expect(500, /TypeError: name argument is required to req.get/, done)\n+    })\n+\n+    it('should throw for non-string header name', function (done) {\n+      var app = express()\n+\n+      app.use(function (req, res) {\n+        res.end(req.get(42))\n+      })\n+\n+      request(app)\n+      .get('/')\n+      .expect(500, /TypeError: name must be a string to req.get/, done)\n+    })\n   })\n-})\n\\ No newline at end of file\n+})"},{"sha":"d3d29abd16d997c0aa7c7d5cea821ad8c8880078","filename":"test/req.query.js","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Freq.query.js","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Freq.query.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Freq.query.js?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -43,7 +43,7 @@ describe('req', function(){\n         var app = createApp('simple');\n \n         request(app)\n-        .get('/?user[name]=tj')\n+        .get('/?user%5Bname%5D=tj')\n         .expect(200, '{\"user[name]\":\"tj\"}', done);\n       });\n     });\n@@ -55,7 +55,7 @@ describe('req', function(){\n         });\n \n         request(app)\n-        .get('/?user[name]=tj')\n+        .get('/?user%5Bname%5D=tj')\n         .expect(200, '{\"length\":17}', done);\n       });\n     });\n@@ -65,7 +65,7 @@ describe('req', function(){\n         var app = createApp(false);\n \n         request(app)\n-        .get('/?user[name]=tj')\n+        .get('/?user%5Bname%5D=tj')\n         .expect(200, '{}', done);\n       });\n     });\n@@ -75,7 +75,7 @@ describe('req', function(){\n         var app = createApp(true);\n \n         request(app)\n-        .get('/?user[name]=tj')\n+        .get('/?user%5Bname%5D=tj')\n         .expect(200, '{\"user[name]\":\"tj\"}', done);\n       });\n     });"},{"sha":"d530d85a64584ad65d4dd10eec0e706eb1f0d3cd","filename":"test/req.range.js","status":"modified","additions":13,"deletions":3,"changes":16,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Freq.range.js","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Freq.range.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Freq.range.js?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -12,9 +12,9 @@ function req(ret) {\n describe('req', function(){\n   describe('.range(size)', function(){\n     it('should return parsed ranges', function(){\n-      var ret = [{ start: 0, end: 50 }, { start: 60, end: 100 }];\n-      ret.type = 'bytes';\n-      req('bytes=0-50,60-100').range(120).should.eql(ret);\n+      var ranges = [{ start: 0, end: 50 }, { start: 51, end: 100 }]\n+      ranges.type = 'bytes'\n+      assert.deepEqual(req('bytes=0-50,51-100').range(120), ranges)\n     })\n \n     it('should cap to the given size', function(){\n@@ -35,4 +35,14 @@ describe('req', function(){\n       assert(req('').range(120) === undefined);\n     })\n   })\n+\n+  describe('.range(size, options)', function(){\n+    describe('with \"combine: true\" option', function(){\n+      it('should return combined ranges', function(){\n+        var ranges = [{ start: 0, end: 100 }]\n+        ranges.type = 'bytes'\n+        assert.deepEqual(req('bytes=0-50,51-100').range(120, { combine: true }), ranges)\n+      })\n+    })\n+  })\n })"},{"sha":"bb9eb6f92e359fbe78e69facb20b224f2803bf4c","filename":"test/res.location.js","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Fres.location.js","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Fres.location.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.location.js?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -16,5 +16,31 @@ describe('res', function(){\n       .expect('Location', 'http://google.com')\n       .expect(200, done)\n     })\n+\n+    it('should encode \"url\"', function (done) {\n+      var app = express()\n+\n+      app.use(function (req, res) {\n+        res.location('https://google.com?q=\\u2603 §10').end()\n+      })\n+\n+      request(app)\n+      .get('/')\n+      .expect('Location', 'https://google.com?q=%E2%98%83%20%C2%A710')\n+      .expect(200, done)\n+    })\n+\n+    it('should not touch already-encoded sequences in \"url\"', function (done) {\n+      var app = express()\n+\n+      app.use(function (req, res) {\n+        res.location('https://google.com?q=%A710').end()\n+      })\n+\n+      request(app)\n+      .get('/')\n+      .expect('Location', 'https://google.com?q=%A710')\n+      .expect(200, done)\n+    })\n   })\n })"},{"sha":"9f3bd436763f84cb2c478d6e9cfabb76fe9a7ab0","filename":"test/res.redirect.js","status":"modified","additions":31,"deletions":5,"changes":36,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Fres.redirect.js","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Fres.redirect.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.redirect.js?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -18,6 +18,32 @@ describe('res', function(){\n       .expect('location', 'http://google.com')\n       .expect(302, done)\n     })\n+\n+    it('should encode \"url\"', function (done) {\n+      var app = express()\n+\n+      app.use(function (req, res) {\n+        res.redirect('https://google.com?q=\\u2603 §10')\n+      })\n+\n+      request(app)\n+      .get('/')\n+      .expect('Location', 'https://google.com?q=%E2%98%83%20%C2%A710')\n+      .expect(302, done)\n+    })\n+\n+    it('should not touch already-encoded sequences in \"url\"', function (done) {\n+      var app = express()\n+\n+      app.use(function (req, res) {\n+        res.redirect('https://google.com?q=%A710')\n+      })\n+\n+      request(app)\n+      .get('/')\n+      .expect('Location', 'https://google.com?q=%A710')\n+      .expect(302, done)\n+    })\n   })\n \n   describe('.redirect(status, url)', function(){\n@@ -85,16 +111,16 @@ describe('res', function(){\n       var app = express();\n \n       app.use(function(req, res){\n-        res.redirect('<lame>');\n+        res.redirect('<la\\'me>');\n       });\n \n       request(app)\n       .get('/')\n       .set('Host', 'http://example.com')\n       .set('Accept', 'text/html')\n       .expect('Content-Type', /html/)\n-      .expect('Location', '<lame>')\n-      .expect(302, '<p>' + http.STATUS_CODES[302] + '. Redirecting to <a href=\"&lt;lame&gt;\">&lt;lame&gt;</a></p>', done);\n+      .expect('Location', '%3Cla\\'me%3E')\n+      .expect(302, '<p>' + http.STATUS_CODES[302] + '. Redirecting to <a href=\"%3Cla&#39;me%3E\">%3Cla&#39;me%3E</a></p>', done)\n     })\n \n     it('should include the redirect type', function(done){\n@@ -141,8 +167,8 @@ describe('res', function(){\n       .set('Host', 'http://example.com')\n       .set('Accept', 'text/plain, */*')\n       .expect('Content-Type', /plain/)\n-      .expect('Location', 'http://example.com/?param=<script>alert(\"hax\");</script>')\n-      .expect(302, http.STATUS_CODES[302] + '. Redirecting to http://example.com/?param=%3Cscript%3Ealert(%22hax%22);%3C/script%3E', done);\n+      .expect('Location', 'http://example.com/?param=%3Cscript%3Ealert(%22hax%22);%3C/script%3E')\n+      .expect(302, http.STATUS_CODES[302] + '. Redirecting to http://example.com/?param=%3Cscript%3Ealert(%22hax%22);%3C/script%3E', done)\n     })\n \n     it('should include the redirect type', function(done){"},{"sha":"705c15a8b7e79e468037a127098b5ab18d0584c4","filename":"test/res.sendFile.js","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Fres.sendFile.js","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Fres.sendFile.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Fres.sendFile.js?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -286,6 +286,14 @@ describe('res', function(){\n     })\n   })\n \n+  describe('.sendFile(path, options)', function () {\n+    it('should pass options to send module', function (done) {\n+      request(createApp(path.resolve(fixtures, 'name.txt'), { start: 0, end: 1 }))\n+      .get('/')\n+      .expect(200, 'to', done)\n+    })\n+  })\n+\n   describe('.sendfile(path, fn)', function(){\n     it('should invoke the callback when complete', function(done){\n       var app = express();\n@@ -702,6 +710,20 @@ describe('res', function(){\n   })\n })\n \n+  describe('.sendfile(path, options)', function () {\n+    it('should pass options to send module', function (done) {\n+      var app = express()\n+\n+      app.use(function (req, res) {\n+        res.sendfile(path.resolve(fixtures, 'name.txt'), { start: 0, end: 1 })\n+      })\n+\n+      request(app)\n+      .get('/')\n+      .expect(200, 'to', done)\n+    })\n+  })\n+\n function createApp(path, options, fn) {\n   var app = express();\n "},{"sha":"b673196260161b5979fb6dd4aa166a8ff330b36e","filename":"test/utils.js","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/expressjs/express/blob/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Futils.js","raw_url":"https://github.com/expressjs/express/raw/14cf9c563679566bef9a396bfa9702776bfc1b48/test%2Futils.js","contents_url":"https://api.github.com/repos/expressjs/express/contents/test%2Futils.js?ref=14cf9c563679566bef9a396bfa9702776bfc1b48","patch":"@@ -73,6 +73,7 @@ describe('utils.wetag(body, encoding)', function(){\n describe('utils.isAbsolute()', function(){\n   it('should support windows', function(){\n     assert(utils.isAbsolute('c:\\\\'));\n+    assert(utils.isAbsolute('c:/'));\n     assert(!utils.isAbsolute(':\\\\'));\n   })\n "}]}]