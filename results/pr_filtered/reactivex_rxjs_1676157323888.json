[
  {
    "url": "https://api.github.com/repos/ReactiveX/rxjs/issues/146",
    "repository_url": "https://api.github.com/repos/ReactiveX/rxjs",
    "labels_url": "https://api.github.com/repos/ReactiveX/rxjs/issues/146/labels{/name}",
    "comments_url": "https://api.github.com/repos/ReactiveX/rxjs/issues/146/comments",
    "events_url": "https://api.github.com/repos/ReactiveX/rxjs/issues/146/events",
    "html_url": "https://github.com/ReactiveX/rxjs/pull/146",
    "id": 98069460,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDExOTE3MjA=",
    "number": 146,
    "title": "Adds micro-benchmark performance tests.",
    "user": {
      "login": "trxcllnt",
      "id": 178183,
      "node_id": "MDQ6VXNlcjE3ODE4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/trxcllnt",
      "html_url": "https://github.com/trxcllnt",
      "followers_url": "https://api.github.com/users/trxcllnt/followers",
      "following_url": "https://api.github.com/users/trxcllnt/following{/other_user}",
      "gists_url": "https://api.github.com/users/trxcllnt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/trxcllnt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/trxcllnt/subscriptions",
      "organizations_url": "https://api.github.com/users/trxcllnt/orgs",
      "repos_url": "https://api.github.com/users/trxcllnt/repos",
      "events_url": "https://api.github.com/users/trxcllnt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/trxcllnt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": true,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2015-07-30T02:05:04Z",
    "updated_at": "2019-01-19T07:37:49Z",
    "closed_at": "2015-07-30T06:05:24Z",
    "author_association": "MEMBER",
    "active_lock_reason": "resolved",
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/ReactiveX/rxjs/pulls/146",
      "html_url": "https://github.com/ReactiveX/rxjs/pull/146",
      "diff_url": "https://github.com/ReactiveX/rxjs/pull/146.diff",
      "patch_url": "https://github.com/ReactiveX/rxjs/pull/146.patch",
      "merged_at": "2015-07-30T06:05:24Z"
    },
    "body": "Addresses #126.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ReactiveX/rxjs/issues/146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/ReactiveX/rxjs/issues/146/timeline",
    "performed_via_github_app": null,
    "state_reason": null,
    "score": 1,
    "files": [
      {
        "sha": "1a862b9065023355873716017f50e590e5079c55",
        "filename": "perf/macro/flatMap-scalar/flatmap-scalar.spec.js",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap-scalar%2Fflatmap-scalar.spec.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap-scalar%2Fflatmap-scalar.spec.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2FflatMap-scalar%2Fflatmap-scalar.spec.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -14,7 +14,7 @@ describe('flatMap comparison', function () {\n   ].forEach(function (val) {\n     it('should be fast in Rx2', function (done) {\n       browser.ignoreSynchronization = true;\n-      browser.get('http://localhost:8080/perf/flatMap-scalar/index.html?iterations=' + val);\n+      browser.get('http://localhost:8080/perf/macro/flatMap-scalar/index.html?iterations=' + val);\n       runner.sample({\n         id: 'flatMap-range-to-scalar Rx2',\n         execute: function () {\n@@ -30,7 +30,7 @@ describe('flatMap comparison', function () {\n \n     it('should be fast in RxNext', function (done) {\n       browser.ignoreSynchronization = true;\n-      browser.get('http://localhost:8080/perf/flatMap-scalar/index.html?iterations=' + val);\n+      browser.get('http://localhost:8080/perf/macro/flatMap-scalar/index.html?iterations=' + val);\n       runner.sample({\n         id: 'flatMap-range-to-scalar RxNext',\n         execute: function () {",
        "previous_filename": "perf/flatMap-scalar/flatmap-scalar.spec.js"
      },
      {
        "sha": "30bc72a2e9d8f35935121e003f85ef5bc4b36157",
        "filename": "perf/macro/flatMap-scalar/index.html",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap-scalar%2Findex.html",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap-scalar%2Findex.html",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2FflatMap-scalar%2Findex.html?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -3,12 +3,12 @@\n <head>\n \t<meta charset=\"UTF-8\">\n \t<title>RxJS 3 Perf Tests</title>\n-  <script src=\"../../dist/global/Rx.js\"></script>\n+  <script src=\"../../../dist/global/Rx.js\"></script>\n   <script type=\"text/javascript\">\n     window.RxNext = window.Rx;\n     window.Rx = void 0;\n   </script>\n-  <script src=\"../../node_modules/rx/dist/rx.all.js\"></script>\n+  <script src=\"../../../node_modules/rx/dist/rx.all.js\"></script>\n \n </head>\n <body>",
        "previous_filename": "perf/flatMap-scalar/index.html"
      },
      {
        "sha": "e23837f41d329537cf9ce138614b5d67aa62bed3",
        "filename": "perf/macro/flatMap-scalar/perf.js",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap-scalar%2Fperf.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap-scalar%2Fperf.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2FflatMap-scalar%2Fperf.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "previous_filename": "perf/flatMap-scalar/perf.js"
      },
      {
        "sha": "6e83f391fa562bcb5e5c70c9e7081095e244dc7f",
        "filename": "perf/macro/flatMap/flatmap.spec.js",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap%2Fflatmap.spec.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap%2Fflatmap.spec.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2FflatMap%2Fflatmap.spec.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -15,7 +15,7 @@ describe('flatMap comparison', function() {\n \n     it('should be fast in Rx2', function (done) {\n       browser.ignoreSynchronization = true;\n-      browser.get('http://localhost:8080/perf/flatMap/index.html?iterations=' + val);\n+      browser.get('http://localhost:8080/perf/macro/flatMap/index.html?iterations=' + val);\n       runner.sample({\n         id: 'flatMap Rx2',\n         execute: function () {\n@@ -31,7 +31,7 @@ describe('flatMap comparison', function() {\n \n     it('should be fast in RxNext', function (done) {\n       browser.ignoreSynchronization = true;\n-      browser.get('http://localhost:8080/perf/flatMap/index.html?iterations=' + val);\n+      browser.get('http://localhost:8080/perf/macro/flatMap/index.html?iterations=' + val);\n       runner.sample({\n         id: 'flatMap RxNext',\n         execute: function () {",
        "previous_filename": "perf/flatMap/flatmap.spec.js"
      },
      {
        "sha": "c6c90133c5aa654ad882709769882c8358fbd3cb",
        "filename": "perf/macro/flatMap/index.html",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap%2Findex.html",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap%2Findex.html",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2FflatMap%2Findex.html?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -3,12 +3,12 @@\n <head>\n \t<meta charset=\"UTF-8\">\n \t<title>RxJS 3 Perf Tests</title>\n-  <script src=\"../../dist/global/Rx.js\"></script>\n+  <script src=\"../../../dist/global/Rx.js\"></script>\n   <script type=\"text/javascript\">\n     window.RxNext = window.Rx;\n     window.Rx = void 0;\n   </script>\n-  <script src=\"../../node_modules/rx/dist/rx.all.js\"></script>\n+  <script src=\"../../../node_modules/rx/dist/rx.all.js\"></script>\n \n </head>\n <body>",
        "previous_filename": "perf/flatMap/index.html"
      },
      {
        "sha": "58428e03303417a0a9daca243d6a9b970ac03435",
        "filename": "perf/macro/flatMap/perf.js",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap%2Fperf.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap%2Fperf.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2FflatMap%2Fperf.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "previous_filename": "perf/flatMap/perf.js"
      },
      {
        "sha": "e519f8bd578fb2cf17fef0c0ac811221554573fc",
        "filename": "perf/macro/index.html",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2Findex.html",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2Findex.html",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2Findex.html?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "previous_filename": "perf/index.html"
      },
      {
        "sha": "c61e7115e28f5906a0a4b0deeafa404d101c2e16",
        "filename": "perf/macro/perf-helpers.js",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2Fperf-helpers.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2Fperf-helpers.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2Fperf-helpers.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "previous_filename": "perf/perf-helpers.js"
      },
      {
        "sha": "4631951c6b5eb567d0766d99519397dc03f2247e",
        "filename": "perf/micro/current-thread-scheduler/observable/from-array.js",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-array.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-array.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-array.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,24 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function fromArray(suite) {\n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+\n+    var oldFromArrayWithCurrentThreadScheduler = RxOld.Observable.fromArray(args, RxOld.Scheduler.currentThread);\n+    var newFromArrayWithCurrentThreadScheduler = RxNew.Observable.fromArray(args, RxNew.Scheduler.immediate);\n+\n+    // add tests\n+    return suite\n+        .add('old fromArray with current thread scheduler', function () {\n+            oldFromArrayWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new fromArray with current thread scheduler', function () {\n+            newFromArrayWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "4df7cd05ddd7cef3639e9a77cab7c4d5a7b9dc5e",
        "filename": "perf/micro/current-thread-scheduler/observable/from-with-array.js",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-with-array.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-with-array.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-with-array.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,21 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function fromWithArray(suite) {\n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+\n+    // add tests\n+    return suite\n+        .add('old from (array) with current thread scheduler', function () {\n+            RxOld.Observable.from(args, null, null, RxOld.Scheduler.currentThread).subscribe(_next, _error, _complete);\n+        })\n+        .add('new from (array) with current thread scheduler', function () {\n+            RxNew.Observable.from(args, null, null, RxNew.Scheduler.immediate).subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "9a9e3b49f1eb3fc55e66bdcc1abe040d6bdc300c",
        "filename": "perf/micro/current-thread-scheduler/observable/from-with-string.js",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-with-string.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-with-string.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-with-string.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,22 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function fromWithString(suite) {\n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+    var argStr = args.join('');\n+\n+    // add tests\n+    return suite\n+        .add('old from (string) with current thread scheduler', function () {\n+            RxOld.Observable.from(argStr, null, null, RxOld.Scheduler.currentThread).subscribe(_next, _error, _complete);\n+        })\n+        .add('new from (string) with current thread scheduler', function () {\n+            RxNew.Observable.from(argStr, null, null, RxNew.Scheduler.immediate).subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "a91d3238a1f4b0dfb55a7d0cdd3400a841b6afde",
        "filename": "perf/micro/current-thread-scheduler/observable/of.js",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Fof.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Fof.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Fof.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,25 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function of(suite) {\n+    \n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+\n+    var oldOfWithCurrentThreadScheduler = RxOld.Observable.of.apply(null, args.concat(RxOld.Scheduler.currentThread));\n+    var newOfWithCurrentThreadScheduler = RxNew.Observable.of.apply(null, args.concat(RxNew.Scheduler.immediate));\n+\n+    // add tests\n+    return suite\n+        .add('old of with current thread scheduler', function () {\n+            oldOfWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new of with current thread scheduler', function () {\n+            newOfWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "38f6168a35d83800df7dd78297443b39398af7cd",
        "filename": "perf/micro/current-thread-scheduler/observable/range.js",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Frange.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Frange.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Frange.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,20 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function range(suite) {\n+    // add tests\n+\n+    var oldRangeWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread);\n+    var newRangeWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate);\n+\n+    return suite\n+        .add('old range with current thread scheduler', function () {\n+            oldRangeWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new range with current thread scheduler', function () {\n+            newRangeWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "d3be9ee89026e19d037bb6b3a8eee6e14028a447",
        "filename": "perf/micro/current-thread-scheduler/operators/combine-latest.js",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fcombine-latest.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fcombine-latest.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fcombine-latest.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldCombineLatestWithCurrentThreadScheduler = RxOld.Observable.combineLatest(RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread), RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread), add);\n+    var newCombineLatestWithCurrentThreadScheduler = RxNew.Observable.combineLatest(RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate), RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate), add);\n+\n+    return suite\n+        .add('old combineLatest with current thread scheduler', function () {\n+            oldCombineLatestWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new combineLatest with current thread scheduler', function () {\n+            newCombineLatestWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    \n+    function add(x, y) {\n+        return x + y;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "00328dc56b7101ec4061b506cf368688966ffe9b",
        "filename": "perf/micro/current-thread-scheduler/operators/concat-many.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fconcat-many.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fconcat-many.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fconcat-many.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldConcatMapWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).concatMap(function (x) { return RxOld.Observable.range(x, 25, RxOld.Scheduler.currentThread); });\n+    var newConcatMapWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).concatMap(function (x) { return RxNew.Observable.range(x, 25, RxNew.Scheduler.immediate); });\n+\n+    return suite\n+        .add('old concatMap with current thread scheduler', function () {\n+            oldConcatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new concatMap with current thread scheduler', function () {\n+            newConcatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "292b3c789cc187554d7747344c1f0b1c90cf8b2d",
        "filename": "perf/micro/current-thread-scheduler/operators/filter.js",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Ffilter.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Ffilter.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Ffilter.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,27 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldFilterWithCurrentThreadScheduler = RxOld.Observable.range(0, 50, RxOld.Scheduler.currentThread).filter(divByTwo).filter(divByTen);\n+    var newFilterWithCurrentThreadScheduler = RxNew.Observable.range(0, 50, RxNew.Scheduler.immediate).filter(divByTwo).filter(divByTen);\n+\n+    return suite\n+        .add('old filter with current thread scheduler', function () {\n+            oldFilterWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new filter with current thread scheduler', function () {\n+            newFilterWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function divByTwo(x) {\n+        return x / 2 === 0;\n+    }\n+\n+    function divByTen(x) {\n+        return x / 10 === 0;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};"
      },
      {
        "sha": "6ccecde921f8ae70342d170572d8e94170c22711",
        "filename": "perf/micro/current-thread-scheduler/operators/flat-map-observable-scalar.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-observable-scalar.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-observable-scalar.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-observable-scalar.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldFlatMapWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).flatMap(RxOld.Observable.return(0, RxOld.Scheduler.currentThread));\n+    var newFlatMapWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).flatMapTo(RxNew.Observable.return(0, RxNew.Scheduler.immediate));\n+\n+    return suite\n+        .add('old flatMap (scalar Observable) with current thread scheduler', function () {\n+            oldFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap (scalar Observable) with current thread scheduler', function () {\n+            newFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "4e232c69b06332b563487e6086b829ae55635b66",
        "filename": "perf/micro/current-thread-scheduler/operators/flat-map-observable.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-observable.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-observable.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-observable.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldFlatMapWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).flatMap(RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread));\n+    var newFlatMapWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).flatMapTo(RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate));\n+\n+    return suite\n+        .add('old flatMap (Observable) with current thread scheduler', function () {\n+            oldFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap (Observable) with current thread scheduler', function () {\n+            newFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "08a3453c5ef652381d215cc301760714470c6f83",
        "filename": "perf/micro/current-thread-scheduler/operators/flat-map-scalar.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-scalar.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-scalar.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-scalar.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldFlatMapWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).flatMap(function (x) { return RxOld.Observable.return(x, RxOld.Scheduler.currentThread); });\n+    var newFlatMapWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).flatMap(function (x) { return RxNew.Observable.return(x); });\n+\n+    return suite\n+        .add('old flatMap (scalar) with current thread scheduler', function () {\n+            oldFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap (scalar) with current thread scheduler', function () {\n+            newFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "f0e4ce35aa0b9167606646d6f4bb8b3f26f2e91e",
        "filename": "perf/micro/current-thread-scheduler/operators/flat-map.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldFlatMapWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).flatMap(function (x) { return RxOld.Observable.range(x, 25, RxOld.Scheduler.currentThread); });\n+    var newFlatMapWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).flatMap(function (x) { return RxNew.Observable.range(x, 25, RxNew.Scheduler.immediate); });\n+\n+    return suite\n+        .add('old flatMap with current thread scheduler', function () {\n+            oldFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap with current thread scheduler', function () {\n+            newFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "c88cca11a1e0161e71aa22927189ef73384c3ab8",
        "filename": "perf/micro/current-thread-scheduler/operators/map.js",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmap.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmap.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmap.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,27 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldSelectWithCurrentThreadScheduler = RxOld.Observable.range(0, 50).map(square).map(double);\n+    var newSelectWithCurrentThreadScheduler = RxNew.Observable.range(0, 50, RxNew.Scheduler.immediate).map(square).map(double);\n+\n+    return suite\n+        .add('old select with current thread scheduler', function () {\n+            oldSelectWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new select with current thread scheduler', function () {\n+            newSelectWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function square(x) {\n+        return x * x;\n+    }\n+\n+    function double(x) {\n+        return x + x;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "90e7d923eb9afa2728d22ad45123b9790c9a8d36",
        "filename": "perf/micro/current-thread-scheduler/operators/merge-all.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmerge-all.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmerge-all.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmerge-all.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldMergeAllWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).map(RxOld.Observable.range(0, 25), RxOld.Scheduler.currentThread).mergeAll();\n+    var newMergeAllWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).map(RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate)).mergeAll();\n+\n+    return suite\n+        .add('old mergeAll with current thread scheduler', function () {\n+            oldMergeAllWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new mergeAll with current thread scheduler', function () {\n+            newMergeAllWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "1c8debc8721fcf2970b0d46619d3b49b2969918d",
        "filename": "perf/micro/current-thread-scheduler/operators/merge.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmerge.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmerge.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmerge.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldMergeWithCurrentThreadScheduler = RxOld.Observable.range(0, 250, RxOld.Scheduler.currentThread).merge(RxOld.Observable.range(0, 250, RxOld.Scheduler.currentThread));\n+    var newMergeWithCurrentThreadScheduler = RxNew.Observable.range(0, 250, RxNew.Scheduler.immediate).merge(RxNew.Observable.range(0, 250, RxNew.Scheduler.immediate));\n+\n+    return suite\n+        .add('old merge (proto) with current thread scheduler', function () {\n+            oldMergeWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new merge (proto) with current thread scheduler', function () {\n+            newMergeWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "d8ef522af89f8e30fdacb9cb5bd8161eba1e5b13",
        "filename": "perf/micro/current-thread-scheduler/operators/reduce.js",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Freduce.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Freduce.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Freduce.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldReduceWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).reduce(add);\n+    var newReduceWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).reduce(add);\n+\n+    return suite\n+        .add('old reduce with current thread scheduler', function () {\n+            oldReduceWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new reduce with current thread scheduler', function () {\n+            newReduceWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function add(acc, x) {\n+        return x + x\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "596708d6203d8feef6f8fe1fe784cb0ad2272a8e",
        "filename": "perf/micro/current-thread-scheduler/operators/scan.js",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fscan.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fscan.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fscan.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldScanWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).scan(add);\n+    var newScanWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).scan(add);\n+\n+    return suite\n+        .add('old scan with current thread scheduler', function () {\n+            oldScanWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new scan with current thread scheduler', function () {\n+            newScanWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function add(acc, x) {\n+        return x + x\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "19b3974fef6bec6901d2c7fb4b4488791900dac6",
        "filename": "perf/micro/current-thread-scheduler/operators/to-array.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fto-array.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fto-array.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fto-array.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldToArrayWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).toArray();\n+    var newToArrayWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).toArray();\n+\n+    return suite\n+        .add('old toArray with current thread scheduler', function () {\n+            oldToArrayWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new toArray with current thread scheduler', function () {\n+            newToArrayWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "8c2208ce8efc4fcca0dba2f8162a1c054a5774dd",
        "filename": "perf/micro/current-thread-scheduler/operators/zip.js",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fzip.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fzip.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fzip.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldZipWithCurrentThreadScheduler = RxOld.Observable.zip(RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread), RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread), add);\n+    var newZipWithCurrentThreadScheduler = RxNew.Observable.zip(RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate), RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate), add);\n+\n+    return suite\n+        .add('old zip with current thread scheduler', function () {\n+            oldZipWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new zip with current thread scheduler', function () {\n+            newZipWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    \n+    function add(x, y) {\n+        return x + y;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "8b4c2874c13f678cc33bb4082f5794bed16219e7",
        "filename": "perf/micro/immediate-scheduler/observable/from-array.js",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-array.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-array.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-array.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,24 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function fromArray(suite) {\n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+\n+    var oldFromArrayWithImmediateScheduler = RxOld.Observable.fromArray(args, RxOld.Scheduler.immediate);\n+    var newFromArrayWithImmediateScheduler = RxNew.Observable.fromArray(args);\n+\n+    // add tests\n+    return suite\n+        .add('old fromArray with immediate scheduler', function () {\n+            oldFromArrayWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new fromArray with immediate scheduler', function () {\n+            newFromArrayWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "05d9f05c9321a27c67c4b2217f76dc63357eb4e8",
        "filename": "perf/micro/immediate-scheduler/observable/from-with-array.js",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-with-array.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-with-array.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-with-array.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,21 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function fromWithArray(suite) {\n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+\n+    // add tests\n+    return suite\n+        .add('old from (array) with immediate scheduler', function () {\n+            RxOld.Observable.from(args, null, null, RxOld.Scheduler.immediate).subscribe(_next, _error, _complete);\n+        })\n+        .add('new from (array) with immediate scheduler', function () {\n+            RxNew.Observable.from(args, null, null).subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "41924204aa4db9877133fe3fa7b3319b3b1be595",
        "filename": "perf/micro/immediate-scheduler/observable/from-with-string.js",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-with-string.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-with-string.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-with-string.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,22 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function fromWithString(suite) {\n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+    var argStr = args.join('');\n+\n+    // add tests\n+    return suite\n+        .add('old from (string) with immediate scheduler', function () {\n+            RxOld.Observable.from(argStr, null, null, RxOld.Scheduler.immediate).subscribe(_next, _error, _complete);\n+        })\n+        .add('new from (string) with immediate scheduler', function () {\n+            RxNew.Observable.from(argStr, null, null).subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "8aa0e90033390abf0f6ce96b562c33c13fd30c0f",
        "filename": "perf/micro/immediate-scheduler/observable/of.js",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Fof.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Fof.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Fof.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,25 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function of(suite) {\n+    \n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+\n+    var oldOfWithImmediateScheduler = RxOld.Observable.of.apply(null, args.concat(RxOld.Scheduler.immediate));\n+    var newOfWithImmediateScheduler = RxNew.Observable.of.apply(null, args);\n+\n+    // add tests\n+    return suite\n+        .add('old of with immediate scheduler', function () {\n+            oldOfWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new of with immediate scheduler', function () {\n+            newOfWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "e3e749d0eca798fc56c2475f16ddd51ecffa2625",
        "filename": "perf/micro/immediate-scheduler/observable/range.js",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Frange.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Frange.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Frange.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,20 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function range(suite) {\n+    // add tests\n+    \n+    var oldRangeWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate);\n+    var newRangeWithImmediateScheduler = RxNew.Observable.range(0, 25);\n+\n+    return suite\n+        .add('old range with immediate scheduler', function () {\n+            oldRangeWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new range with immediate scheduler', function () {\n+            newRangeWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "363698b3333cde5408fcb2cf7f55dec9d66da697",
        "filename": "perf/micro/immediate-scheduler/operators/combine-latest.js",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fcombine-latest.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fcombine-latest.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fcombine-latest.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldCombineLatestWithImmediateScheduler = RxOld.Observable.combineLatest(RxOld.Observable.range(0, 25), RxOld.Observable.range(0, 25), add);\n+    var newCombineLatestWithImmediateScheduler = RxNew.Observable.combineLatest(RxNew.Observable.range(0, 25), RxNew.Observable.range(0, 25), add);\n+\n+    return suite\n+        .add('old combineLatest with immediate scheduler', function () {\n+            oldCombineLatestWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new combineLatest with immediate scheduler', function () {\n+            newCombineLatestWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    \n+    function add(x, y) {\n+        return x + y;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "8277abb104a89a7c47d73d97f402096f3c5c5e91",
        "filename": "perf/micro/immediate-scheduler/operators/concat-many.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fconcat-many.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fconcat-many.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fconcat-many.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldConcatMapWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).concatMap(function (x) { return RxOld.Observable.range(x, 25, RxOld.Scheduler.immediate); });\n+    var newConcatMapWithImmediateScheduler = RxNew.Observable.range(0, 25).concatMap(function (x) { return RxNew.Observable.range(x, 25); });\n+\n+    return suite\n+        .add('old concatMap with immediate scheduler', function () {\n+            oldConcatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new concatMap with immediate scheduler', function () {\n+            newConcatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "489d10c2818422e5a825ca38c45ba84b50ec9984",
        "filename": "perf/micro/immediate-scheduler/operators/filter.js",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Ffilter.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Ffilter.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Ffilter.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,27 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldFilterWithImmediateScheduler = RxOld.Observable.range(0, 50, RxOld.Scheduler.immediate).filter(divByTwo).filter(divByTen);\n+    var newFilterWithImmediateScheduler = RxNew.Observable.range(0, 50).filter(divByTwo).filter(divByTen);\n+\n+    return suite\n+        .add('old filter with immediate scheduler', function () {\n+            oldFilterWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new filter with immediate scheduler', function () {\n+            newFilterWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function divByTwo(x) {\n+        return x / 2 === 0;\n+    }\n+\n+    function divByTen(x) {\n+        return x / 10 === 0;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};"
      },
      {
        "sha": "e963d42b527a43e65acf35adac0f671d71a7453b",
        "filename": "perf/micro/immediate-scheduler/operators/flat-map-observable-scalar.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-observable-scalar.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-observable-scalar.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-observable-scalar.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldFlatMapWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).flatMap(RxOld.Observable.return(0, RxOld.Scheduler.immediate));\n+    var newFlatMapWithImmediateScheduler = RxNew.Observable.range(0, 25).flatMapTo(RxNew.Observable.return(0));\n+\n+    return suite\n+        .add('old flatMap (scalar Observable) with immediate scheduler', function () {\n+            oldFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap (scalar Observable) with immediate scheduler', function () {\n+            newFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "df05008e2b6953257caf1fe56232cf4f4ea8870f",
        "filename": "perf/micro/immediate-scheduler/operators/flat-map-observable.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-observable.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-observable.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-observable.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldFlatMapWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).flatMap(RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate));\n+    var newFlatMapWithImmediateScheduler = RxNew.Observable.range(0, 25).flatMapTo(RxNew.Observable.range(0, 25));\n+\n+    return suite\n+        .add('old flatMap (Observable) with immediate scheduler', function () {\n+            oldFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap (Observable) with immediate scheduler', function () {\n+            newFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "fb12b252822231240d77805205ca87a404fa0335",
        "filename": "perf/micro/immediate-scheduler/operators/flat-map-scalar.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-scalar.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-scalar.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-scalar.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldFlatMapWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).flatMap(function (x) { return RxOld.Observable.return(x, RxOld.Scheduler.immediate); });\n+    var newFlatMapWithImmediateScheduler = RxNew.Observable.range(0, 25).flatMap(function (x) { return RxNew.Observable.return(x); });\n+\n+    return suite\n+        .add('old flatMap (scalar) with immediate scheduler', function () {\n+            oldFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap (scalar) with immediate scheduler', function () {\n+            newFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "8517b9da1a31073d86063f919a934bfc176a48c9",
        "filename": "perf/micro/immediate-scheduler/operators/flat-map.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldFlatMapWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).flatMap(function (x) { return RxOld.Observable.range(x, 25, RxOld.Scheduler.immediate); });\n+    var newFlatMapWithImmediateScheduler = RxNew.Observable.range(0, 25).flatMap(function (x) { return RxNew.Observable.range(x, 25); });\n+\n+    return suite\n+        .add('old flatMap with immediate scheduler', function () {\n+            oldFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap with immediate scheduler', function () {\n+            newFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "4eeab3c572729f945a298ad3250a6b652c771b2e",
        "filename": "perf/micro/immediate-scheduler/operators/map.js",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmap.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmap.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmap.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,27 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldSelectWithImmediateScheduler = RxOld.Observable.range(0, 50, RxOld.Scheduler.immediate).map(square).map(double);\n+    var newSelectWithImmediateScheduler = RxNew.Observable.range(0, 50).map(square).map(double);\n+\n+    return suite\n+        .add('old select with immediate scheduler', function () {\n+            oldSelectWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new select with immediate scheduler', function () {\n+            newSelectWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function square(x) {\n+        return x * x;\n+    }\n+\n+    function double(x) {\n+        return x + x;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "c0849dc94bf468813103650d1c8e2269c006e3f4",
        "filename": "perf/micro/immediate-scheduler/operators/merge-all.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmerge-all.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmerge-all.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmerge-all.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldMergeAllWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).map(RxOld.Observable.range(0, 25), RxOld.Scheduler.immediate).mergeAll();\n+    var newMergeAllWithImmediateScheduler = RxNew.Observable.range(0, 25).map(RxNew.Observable.range(0, 25)).mergeAll();\n+\n+    return suite\n+        .add('old mergeAll with immediate scheduler', function () {\n+            oldMergeAllWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new mergeAll with immediate scheduler', function () {\n+            newMergeAllWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "692304b22201c3942873fd628b5b56d55aa1c1d3",
        "filename": "perf/micro/immediate-scheduler/operators/merge.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmerge.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmerge.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmerge.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldMergeWithImmediateScheduler = RxOld.Observable.range(0, 250, RxOld.Scheduler.immediate).merge(RxOld.Observable.range(0, 250, RxOld.Scheduler.immediate));\n+    var newMergeWithImmediateScheduler = RxNew.Observable.range(0, 250).merge(RxNew.Observable.range(0, 250));\n+\n+    return suite\n+        .add('old merge (proto) with immediate scheduler', function () {\n+            oldMergeWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new merge (proto) with immediate scheduler', function () {\n+            newMergeWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "2d8aa8dc50b126686daef2bf26b9e20ce4cafc54",
        "filename": "perf/micro/immediate-scheduler/operators/reduce.js",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Freduce.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Freduce.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Freduce.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldReduceWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).reduce(add);\n+    var newReduceWithImmediateScheduler = RxNew.Observable.range(0, 25).reduce(add);\n+\n+    return suite\n+        .add('old reduce with immediate scheduler', function () {\n+            oldReduceWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new reduce with immediate scheduler', function () {\n+            newReduceWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function add(acc, x) {\n+        return x + x\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "5fe7a6c188ba4ca21c4d74758a34481a5cfbbeed",
        "filename": "perf/micro/immediate-scheduler/operators/scan.js",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fscan.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fscan.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fscan.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldScanWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).scan(add);\n+    var newScanWithImmediateScheduler = RxNew.Observable.range(0, 25).scan(add);\n+\n+    return suite\n+        .add('old scan with immediate scheduler', function () {\n+            oldScanWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new scan with immediate scheduler', function () {\n+            newScanWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function add(acc, x) {\n+        return x + x\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "ec93723d5e7f32b2d5b24e1f81d91fbce46913cc",
        "filename": "perf/micro/immediate-scheduler/operators/to-array.js",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fto-array.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fto-array.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fto-array.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldToArrayWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).toArray();\n+    var newToArrayWithImmediateScheduler = RxNew.Observable.range(0, 25).toArray();\n+\n+    return suite\n+        .add('old toArray with immediate scheduler', function () {\n+            oldToArrayWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new toArray with immediate scheduler', function () {\n+            newToArrayWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "b59bae7ad6c4e0a76d7e3ff2c57c5fc2cd650a1b",
        "filename": "perf/micro/immediate-scheduler/operators/zip.js",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fzip.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fzip.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fzip.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldZipWithImmediateScheduler = RxOld.Observable.zip(RxOld.Observable.range(0, 25), RxOld.Observable.range(0, 25), add);\n+    var newZipWithImmediateScheduler = RxNew.Observable.zip(RxNew.Observable.range(0, 25), RxNew.Observable.range(0, 25), add);\n+\n+    return suite\n+        .add('old zip with immediate scheduler', function () {\n+            oldZipWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new zip with immediate scheduler', function () {\n+            newZipWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    \n+    function add(x, y) {\n+        return x + y;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"
      },
      {
        "sha": "db55024c40e1d4632bf79bdfc3c0cc2cde95fda0",
        "filename": "perf/micro/index.js",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Findex.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Findex.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Findex.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,79 @@\n+var Rx = require(\"rx\");\n+var colors = require(\"colors\");\n+var Observable = Rx.Observable;\n+var Benchmark = require(\"benchmark\");\n+var suite = new Benchmark.Suite;\n+\n+Observable.from([\n+        require(\"./immediate-scheduler/observable/from-array\"),\n+        require(\"./immediate-scheduler/observable/from-with-array\"),\n+        require(\"./immediate-scheduler/observable/from-with-string\"),\n+        require(\"./immediate-scheduler/observable/of\"),\n+        require(\"./immediate-scheduler/observable/range\"),\n+\n+        require(\"./immediate-scheduler/operators/combine-latest\"),\n+        require(\"./immediate-scheduler/operators/concat-many\"),\n+        require(\"./immediate-scheduler/operators/filter\"),\n+        require(\"./immediate-scheduler/operators/merge\"),\n+        require(\"./immediate-scheduler/operators/reduce\"),\n+\n+        require(\"./immediate-scheduler/operators/flat-map\"),\n+        require(\"./immediate-scheduler/operators/flat-map-scalar\"),\n+        require(\"./immediate-scheduler/operators/flat-map-observable\"),\n+        require(\"./immediate-scheduler/operators/flat-map-observable-scalar\"),\n+\n+        require(\"./immediate-scheduler/operators/map\"),\n+        require(\"./immediate-scheduler/operators/scan\"),\n+        require(\"./immediate-scheduler/operators/to-array\"),\n+        require(\"./immediate-scheduler/operators/zip\"),\n+\n+        require(\"./current-thread-scheduler/observable/from-array\"),\n+        require(\"./current-thread-scheduler/observable/from-with-array\"),\n+        require(\"./current-thread-scheduler/observable/from-with-string\"),\n+        require(\"./current-thread-scheduler/observable/of\"),\n+        require(\"./current-thread-scheduler/observable/range\"),\n+\n+        require(\"./current-thread-scheduler/operators/combine-latest\"),\n+        require(\"./current-thread-scheduler/operators/concat-many\"),\n+        require(\"./current-thread-scheduler/operators/filter\"),\n+        require(\"./current-thread-scheduler/operators/merge\"),\n+        require(\"./current-thread-scheduler/operators/reduce\"),\n+\n+        require(\"./current-thread-scheduler/operators/flat-map\"),\n+        require(\"./current-thread-scheduler/operators/flat-map-scalar\"),\n+        require(\"./current-thread-scheduler/operators/flat-map-observable\"),\n+        require(\"./current-thread-scheduler/operators/flat-map-observable-scalar\"),\n+\n+        require(\"./current-thread-scheduler/operators/map\"),\n+        require(\"./current-thread-scheduler/operators/scan\"),\n+        require(\"./current-thread-scheduler/operators/to-array\"),\n+        require(\"./current-thread-scheduler/operators/zip\"),\n+\n+    ])\n+    .concatMap(function (test) {\n+        var tests = test(new Benchmark.Suite());\n+        return Observable.defer(function () {\n+\n+            var cycles = new Rx.ReplaySubject();\n+            var complete = new Rx.ReplaySubject();\n+\n+            tests.on(\"cycle\", function (e) {\n+                cycles.onNext(String(e.target));\n+            }).on(\"complete\", function () {\n+                var fastest = this.filter(\"fastest\");\n+                var fastestName = String(fastest.pluck(\"name\"));\n+                var fastestTime = parseFloat(this.filter(\"fastest\").pluck(\"hz\"));\n+                var slowestTime = parseFloat(this.filter(\"slowest\").pluck(\"hz\"));\n+                \n+                // percent change formula: ((V2 - V1) / |V1|) * 100\n+                if(fastestName.substr(0, 3) === \"new\") {\n+                    complete.onNext(\"\\t\" + (Math.round((fastestTime - slowestTime) / slowestTime * 10000) / 100) + \"% \" + \"faster\".green +\" than Rx2\\n\");\n+                } else {\n+                    complete.onNext(\"\\t\" + (Math.round((slowestTime - fastestTime) / fastestTime * 10000) / 100) + \"% \" + \"slower\".red + \" than Rx2\\n\");\n+                }\n+            }).run({ \"async\": true });\n+\n+            return cycles.merge(complete).take(tests.length + 1);\n+        });\n+    })\n+    .subscribe(console.log.bind(console));"
      },
      {
        "sha": "94fc57a3da63f44f4cde57783b9c87a360240cee",
        "filename": "protractor.conf.js",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/protractor.conf.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/protractor.conf.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/protractor.conf.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -17,7 +17,7 @@ exports.config = {\n     }\n   },\n \n-  specs: ['perf/**/*.spec.js'],\n+  specs: ['perf/macro/**/*.spec.js'],\n   framework: 'jasmine2',\n \n   beforeLaunch: function () {"
      },
      {
        "sha": "1357038a6ab9e2fb63cb8eb18ceb8bd57a8bef6d",
        "filename": "spec/observables/from-spec.js",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/spec%2Fobservables%2Ffrom-spec.js",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/spec%2Fobservables%2Ffrom-spec.js",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Ffrom-spec.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -0,0 +1,13 @@\n+/* globals describe, it, expect */\n+var Rx = require('../../dist/cjs/Rx');\n+var Observable = Rx.Observable;\n+\n+describe('Observable.from', function () {\n+  it('should enumerate an Array', function (done) {\n+    var expected = [1, 2, 3];\n+    var i = 0;\n+    Observable.from(expected).subscribe(function (x) {\n+        expect(x).toBe(expected[i++])\n+      }, null, done);\n+  }, 300);\n+});\n\\ No newline at end of file"
      },
      {
        "sha": "82b22a947c0f42c846b83f060e2931616a6bfbfc",
        "filename": "src/Scheduler.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/src%2FScheduler.ts",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/src%2FScheduler.ts",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/src%2FScheduler.ts?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -74,7 +74,7 @@ export class Action<T> extends Subscription<T> {\n     if (this.isUnsubscribed) {\n       throw new Error(\"How did did we execute a canceled Action?\");\n     }\n-    this.add(this.work(this.state));\n+    this.work(this.state);\n   }\n \n   unsubscribe() {"
      },
      {
        "sha": "31bb3aa49d5c2813d283b70123076ad69e311074",
        "filename": "src/observables/IteratorObservable.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/src%2Fobservables%2FIteratorObservable.ts",
        "raw_url": "https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/src%2Fobservables%2FIteratorObservable.ts",
        "contents_url": "https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservables%2FIteratorObservable.ts?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926",
        "patch": "@@ -70,7 +70,7 @@ export default class IteratorObservable<T> extends Observable<T> {\n     let index = 0;\n     const project = this.project;\n     const thisArg = this.thisArg;\n-    const iterator = this.iterator;\n+    const iterator = getIterator(Object(this.iterator));\n     const scheduler = this.scheduler;\n \n     if (scheduler) {"
      }
    ]
  }
]
