[{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5607","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5607/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5607/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5607/events","html_url":"https://github.com/ReactiveX/rxjs/pull/5607","id":665868053,"node_id":"MDExOlB1bGxSZXF1ZXN0NDU2ODExNDE2","number":5607,"title":"feat(TestScheduler): add an animate \"run mode\" helper","user":{"login":"cartant","id":3878593,"node_id":"MDQ6VXNlcjM4Nzg1OTM=","avatar_url":"https://avatars.githubusercontent.com/u/3878593?v=4","gravatar_id":"","url":"https://api.github.com/users/cartant","html_url":"https://github.com/cartant","followers_url":"https://api.github.com/users/cartant/followers","following_url":"https://api.github.com/users/cartant/following{/other_user}","gists_url":"https://api.github.com/users/cartant/gists{/gist_id}","starred_url":"https://api.github.com/users/cartant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cartant/subscriptions","organizations_url":"https://api.github.com/users/cartant/orgs","repos_url":"https://api.github.com/users/cartant/repos","events_url":"https://api.github.com/users/cartant/events{/privacy}","received_events_url":"https://api.github.com/users/cartant/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-07-26T22:00:50Z","updated_at":"2020-09-24T07:10:33Z","closed_at":"2020-07-31T17:05:43Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/5607","html_url":"https://github.com/ReactiveX/rxjs/pull/5607","diff_url":"https://github.com/ReactiveX/rxjs/pull/5607.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/5607.patch","merged_at":"2020-07-31T17:05:43Z"},"body":"<!--\r\nThank you very much for your pull request!\r\n\r\nIf your PR is the addition of a new operator, please make sure all these boxes are ticked with an x:\r\n\r\n- [ ] Add the operator to Rx\r\n- [ ] It must have a `-spec.ts` tests file covering the canonical corner cases, with marble diagram tests\r\n- [ ] The spec file should have a type definition test at the end of the spec to verify type definition for various use cases\r\n- [ ] The operator must be documented in JSDoc style in the implementation file, including also the PNG marble diagram image\r\n- [ ] The operator should be listed in `docs_app/content/guide/operators.md` in a category of operators\r\n- [ ] The operator should also be documented. See [Documentation Guidelines](../CONTRIBUTING.md).\r\n- [ ] You may need to update `MIGRATION.md` if the operator differs from the corresponding one in RxJS v4\r\n-->\r\n\r\n**Description:**\r\n\r\nThis PR:\r\n\r\n* Adds a `Date` timestamp provider.\r\n* Adds a `performance` timestamp provider.\r\n* Adds a `requestAnimationFrame` provider.\r\n* All providers have `delegate` properties that are `undefined` by default but are used - by `TestScheduler#run` - to override the default behaviour. This mirrors the `delegate` implementation detail that's used with the schedulers.\r\n* Removes the arrow function from the static `Scheduler.now` - it's unnecessary, as the `Date.now` call now occurs within the `dateTimestampProvider`.\r\n* The `animationFrames` observable now uses the `requestAnimationFramesProvider`.\r\n* `TestScheduler#run` sets the delegates for the providers, with the `requestAnimationFramesProvider`'s delegate working in conjunction with a `animate()` marble that's added to the run helpers:\r\n\r\n    ```ts\r\n    testScheduler.run(({ animate }) => {\r\n      animate('---x---x---x---x---x');\r\n      /* ... */\r\n    });\r\n    ```\r\n\r\n    Each time an animation/repaint occurs, all queued `rAF` callbacks will be executed - in the order in which they were scheduled - and each will be passed the same timestamp - the `TestScheduler`'s `now` value - which is also what will be returned from the timestamp providers - as the `TestScheduler` itself is the delegate.\r\n\r\n* Adds tests for the `animate` `run` helper.\r\n* Updates API guardian for the inclusion of the `animate` `run` helper.\r\n* Reimplements the `animationFrames` tests to use the `run` helper and the provider - which is spied upon - and removes the `rAF` mock.\r\n* Fixes the `rAF` provider so that cancellation of already fulfilled requests (upon unsubscription) is not attempted.\r\n\r\n**Related issue (if exists):** #5438 and #5475\r\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5607/reactions","total_count":6,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":2,"rocket":1,"eyes":2},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5607/timeline","performed_via_github_app":null,"state_reason":null,"score":1,"files":[{"sha":"3573895cf4fa1cf5c739861a1b10355f4cd789d5","filename":"api_guard/dist/types/testing/index.d.ts","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/api_guard%2Fdist%2Ftypes%2Ftesting%2Findex.d.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/api_guard%2Fdist%2Ftypes%2Ftesting%2Findex.d.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/api_guard%2Fdist%2Ftypes%2Ftesting%2Findex.d.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -1,4 +1,5 @@\n export interface RunHelpers {\n+    animate: (marbles: string) => void;\n     cold: typeof TestScheduler.prototype.createColdObservable;\n     expectObservable: typeof TestScheduler.prototype.expectObservable;\n     expectSubscriptions: typeof TestScheduler.prototype.expectSubscriptions;"},{"sha":"83cc6f45c77f4eed42095cb74382cb6a51f47840","filename":"docs_app/content/guide/testing/marble-testing.md","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/docs_app%2Fcontent%2Fguide%2Ftesting%2Fmarble-testing.md","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/docs_app%2Fcontent%2Fguide%2Ftesting%2Fmarble-testing.md","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/docs_app%2Fcontent%2Fguide%2Ftesting%2Fmarble-testing.md?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -56,6 +56,17 @@ Although `run()` executes entirely synchronously, the helper functions inside yo\n - `expectObservable(actual: Observable<T>, subscriptionMarbles?: string).toBe(marbleDiagram: string, values?: object, error?: any)` - schedules an assertion for when the TestScheduler flushes. Give `subscriptionMarbles` as parameter to change the schedule of subscription and unsubscription. If you don't provide the `subscriptionMarbles` parameter it will subscribe at the beginning and never unsubscribe. Read below about subscription marble diagram.\n - `expectSubscriptions(actualSubscriptionLogs: SubscriptionLog[]).toBe(subscriptionMarbles: string)` - like `expectObservable` schedules an assertion for when the testScheduler flushes. Both `cold()` and `hot()` return an observable with a property `subscriptions` of type `SubscriptionLog[]`. Give `subscriptions` as parameter to `expectSubscriptions` to assert whether it matches the `subscriptionsMarbles` marble diagram given in `toBe()`. Subscription marble diagrams are slightly different than Observable marble diagrams. Read more below.\n - `flush()` - immediately starts virtual time. Not often used since `run()` will automatically flush for you when your callback returns, but in some cases you may wish to flush more than once or otherwise have more control.\n+- `animate()` - specifies when requested animation frames will be 'painted'. `animate` accepts a marble diagram and each value emission in the diagram indicates when a 'paint' occurs - at which time, any queued `requestAnimationFrame` callbacks will be executed. Call `animate` at the beginning of your test and align the marble diagrams so that it's clear when the callbacks will be executed:\n+\n+    ```ts\n+    testScheduler.run(helpers => {\n+      const { animate, cold } = helpers;\n+      animate('              ---x---x---x---x');\n+      const requests = cold('-r-------r------')\n+      /* ... */\n+      const expected = '     ---a-------b----';\n+    });\n+    ```\n \n ## Marble syntax\n "},{"sha":"f8598aa375357c51ae8b45e455683bbd9384fd5d","filename":"spec/helpers/test-helper.ts","status":"modified","additions":0,"deletions":102,"changes":102,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/spec%2Fhelpers%2Ftest-helper.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/spec%2Fhelpers%2Ftest-helper.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fhelpers%2Ftest-helper.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -1,7 +1,6 @@\n import { of, asyncScheduler, Observable, scheduled, ObservableInput } from 'rxjs';\n import { observable } from 'rxjs/internal/symbol/observable';\n import { iterator } from 'rxjs/internal/symbol/iterator';\n-import * as sinon from 'sinon';\n import { expect } from 'chai';\n \n if (process && process.on) {\n@@ -72,104 +71,3 @@ export const NO_SUBS: string[] = [];\n export function assertDeepEquals (actual: any, expected: any) {\n   expect(actual).to.deep.equal(expected);\n }\n-\n-let _raf: any;\n-let _caf: any;\n-let _id = 0;\n-\n-/**\n- * A type used to test `requestAnimationFrame`\n- */\n-export interface RAFTestTools {\n-  /**\n-   * Synchronously fire the next scheduled animation frame\n-   */\n-  tick(): void;\n-\n-  /**\n-   * Synchronously fire all scheduled animation frames\n-   */\n-  flush(): void;\n-\n-  /**\n-   * Un-monkey-patch `requestAnimationFrame` and `cancelAnimationFrame`\n-   */\n-  restore(): void;\n-}\n-\n-/**\n- * Monkey patches `requestAnimationFrame` and `cancelAnimationFrame`, returning a\n- * toolset to allow animation frames to be synchronously controlled.\n- *\n- * ### Usage\n- * ```ts\n- * let raf: RAFTestTools;\n- *\n- * beforeEach(() => {\n- *   // patch requestAnimationFrame\n- *   raf = stubRAF();\n- * });\n- *\n- * afterEach(() => {\n- *   // unpatch\n- *   raf.restore();\n- * });\n- *\n- * it('should fire handlers', () => {\n- *   let test = false;\n- *   // use requestAnimationFrame as normal\n- *   requestAnimationFrame(() => test = true);\n- *   // no frame has fired yet (this would be generally true anyhow)\n- *   expect(test).to.equal(false);\n- *   // manually fire the next animation frame\n- *   raf.tick();\n- *   // frame as fired\n- *   expect(test).to.equal(true);\n- *   // raf is now a SinonStub that can be asserted against\n- *   expect(requestAnimationFrame).to.have.been.calledOnce;\n- * });\n- * ```\n- */\n-export function stubRAF(): RAFTestTools {\n-  _raf = requestAnimationFrame;\n-  _caf = cancelAnimationFrame;\n-\n-  const handlers: any[] = [];\n-\n-  (requestAnimationFrame as any) = sinon.stub().callsFake((handler: Function) => {\n-    const id = _id++;\n-    handlers.push({ id, handler });\n-    return id;\n-  });\n-\n-  (cancelAnimationFrame as any) = sinon.stub().callsFake((id: number) => {\n-    const index = handlers.findIndex(x => x.id === id);\n-    if (index >= 0) {\n-      handlers.splice(index, 1);\n-    }\n-  });\n-\n-  function tick() {\n-    if (handlers.length > 0) {\n-      handlers.shift().handler();\n-    }\n-  }\n-\n-  function flush() {\n-    while (handlers.length > 0) {\n-      handlers.shift().handler();\n-    }\n-  }\n-\n-  return {\n-    tick,\n-    flush,\n-    restore() {\n-      (requestAnimationFrame as any) = _raf;\n-      (cancelAnimationFrame as any) = _caf;\n-      _raf = _caf = undefined;\n-      handlers.length = 0;\n-      _id = 0;\n-    }\n-  };\n-}\n\\ No newline at end of file"},{"sha":"a6a6d78942318f64d0cea0f24944989fe153ae3a","filename":"spec/observables/dom/animationFrames-spec.ts","status":"modified","additions":84,"deletions":138,"changes":222,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/spec%2Fobservables%2Fdom%2FanimationFrames-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/spec%2Fobservables%2Fdom%2FanimationFrames-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fdom%2FanimationFrames-spec.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -1,166 +1,112 @@\n+/** @prettier */\n import { expect } from 'chai';\n-import { animationFrames, Subject } from 'rxjs';\n import * as sinon from 'sinon';\n-import { take, takeUntil } from 'rxjs/operators';\n-import { RAFTestTools, stubRAF } from '../../helpers/test-helper';\n+import { animationFrames } from 'rxjs';\n+import { mergeMapTo, take, takeUntil } from 'rxjs/operators';\n+import { TestScheduler } from 'rxjs/testing';\n+import { observableMatcher } from '../../helpers/observableMatcher';\n+import { requestAnimationFrameProvider } from 'rxjs/internal/scheduler/requestAnimationFrameProvider';\n \n-describe('animationFrame', () => {\n-  let raf: RAFTestTools;\n-  let DateStub: sinon.SinonStub;\n-  let now = 1000;\n+describe('animationFrames', () => {\n+  let testScheduler: TestScheduler;\n \n   beforeEach(() => {\n-    raf = stubRAF();\n-    DateStub = sinon.stub(Date, 'now').callsFake(() => {\n-      return ++now;\n-    });\n-  });\n-\n-  afterEach(() => {\n-    raf.restore();\n-    DateStub.restore();\n+    testScheduler = new TestScheduler(observableMatcher);\n   });\n \n   it('should animate', function () {\n-    const results: any[] = [];\n-    const source$ = animationFrames();\n-\n-    const subs = source$.subscribe({\n-      next: ts => results.push(ts),\n-      error: err => results.push(err),\n-      complete: () => results.push('done'),\n+    testScheduler.run(({ animate, cold, expectObservable, time }) => {\n+      animate('            ---x---x---x');\n+      const mapped = cold('-m          ');\n+      const tm = time('    -|          ');\n+      const ta = time('    ---|        ');\n+      const tb = time('    -------|    ');\n+      const tc = time('    -----------|');\n+      const expected = '   ---a---b---c';\n+      const subs = '       ^----------!';\n+\n+      const result = mapped.pipe(mergeMapTo(animationFrames()));\n+      expectObservable(result, subs).toBe(expected, {\n+        a: ta - tm,\n+        b: tb - tm,\n+        c: tc - tm,\n+      });\n     });\n-\n-    expect(DateStub).to.have.been.calledOnce;\n-\n-    expect(results).to.deep.equal([]);\n-\n-    raf.tick();\n-    expect(DateStub).to.have.been.calledTwice;\n-    expect(results).to.deep.equal([1]);\n-\n-    raf.tick();\n-    expect(DateStub).to.have.been.calledThrice;\n-    expect(results).to.deep.equal([1, 2]);\n-\n-    raf.tick();\n-    expect(results).to.deep.equal([1, 2, 3]);\n-\n-    // Stop the animation loop\n-    subs.unsubscribe();\n   });\n \n   it('should use any passed timestampProvider', () => {\n-    const results: any[] = [];\n     let i = 0;\n     const timestampProvider = {\n       now: sinon.stub().callsFake(() => {\n-        return [100, 200, 210, 300][i++];\n-      })\n+        return [50, 100, 200, 300][i++];\n+      }),\n     };\n \n-    const source$ = animationFrames(timestampProvider);\n-\n-    const subs = source$.subscribe({\n-      next: ts => results.push(ts),\n-      error: err => results.push(err),\n-      complete: () => results.push('done'),\n+    testScheduler.run(({ animate, cold, expectObservable }) => {\n+      animate('            ---x---x---x');\n+      const mapped = cold('-m          ');\n+      const expected = '   ---a---b---c';\n+      const subs = '       ^----------!';\n+\n+      const result = mapped.pipe(mergeMapTo(animationFrames(timestampProvider)));\n+      expectObservable(result, subs).toBe(expected, {\n+        a: 50,\n+        b: 150,\n+        c: 250,\n+      });\n     });\n-\n-    expect(DateStub).not.to.have.been.called;\n-    expect(timestampProvider.now).to.have.been.calledOnce;\n-    expect(results).to.deep.equal([]);\n-\n-    raf.tick();\n-    expect(DateStub).not.to.have.been.called;\n-    expect(timestampProvider.now).to.have.been.calledTwice;\n-    expect(results).to.deep.equal([100]);\n-\n-    raf.tick();\n-    expect(DateStub).not.to.have.been.called;\n-    expect(timestampProvider.now).to.have.been.calledThrice;\n-    expect(results).to.deep.equal([100, 110]);\n-\n-    raf.tick();\n-    expect(results).to.deep.equal([100, 110, 200]);\n-\n-    // Stop the animation loop\n-    subs.unsubscribe();\n   });\n \n   it('should compose with take', () => {\n-    const results: any[] = [];\n-    const source$ = animationFrames();\n-    expect(requestAnimationFrame).not.to.have.been.called;\n-\n-    source$.pipe(\n-      take(2),\n-    ).subscribe({\n-      next: ts => results.push(ts),\n-      error: err => results.push(err),\n-      complete: () => results.push('done'),\n+    testScheduler.run(({ animate, cold, expectObservable, time }) => {\n+      const requestSpy = sinon.spy(requestAnimationFrameProvider.delegate!, 'requestAnimationFrame');\n+      const cancelSpy = sinon.spy(requestAnimationFrameProvider.delegate!, 'cancelAnimationFrame');\n+\n+      animate('            ---x---x---x');\n+      const mapped = cold('-m          ');\n+      const tm = time('    -|          ');\n+      const ta = time('    ---|        ');\n+      const tb = time('    -------|    ');\n+      const expected = '   ---a---b    ';\n+\n+      const result = mapped.pipe(mergeMapTo(animationFrames().pipe(take(2))));\n+      expectObservable(result).toBe(expected, {\n+        a: ta - tm,\n+        b: tb - tm,\n+      });\n+\n+      testScheduler.flush();\n+      // Requests are made at times tm and ta\n+      expect(requestSpy.callCount).to.equal(2);\n+      // No request cancellation is effected, as unsubscription occurs before rescheduling\n+      expect(cancelSpy.callCount).to.equal(0);\n     });\n-\n-    expect(DateStub).to.have.been.calledOnce;\n-    expect(requestAnimationFrame).to.have.been.calledOnce;\n-\n-    expect(results).to.deep.equal([]);\n-\n-    raf.tick();\n-    expect(DateStub).to.have.been.calledTwice;\n-    expect(requestAnimationFrame).to.have.been.calledTwice;\n-    expect(results).to.deep.equal([1]);\n-\n-    raf.tick();\n-    expect(DateStub).to.have.been.calledThrice;\n-    // It shouldn't reschedule, because there are no more subscribers\n-    // for the animation loop.\n-    expect(requestAnimationFrame).to.have.been.calledTwice;\n-    expect(results).to.deep.equal([1, 2, 'done']);\n-\n-    // Since there should be no more subscribers listening on the loop\n-    // the latest animation frame should be cancelled.\n-    expect(cancelAnimationFrame).to.have.been.calledOnce;\n   });\n \n   it('should compose with takeUntil', () => {\n-    const subject = new Subject<void>();\n-    const results: any[] = [];\n-    const source$ = animationFrames();\n-    expect(requestAnimationFrame).not.to.have.been.called;\n-\n-    source$.pipe(\n-      takeUntil(subject),\n-    ).subscribe({\n-      next: ts => results.push(ts),\n-      error: err => results.push(err),\n-      complete: () => results.push('done'),\n+    testScheduler.run(({ animate, cold, expectObservable, hot, time }) => {\n+      const requestSpy = sinon.spy(requestAnimationFrameProvider.delegate!, 'requestAnimationFrame');\n+      const cancelSpy = sinon.spy(requestAnimationFrameProvider.delegate!, 'cancelAnimationFrame');\n+\n+      animate('            ---x---x---x');\n+      const mapped = cold('-m          ');\n+      const tm = time('    -|          ');\n+      const ta = time('    ---|        ');\n+      const tb = time('    -------|    ');\n+      const signal = hot(' ^--------s--');\n+      const expected = '   ---a---b    ';\n+\n+      const result = mapped.pipe(mergeMapTo(animationFrames().pipe(takeUntil(signal))));\n+      expectObservable(result).toBe(expected, {\n+        a: ta - tm,\n+        b: tb - tm,\n+      });\n+\n+      testScheduler.flush();\n+      // Requests are made at times tm and ta and tb\n+      expect(requestSpy.callCount).to.equal(3);\n+      // Unsubscription effects request cancellation when signalled\n+      expect(cancelSpy.callCount).to.equal(1);\n     });\n-\n-    expect(DateStub).to.have.been.calledOnce;\n-    expect(requestAnimationFrame).to.have.been.calledOnce;\n-\n-    expect(results).to.deep.equal([]);\n-\n-    raf.tick();\n-    expect(DateStub).to.have.been.calledTwice;\n-    expect(requestAnimationFrame).to.have.been.calledTwice;\n-    expect(results).to.deep.equal([1]);\n-\n-    raf.tick();\n-    expect(DateStub).to.have.been.calledThrice;\n-    expect(requestAnimationFrame).to.have.been.calledThrice;\n-    expect(results).to.deep.equal([1, 2]);\n-    expect(cancelAnimationFrame).not.to.have.been.called;\n-\n-    // Complete the observable via `takeUntil`.\n-    subject.next();\n-    expect(cancelAnimationFrame).to.have.been.calledOnce;\n-    expect(results).to.deep.equal([1, 2, 'done']);\n-\n-    raf.tick();\n-    expect(DateStub).to.have.been.calledThrice;\n-    expect(requestAnimationFrame).to.have.been.calledThrice;\n-    expect(results).to.deep.equal([1, 2, 'done']);\n   });\n });"},{"sha":"b523637a483b031be8d040dda5c17e93dbcfa8f6","filename":"spec/operators/timeoutWith-spec.ts","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/spec%2Foperators%2FtimeoutWith-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/spec%2Foperators%2FtimeoutWith-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FtimeoutWith-spec.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -1,4 +1,5 @@\n import { hot, cold, expectObservable, expectSubscriptions } from '../helpers/marble-testing';\n+import { dateTimestampProvider } from '../../src/internal/scheduler/dateTimestampProvider';\n import { timeoutWith, mergeMap } from 'rxjs/operators';\n import { TestScheduler } from 'rxjs/testing';\n import { of } from 'rxjs';\n@@ -226,7 +227,7 @@ describe('timeoutWith operator', () => {\n     const e2subs: string[] = [];\n     const expected = '--a--b--c--d--e--|';\n \n-    const timeoutValue = new Date(Date.now() + (expected.length + 2) * 10);\n+    const timeoutValue = new Date(dateTimestampProvider.now() + (expected.length + 2) * 10);\n \n     const result = e1.pipe(timeoutWith(timeoutValue, e2, rxTestScheduler));\n \n@@ -242,7 +243,7 @@ describe('timeoutWith operator', () => {\n     const e2subs: string[] = [];\n     const expected = '---a---#';\n \n-    const result = e1.pipe(timeoutWith(new Date(Date.now() + 100), e2, rxTestScheduler));\n+    const result = e1.pipe(timeoutWith(new Date(dateTimestampProvider.now() + 100), e2, rxTestScheduler));\n \n     expectObservable(result).toBe(expected);\n     expectSubscriptions(e1.subscriptions).toBe(e1subs);"},{"sha":"cd669b863ddf2b773a3247612078e05204e25870","filename":"spec/schedulers/TestScheduler-spec.ts","status":"modified","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/spec%2Fschedulers%2FTestScheduler-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/spec%2Fschedulers%2FTestScheduler-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fschedulers%2FTestScheduler-spec.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -5,6 +5,7 @@ import { TestScheduler } from 'rxjs/testing';\n import { Observable, NEVER, EMPTY, Subject, of, merge } from 'rxjs';\n import { delay, debounceTime, concatMap } from 'rxjs/operators';\n import { nextNotification, COMPLETE_NOTIFICATION, errorNotification } from 'rxjs/internal/Notification';\n+import { requestAnimationFrameProvider } from 'rxjs/internal/scheduler/requestAnimationFrameProvider';\n \n declare const rxTestScheduler: TestScheduler;\n \n@@ -499,5 +500,97 @@ describe('TestScheduler', () => {\n         });\n       }).to.throw();\n     });\n+\n+    describe('animate', () => {\n+      it('should throw if animate() is not called when needed', () => {\n+        const testScheduler = new TestScheduler(assertDeepEquals);\n+        expect(() => testScheduler.run(() => {\n+          requestAnimationFrameProvider.schedule(() => { /* pointless lint rule */ });\n+        })).to.throw();\n+      });\n+\n+      it('should throw if animate() is called more than once', () => {\n+        const testScheduler = new TestScheduler(assertDeepEquals);\n+        expect(() => testScheduler.run(({ animate }) => {\n+          animate('--x');\n+          animate('--x');\n+        })).to.throw();\n+      });\n+\n+      it('should throw if animate() completes', () => {\n+        const testScheduler = new TestScheduler(assertDeepEquals);\n+        expect(() => testScheduler.run(({ animate }) => {\n+          animate('--|');\n+        })).to.throw();\n+      });\n+\n+      it('should throw if animate() errors', () => {\n+        const testScheduler = new TestScheduler(assertDeepEquals);\n+        expect(() => testScheduler.run(({ animate }) => {\n+          animate('--#');\n+        })).to.throw();\n+      });\n+\n+      it('should schedule async requests within animate()', () => {\n+        const testScheduler = new TestScheduler(assertDeepEquals);\n+        testScheduler.run(({ animate }) => {\n+          animate('--x');\n+\n+          const values: string[] = [];\n+          const { schedule } = requestAnimationFrameProvider;\n+\n+          testScheduler.schedule(() => {\n+            schedule(t => values.push(`a@${t}`));\n+            expect(values).to.deep.equal([]);\n+          }, 0);\n+          testScheduler.schedule(() => {\n+            schedule(t => values.push(`b@${t}`));\n+            expect(values).to.deep.equal([]);\n+          }, 1);\n+          testScheduler.schedule(() => {\n+            expect(values).to.deep.equal(['a@2', 'b@2']);\n+          }, 2);\n+        });\n+      });\n+\n+      it('should schedule sync requests within animate()', () => {\n+        const testScheduler = new TestScheduler(assertDeepEquals);\n+        testScheduler.run(({ animate }) => {\n+          animate('--x');\n+\n+          const values: string[] = [];\n+          const { schedule } = requestAnimationFrameProvider;\n+\n+          testScheduler.schedule(() => {\n+            schedule(t => values.push(`a@${t}`));\n+            schedule(t => values.push(`b@${t}`));\n+            expect(values).to.deep.equal([]);\n+          }, 1);\n+          testScheduler.schedule(() => {\n+            expect(values).to.deep.equal(['a@2', 'b@2']);\n+          }, 2);\n+        });\n+      });\n+\n+      it('should support request cancellation within animate()', () => {\n+        const testScheduler = new TestScheduler(assertDeepEquals);\n+        testScheduler.run(({ animate }) => {\n+          animate('--x');\n+\n+          const values: string[] = [];\n+          const { schedule } = requestAnimationFrameProvider;\n+\n+          testScheduler.schedule(() => {\n+            const subscription = schedule(t => values.push(`a@${t}`));\n+            schedule(t => values.push(`b@${t}`));\n+            subscription.unsubscribe();\n+            expect(values).to.deep.equal([]);\n+          }, 1);\n+          testScheduler.schedule(() => {\n+            expect(values).to.deep.equal(['b@2']);\n+          }, 2);\n+        });\n+      });\n+    });\n   });\n });"},{"sha":"63f35c3fc7af64972431725f254be7207d72f15c","filename":"src/internal/ReplaySubject.ts","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2FReplaySubject.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2FReplaySubject.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Finternal%2FReplaySubject.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -4,6 +4,7 @@ import { Subscriber } from './Subscriber';\n import { Subscription } from './Subscription';\n import { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n import { SubjectSubscription } from './SubjectSubscription';\n+import { dateTimestampProvider } from \"./scheduler/dateTimestampProvider\";\n \n /**\n  * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n@@ -49,7 +50,7 @@ export class ReplaySubject<T> extends Subject<T> {\n    */\n   constructor(bufferSize: number = Infinity,\n               windowTime: number = Infinity,\n-              private timestampProvider: TimestampProvider = Date) {\n+              private timestampProvider: TimestampProvider = dateTimestampProvider) {\n     super();\n     this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n     this._windowTime = windowTime < 1 ? 1 : windowTime;\n@@ -120,7 +121,7 @@ export class ReplaySubject<T> extends Subject<T> {\n \n   private _getNow(): number {\n     const { timestampProvider: scheduler } = this;\n-    return scheduler ? scheduler.now() : Date.now();\n+    return scheduler ? scheduler.now() : dateTimestampProvider.now();\n   }\n \n   private _trimBufferThenGetEvents(): ReplayEvent<T>[] {"},{"sha":"c4fb41971d78b05a968e0d57c17d6fff23a8cf92","filename":"src/internal/Scheduler.ts","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2FScheduler.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2FScheduler.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Finternal%2FScheduler.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -1,6 +1,7 @@\n import { Action } from './scheduler/Action';\n import { Subscription } from './Subscription';\n import { SchedulerLike, SchedulerAction } from './types';\n+import { dateTimestampProvider } from \"./scheduler/dateTimestampProvider\";\n \n /**\n  * An execution context and a data structure to order tasks and schedule their\n@@ -23,12 +24,7 @@ import { SchedulerLike, SchedulerAction } from './types';\n  */\n export class Scheduler implements SchedulerLike {\n \n-  /**\n-   * Note: the extra arrow function wrapper is to make testing by overriding\n-   * Date.now easier.\n-   * @nocollapse\n-   */\n-  public static now: () => number = () => Date.now();\n+  public static now: () => number = dateTimestampProvider.now;\n \n   constructor(private SchedulerAction: typeof Action,\n               now: () => number = Scheduler.now) {"},{"sha":"ea45d25d151d913c1a6fc02449c515705f6d0302","filename":"src/internal/observable/dom/animationFrames.ts","status":"modified","additions":14,"deletions":12,"changes":26,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2Fobservable%2Fdom%2FanimationFrames.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2Fobservable%2Fdom%2FanimationFrames.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Finternal%2Fobservable%2Fdom%2FanimationFrames.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -1,9 +1,8 @@\n import { Observable } from '../../Observable';\n-\n-// TODO: move to types.ts\n-export interface TimestampProvider {\n-  now(): number;\n-}\n+import { Subscription } from '../../Subscription';\n+import { TimestampProvider } from \"../../types\";\n+import { dateTimestampProvider } from '../../scheduler/dateTimestampProvider';\n+import { requestAnimationFrameProvider } from '../../scheduler/requestAnimationFrameProvider';\n \n /**\n  * An observable of animation frames\n@@ -77,31 +76,34 @@ export interface TimestampProvider {\n  *\n  * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n  */\n-export function animationFrames(timestampProvider: TimestampProvider = Date) {\n-  return timestampProvider === Date ? DEFAULT_ANIMATION_FRAMES : animationFramesFactory(timestampProvider);\n+export function animationFrames(timestampProvider: TimestampProvider = dateTimestampProvider) {\n+  return timestampProvider === dateTimestampProvider ? DEFAULT_ANIMATION_FRAMES : animationFramesFactory(timestampProvider);\n }\n \n /**\n  * Does the work of creating the observable for `animationFrames`.\n  * @param timestampProvider The timestamp provider to use to create the observable\n  */\n function animationFramesFactory(timestampProvider: TimestampProvider) {\n+  const { schedule } = requestAnimationFrameProvider;\n   return new Observable<number>(subscriber => {\n-    let id: number;\n     const start = timestampProvider.now();\n+    let subscription: Subscription;\n     const run = () => {\n       subscriber.next(timestampProvider.now() - start);\n       if (!subscriber.closed) {\n-        id = requestAnimationFrame(run);\n+        subscription = schedule(run);\n       }\n     };\n-    id = requestAnimationFrame(run);\n-    return () => cancelAnimationFrame(id);\n+    subscription = schedule(run);\n+    // The subscription is returned within a teardown because it is reassigned\n+    // within the run callback whenever the callback is rescheduled.\n+    return () => subscription.unsubscribe();\n   });\n }\n \n /**\n  * In the common case, where `Date` is passed to `animationFrames` as the default,\n  * we use this shared observable to reduce overhead.\n  */\n-const DEFAULT_ANIMATION_FRAMES = animationFramesFactory(Date);\n+const DEFAULT_ANIMATION_FRAMES = animationFramesFactory(dateTimestampProvider);"},{"sha":"ba1ea39d5e9ddd856aacacce21ea772da3401def","filename":"src/internal/operators/timestamp.ts","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2Foperators%2Ftimestamp.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2Foperators%2Ftimestamp.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Finternal%2Foperators%2Ftimestamp.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -1,4 +1,5 @@\n import { OperatorFunction, TimestampProvider, Timestamp } from '../types';\n+import { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\n import { map } from './map';\n \n /**\n@@ -32,6 +33,6 @@ import { map } from './map';\n  *\n  * @param timestampProvider An object with a `now()` method used to get the current timestamp.\n  */\n-export function timestamp<T>(timestampProvider: TimestampProvider = Date): OperatorFunction<T, Timestamp<T>> {\n+export function timestamp<T>(timestampProvider: TimestampProvider = dateTimestampProvider): OperatorFunction<T, Timestamp<T>> {\n   return map((value: T) => ({ value, timestamp: timestampProvider.now()}));\n }\n\\ No newline at end of file"},{"sha":"ea15f8f9c24411f2f6f616b698212cfe9a721f94","filename":"src/internal/scheduler/dateTimestampProvider.ts","status":"added","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2Fscheduler%2FdateTimestampProvider.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2Fscheduler%2FdateTimestampProvider.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Finternal%2Fscheduler%2FdateTimestampProvider.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -0,0 +1,15 @@\n+/** @prettier */\n+import { TimestampProvider } from '../types';\n+\n+interface DateTimestampProvider extends TimestampProvider {\n+  delegate: TimestampProvider | undefined;\n+}\n+\n+export const dateTimestampProvider: DateTimestampProvider = {\n+  now() {\n+    // Use the variable rather than `this` so that the function can be called\n+    // without being bound to the provider.\n+    return (dateTimestampProvider.delegate || Date).now();\n+  },\n+  delegate: undefined,\n+};"},{"sha":"d5a3a308a75b75d2e549f0d928ccc931830d7dd7","filename":"src/internal/scheduler/performanceTimestampProvider.ts","status":"added","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2Fscheduler%2FperformanceTimestampProvider.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2Fscheduler%2FperformanceTimestampProvider.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Finternal%2Fscheduler%2FperformanceTimestampProvider.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -0,0 +1,15 @@\n+/** @prettier */\n+import { TimestampProvider } from '../types';\n+\n+interface PerformanceTimestampProvider extends TimestampProvider {\n+  delegate: TimestampProvider | undefined;\n+}\n+\n+export const performanceTimestampProvider: PerformanceTimestampProvider = {\n+  now() {\n+    // Use the variable rather than `this` so that the function can be called\n+    // without being bound to the provider.\n+    return (performanceTimestampProvider.delegate || performance).now();\n+  },\n+  delegate: undefined,\n+};"},{"sha":"37fecdaa4a6a731e344d845f7d4db2ffa9274a17","filename":"src/internal/scheduler/requestAnimationFrameProvider.ts","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2Fscheduler%2FrequestAnimationFrameProvider.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2Fscheduler%2FrequestAnimationFrameProvider.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Finternal%2Fscheduler%2FrequestAnimationFrameProvider.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -0,0 +1,35 @@\n+/** @prettier */\n+import { Subscription } from '../Subscription';\n+\n+type RequestAnimationFrameProvider = {\n+  schedule(callback: FrameRequestCallback): Subscription;\n+  delegate:\n+    | {\n+        requestAnimationFrame: typeof requestAnimationFrame;\n+        cancelAnimationFrame: typeof cancelAnimationFrame;\n+      }\n+    | undefined;\n+};\n+\n+export const requestAnimationFrameProvider: RequestAnimationFrameProvider = {\n+  schedule(callback) {\n+    let request = requestAnimationFrame;\n+    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n+    // Use the variable rather than `this` so that the function can be called\n+    // without being bound to the provider.\n+    const { delegate } = requestAnimationFrameProvider;\n+    if (delegate) {\n+      request = delegate.requestAnimationFrame;\n+      cancel = delegate.cancelAnimationFrame;\n+    }\n+    const handle = request((timestamp) => {\n+      // Clear the cancel function. The request has been fulfilled, so\n+      // attempting to cancel the request upon unsubscription would be\n+      // pointless.\n+      cancel = undefined;\n+      callback(timestamp);\n+    });\n+    return new Subscription(() => cancel?.(handle));\n+  },\n+  delegate: undefined,\n+};"},{"sha":"89f2bfe5d4f8a6147b06f4e81b455480e55d065a","filename":"src/internal/testing/TestScheduler.ts","status":"modified","additions":86,"deletions":2,"changes":88,"blob_url":"https://github.com/ReactiveX/rxjs/blob/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2Ftesting%2FTestScheduler.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/37af51a71d6b4e7004ed991d1bad65e9653758da/src%2Finternal%2Ftesting%2FTestScheduler.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Finternal%2Ftesting%2FTestScheduler.ts?ref=37af51a71d6b4e7004ed991d1bad65e9653758da","patch":"@@ -8,6 +8,9 @@ import { VirtualTimeScheduler, VirtualAction } from '../scheduler/VirtualTimeSch\n import { AsyncScheduler } from '../scheduler/AsyncScheduler';\n import { ObservableNotification } from '../types';\n import { COMPLETE_NOTIFICATION, errorNotification, nextNotification } from '../Notification';\n+import { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\n+import { performanceTimestampProvider } from '../scheduler/performanceTimestampProvider';\n+import { requestAnimationFrameProvider } from '../scheduler/requestAnimationFrameProvider';\n \n const defaultMaxFrame: number = 750;\n \n@@ -18,6 +21,7 @@ export interface RunHelpers {\n   time: typeof TestScheduler.prototype.createTime;\n   expectObservable: typeof TestScheduler.prototype.expectObservable;\n   expectSubscriptions: typeof TestScheduler.prototype.expectSubscriptions;\n+  animate: (marbles: string) => void;\n }\n \n interface FlushableTest {\n@@ -356,7 +360,7 @@ export class TestScheduler extends VirtualTimeScheduler {\n         default:\n           // Might be time progression syntax, or a value literal\n           if (runMode && c.match(/^[0-9]$/)) {\n-            // Time progression must be preceeded by at least one space\n+            // Time progression must be preceded by at least one space\n             // if it's not at the beginning of the diagram\n             if (i === 0 || marbles[i - 1] === ' ') {\n               const buffer = marbles.slice(i);\n@@ -401,22 +405,99 @@ export class TestScheduler extends VirtualTimeScheduler {\n     return testMessages;\n   }\n \n+  private createAnimator() {\n+    if (!this.runMode) {\n+      throw new Error('animate() must only be used in run mode');\n+    }\n+\n+    // The TestScheduler assigns a delegate to the provider that's used for\n+    // requestAnimationFrame (rAF). The delegate works in conjunction with the\n+    // animate run helper to coordinate the invocation of any rAF callbacks,\n+    // that are effected within tests, with the animation frames specified by\n+    // the test's author - in the marbles that are passed to the animate run\n+    // helper. This allows the test's author to write deterministic tests and\n+    // gives the author full control over when - or if - animation frames are\n+    // 'painted'.\n+\n+    let animationFramesHandle = 0;\n+    let animationFramesQueue: Map<number, FrameRequestCallback> | undefined;\n+\n+    const delegate = {\n+      requestAnimationFrame(callback: FrameRequestCallback) {\n+        if (!animationFramesQueue) {\n+          throw new Error(\"animate() was not called within run()\");\n+        }\n+        const handle = ++animationFramesHandle;\n+        animationFramesQueue.set(handle, callback);\n+        return handle;\n+      },\n+      cancelAnimationFrame(handle: number) {\n+        if (!animationFramesQueue) {\n+          throw new Error(\"animate() was not called within run()\");\n+        }\n+        animationFramesQueue.delete(handle);\n+      }\n+    };\n+\n+    const animate = (marbles: string) => {\n+      if (animationFramesQueue) {\n+        throw new Error('animate() must not be called more than once within run()');\n+      }\n+      if (/[|#]/.test(marbles)) {\n+        throw new Error('animate() must not complete or error')\n+      }\n+      animationFramesQueue = new Map<number, FrameRequestCallback>();\n+      const messages = TestScheduler.parseMarbles(marbles, undefined, undefined, undefined, true);\n+      for (const message of messages) {\n+        this.schedule(() => {\n+          const now = this.now();\n+          // Capture the callbacks within the queue and clear the queue\n+          // before enumerating the callbacks, as callbacks might\n+          // reschedule themselves. (And, yeah, we're using a Map to represent\n+          // the queue, but the values are guaranteed to be returned in\n+          // insertion order, so it's all good. Trust me, I've read the docs.)\n+          const callbacks = Array.from(animationFramesQueue!.values());\n+          animationFramesQueue!.clear();\n+          for (const callback of callbacks) {\n+            callback(now);\n+          }\n+        }, message.frame);\n+      }\n+    };\n+\n+    return { animate, delegate };\n+  }\n+\n+  /**\n+   * The `run` method performs the test in 'run mode' - in which schedulers\n+   * used within the test automatically delegate to the `TestScheduler`. That\n+   * is, in 'run mode' there is no need to explicitly pass a `TestScheduler`\n+   * instance to observable creators or operators.\n+   *\n+   * @see {@link /guide/testing/marble-testing}\n+   */\n   run<T>(callback: (helpers: RunHelpers) => T): T {\n     const prevFrameTimeFactor = TestScheduler.frameTimeFactor;\n     const prevMaxFrames = this.maxFrames;\n \n     TestScheduler.frameTimeFactor = 1;\n     this.maxFrames = Infinity;\n     this.runMode = true;\n+\n+    const animator = this.createAnimator();\n+    requestAnimationFrameProvider.delegate = animator.delegate;\n+    dateTimestampProvider.delegate = this;\n+    performanceTimestampProvider.delegate = this;\n     AsyncScheduler.delegate = this;\n \n-    const helpers = {\n+    const helpers: RunHelpers = {\n       cold: this.createColdObservable.bind(this),\n       hot: this.createHotObservable.bind(this),\n       flush: this.flush.bind(this),\n       time: this.createTime.bind(this),\n       expectObservable: this.expectObservable.bind(this),\n       expectSubscriptions: this.expectSubscriptions.bind(this),\n+      animate: animator.animate,\n     };\n     try {\n       const ret = callback(helpers);\n@@ -426,6 +507,9 @@ export class TestScheduler extends VirtualTimeScheduler {\n       TestScheduler.frameTimeFactor = prevFrameTimeFactor;\n       this.maxFrames = prevMaxFrames;\n       this.runMode = false;\n+      requestAnimationFrameProvider.delegate = undefined;\n+      dateTimestampProvider.delegate = undefined;\n+      performanceTimestampProvider.delegate = undefined;\n       AsyncScheduler.delegate = undefined;\n     }\n   }"}]},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1077","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1077/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1077/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1077/events","html_url":"https://github.com/ReactiveX/rxjs/pull/1077","id":122374172,"node_id":"MDExOlB1bGxSZXF1ZXN0NTM3NjY5NDY=","number":1077,"title":"chore(typings): Enabled noImplictAny","user":{"login":"david-driscoll","id":1269157,"node_id":"MDQ6VXNlcjEyNjkxNTc=","avatar_url":"https://avatars.githubusercontent.com/u/1269157?v=4","gravatar_id":"","url":"https://api.github.com/users/david-driscoll","html_url":"https://github.com/david-driscoll","followers_url":"https://api.github.com/users/david-driscoll/followers","following_url":"https://api.github.com/users/david-driscoll/following{/other_user}","gists_url":"https://api.github.com/users/david-driscoll/gists{/gist_id}","starred_url":"https://api.github.com/users/david-driscoll/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/david-driscoll/subscriptions","organizations_url":"https://api.github.com/users/david-driscoll/orgs","repos_url":"https://api.github.com/users/david-driscoll/repos","events_url":"https://api.github.com/users/david-driscoll/events{/privacy}","received_events_url":"https://api.github.com/users/david-driscoll/received_events","type":"User","site_admin":false},"labels":[{"id":241316858,"node_id":"MDU6TGFiZWwyNDEzMTY4NTg=","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/blocked","name":"blocked","color":"e11d21","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":41,"created_at":"2015-12-15T21:46:18Z","updated_at":"2018-06-07T14:02:31Z","closed_at":"2016-01-11T00:15:49Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/1077","html_url":"https://github.com/ReactiveX/rxjs/pull/1077","diff_url":"https://github.com/ReactiveX/rxjs/pull/1077.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/1077.patch","merged_at":"2016-01-11T00:15:49Z"},"body":"With this change compliation time and performance is improved\n\n---\n\n@kwonoj  This was the quick way, there might a few places where the formatting, or in some cases the variable names used in method signatures that have changed.  If I need to reverse those let me know and I'll make a pass at it shortly.\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1077/timeline","performed_via_github_app":null,"state_reason":null,"score":1,"files":[{"sha":"f54ed3ddec0a2f3a878aa44658bb2c4c096a284e","filename":"package.json","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/package.json","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/package.json","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/package.json?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -13,9 +13,9 @@\n   },\n   \"scripts\": {\n     \"build_all\": \"npm run build_es6 && npm run build_amd && npm run build_cjs && npm run build_global && npm run generate_packages\",\n-    \"build_amd\": \"rm -rf dist/amd && tsc typings/es6-shim/es6-shim.d.ts src/Rx.ts -m amd --outDir dist/amd --sourcemap --target ES5 --diagnostics --pretty\",\n-    \"build_cjs\": \"rm -rf dist/cjs && tsc typings/es6-shim/es6-shim.d.ts src/Rx.ts src/Rx.KitchenSink.ts -m commonjs --outDir dist/cjs --sourcemap --target ES5 -d --diagnostics --pretty\",\n-    \"build_es6\": \"rm -rf dist/es6 && tsc src/Rx.ts src/Rx.KitchenSink.ts --outDir dist/es6 --sourceMap --target ES6 -d --diagnostics --pretty\",\n+    \"build_amd\": \"rm -rf dist/amd && tsc typings/es6-shim/es6-shim.d.ts src/Rx.ts -m amd --outDir dist/amd --sourcemap --target ES5 --diagnostics --pretty --noImplicitAny --suppressImplicitAnyIndexErrors\",\n+    \"build_cjs\": \"rm -rf dist/cjs && tsc typings/es6-shim/es6-shim.d.ts src/Rx.ts src/Rx.KitchenSink.ts -m commonjs --outDir dist/cjs --sourcemap --target ES5 -d --diagnostics --pretty --noImplicitAny --suppressImplicitAnyIndexErrors\",\n+    \"build_es6\": \"rm -rf dist/es6 && tsc src/Rx.ts src/Rx.KitchenSink.ts --outDir dist/es6 --sourceMap --target ES6 -d --diagnostics --pretty --noImplicitAny --suppressImplicitAnyIndexErrors\",\n     \"build_closure\": \"java -jar ./node_modules/google-closure-compiler/compiler.jar ./dist/global/Rx.umd.js --language_in ECMASCRIPT5 --create_source_map ./dist/global/Rx.umd.min.js.map --js_output_file ./dist/global/Rx.umd.min.js\",\n     \"build_global\": \"rm -rf dist/global && mkdir \\\"dist/global\\\" && node tools/make-umd-bundle.js && node tools/make-system-bundle.js && npm run build_closure\",\n     \"build_perf\": \"npm run build_cjs && npm run build_global && webdriver-manager update && npm run perf\","},{"sha":"48fa45fa5566369f4c04a393cc43f0d3102273bb","filename":"src/CoreOperators.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2FCoreOperators.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2FCoreOperators.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2FCoreOperators.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -35,9 +35,9 @@ export interface CoreOperators<T> {\n                 projectResult?: (x: T, y: any, ix: number, iy: number) => R,\n                 concurrent?: number) => Observable<R>;\n   flatMapTo?: <R>(observable: Observable<any>, projectResult?: (x: T, y: any, ix: number, iy: number) => R, concurrent?: number) => Observable<R>;\n-  groupBy?: <R>(keySelector: (value: T) => string,\n+  groupBy?: <K, R>(keySelector: (value: T) => string,\n                 elementSelector?: (value: T) => R,\n-                durationSelector?: (group: GroupedObservable<R>) => Observable<any>) => Observable<GroupedObservable<R>>;\n+                durationSelector?: (group: GroupedObservable<K, R>) => Observable<any>) => Observable<GroupedObservable<K, R>>;\n   ignoreElements?: () => Observable<T>;\n   last?: <R>(predicate?: (value: T, index: number) => boolean,\n              resultSelector?: (value: T, index: number) => R,"},{"sha":"c62028a6fd7002bd93b6b1d5cc6ea902cca6916b","filename":"src/Notification.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2FNotification.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2FNotification.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2FNotification.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -47,7 +47,7 @@ export class Notification<T> {\n       case 'E':\n         return Observable.throw(this.exception);\n       case 'C':\n-        return Observable.empty();\n+        return Observable.empty<T>();\n     }\n   }\n "},{"sha":"b5500db710f5fabc9d3959387f0591fd3fb5c561","filename":"src/Observable.ts","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2FObservable.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2FObservable.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2FObservable.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -51,7 +51,7 @@ export class Observable<T> implements CoreOperators<T>  {\n    * can be `next`ed, or an `error` method can be called to raise an error, or `complete` can be called to notify\n    * of a successful completion.\n    */\n-  constructor(subscribe?: <R>(subscriber: Subscriber<R>) => Subscription|Function|void) {\n+  constructor(subscribe?: <R>(subscriber: Subscriber<R>) => Subscription | Function | void) {\n     if (subscribe) {\n       this._subscribe = subscribe;\n     }\n@@ -66,7 +66,7 @@ export class Observable<T> implements CoreOperators<T>  {\n    * @returns {Observable} a new cold observable\n    * @description creates a new cold Observable by calling the Observable constructor\n    */\n-  static create: Function = <T>(subscribe?: <R>(subscriber: Subscriber<R>) => Subscription|Function|void) => {\n+  static create: Function = <T>(subscribe?: <R>(subscriber: Subscriber<R>) => Subscription | Function | void) => {\n     return new Observable<T>(subscribe);\n   };\n \n@@ -77,8 +77,8 @@ export class Observable<T> implements CoreOperators<T>  {\n    * @description creates a new Observable, with this Observable as the source, and the passed\n    * operator defined as the new observable's operator.\n    */\n-  lift<T, R>(operator: Operator<T, R>): Observable<T> {\n-    const observable = new Observable();\n+  lift<T, R>(operator: Operator<T, R>): Observable<R> {\n+    const observable = new Observable<R>();\n     observable.source = this;\n     observable.operator = operator;\n     return observable;\n@@ -132,7 +132,7 @@ export class Observable<T> implements CoreOperators<T>  {\n       throw new Error('no Promise impl found');\n     }\n \n-    let nextHandler;\n+    let nextHandler: any;\n \n     if (thisArg) {\n       nextHandler = function nextHandlerFn(value: any): void {\n@@ -145,7 +145,7 @@ export class Observable<T> implements CoreOperators<T>  {\n       nextHandler = next;\n     }\n \n-    const promiseCallback = function promiseCallbackFn(resolve, reject) {\n+    const promiseCallback = function promiseCallbackFn(resolve: Function, reject: Function) {\n       const { source, nextHandler } = <any>promiseCallbackFn;\n       source.subscribe(nextHandler, reject, resolve);\n     };\n@@ -212,9 +212,9 @@ export class Observable<T> implements CoreOperators<T>  {\n                projectResult?: (x: T, y: any, ix: number, iy: number) => R,\n                concurrent?: number) => Observable<R>;\n   flatMapTo: <R>(observable: Observable<any>, projectResult?: (x: T, y: any, ix: number, iy: number) => R, concurrent?: number) => Observable<R>;\n-  groupBy: <R>(keySelector: (value: T) => string,\n+  groupBy: <K, R>(keySelector: (value: T) => string,\n                elementSelector?: (value: T) => R,\n-               durationSelector?: (group: GroupedObservable<R>) => Observable<any>) => Observable<GroupedObservable<R>>;\n+               durationSelector?: (group: GroupedObservable<K, R>) => Observable<any>) => Observable<GroupedObservable<K, R>>;\n   ignoreElements: () => Observable<T>;\n   last: <R>(predicate?: (value: T, index: number) => boolean,\n             resultSelector?: (value: T, index: number) => R,"},{"sha":"a8969d133e83026d853b926ea84fcfc79ea7b4d1","filename":"src/Scheduler.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2FScheduler.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2FScheduler.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2FScheduler.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -3,7 +3,7 @@ import {Action} from './scheduler/Action';\n \n export interface Scheduler {\n   now(): number;\n-  schedule<T>(work: (state?: any) => Subscription|void, delay?: number, state?: any): Subscription;\n+  schedule<T>(work: (state?: any) => Subscription | void, delay?: number, state?: any): Subscription;\n   flush(): void;\n   active: boolean;\n   actions: Action[];"},{"sha":"de0ce47bc0148dc64a11fc9b78e807892b6a1059","filename":"src/Subject.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2FSubject.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2FSubject.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2FSubject.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -9,7 +9,7 @@ import {rxSubscriber} from './symbol/rxSubscriber';\n export class Subject<T> extends Observable<T> implements Observer<T>, Subscription {\n \n   static create<T>(source: Observable<T>, destination: Observer<T>): Subject<T> {\n-    return new Subject(source, destination);\n+    return new Subject<T>(source, destination);\n   }\n \n   constructor(source?: Observable<T>, destination?: Observer<T>) {\n@@ -32,7 +32,7 @@ export class Subject<T> extends Observable<T> implements Observer<T>, Subscripti\n   lift<T, R>(operator: Operator<T, R>): Observable<T> {\n     const subject = new Subject(this, this.destination || this);\n     subject.operator = operator;\n-    return subject;\n+    return <any>subject;\n   }\n \n   add(subscription: Subscription|Function|void): void {"},{"sha":"7f5148aca26f871753aca7e9ecb6b61d3f79e188","filename":"src/Subscription.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2FSubscription.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2FSubscription.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2FSubscription.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -3,7 +3,7 @@ import {isObject} from './util/isObject';\n import {isFunction} from './util/isFunction';\n \n export class Subscription {\n-  public static EMPTY: Subscription = (function(empty){\n+  public static EMPTY: Subscription = (function(empty: any){\n     empty.isUnsubscribed = true;\n     return empty;\n   }(new Subscription()));\n@@ -46,7 +46,7 @@ export class Subscription {\n     }\n   }\n \n-  add(subscription: Subscription|Function|void): void {\n+  add(subscription: Subscription | Function | void): void {\n     // return early if:\n     //  1. the subscription is null\n     //  2. we're attempting to add our this"},{"sha":"e45cde398be30036a72494fdea96234481c3ef89","filename":"src/observable/ConnectableObservable.ts","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FConnectableObservable.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FConnectableObservable.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2FConnectableObservable.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -13,7 +13,7 @@ export class ConnectableObservable<T> extends Observable<T> {\n     super();\n   }\n \n-  _subscribe(subscriber) {\n+  _subscribe(subscriber: Subscriber<T>) {\n     return this._getSubject().subscribe(subscriber);\n   }\n \n@@ -41,8 +41,8 @@ export class ConnectableObservable<T> extends Observable<T> {\n   }\n }\n \n-class ConnectableSubscription<T> extends Subscription {\n-  constructor(protected connectable: ConnectableObservable<T>) {\n+class ConnectableSubscription extends Subscription {\n+  constructor(protected connectable: ConnectableObservable<any>) {\n     super();\n   }\n \n@@ -62,9 +62,9 @@ class RefCountObservable<T> extends Observable<T> {\n     super();\n   }\n \n-  _subscribe(subscriber) {\n+  _subscribe(subscriber: Subscriber<T>) {\n     const connectable = this.connectable;\n-    const refCountSubscriber = new RefCountSubscriber(subscriber, this);\n+    const refCountSubscriber: RefCountSubscriber<T> = new RefCountSubscriber(subscriber, this);\n     const subscription = connectable.subscribe(refCountSubscriber);\n     if (!subscription.isUnsubscribed && ++this.refCount === 1) {\n       refCountSubscriber.connection = this.connection = connectable.connect();"},{"sha":"0f2e9f010958937a6e9aed31a365803b0fd7a6ec","filename":"src/observable/IteratorObservable.ts","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FIteratorObservable.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FIteratorObservable.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2FIteratorObservable.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -7,6 +7,7 @@ import {isFunction} from '../util/isFunction';\n import {SymbolShim} from '../util/SymbolShim';\n import {errorObject} from '../util/errorObject';\n import {Subscription} from '../Subscription';\n+import {Subscriber} from '../Subscriber';\n \n export class IteratorObservable<T> extends Observable<T> {\n   private iterator: any;\n@@ -18,7 +19,7 @@ export class IteratorObservable<T> extends Observable<T> {\n     return new IteratorObservable(iterator, project, thisArg, scheduler);\n   }\n \n-  static dispatch(state) {\n+  static dispatch(state: any) {\n \n     const { index, hasError, thisArg, project, iterator, subscriber } = state;\n \n@@ -83,7 +84,7 @@ export class IteratorObservable<T> extends Observable<T> {\n     this.iterator = getIterator(iterator);\n   }\n \n-  _subscribe(subscriber): Subscription | Function | void {\n+  _subscribe(subscriber: Subscriber<T>): Subscription | Function | void {\n \n     let index = 0;\n     const { iterator, project, thisArg, scheduler } = this;\n@@ -166,7 +167,7 @@ function getIterator(obj: any) {\n \n const maxSafeInteger = Math.pow(2, 53) - 1;\n \n-function toLength(o) {\n+function toLength(o: any) {\n   let len = +o.length;\n   if (isNaN(len)) {\n       return 0;\n@@ -184,11 +185,11 @@ function toLength(o) {\n   return len;\n }\n \n-function numberIsFinite(value) {\n+function numberIsFinite(value: any) {\n   return typeof value === 'number' && root.isFinite(value);\n }\n \n-function sign(value) {\n+function sign(value: any) {\n   let valueAsNumber = +value;\n   if (valueAsNumber === 0) {\n     return valueAsNumber;"},{"sha":"3499e0a08adfc400f2d747cca83d8a9284fdf944","filename":"src/observable/ScalarObservable.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FScalarObservable.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FScalarObservable.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2FScalarObservable.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -13,7 +13,7 @@ export class ScalarObservable<T> extends Observable<T> {\n     return new ScalarObservable(value, scheduler);\n   }\n \n-  static dispatch(state): void {\n+  static dispatch(state: any): void {\n     const { done, value, subscriber } = state;\n \n     if (done) {\n@@ -72,7 +72,7 @@ proto.filter = function <T>(select: (x: T, ix?: number) => boolean, thisArg?: an\n   } else if (result) {\n     return this;\n   } else {\n-    return new EmptyObservable();\n+    return new EmptyObservable<T>();\n   }\n };\n \n@@ -107,7 +107,7 @@ proto.count = function <T>(predicate?: (value: T, index: number, source: Observa\n \n proto.skip = function <T>(count: number): Observable<T> {\n   if (count > 0) {\n-    return new EmptyObservable();\n+    return new EmptyObservable<T>();\n   }\n   return this;\n };\n@@ -116,5 +116,5 @@ proto.take = function <T>(count: number): Observable<T> {\n   if (count > 0) {\n     return this;\n   }\n-  return new EmptyObservable();\n+  return new EmptyObservable<T>();\n };"},{"sha":"9d86a22326ab1a2554f819409d4aac57133b14eb","filename":"src/observable/bindCallback.ts","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FbindCallback.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FbindCallback.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2FbindCallback.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -10,15 +10,15 @@ export class BoundCallbackObservable<T> extends Observable<T> {\n   subject: AsyncSubject<T>;\n \n   static create<T>(callbackFunc: Function,\n-                   selector: Function = undefined,\n-                   scheduler?: Scheduler): Function {\n-    return (...args): Observable<T> => {\n-      return new BoundCallbackObservable(callbackFunc, selector, args, scheduler);\n+                   selector: Function | void = undefined,\n+                   scheduler?: Scheduler): (...args: any[]) => Observable<T> {\n+    return (...args: any[]): Observable<T> => {\n+      return new BoundCallbackObservable<T>(callbackFunc, <any>selector, args, scheduler);\n     };\n   }\n \n   constructor(private callbackFunc: Function,\n-              private selector,\n+              private selector: Function,\n               private args: any[],\n               public scheduler: Scheduler) {\n     super();\n@@ -33,7 +33,7 @@ export class BoundCallbackObservable<T> extends Observable<T> {\n     if (!scheduler) {\n       if (!subject) {\n         subject = this.subject = new AsyncSubject<T>();\n-        const handler = function handlerFn(...innerArgs) {\n+        const handler = function handlerFn(...innerArgs: any[]) {\n           const source = (<any>handlerFn).source;\n           const { selector, subject } = source;\n           if (selector) {\n@@ -73,7 +73,7 @@ function dispatch<T>(state: { source: BoundCallbackObservable<T>, subscriber: Su\n   if (!subject) {\n     subject = source.subject = new AsyncSubject<T>();\n \n-    const handler = function handlerFn(...innerArgs) {\n+    const handler = function handlerFn(...innerArgs: any[]) {\n       const source = (<any>handlerFn).source;\n       const { selector, subject } = source;\n       if (selector) {"},{"sha":"5ff9fc823014fbf4dfb9779547bc3a9ad46826de","filename":"src/observable/empty.ts","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Fempty.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Fempty.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2Fempty.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,11 +1,12 @@\n import {Scheduler} from '../Scheduler';\n+import {Subscriber} from '../Subscriber';\n import {Observable} from '../Observable';\n import {Subscription} from '../Subscription';\n \n export class EmptyObservable<T> extends Observable<T> {\n \n   static create<T>(scheduler?: Scheduler): Observable<T> {\n-    return new EmptyObservable(scheduler);\n+    return new EmptyObservable<T>(scheduler);\n   }\n \n   static dispatch({ subscriber }) {\n@@ -16,7 +17,7 @@ export class EmptyObservable<T> extends Observable<T> {\n     super();\n   }\n \n-  _subscribe(subscriber): Subscription | Function | void {\n+  _subscribe(subscriber: Subscriber<T>): Subscription | Function | void {\n \n     const scheduler = this.scheduler;\n "},{"sha":"efc6a88808db631b2570b65e64bd9d5bd2465951","filename":"src/observable/forkJoin.ts","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FforkJoin.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FforkJoin.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2FforkJoin.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -7,16 +7,15 @@ import {isArray} from '../util/isArray';\n \n export class ForkJoinObservable<T> extends Observable<T> {\n   constructor(private sources: Array<Observable<any> | Promise<any>>,\n-              private resultSelector?: (...values: Array<any>) => any) {\n+              private resultSelector?: (...values: Array<any>) => T) {\n     super();\n   }\n \n-  static create(...sources: Array<Observable<any> |\n+  static create<T>(...sources: Array<Observable<any> | Promise<any> |\n                                   Array<Observable<any>> |\n-                                  Promise<any> |\n-                                  ((...values: Array<any>) => any)>): Observable<any> {\n+                                  ((...values: Array<any>) => any)>): Observable<T> {\n     if (sources === null || arguments.length === 0) {\n-      return new EmptyObservable();\n+      return new EmptyObservable<T>();\n     }\n \n     let resultSelector: (...values: Array<any>) => any = null;\n@@ -49,7 +48,7 @@ export class ForkJoinObservable<T> extends Observable<T> {\n }\n \n class AllSubscriber<T> extends Subscriber<T> {\n-  private _value: any = null;\n+  private _value: T = null;\n \n   constructor(destination: Subscriber<any>,\n               private index: number,\n@@ -60,7 +59,7 @@ class AllSubscriber<T> extends Subscriber<T> {\n     super(destination);\n   }\n \n-  _next(value: any): void {\n+  _next(value: T): void {\n     this._value = value;\n   }\n \n@@ -95,7 +94,7 @@ function hasValue(x: any): boolean {\n }\n \n function emptyArray(len: number): any[] {\n-  let arr = [];\n+  let arr: any[] = [];\n   for (let i = 0; i < len; i++) {\n     arr.push(null);\n   }"},{"sha":"a93716157a214dda665edb074802ba124dfb2717","filename":"src/observable/from.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Ffrom.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Ffrom.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2Ffrom.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -11,7 +11,7 @@ import {Subscriber} from '../Subscriber';\n import {ObserveOnSubscriber} from '../operator/observeOn-support';\n \n export class FromObservable<T> extends Observable<T> {\n-  constructor(private ish: any, private scheduler: Scheduler) {\n+  constructor(private ish: Observable<T> | Promise<T> | Iterator<T> | ArrayLike<T>, private scheduler: Scheduler) {\n     super(null);\n   }\n \n@@ -27,7 +27,7 @@ export class FromObservable<T> extends Observable<T> {\n       } else if (isPromise(ish)) {\n         return new PromiseObservable(ish, scheduler);\n       } else if (typeof ish[SymbolShim.iterator] === 'function') {\n-        return new IteratorObservable(ish, null, null, scheduler);\n+        return new IteratorObservable<T>(<any>ish, null, null, scheduler);\n       }\n     }\n "},{"sha":"5aa4f4ec57c21ede8db5174db29d3cda42797618","filename":"src/observable/fromArray.ts","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FfromArray.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FfromArray.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2FfromArray.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -2,6 +2,7 @@ import {Scheduler} from '../Scheduler';\n import {Observable} from '../Observable';\n import {ScalarObservable} from './ScalarObservable';\n import {EmptyObservable} from './empty';\n+import {Subscriber} from '../Subscriber';\n import {isScheduler} from '../util/isScheduler';\n import {Subscription} from '../Subscription';\n \n@@ -21,15 +22,15 @@ export class ArrayObservable<T> extends Observable<T> {\n \n     const len = array.length;\n     if (len > 1) {\n-      return new ArrayObservable(array, scheduler);\n+      return new ArrayObservable<T>(<any>array, scheduler);\n     } else if (len === 1) {\n-      return new ScalarObservable(array[0], scheduler);\n+      return new ScalarObservable<T>(<any>array[0], scheduler);\n     } else {\n-      return new EmptyObservable(scheduler);\n+      return new EmptyObservable<T>(scheduler);\n     }\n   }\n \n-  static dispatch(state) {\n+  static dispatch(state: any) {\n \n     const { array, index, count, subscriber } = state;\n \n@@ -60,8 +61,7 @@ export class ArrayObservable<T> extends Observable<T> {\n     }\n   }\n \n-  _subscribe(subscriber): Subscription | Function | void {\n-\n+  _subscribe(subscriber: Subscriber<T>): Subscription | Function | void {\n     let index = 0;\n     const array = this.array;\n     const count = array.length;"},{"sha":"7704413532ad0e3ff1a16adcb7a7b94ecbc07442","filename":"src/observable/fromEvent.ts","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FfromEvent.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FfromEvent.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2FfromEvent.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -15,7 +15,7 @@ export class FromEventObservable<T, R> extends Observable<T> {\n   }\n \n   private static setupSubscription<T>(sourceObj: any, eventName: string, handler: Function, subscriber: Subscriber<T>) {\n-    let unsubscribe;\n+    let unsubscribe: () => void;\n     let tag = sourceObj.toString();\n     if (tag === '[object NodeList]' || tag === '[object HTMLCollection]') {\n       for (let i = 0, len = sourceObj.length; i < len; i++) {\n@@ -35,18 +35,18 @@ export class FromEventObservable<T, R> extends Observable<T> {\n     subscriber.add(new Subscription(unsubscribe));\n   }\n \n-  _subscribe(subscriber) {\n+  _subscribe(subscriber: Subscriber<T>) {\n     const sourceObj = this.sourceObj;\n     const eventName = this.eventName;\n     const selector = this.selector;\n-    let handler = selector ? (...args) => {\n+    let handler = selector ? (...args: any[]) => {\n       let result = tryCatch(selector)(...args);\n       if (result === errorObject) {\n-        subscriber.error(result.e);\n+        subscriber.error(errorObject.e);\n       } else {\n         subscriber.next(result);\n       }\n-    } : (e) => subscriber.next(e);\n+    } : (e: any) => subscriber.next(e);\n \n     FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber);\n   }"},{"sha":"cf14deda614237ad3a04c6f159a05c0e02afa0bf","filename":"src/observable/fromEventPattern.ts","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FfromEventPattern.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2FfromEventPattern.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2FfromEventPattern.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -2,6 +2,7 @@ import {Observable} from '../Observable';\n import {Subscription} from '../Subscription';\n import {tryCatch} from '../util/tryCatch';\n import {errorObject} from '../util/errorObject';\n+import {Subscriber} from '../Subscriber';\n \n export class FromEventPatternObservable<T, R> extends Observable<T> {\n \n@@ -17,19 +18,19 @@ export class FromEventPatternObservable<T, R> extends Observable<T> {\n     super();\n   }\n \n-  _subscribe(subscriber) {\n+  _subscribe(subscriber: Subscriber<T>) {\n     const addHandler = this.addHandler;\n     const removeHandler = this.removeHandler;\n     const selector = this.selector;\n \n-    const handler = selector ? function(e) {\n+    const handler = selector ? function(e: any) {\n       let result = tryCatch(selector).apply(null, arguments);\n       if (result === errorObject) {\n         subscriber.error(result.e);\n       } else {\n         subscriber.next(result);\n       }\n-    } : function(e) { subscriber.next(e); };\n+    } : function(e: any) { subscriber.next(e); };\n \n     let result = tryCatch(addHandler)(handler);\n     if (result === errorObject) {"},{"sha":"96511a277438b877e1a009005784c1bdbdde5f07","filename":"src/observable/interval.ts","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Finterval.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Finterval.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2Finterval.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -4,12 +4,12 @@ import {Scheduler} from '../Scheduler';\n import {Observable} from '../Observable';\n import {asap} from '../scheduler/asap';\n \n-export class IntervalObservable<T> extends Observable<T> {\n+export class IntervalObservable extends Observable<number> {\n   static create(period: number = 0, scheduler: Scheduler = asap): Observable<number> {\n     return new IntervalObservable(period, scheduler);\n   }\n \n-  static dispatch(state): void {\n+  static dispatch(state: any): void {\n     const { index, subscriber, period } = state;\n \n     subscriber.next(index);\n@@ -33,7 +33,7 @@ export class IntervalObservable<T> extends Observable<T> {\n     }\n   }\n \n-  _subscribe(subscriber: Subscriber<T>) {\n+  _subscribe(subscriber: Subscriber<number>) {\n     const index = 0;\n     const period = this.period;\n     const scheduler = this.scheduler;"},{"sha":"530d882d1c90cccce332a383e1a1e26c33d04696","filename":"src/observable/never.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Fnever.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Fnever.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2Fnever.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -4,7 +4,7 @@ import {noop} from '../util/noop';\n \n export class InfiniteObservable<T> extends Observable<T> {\n   static create<T>() {\n-    return new InfiniteObservable();\n+    return new InfiniteObservable<T>();\n   }\n \n   constructor() {"},{"sha":"e87790e10b0f43711b7b1b05e95acd675a2570c6","filename":"src/observable/range.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Frange.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Frange.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2Frange.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,14 +1,15 @@\n import {Scheduler} from '../Scheduler';\n import {Observable} from '../Observable';\n import {Subscription} from '../Subscription';\n+import {Subscriber} from '../Subscriber';\n \n-export class RangeObservable<T> extends Observable<T> {\n+export class RangeObservable extends Observable<number> {\n \n   static create(start: number = 0, end: number = 0, scheduler?: Scheduler): Observable<number> {\n     return new RangeObservable(start, end, scheduler);\n   }\n \n-  static dispatch(state) {\n+  static dispatch(state: any) {\n \n     const { start, index, end, subscriber } = state;\n \n@@ -40,8 +41,7 @@ export class RangeObservable<T> extends Observable<T> {\n     this.scheduler = scheduler;\n   }\n \n-  _subscribe(subscriber): Subscription | Function | void {\n-\n+  _subscribe(subscriber: Subscriber<number>): Subscription | Function | void {\n     let index = 0;\n     let start = this.start;\n     const end = this.end;"},{"sha":"a8c883b39f656478d25f3defda5a24929f8d8422","filename":"src/observable/throw.ts","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Fthrow.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Fthrow.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2Fthrow.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -2,7 +2,7 @@ import {Scheduler} from '../Scheduler';\n import {Observable} from '../Observable';\n import {Subscription} from '../Subscription';\n \n-export class ErrorObservable<T> extends Observable<T> {\n+export class ErrorObservable extends Observable<any> {\n \n   static create<T>(error: any, scheduler?: Scheduler) {\n     return new ErrorObservable(error, scheduler);\n@@ -16,8 +16,7 @@ export class ErrorObservable<T> extends Observable<T> {\n     super();\n   }\n \n-  _subscribe(subscriber): Subscription | Function | void {\n-\n+  _subscribe(subscriber: any): Subscription | Function | void {\n     const error = this.error;\n     const scheduler = this.scheduler;\n "},{"sha":"c4d7d25635201202359b60890dbc781615c0c561","filename":"src/observable/timer.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Ftimer.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Fobservable%2Ftimer.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2Ftimer.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -5,14 +5,15 @@ import {asap} from '../scheduler/asap';\n import {isScheduler} from '../util/isScheduler';\n import {isDate} from '../util/isDate';\n import {Subscription} from '../Subscription';\n+import {Subscriber} from '../Subscriber';\n \n-export class TimerObservable<T> extends Observable<T> {\n+export class TimerObservable extends Observable<number> {\n \n   static create(dueTime: number | Date = 0, period?: number | Scheduler, scheduler?: Scheduler): Observable<number> {\n     return new TimerObservable(dueTime, period, scheduler);\n   }\n \n-  static dispatch(state) {\n+  static dispatch(state: any) {\n \n     const { index, period, subscriber } = state;\n     const action = (<any> this);\n@@ -54,8 +55,7 @@ export class TimerObservable<T> extends Observable<T> {\n       (<number> dueTime);\n   }\n \n-  _subscribe(subscriber): Subscription | Function | void {\n-\n+  _subscribe(subscriber: Subscriber<number>): Subscription | Function | void {\n     const index = 0;\n     const { period, dueTime, scheduler } = this;\n "},{"sha":"3089acf7b4a5dc047a7784f1cc11a88e0c3ba23f","filename":"src/operator/buffer.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fbuffer.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fbuffer.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fbuffer.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -19,23 +19,23 @@ import {subscribeToResult} from '../util/subscribeToResult';\n  * values.\n  */\n export function buffer<T>(closingNotifier: Observable<any>): Observable<T[]> {\n-  return this.lift(new BufferOperator(closingNotifier));\n+  return this.lift(new BufferOperator<T>(closingNotifier));\n }\n \n-class BufferOperator<T, R> implements Operator<T, R> {\n+class BufferOperator<T> implements Operator<T, T[]> {\n \n   constructor(private closingNotifier: Observable<any>) {\n   }\n \n-  call(subscriber: Subscriber<T>): Subscriber<T> {\n+  call(subscriber: Subscriber<T[]>): Subscriber<T> {\n     return new BufferSubscriber(subscriber, this.closingNotifier);\n   }\n }\n \n class BufferSubscriber<T, R> extends OuterSubscriber<T, R> {\n   private buffer: T[] = [];\n \n-  constructor(destination: Subscriber<T>, closingNotifier: Observable<any>) {\n+  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n     super(destination);\n     this.add(subscribeToResult(this, closingNotifier));\n   }"},{"sha":"eaba7519cae4fef4a2d8e2b9dc2ce2c2a52510f4","filename":"src/operator/bufferCount.ts","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FbufferCount.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FbufferCount.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FbufferCount.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -22,11 +22,11 @@ export function bufferCount<T>(bufferSize: number, startBufferEvery: number = nu\n   return this.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n }\n \n-class BufferCountOperator<T, R> implements Operator<T, R> {\n+class BufferCountOperator<T> implements Operator<T, T[]> {\n   constructor(private bufferSize: number, private startBufferEvery: number) {\n   }\n \n-  call(subscriber: Subscriber<T>): Subscriber<T> {\n+  call(subscriber: Subscriber<T[]>): Subscriber<T> {\n     return new BufferCountSubscriber(subscriber, this.bufferSize, this.startBufferEvery);\n   }\n }\n@@ -35,7 +35,7 @@ class BufferCountSubscriber<T> extends Subscriber<T> {\n   private buffers: Array<T[]> = [[]];\n   private count: number = 0;\n \n-  constructor(destination: Subscriber<T>, private bufferSize: number, private startBufferEvery: number) {\n+  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n     super(destination);\n   }\n "},{"sha":"3dda3ae14e0fe542cf313f7fd06168182bfa60bf","filename":"src/operator/bufferTime.ts","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FbufferTime.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FbufferTime.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FbufferTime.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -26,13 +26,13 @@ export function bufferTime<T>(bufferTimeSpan: number,\n   return this.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, scheduler));\n }\n \n-class BufferTimeOperator<T, R> implements Operator<T, R> {\n+class BufferTimeOperator<T> implements Operator<T, T[]> {\n   constructor(private bufferTimeSpan: number,\n               private bufferCreationInterval: number,\n               private scheduler: Scheduler) {\n   }\n \n-  call(subscriber: Subscriber<T>): Subscriber<T> {\n+  call(subscriber: Subscriber<T[]>): Subscriber<T> {\n     return new BufferTimeSubscriber(\n       subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.scheduler\n     );\n@@ -42,7 +42,7 @@ class BufferTimeOperator<T, R> implements Operator<T, R> {\n class BufferTimeSubscriber<T> extends Subscriber<T> {\n   private buffers: Array<T[]> = [];\n \n-  constructor(destination: Subscriber<T>,\n+  constructor(destination: Subscriber<T[]>,\n               private bufferTimeSpan: number,\n               private bufferCreationInterval: number,\n               private scheduler: Scheduler) {\n@@ -67,7 +67,7 @@ class BufferTimeSubscriber<T> extends Subscriber<T> {\n     }\n   }\n \n-  _error(err) {\n+  _error(err: any) {\n     this.buffers.length = 0;\n     super._error(err);\n   }\n@@ -85,7 +85,7 @@ class BufferTimeSubscriber<T> extends Subscriber<T> {\n   }\n \n   openBuffer(): T[] {\n-    let buffer = [];\n+    let buffer: T[] = [];\n     this.buffers.push(buffer);\n     return buffer;\n   }\n@@ -97,7 +97,7 @@ class BufferTimeSubscriber<T> extends Subscriber<T> {\n   }\n }\n \n-function dispatchBufferTimeSpanOnly(state) {\n+function dispatchBufferTimeSpanOnly(state: any) {\n   const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n \n   const prevBuffer = state.buffer;\n@@ -111,7 +111,7 @@ function dispatchBufferTimeSpanOnly(state) {\n   }\n }\n \n-function dispatchBufferCreation(state) {\n+function dispatchBufferCreation(state: any) {\n   const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n   const buffer = subscriber.openBuffer();\n   const action = <Action>this;"},{"sha":"30d45373b07c663831c6b2c2b8e405b102622805","filename":"src/operator/bufferToggle.ts","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FbufferToggle.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FbufferToggle.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FbufferToggle.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -20,18 +20,18 @@ import {errorObject} from '../util/errorObject';\n  * @returns {Observable<T[]>} an observable of arrays of buffered values.\n  */\n export function bufferToggle<T, O>(openings: Observable<O>,\n-                                   closingSelector: (openValue: O) => Observable<any>): Observable<T[]> {\n-  return this.lift(new BufferToggleOperator<T, T, O>(openings, closingSelector));\n+                                   closingSelector: (value: O) => Observable<any>): Observable<T[]> {\n+  return this.lift(new BufferToggleOperator(openings, closingSelector));\n }\n \n-class BufferToggleOperator<T, R, O> implements Operator<T, R> {\n+class BufferToggleOperator<T, O> implements Operator<T, T[]> {\n \n   constructor(private openings: Observable<O>,\n-              private closingSelector: (openValue: O) => Observable<any>) {\n+              private closingSelector: (value: O) => Observable<any>) {\n   }\n \n-  call(subscriber: Subscriber<T>): Subscriber<T> {\n-    return new BufferToggleSubscriber<T, O>(subscriber, this.openings, this.closingSelector);\n+  call(subscriber: Subscriber<T[]>): Subscriber<T> {\n+    return new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector);\n   }\n }\n \n@@ -43,9 +43,9 @@ interface BufferContext<T> {\n class BufferToggleSubscriber<T, O> extends Subscriber<T> {\n   private contexts: Array<BufferContext<T>> = [];\n \n-  constructor(destination: Subscriber<T>,\n+  constructor(destination: Subscriber<T[]>,\n               private openings: Observable<O>,\n-              private closingSelector: (openValue: O) => Observable<any>) {\n+              private closingSelector: (value: O) => Observable<any>) {\n     super(destination);\n     this.add(this.openings.subscribe(new BufferToggleOpeningsSubscriber(this)));\n   }\n@@ -89,14 +89,14 @@ class BufferToggleSubscriber<T, O> extends Subscriber<T> {\n \n     let closingNotifier = tryCatch(closingSelector)(value);\n     if (closingNotifier === errorObject) {\n-      this._error(closingNotifier.e);\n+      this._error(errorObject.e);\n     } else {\n       let context = {\n-        buffer: [],\n+        buffer: <T[]>[],\n         subscription: new Subscription()\n       };\n       contexts.push(context);\n-      const subscriber = new BufferToggleClosingsSubscriber(this, context);\n+      const subscriber = new BufferToggleClosingsSubscriber<T>(this, context);\n       const subscription = closingNotifier.subscribe(subscriber);\n       context.subscription.add(subscription);\n       this.add(subscription);\n@@ -116,16 +116,16 @@ class BufferToggleSubscriber<T, O> extends Subscriber<T> {\n   }\n }\n \n-class BufferToggleOpeningsSubscriber<T> extends Subscriber<T> {\n-  constructor(private parent: BufferToggleSubscriber<any, T>) {\n+class BufferToggleOpeningsSubscriber<T, O> extends Subscriber<O> {\n+  constructor(private parent: BufferToggleSubscriber<T, O>) {\n     super(null);\n   }\n \n-  _next(value: T) {\n+  _next(value: O) {\n     this.parent.openBuffer(value);\n   }\n \n-  _error(err) {\n+  _error(err: any) {\n     this.parent.error(err);\n   }\n \n@@ -134,8 +134,8 @@ class BufferToggleOpeningsSubscriber<T> extends Subscriber<T> {\n   }\n }\n \n-class BufferToggleClosingsSubscriber<T> extends Subscriber<T> {\n-  constructor(private parent: BufferToggleSubscriber<any, T>,\n+class BufferToggleClosingsSubscriber<T> extends Subscriber<any> {\n+  constructor(private parent: BufferToggleSubscriber<T, any>,\n               private context: { subscription: any, buffer: T[] }) {\n     super(null);\n   }\n@@ -144,7 +144,7 @@ class BufferToggleClosingsSubscriber<T> extends Subscriber<T> {\n     this.parent.closeBuffer(this.context);\n   }\n \n-  _error(err) {\n+  _error(err: any) {\n     this.parent.error(err);\n   }\n "},{"sha":"641cd97f04dcb808c5aa2401b5e28d033333721c","filename":"src/operator/bufferWhen.ts","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FbufferWhen.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FbufferWhen.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FbufferWhen.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -23,12 +23,12 @@ export function bufferWhen<T>(closingSelector: () => Observable<any>): Observabl\n   return this.lift(new BufferWhenOperator(closingSelector));\n }\n \n-class BufferWhenOperator<T, R> implements Operator<T, R> {\n+class BufferWhenOperator<T> implements Operator<T, T[]> {\n \n   constructor(private closingSelector: () => Observable<any>) {\n   }\n \n-  call(subscriber: Subscriber<T>): Subscriber<T> {\n+  call(subscriber: Subscriber<T[]>): Subscriber<T> {\n     return new BufferWhenSubscriber(subscriber, this.closingSelector);\n   }\n }\n@@ -38,7 +38,7 @@ class BufferWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n   private subscribing: boolean = false;\n   private closingSubscription: Subscription;\n \n-  constructor(destination: Subscriber<T>, private closingSelector: () => Observable<any>) {\n+  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n     super(destination);\n     this.openBuffer();\n   }"},{"sha":"3bf0eed5598ae6f2899199fc94265d4345223afd","filename":"src/operator/catch.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fcatch.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fcatch.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fcatch.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -12,7 +12,7 @@ import {errorObject} from '../util/errorObject';\n  * @return {Observable} an observable that originates from either the source or the observable returned by the\n  *  catch `selector` function.\n  */\n-export function _catch<T>(selector: (err: any, caught: Observable<any>) => Observable<any>): Observable<T> {\n+export function _catch<T, R>(selector: (err: any, caught: Observable<T>) => Observable<R>): Observable<R> {\n   const operator = new CatchOperator(selector);\n   const caught = this.lift(operator);\n   return (operator.caught = caught);\n@@ -37,7 +37,7 @@ class CatchSubscriber<T> extends Subscriber<T> {\n     super(destination);\n   }\n \n-  error(err) {\n+  error(err: any) {\n     if (!this.isStopped) {\n       const result = tryCatch(this.selector)(err, this.caught);\n       if (result === errorObject) {"},{"sha":"cde0e3794eab326fc8fb2f164ec93ea4063e78ce","filename":"src/operator/combineAll.ts","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FcombineAll.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FcombineAll.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FcombineAll.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,4 +1,5 @@\n import {CombineLatestOperator} from './combineLatest-support';\n+import {Observable} from '../Observable';\n \n /**\n  * Takes an Observable of Observables, and collects all observables from it. Once the outer observable\n@@ -12,6 +13,6 @@ import {CombineLatestOperator} from './combineLatest-support';\n  *   most recent values from each collected observable as arguments, in order.\n  * @returns {Observable} an observable of projected results or arrays of recent values.\n  */\n-export function combineAll<T, R>(project?: (...values: Array<any>) => R) {\n+export function combineAll<T, R>(project?: (...values: Array<any>) => R): Observable<R> {\n   return this.lift(new CombineLatestOperator(project));\n }"},{"sha":"80242498e8f4d093f70440e2f4c82b7287a37a2f","filename":"src/operator/combineLatest-static.ts","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FcombineLatest-static.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FcombineLatest-static.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FcombineLatest-static.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -15,10 +15,10 @@ import {isArray} from '../util/isArray';\n  * @returns {Observable} an observable of other projected values from the most recent values from each observable, or an array of each of\n  * the most recent values from each observable.\n  */\n-export function combineLatest<R>(...observables: Array<Observable<any> |\n-                                                      Array<Observable<any>> |\n-                                                      ((...values: Array<any>) => R) |\n-                                                      Scheduler>): Observable<R> {\n+export function combineLatest<T, R>(...observables: Array<any | Observable<any> |\n+                                                    Array<Observable<any>> |\n+                                                    (((...values: Array<any>) => R)) |\n+                                                    Scheduler>): Observable<R> {\n   let project: (...values: Array<any>) => R =  null;\n   let scheduler: Scheduler = null;\n \n@@ -36,5 +36,5 @@ export function combineLatest<R>(...observables: Array<Observable<any> |\n     observables = <Array<Observable<any>>>observables[0];\n   }\n \n-  return new ArrayObservable(observables, scheduler).lift(new CombineLatestOperator(project));\n+  return new ArrayObservable(observables, scheduler).lift<T, R>(new CombineLatestOperator<T, R>(project));\n }"},{"sha":"b9f87cea30fc24cba1013d042cdebb6a324914ed","filename":"src/operator/combineLatest-support.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FcombineLatest-support.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FcombineLatest-support.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FcombineLatest-support.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -11,7 +11,7 @@ export class CombineLatestOperator<T, R> implements Operator<T, R> {\n   }\n \n   call(subscriber: Subscriber<R>): Subscriber<T> {\n-    return new CombineLatestSubscriber<T, R>(subscriber, this.project);\n+    return new CombineLatestSubscriber(subscriber, this.project);\n   }\n }\n "},{"sha":"4e0ba097e561a8b4f1c93e58f197151819cff9d8","filename":"src/operator/combineLatest.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FcombineLatest.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FcombineLatest.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FcombineLatest.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -13,21 +13,21 @@ import {isArray} from '../util/isArray';\n  * @returns {Observable} an observable of other projected values from the most recent values from each observable, or an array of each of\n  * the most recent values from each observable.\n  */\n-export function combineLatest<R>(...observables: Array<Observable<any> |\n+export function combineLatest<T, R>(...observables: Array<Observable<any> |\n                                                        Array<Observable<any>> |\n                                                        ((...values: Array<any>) => R)>): Observable<R> {\n-  let project: (...values: Array<any>) => R =  null;\n+  let project: (...values: Array<any>) => R = null;\n   if (typeof observables[observables.length - 1] === 'function') {\n     project = <(...values: Array<any>) => R>observables.pop();\n   }\n \n   // if the first and only other argument besides the resultSelector is an array\n   // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n   if (observables.length === 1 && isArray(observables[0])) {\n-    observables = <Array<Observable<any>>>observables[0];\n+    observables = <any>observables[0];\n   }\n \n   observables.unshift(this);\n \n-  return new ArrayObservable(observables).lift(new CombineLatestOperator(project));\n+  return new ArrayObservable(observables).lift<T, R>(new CombineLatestOperator<T, R>(project));\n }"},{"sha":"dc52c0a298b410085ed144d8ff594e693f949497","filename":"src/operator/concat-static.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fconcat-static.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fconcat-static.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fconcat-static.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -11,12 +11,12 @@ import {isScheduler} from '../util/isScheduler';\n  * @params {Scheduler} [scheduler] an optional scheduler to schedule each observable subscription on.\n  * @returns {Observable} All values of each passed observable merged into a single observable, in order, in serial fashion.\n  */\n-export function concat<R>(...observables: Array<Observable<any> | Scheduler>): Observable<R> {\n+export function concat<T, R>(...observables: Array<Observable<any> | Scheduler>): Observable<R> {\n   let scheduler: Scheduler = null;\n   let args = <any[]>observables;\n   if (isScheduler(args[observables.length - 1])) {\n     scheduler = args.pop();\n   }\n \n-  return new ArrayObservable(observables, scheduler).lift(new MergeAllOperator(1));\n+  return new ArrayObservable(observables, scheduler).lift<Observable<T>, T | R>(new MergeAllOperator<T | R>(1));\n }"},{"sha":"07f4048338e7b44e839025be1497085e3123bf11","filename":"src/operator/concat.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fconcat.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fconcat.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fconcat.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -12,7 +12,7 @@ import {MergeAllOperator} from './mergeAll-support';\n  * @params {Scheduler} [scheduler] an optional scheduler to schedule each observable subscription on.\n  * @returns {Observable} All values of each passed observable merged into a single observable, in order, in serial fashion.\n  */\n-export function concat<R>(...observables: (Observable<any> | Scheduler)[]): Observable<R> {\n+export function concat<T, R>(...observables: Array<Observable<any> | Scheduler>): Observable<R> {\n   let args = <any[]>observables;\n   args.unshift(this);\n \n@@ -21,5 +21,5 @@ export function concat<R>(...observables: (Observable<any> | Scheduler)[]): Obse\n     scheduler = args.pop();\n   }\n \n-   return new ArrayObservable(args, scheduler).lift(new MergeAllOperator(1));\n+   return new ArrayObservable(args, scheduler).lift<Observable<T>, R>(new MergeAllOperator<R>(1));\n }"},{"sha":"4ab26ec6950c858afbf6bb1cc3f9f590e10006cb","filename":"src/operator/concatAll.ts","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FconcatAll.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FconcatAll.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FconcatAll.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,4 +1,3 @@\n-import {Observable} from '../Observable';\n import {MergeAllOperator} from './mergeAll-support';\n \n /**\n@@ -12,6 +11,6 @@ import {MergeAllOperator} from './mergeAll-support';\n  *\n  * @returns {Observable} an observable of values merged from the incoming observables.\n  */\n-export function concatAll<T>(): Observable<T> {\n+export function concatAll<T>(): T {\n   return this.lift(new MergeAllOperator(1));\n }"},{"sha":"0bdb13ec3544fc261c49c89d55bcff29fcd6f70e","filename":"src/operator/concatMap.ts","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FconcatMap.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FconcatMap.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FconcatMap.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,5 +1,5 @@\n-import {Observable} from '../Observable';\n import {MergeMapOperator} from './mergeMap-support';\n+import {Observable} from '../Observable';\n \n /**\n  * Maps values from the source observable into new Observables, then merges them in a serialized fashion,\n@@ -11,7 +11,7 @@ import {MergeMapOperator} from './mergeMap-support';\n  *\n  * @param {function} project a function to map incoming values into Observables to be concatenated. accepts\n  * the `value` and the `index` as arguments.\n- * @param {function} [projectResult] an optional result selector that is applied to values before they're\n+ * @param {function} [resultSelector] an optional result selector that is applied to values before they're\n  * merged into the returned observable. The arguments passed to this function are:\n  * - `outerValue`: the value that came from the source\n  * - `innerValue`: the value that came from the projected Observable\n@@ -20,7 +20,7 @@ import {MergeMapOperator} from './mergeMap-support';\n  * @returns {Observable} an observable of values merged from the projected Observables as they were subscribed to,\n  * one at a time. Optionally, these values may have been projected from a passed `projectResult` argument.\n  */\n-export function concatMap<T, R>(project: (value: T, index: number) => Observable<any>,\n-                                projectResult?: (outerValue: T, innerValue: any, outerIndex: number, innerIndex: number) => R) {\n-  return this.lift(new MergeMapOperator(project, projectResult, 1));\n+export function concatMap<T, R, R2>(project: (value: T, index: number) => Observable<R>,\n+                                    resultSelector?: (outerValue: T, innerValue: R, outerIndex: number, innerIndex: number) => R2) {\n+  return this.lift(new MergeMapOperator(project, resultSelector, 1));\n }"},{"sha":"85079de1180a84d692ecafb383ddeb988c30dbd7","filename":"src/operator/concatMapTo.ts","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FconcatMapTo.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FconcatMapTo.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FconcatMapTo.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -5,7 +5,7 @@ import {MergeMapToOperator} from './mergeMapTo-support';\n  * Maps values from the source to a specific observable, and merges them together in a serialized fashion.\n  *\n  * @param {Observable} observable the observable to map each source value to\n- * @param {function} [projectResult] an optional result selector that is applied to values before they're\n+ * @param {function} [resultSelector] an optional result selector that is applied to values before they're\n  * merged into the returned observable. The arguments passed to this function are:\n  * - `outerValue`: the value that came from the source\n  * - `innerValue`: the value that came from the projected Observable\n@@ -15,9 +15,10 @@ import {MergeMapToOperator} from './mergeMapTo-support';\n  * with itself, one after the other, for each value emitted from the source.\n  */\n export function concatMapTo<T, R, R2>(observable: Observable<R>,\n-                                      projectResult?: (outerValue: T,\n-                                                       innerValue: R,\n-                                                       outerIndex: number,\n-                                                       innerIndex: number) => R2): Observable<R2> {\n-  return this.lift(new MergeMapToOperator(observable, projectResult, 1));\n+                                      resultSelector?: (\n+                                                outerValue: T,\n+                                                innerValue: R,\n+                                                outerIndex: number,\n+                                                innerIndex: number) => R2): Observable<R2> {\n+  return this.lift(new MergeMapToOperator(observable, resultSelector, 1));\n }"},{"sha":"f562b164aeff3faa7ae87a8510bea2ef3bb73474","filename":"src/operator/count.ts","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fcount.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fcount.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fcount.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -19,27 +19,25 @@ import {errorObject} from '../util/errorObject';\n  * @returns {Observable} an observable of one number that represents the count as described\n  * above\n  */\n-export function count<T>(predicate?: (value: T,\n-                                      index: number,\n-                                      source: Observable<T>) => boolean): Observable<number> {\n+export function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<number> {\n   return this.lift(new CountOperator(predicate, this));\n }\n \n-class CountOperator<T, R> implements Operator<T, R> {\n+class CountOperator<T> implements Operator<T, number> {\n   constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n               private source?: Observable<T>) {\n   }\n \n-  call(subscriber: Subscriber<R>): Subscriber<T> {\n-    return new CountSubscriber<T, R>(subscriber, this.predicate, this.source);\n+  call(subscriber: Subscriber<number>): Subscriber<T> {\n+    return new CountSubscriber(subscriber, this.predicate, this.source);\n   }\n }\n \n-class CountSubscriber<T, R> extends Subscriber<T> {\n+class CountSubscriber<T> extends Subscriber<T> {\n   private count: number = 0;\n   private index: number = 0;\n \n-  constructor(destination: Observer<R>,\n+  constructor(destination: Observer<number>,\n               private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n               private source?: Observable<T>) {\n     super(destination);"},{"sha":"10f4cbeb49796d036c50670066e84e072cbf2ed3","filename":"src/operator/debounce.ts","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fdebounce.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fdebounce.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fdebounce.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -19,15 +19,15 @@ import {subscribeToResult} from '../util/subscribeToResult';\n  * @param {function} durationSelector function for computing the timeout duration for each item.\n  * @returns {Observable} an Observable the same as source Observable, but drops items.\n  */\n-export function debounce<T>(durationSelector: (value: T) => Observable<any> | Promise<any>): Observable<T> {\n+export function debounce<T>(durationSelector: (value: T) => Observable<number> | Promise<number>): Observable<T> {\n   return this.lift(new DebounceOperator(durationSelector));\n }\n \n-class DebounceOperator<T, R> implements Operator<T, R> {\n-  constructor(private durationSelector: (value: T) => Observable<any> | Promise<any>) {\n+class DebounceOperator<T> implements Operator<T, T> {\n+  constructor(private durationSelector: (value: T) => Observable<number> | Promise<number>) {\n   }\n \n-  call(subscriber: Subscriber<R>): Subscriber<T> {\n+  call(subscriber: Subscriber<T>): Subscriber<T> {\n     return new DebounceSubscriber(subscriber, this.durationSelector);\n   }\n }\n@@ -39,7 +39,7 @@ class DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n   private durationSubscription: Subscription = null;\n \n   constructor(destination: Subscriber<R>,\n-              private durationSelector: (value: T) => any) {\n+              private durationSelector: (value: T) => Observable<number> | Promise<number>) {\n     super(destination);\n   }\n "},{"sha":"7cec930d984de564d243245b730b49c6607fffbb","filename":"src/operator/debounceTime.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FdebounceTime.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FdebounceTime.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FdebounceTime.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -21,7 +21,7 @@ export function debounceTime<T>(dueTime: number, scheduler: Scheduler = asap): O\n   return this.lift(new DebounceTimeOperator(dueTime, scheduler));\n }\n \n-class DebounceTimeOperator<T, R> implements Operator<T, R> {\n+class DebounceTimeOperator<T> implements Operator<T, T> {\n   constructor(private dueTime: number, private scheduler: Scheduler) {\n   }\n \n@@ -74,6 +74,6 @@ class DebounceTimeSubscriber<T> extends Subscriber<T> {\n   }\n }\n \n-function dispatchNext(subscriber) {\n+function dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n   subscriber.debouncedNext();\n }"},{"sha":"31278dd3bfda93a5b814bd12a635b378e8c09e6d","filename":"src/operator/defaultIfEmpty.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FdefaultIfEmpty.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FdefaultIfEmpty.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FdefaultIfEmpty.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -7,7 +7,7 @@ import {Subscriber} from '../Subscriber';\n  * @param {any} defaultValue the default value used if source is empty; defaults to null.\n  * @returns {Observable} an Observable of the items emitted by the where empty values are replaced by the specified default value or null.\n  */\n-export function defaultIfEmpty<T, R>(defaultValue: R = null): Observable<T> | Observable<R> {\n+export function defaultIfEmpty<T, R>(defaultValue: R = null): Observable<T | R> {\n   return this.lift(new DefaultIfEmptyOperator(defaultValue));\n }\n "},{"sha":"9ee969de12c790d2c108a741c2798e2616628fd8","filename":"src/operator/delay.ts","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fdelay.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fdelay.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fdelay.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -4,6 +4,7 @@ import {Operator} from '../Operator';\n import {Scheduler} from '../Scheduler';\n import {Subscriber} from '../Subscriber';\n import {Notification} from '../Notification';\n+import {Observable} from '../Observable';\n \n /**\n  * Returns an Observable that delays the emission of items from the source Observable\n@@ -13,13 +14,13 @@ import {Notification} from '../Notification';\n  * @returns {Observable} an Observable that delays the emissions of the source Observable by the specified timeout or Date.\n  */\n export function delay<T>(delay: number|Date,\n-                         scheduler: Scheduler = asap) {\n+                         scheduler: Scheduler = asap): Observable<T> {\n   const absoluteDelay = isDate(delay);\n   const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n   return this.lift(new DelayOperator(delayFor, scheduler));\n }\n \n-class DelayOperator<T, R> implements Operator<T, R> {\n+class DelayOperator<T> implements Operator<T, T> {\n   constructor(private delay: number,\n               private scheduler: Scheduler) {\n   }\n@@ -34,7 +35,7 @@ class DelaySubscriber<T> extends Subscriber<T> {\n   private active: boolean = false;\n   private errored: boolean = false;\n \n-  private static dispatch(state): void {\n+  private static dispatch(state: any): void {\n     const source = state.source;\n     const queue = source.queue;\n     const scheduler = state.scheduler;\n@@ -71,7 +72,7 @@ class DelaySubscriber<T> extends Subscriber<T> {\n     }\n \n     const scheduler = this.scheduler;\n-    const message = new DelayMessage<T>(scheduler.now() + this.delay, notification);\n+    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n     this.queue.push(message);\n \n     if (this.active === false) {\n@@ -83,7 +84,7 @@ class DelaySubscriber<T> extends Subscriber<T> {\n     this.scheduleNotification(Notification.createNext(value));\n   }\n \n-  _error(err) {\n+  _error(err: any) {\n     this.errored = true;\n     this.queue = [];\n     this.destination.error(err);"},{"sha":"030796622c837035dcff628eb9053b40bb8369bb","filename":"src/operator/distinctUntilChanged.ts","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FdistinctUntilChanged.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FdistinctUntilChanged.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FdistinctUntilChanged.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -2,6 +2,7 @@ import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n import {tryCatch} from '../util/tryCatch';\n import {errorObject} from '../util/errorObject';\n+import {Observable} from '../Observable';\n \n /**\n  * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n@@ -10,27 +11,29 @@ import {errorObject} from '../util/errorObject';\n  * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n  * @returns {Observable} an Observable that emits items from the source Observable with distinct values.\n  */\n-export function distinctUntilChanged<T>(compare?: (x: any, y: any) => boolean, keySelector?: (x: T) => any) {\n-  return this.lift(new DistinctUntilChangedOperator(compare, keySelector));\n+export function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): Observable<T>;\n+export function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector?: (x: T) => K): Observable<T>;\n+export function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector?: (x: T) => K): Observable<T> {\n+  return this.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n }\n \n-class DistinctUntilChangedOperator<T, R> implements Operator<T, R> {\n-  constructor(private compare: (x: any, y: any) => boolean,\n-              private keySelector: (x: T) => any) {\n+class DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n+  constructor(private compare: (x: K, y: K) => boolean,\n+              private keySelector: (x: T) => K) {\n   }\n \n   call(subscriber: Subscriber<T>): Subscriber<T> {\n     return new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector);\n   }\n }\n \n-class DistinctUntilChangedSubscriber<T> extends Subscriber<T> {\n-  private key: any;\n+class DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n+  private key: K;\n   private hasKey: boolean = false;\n \n   constructor(destination: Subscriber<T>,\n-              compare: (x: any, y: any) => boolean,\n-              private keySelector: (x: T) => any) {\n+              compare: (x: K, y: K) => boolean,\n+              private keySelector: (x: T) => K) {\n     super(destination);\n     if (typeof compare === 'function') {\n       this.compare = compare;"},{"sha":"f8e95d0d49fb5316f2fadb850743ebd6f0dcdc16","filename":"src/operator/distinctUntilKeyChanged.ts","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FdistinctUntilKeyChanged.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FdistinctUntilKeyChanged.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FdistinctUntilKeyChanged.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,4 +1,5 @@\n import {distinctUntilChanged} from './distinctUntilChanged';\n+import {Observable} from '../Observable';\n \n /**\n  * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n@@ -9,8 +10,8 @@ import {distinctUntilChanged} from './distinctUntilChanged';\n  * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n  * @returns {Observable} an Observable that emits items from the source Observable with distinct values based on the key specified.\n  */\n-export function distinctUntilKeyChanged<T>(key: string, compare?: (x: any, y: any) => boolean) {\n-  return distinctUntilChanged.call(this, function(x, y) {\n+export function distinctUntilKeyChanged<T>(key: string, compare?: (x: T, y: T) => boolean): Observable<T> {\n+  return distinctUntilChanged.call(this, function(x: T, y: T) {\n     if (compare) {\n       return compare(x[key], y[key]);\n     }"},{"sha":"0fbf3cb51cf72201bc80dfbcf6fa605544b5ef45","filename":"src/operator/do.ts","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fdo.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fdo.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fdo.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -5,6 +5,7 @@ import {Subscriber} from '../Subscriber';\n import {noop} from '../util/noop';\n import {tryCatch} from '../util/tryCatch';\n import {errorObject} from '../util/errorObject';\n+import {Observable} from '../Observable';\n \n /**\n  * Returns a mirrored Observable of the source Observable, but modified so that the provided Observer is called\n@@ -15,8 +16,8 @@ import {errorObject} from '../util/errorObject';\n  * @param {function} [complete] callback for the completion of the source.\n  * @reurns {Observable} a mirrored Observable with the specified Observer or callback attached for each item.\n  */\n-export function _do<T>(nextOrObserver?: Observer<T>|((x: T) => void), error?: (e: any) => void, complete?: () => void) {\n-  let next;\n+export function _do<T>(nextOrObserver?: Observer<T> | ((x: T) => void), error?: (e: any) => void, complete?: () => void): Observable<T> {\n+  let next: (x: T) => void;\n   if (nextOrObserver && typeof nextOrObserver === 'object') {\n     next = (<Observer<T>>nextOrObserver).next;\n     error = (<Observer<T>>nextOrObserver).error;\n@@ -27,7 +28,7 @@ export function _do<T>(nextOrObserver?: Observer<T>|((x: T) => void), error?: (e\n   return this.lift(new DoOperator(next || noop, error || noop, complete || noop));\n }\n \n-class DoOperator<T, R> implements Operator<T, R> {\n+class DoOperator<T> implements Operator<T, T> {\n \n   next: (x: T) => void;\n   error: (e: any) => void;\n@@ -57,7 +58,7 @@ class DoSubscriber<T> extends Subscriber<T> {\n     this.__complete = complete;\n   }\n \n-  _next(x) {\n+  _next(x: T) {\n     const result = tryCatch(this.__next)(x);\n     if (result === errorObject) {\n       this.destination.error(errorObject.e);\n@@ -66,7 +67,7 @@ class DoSubscriber<T> extends Subscriber<T> {\n     }\n   }\n \n-  _error(e) {\n+  _error(e: any) {\n     const result = tryCatch(this.__error)(e);\n     if (result === errorObject) {\n       this.destination.error(errorObject.e);"},{"sha":"907afe98f3ce80af6cdee2233f9c9629add53c76","filename":"src/operator/elementAt.ts","status":"modified","additions":7,"deletions":6,"changes":13,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FelementAt.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FelementAt.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FelementAt.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,6 +1,7 @@\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n import {ArgumentOutOfRangeError} from '../util/ArgumentOutOfRangeError';\n+import {Observable} from '../Observable';\n \n /**\n  * Returns an Observable that emits the item at the specified index in the source Observable.\n@@ -9,13 +10,13 @@ import {ArgumentOutOfRangeError} from '../util/ArgumentOutOfRangeError';\n  * @param {any} [defaultValue] the default value returned for missing indices.\n  * @returns {Observable} an Observable that emits a single item, if it is found. Otherwise, will emit the default value if given.\n  */\n-export function elementAt(index: number, defaultValue?: any) {\n+export function elementAt<T>(index: number, defaultValue?: T): Observable<T> {\n   return this.lift(new ElementAtOperator(index, defaultValue));\n }\n \n-class ElementAtOperator<T, R> implements Operator<T, R> {\n+class ElementAtOperator<T> implements Operator<T, T> {\n \n-  constructor(private index: number, private defaultValue?: any) {\n+  constructor(private index: number, private defaultValue?: T) {\n     if (index < 0) {\n       throw new ArgumentOutOfRangeError;\n     }\n@@ -26,13 +27,13 @@ class ElementAtOperator<T, R> implements Operator<T, R> {\n   }\n }\n \n-class ElementAtSubscriber<T, R> extends Subscriber<T> {\n+class ElementAtSubscriber<T> extends Subscriber<T> {\n \n-  constructor(destination: Subscriber<T>, private index: number, private defaultValue?: any) {\n+  constructor(destination: Subscriber<T>, private index: number, private defaultValue?: T) {\n     super(destination);\n   }\n \n-  _next(x) {\n+  _next(x: T) {\n     if (this.index-- === 0) {\n       this.destination.next(x);\n       this.destination.complete();"},{"sha":"597e2f3001d697b532942c238e0451238ea52a38","filename":"src/operator/every.ts","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fevery.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fevery.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fevery.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -17,10 +17,8 @@ import {errorObject} from '../util/errorObject';\n export function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                          thisArg?: any): Observable<boolean> {\n   const source = this;\n-  let result;\n-\n   if (source._isScalar) {\n-    result = tryCatch(predicate).call(thisArg || this, source.value, 0, source);\n+    const result: boolean = tryCatch(predicate).call(thisArg || this, source.value, 0, source);\n     if (result === errorObject) {\n       return new ErrorObservable(errorObject.e, source.scheduler);\n     } else {\n@@ -30,7 +28,8 @@ export function every<T>(predicate: (value: T, index: number, source: Observable\n \n   if (source instanceof ArrayObservable) {\n     const array = (<ArrayObservable<T>>source).array;\n-    let result = tryCatch((array, predicate, thisArg) => array.every(<any>predicate, thisArg))(array, predicate, thisArg);\n+    const result = tryCatch((array: T[], predicate: (value: T, index: number, source: Observable<T>) => boolean, thisArg: any) =>\n+                                    array.every(<any>predicate, thisArg))(array, predicate, thisArg);\n     if (result === errorObject) {\n       return new ErrorObservable(errorObject.e, source.scheduler);\n     } else {"},{"sha":"366b14b6d66f622a7941ce251b2113e08d498226","filename":"src/operator/exhaust.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fexhaust.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fexhaust.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fexhaust.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -16,17 +16,17 @@ export function exhaust<T>(): Observable<T> {\n   return this.lift(new SwitchFirstOperator());\n }\n \n-class SwitchFirstOperator<T, R> implements Operator<T, R> {\n-  call(subscriber: Subscriber<R>): Subscriber<T> {\n+class SwitchFirstOperator<T> implements Operator<T, T> {\n+  call(subscriber: Subscriber<T>): Subscriber<T> {\n     return new SwitchFirstSubscriber(subscriber);\n   }\n }\n \n-class SwitchFirstSubscriber<T, R> extends OuterSubscriber<T, R> {\n+class SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n   private hasCompleted: boolean = false;\n   private hasSubscription: boolean = false;\n \n-  constructor(destination: Subscriber<R>) {\n+  constructor(destination: Subscriber<T>) {\n     super(destination);\n   }\n "},{"sha":"33b50190200d455519472ec4800f5dc381074881","filename":"src/operator/exhaustMap.ts","status":"modified","additions":10,"deletions":12,"changes":22,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FexhaustMap.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FexhaustMap.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FexhaustMap.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -14,22 +14,20 @@ import {subscribeToResult} from '../util/subscribeToResult';\n  * @returns {Observable} an Observable containing all the projected Observables of each item of the source concatenated together.\n  */\n export function exhaustMap<T, R, R2>(project: (value: T, index: number) => Observable<R>,\n-                                     resultSelector?: (outerValue: T,\n-                                                       innerValue: R,\n-                                                       outerIndex: number,\n-                                                       innerIndex: number) => R2): Observable<R> {\n+                                     resultSelector?: (\n+                                            outerValue: T,\n+                                            innerValue: R,\n+                                            outerIndex: number,\n+                                            innerIndex: number) => R2): Observable<R2> {\n   return this.lift(new SwitchFirstMapOperator(project, resultSelector));\n }\n \n-class SwitchFirstMapOperator<T, R, R2> implements Operator<T, R> {\n+class SwitchFirstMapOperator<T, R, R2> implements Operator<T, R2> {\n   constructor(private project: (value: T, index: number) => Observable<R>,\n-              private resultSelector?: (outerValue: T,\n-                                        innerValue: R,\n-                                        outerIndex: number,\n-                                        innerIndex: number) => R2) {\n+              private resultSelector?: (outerValue: T, innerValue: R, outerIndex: number, innerIndex: number) => R2) {\n   }\n \n-  call(subscriber: Subscriber<R>): Subscriber<T> {\n+  call(subscriber: Subscriber<R2>): Subscriber<T> {\n     return new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector);\n   }\n }\n@@ -39,7 +37,7 @@ class SwitchFirstMapSubscriber<T, R, R2> extends OuterSubscriber<T, R> {\n   private hasCompleted: boolean = false;\n   private index: number = 0;\n \n-  constructor(destination: Subscriber<R>,\n+  constructor(destination: Subscriber<R2>,\n               private project: (value: T, index: number) => Observable<R>,\n               private resultSelector?: (outerValue: T, innerValue: R, outerIndex: number, innerIndex: number) => R2) {\n     super(destination);\n@@ -51,7 +49,7 @@ class SwitchFirstMapSubscriber<T, R, R2> extends OuterSubscriber<T, R> {\n       const destination = this.destination;\n       let result = tryCatch(this.project)(value, index);\n       if (result === errorObject) {\n-        destination.error(result.e);\n+        destination.error(errorObject.e);\n       } else {\n         this.hasSubscription = true;\n         this.add(subscribeToResult(this, result, value, index));"},{"sha":"598c92e148507af4725791f792979b300255ce3a","filename":"src/operator/expand-support.ts","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fexpand-support.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fexpand-support.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fexpand-support.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,12 +1,12 @@\n import {Operator} from '../Operator';\n-import {Observable} from '../Observable';\n import {Scheduler} from '../Scheduler';\n import {Subscriber} from '../Subscriber';\n import {tryCatch} from '../util/tryCatch';\n import {errorObject} from '../util/errorObject';\n import {Subscription} from '../Subscription';\n import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n+import {Observable} from '../Observable';\n \n export class ExpandOperator<T, R> implements Operator<T, R> {\n   constructor(private project: (value: T, index: number) => Observable<R>,\n@@ -52,7 +52,7 @@ export class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n       destination.next(value);\n       let result = tryCatch(this.project)(value, index);\n       if (result === errorObject) {\n-        destination.error(result.e);\n+        destination.error(errorObject.e);\n       } else if (!this.scheduler) {\n         this.subscribeToProjection(result, value, index);\n       } else {\n@@ -64,7 +64,7 @@ export class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n     }\n   }\n \n-  private subscribeToProjection(result, value: T, index: number): void {\n+  private subscribeToProjection(result: any, value: T, index: number): void {\n     if (result._isScalar) {\n       this._next(result.value);\n     } else {"},{"sha":"cf134392938ad4ef41c2c28a3e15223a6f5f864d","filename":"src/operator/filter.ts","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Ffilter.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Ffilter.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Ffilter.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -2,6 +2,7 @@ import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n import {tryCatch} from '../util/tryCatch';\n import {errorObject} from '../util/errorObject';\n+import {Observable} from '../Observable';\n \n /**\n  * Similar to the well-known `Array.prototype.filter` method, this operator filters values down to a set\n@@ -12,12 +13,12 @@ import {errorObject} from '../util/errorObject';\n  * @param {any} [thisArg] an optional argument to determine the value of `this` in the `select` function\n  * @returns {Observable} an observable of values allowed by the select function\n  */\n-export function filter<T>(select: (x: T, ix?: number) => boolean, thisArg?: any) {\n+export function filter<T>(select: (value: T, index: number) => boolean, thisArg?: any): Observable<T> {\n   return this.lift(new FilterOperator(select, thisArg));\n }\n \n-class FilterOperator<T, R> implements Operator<T, R> {\n-  constructor(private select: (x: T, ix?: number) => boolean, private thisArg?: any) {\n+class FilterOperator<T> implements Operator<T, T> {\n+  constructor(private select: (value: T, index: number) => boolean, private thisArg?: any) {\n   }\n \n   call(subscriber: Subscriber<T>): Subscriber<T> {\n@@ -28,14 +29,13 @@ class FilterOperator<T, R> implements Operator<T, R> {\n class FilterSubscriber<T> extends Subscriber<T> {\n \n   count: number = 0;\n-  select: (x: T, ix?: number) => boolean;\n \n-  constructor(destination: Subscriber<T>, select: (x: T, ix?: number) => boolean, private thisArg: any) {\n+  constructor(destination: Subscriber<T>, private select: (value: T, index: number) => boolean, private thisArg: any) {\n     super(destination);\n     this.select = select;\n   }\n \n-  _next(x) {\n+  _next(x: T) {\n     const result = tryCatch(this.select).call(this.thisArg || this, x, this.count++);\n     if (result === errorObject) {\n       this.destination.error(errorObject.e);"},{"sha":"8d4ee5d04af868f57a3e01aea01d25d94ae67c3e","filename":"src/operator/finally.ts","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Ffinally.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Ffinally.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Ffinally.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,18 +1,19 @@\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n import {Subscription} from '../Subscription';\n+import {Observable} from '../Observable';\n \n /**\n  * Returns an Observable that mirrors the source Observable, but will call a specified function when\n  * the source terminates on complete or error.\n  * @param {function} finallySelector function to be called when source terminates.\n  * @returns {Observable} an Observable that mirrors the source, but will call the specified function on termination.\n  */\n-export function _finally<T>(finallySelector: () => void) {\n+export function _finally<T>(finallySelector: () => void): Observable<T> {\n   return this.lift(new FinallyOperator(finallySelector));\n }\n \n-class FinallyOperator<T, R> implements Operator<T, R> {\n+class FinallyOperator<T> implements Operator<T, T> {\n   constructor(private finallySelector: () => void) {\n   }\n "},{"sha":"bc9866f4a135af1bd11f4a5d8e756c27d42a4716","filename":"src/operator/find-support.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Ffind-support.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Ffind-support.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Ffind-support.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -5,7 +5,7 @@ import {Subscriber} from '../Subscriber';\n import {tryCatch} from '../util/tryCatch';\n import {errorObject} from '../util/errorObject';\n \n-export class FindValueOperator<T, R> implements Operator<T, R> {\n+export class FindValueOperator<T> implements Operator<T, T> {\n   constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n               private source: Observable<T>,\n               private yieldIndex: boolean,"},{"sha":"c2fbffaae55aaeb76df1d462c9e12f7a71c9381d","filename":"src/operator/first.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Ffirst.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Ffirst.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Ffirst.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -13,7 +13,7 @@ import {EmptyError} from '../util/EmptyError';\n  */\n export function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                             resultSelector?: (value: T, index: number) => R,\n-                            defaultValue?: any): Observable<T> | Observable<R> {\n+                            defaultValue?: R): Observable<T> | Observable<R> {\n   return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));\n }\n "},{"sha":"814d8837c9ff53aa2afa4b9b15ada24eec926917","filename":"src/operator/groupBy-support.ts","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FgroupBy-support.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FgroupBy-support.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FgroupBy-support.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -27,8 +27,8 @@ export class RefCountSubscription extends Subscription {\n   }\n }\n \n-export class GroupedObservable<T> extends Observable<T> {\n-  constructor(public key: string,\n+export class GroupedObservable<K, T> extends Observable<T> {\n+  constructor(public key: K,\n               private groupSubject: Subject<T>,\n               private refCountSubscription?: RefCountSubscription) {\n     super();\n@@ -61,4 +61,3 @@ export class InnerRefCountSubscription extends Subscription {\n     }\n   }\n }\n-"},{"sha":"6e6fb615cd00b0072bd68f3e81a9b1dd31212df9","filename":"src/operator/groupBy.ts","status":"modified","additions":24,"deletions":24,"changes":48,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FgroupBy.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FgroupBy.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FgroupBy.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -8,21 +8,21 @@ import {RefCountSubscription, GroupedObservable} from './groupBy-support';\n import {tryCatch} from '../util/tryCatch';\n import {errorObject} from '../util/errorObject';\n \n-export function groupBy<T, R>(keySelector: (value: T) => string,\n-                              elementSelector?: (value: T) => R,\n-                              durationSelector?: (grouped: GroupedObservable<R>) => Observable<any>): GroupByObservable<T, R> {\n-  return new GroupByObservable<T, R>(this, keySelector, elementSelector, durationSelector);\n+export function groupBy<T, K, R>(keySelector: (value: T) => K,\n+                                 elementSelector?: (value: T) => R,\n+                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): GroupByObservable<T, K, R> {\n+  return new GroupByObservable(this, keySelector, elementSelector, durationSelector);\n }\n \n-export class GroupByObservable<T, R> extends Observable<GroupedObservable<R>> {\n+export class GroupByObservable<T, K, R> extends Observable<GroupedObservable<K, R>> {\n   constructor(public source: Observable<T>,\n-              private keySelector: (value: T) => string,\n+              private keySelector: (value: T) => K,\n               private elementSelector?: (value: T) => R,\n-              private durationSelector?: (grouped: GroupedObservable<R>) => Observable<any>) {\n+              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>) {\n     super();\n   }\n \n-  _subscribe(subscriber: Subscriber<any>): Subscription | Function | void {\n+  _subscribe(subscriber: Subscriber<any>): Subscription {\n     const refCountSubscription = new RefCountSubscription();\n     const groupBySubscriber = new GroupBySubscriber(\n       subscriber, refCountSubscription, this.keySelector, this.elementSelector, this.durationSelector\n@@ -32,14 +32,14 @@ export class GroupByObservable<T, R> extends Observable<GroupedObservable<R>> {\n   }\n }\n \n-class GroupBySubscriber<T, R> extends Subscriber<T> {\n-  private groups = null;\n+class GroupBySubscriber<T, K, R> extends Subscriber<T> {\n+  private groups: Map<K, Subject<T|R>> = null;\n \n   constructor(destination: Subscriber<R>,\n               private refCountSubscription: RefCountSubscription,\n-              private keySelector: (value: T) => string,\n+              private keySelector: (value: T) => K,\n               private elementSelector?: (value: T) => R,\n-              private durationSelector?: (grouped: GroupedObservable<R>) => Observable<any>) {\n+              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>) {\n     super();\n     this.destination = destination;\n     this.add(destination);\n@@ -48,7 +48,7 @@ class GroupBySubscriber<T, R> extends Subscriber<T> {\n   _next(x: T): void {\n     let key = tryCatch(this.keySelector)(x);\n     if (key === errorObject) {\n-      this.error(key.e);\n+      this.error(errorObject.e);\n     } else {\n       let groups = this.groups;\n       const elementSelector = this.elementSelector;\n@@ -58,16 +58,16 @@ class GroupBySubscriber<T, R> extends Subscriber<T> {\n         groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n       }\n \n-      let group: Subject<T|R> = groups.get(key);\n+      let group = groups.get(key);\n \n       if (!group) {\n-        groups.set(key, group = new Subject());\n-        let groupedObservable = new GroupedObservable<R>(key, group, this.refCountSubscription);\n+        groups.set(key, group = new Subject<T|R>());\n+        let groupedObservable = new GroupedObservable(key, group, this.refCountSubscription);\n \n         if (durationSelector) {\n-          let duration = tryCatch(durationSelector)(new GroupedObservable<R>(key, group));\n+          let duration = tryCatch(durationSelector)(new GroupedObservable<K, R>(key, <any>group));\n           if (duration === errorObject) {\n-            this.error(duration.e);\n+            this.error(errorObject.e);\n           } else {\n             this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n           }\n@@ -79,7 +79,7 @@ class GroupBySubscriber<T, R> extends Subscriber<T> {\n       if (elementSelector) {\n         let value = tryCatch(elementSelector)(x);\n         if (value === errorObject) {\n-          this.error(value.e);\n+          this.error(errorObject.e);\n         } else {\n           group.next(value);\n         }\n@@ -105,21 +105,21 @@ class GroupBySubscriber<T, R> extends Subscriber<T> {\n     if (groups) {\n       groups.forEach((group, key) => {\n         group.complete();\n-        this.removeGroup(group);\n+        this.removeGroup(key);\n       });\n     }\n     this.destination.complete();\n   }\n \n-  removeGroup(key: string): void {\n+  removeGroup(key: K): void {\n     this.groups.delete(key);\n   }\n }\n \n-class GroupDurationSubscriber<T> extends Subscriber<T> {\n-  constructor(private key: string,\n+class GroupDurationSubscriber<K, T> extends Subscriber<T> {\n+  constructor(private key: K,\n               private group: Subject<T>,\n-              private parent: GroupBySubscriber<any, T>) {\n+              private parent: GroupBySubscriber<any, K, T>) {\n     super();\n   }\n "},{"sha":"3499dcf31a702d4367a0d013da9e361793aeb635","filename":"src/operator/ignoreElements.ts","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FignoreElements.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FignoreElements.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FignoreElements.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,8 +1,9 @@\n+import {Observable} from '../Observable';\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n import {noop} from '../util/noop';\n \n-export function ignoreElements() {\n+export function ignoreElements<T>(): Observable<T> {\n   return this.lift(new IgnoreElementsOperator());\n };\n "},{"sha":"4f18cdde658aa22df31e31d83c9e321fe68d8d85","filename":"src/operator/isEmpty.ts","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FisEmpty.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FisEmpty.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FisEmpty.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,19 +1,20 @@\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n+import {Observable} from '../Observable';\n \n-export function isEmpty() {\n+export function isEmpty(): Observable<boolean> {\n   return this.lift(new IsEmptyOperator());\n }\n \n-class IsEmptyOperator<T, R> implements Operator<T, R> {\n-  call (observer: Subscriber<boolean>): Subscriber<T> {\n-    return new IsEmptySubscriber<T>(observer);\n+class IsEmptyOperator<T> implements Operator<boolean, boolean> {\n+  call (observer: Subscriber<T>): Subscriber<boolean> {\n+    return new IsEmptySubscriber(observer);\n   }\n }\n \n-class IsEmptySubscriber<T> extends Subscriber<T> {\n+class IsEmptySubscriber extends Subscriber<boolean> {\n \n-  constructor(destination: Subscriber<boolean>) {\n+  constructor(destination: Subscriber<any>) {\n     super(destination);\n   }\n \n@@ -24,7 +25,7 @@ class IsEmptySubscriber<T> extends Subscriber<T> {\n     destination.complete();\n   }\n \n-  _next(value: T) {\n+  _next(value: boolean) {\n     this.notifyComplete(false);\n   }\n "},{"sha":"7aef0e74dd3d154290fd69b06745f74b77bc6967","filename":"src/operator/last.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Flast.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Flast.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Flast.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -7,7 +7,7 @@ import {EmptyError} from '../util/EmptyError';\n \n export function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n-                           defaultValue?: any): Observable<T> | Observable<R> {\n+                           defaultValue?: R): Observable<T> | Observable<R> {\n   return this.lift(new LastOperator(predicate, resultSelector, defaultValue, this));\n }\n \n@@ -24,7 +24,7 @@ class LastOperator<T, R> implements Operator<T, R> {\n }\n \n class LastSubscriber<T, R> extends Subscriber<T> {\n-  private lastValue: T;\n+  private lastValue: T | R;\n   private hasValue: boolean = false;\n   private index: number = 0;\n "},{"sha":"52c3f89aeb8733009b824e490b7d66c60c9c0e33","filename":"src/operator/map.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmap.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmap.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fmap.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -12,15 +12,15 @@ import {errorObject} from '../util/errorObject';\n  * @param {any} [thisArg] an optional argument to define what `this` is in the project function\n  * @returns {Observable} a observable of projected values\n  */\n-export function map<T, R>(project: (x: T, ix?: number) => R, thisArg?: any): Observable<R> {\n+export function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): Observable<R> {\n   if (typeof project !== 'function') {\n     throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n   }\n   return this.lift(new MapOperator(project, thisArg));\n }\n \n class MapOperator<T, R> implements Operator<T, R> {\n-  constructor(private project: (x: T, ix?: number) => R, private thisArg: any) {\n+  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n   }\n \n   call(subscriber: Subscriber<R>): Subscriber<T> {\n@@ -32,12 +32,12 @@ class MapSubscriber<T, R> extends Subscriber<T> {\n   count: number = 0;\n \n   constructor(destination: Subscriber<R>,\n-              private project: (x: T, ix?: number) => R,\n+              private project: (value: T, index: number) => R,\n               private thisArg: any) {\n     super(destination);\n   }\n \n-  _next(x) {\n+  _next(x: T) {\n     const result = tryCatch(this.project).call(this.thisArg || this, x, this.count++);\n     if (result === errorObject) {\n       this.error(errorObject.e);"},{"sha":"cf9cc5affdb84b4f95b855bc3f13a8015f06a5eb","filename":"src/operator/mapTo.ts","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmapTo.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmapTo.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FmapTo.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,12 +1,13 @@\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n+import {Observable} from '../Observable';\n \n /**\n  * Maps every value to the same value every time.\n  * @param {any} value the value to map each incoming value to\n  * @returns {Observable} an observable of the passed value that emits everytime the source does\n  */\n-export function mapTo<T, R>(value: R) {\n+export function mapTo<T, R>(value: R): Observable<R> {\n   return this.lift(new MapToOperator(value));\n }\n \n@@ -32,7 +33,7 @@ class MapToSubscriber<T, R> extends Subscriber<T> {\n     this.value = value;\n   }\n \n-  _next(x) {\n+  _next(x: T) {\n     this.destination.next(this.value);\n   }\n }"},{"sha":"c937a2fc55e221f68c88befcff009447ea4e3b04","filename":"src/operator/materialize.ts","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmaterialize.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmaterialize.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fmaterialize.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -7,14 +7,14 @@ export function materialize<T>(): Observable<Notification<T>> {\n   return this.lift(new MaterializeOperator());\n }\n \n-class MaterializeOperator<T, R> implements Operator<T, R> {\n-  call(subscriber: Subscriber<T>): Subscriber<T> {\n+class MaterializeOperator<T> implements Operator<T, Notification<T>> {\n+  call(subscriber: Subscriber<Notification<T>>): Subscriber<T> {\n     return new MaterializeSubscriber(subscriber);\n   }\n }\n \n class MaterializeSubscriber<T> extends Subscriber<T> {\n-  constructor(destination: Subscriber<T>) {\n+  constructor(destination: Subscriber<Notification<T>>) {\n     super(destination);\n   }\n "},{"sha":"eb625de16b171a36b20ccd53076518984483f09b","filename":"src/operator/max.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmax.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmax.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fmax.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,8 +1,8 @@\n import {Observable} from '../Observable';\n import {ReduceOperator} from './reduce-support';\n \n-export function max<T, R>(comparer?: (x: R, y: T) => R): Observable<R> {\n-  const max = (typeof comparer === 'function')\n+export function max<T>(comparer?: (value1: T, value2: T) => T): Observable<T> {\n+  const max: typeof comparer = (typeof comparer === 'function')\n     ? comparer\n     : (x, y) => x > y ? x : y;\n   return this.lift(new ReduceOperator(max));"},{"sha":"85e08096eaba4286b9896676a98508ea7a2c4baf","filename":"src/operator/merge-static.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmerge-static.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmerge-static.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fmerge-static.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -4,7 +4,7 @@ import {ArrayObservable} from '../observable/fromArray';\n import {MergeAllOperator} from './mergeAll-support';\n import {isScheduler} from '../util/isScheduler';\n \n-export function merge<R>(...observables: Array<Observable<any> | Scheduler | number>): Observable<R> {\n+export function merge<T, R>(...observables: Array<Observable<any> | Scheduler | number>): Observable<R> {\n  let concurrent = Number.POSITIVE_INFINITY;\n  let scheduler: Scheduler = null;\n   let last: any = observables[observables.length - 1];\n@@ -21,5 +21,5 @@ export function merge<R>(...observables: Array<Observable<any> | Scheduler | num\n     return <Observable<R>>observables[0];\n   }\n \n-  return new ArrayObservable(observables, scheduler).lift(new MergeAllOperator(concurrent));\n+  return new ArrayObservable<Observable<T>>(<any>observables, scheduler).lift<Observable<T>, R>(new MergeAllOperator<R>(concurrent));\n }"},{"sha":"0a824c989ee0e97cb20a7070f889ee7b2c6ff8b8","filename":"src/operator/merge.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmerge.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmerge.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fmerge.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -2,7 +2,7 @@ import {Observable} from '../Observable';\n import {merge as mergeStatic} from './merge-static';\n import {Scheduler} from '../Scheduler';\n \n-export function merge<R>(...observables: (Observable<any>|Scheduler|number)[]): Observable<R> {\n+export function merge<T, R>(...observables: Array<Observable<any> | Scheduler | number>): Observable<R> {\n   observables.unshift(this);\n   return mergeStatic.apply(this, observables);\n }"},{"sha":"e5f866c07dcf5a4a807320f4091d5e5bb34b44de","filename":"src/operator/mergeAll-support.ts","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeAll-support.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeAll-support.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FmergeAll-support.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -5,7 +5,7 @@ import {Subscription} from '../Subscription';\n import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n \n-export class MergeAllOperator<T, R> implements Operator<T, R> {\n+export class MergeAllOperator<T> implements Operator<Observable<T>, T> {\n   constructor(private concurrent: number) {\n   }\n \n@@ -14,22 +14,22 @@ export class MergeAllOperator<T, R> implements Operator<T, R> {\n   }\n }\n \n-export class MergeAllSubscriber<T, R> extends OuterSubscriber<T, R> {\n+export class MergeAllSubscriber<T> extends OuterSubscriber<Observable<T>, T> {\n   private hasCompleted: boolean = false;\n-  private buffer: Observable<any>[] = [];\n+  private buffer: Observable<T>[] = [];\n   private active: number = 0;\n \n   constructor(destination: Observer<T>, private concurrent: number) {\n     super(destination);\n   }\n \n-  _next(observable: any) {\n+  _next(observable: Observable<T>) {\n     if (this.active < this.concurrent) {\n       if (observable._isScalar) {\n-        this.destination.next(observable.value);\n+        this.destination.next((<any>observable).value);\n       } else {\n         this.active++;\n-        this.add(subscribeToResult<T, R>(this, observable));\n+        this.add(subscribeToResult<Observable<T>, T>(this, observable));\n       }\n     } else {\n       this.buffer.push(observable);"},{"sha":"337dfa9efa41663a31977265ca53b2023c5e234e","filename":"src/operator/mergeAll.ts","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeAll.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeAll.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FmergeAll.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,6 +1,5 @@\n-import {Observable} from '../Observable';\n import {MergeAllOperator} from './mergeAll-support';\n \n-export function mergeAll<R>(concurrent: number = Number.POSITIVE_INFINITY): Observable<R> {\n+export function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): T {\n   return this.lift(new MergeAllOperator(concurrent));\n }"},{"sha":"5828f1380fa925b3ab46c4691e435e37baea210c","filename":"src/operator/mergeMap-support.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeMap-support.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeMap-support.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FmergeMap-support.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -39,7 +39,7 @@ export class MergeMapSubscriber<T, R, R2> extends OuterSubscriber<T, R> {\n       const ish = tryCatch(this.project)(value, index);\n       const destination = this.destination;\n       if (ish === errorObject) {\n-        destination.error(ish.e);\n+        destination.error(errorObject.e);\n       } else {\n         this.active++;\n         this._innerSub(ish, value, index);"},{"sha":"13b5395220bac28cf4ab64f76b50d15675ea61f2","filename":"src/operator/mergeMap.ts","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeMap.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeMap.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FmergeMap.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -2,10 +2,7 @@ import {Observable} from '../Observable';\n import {MergeMapOperator} from './mergeMap-support';\n \n export function mergeMap<T, R, R2>(project: (value: T, index: number) => Observable<R>,\n-                                   resultSelector?: (outerValue: T,\n-                                                     innerValue: R,\n-                                                     outerIndex: number,\n-                                                     innerIndex: number) => R,\n-                                   concurrent: number = Number.POSITIVE_INFINITY) {\n-  return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n+                                   resultSelector?: (outerValue: T, innerValue: R, outerIndex: number, innerIndex: number) => R2 | number,\n+                                   concurrent: number = Number.POSITIVE_INFINITY): Observable<R2> {\n+  return this.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n }"},{"sha":"e0752e698ffe4235cd4ccdd234e5e97fac7bec27","filename":"src/operator/mergeMapTo-support.ts","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeMapTo-support.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeMapTo-support.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FmergeMapTo-support.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -8,13 +8,13 @@ import {Subscription} from '../Subscription';\n import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n \n-export class MergeMapToOperator<T, R, R2> implements Operator<T, R> {\n-  constructor(private ish: any,\n+export class MergeMapToOperator<T, R, R2> implements Operator<Observable<T>, R2> {\n+  constructor(private ish: Observable<R> | Promise<R>,\n               private resultSelector?: (outerValue: T, innerValue: R, outerIndex: number, innerIndex: number) => R2,\n               private concurrent: number = Number.POSITIVE_INFINITY) {\n     }\n \n-  call(observer: Subscriber<R>): Subscriber<T> {\n+  call(observer: Subscriber<R2>): Subscriber<T> {\n     return new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent);\n   }\n }\n@@ -25,13 +25,12 @@ export class MergeMapToSubscriber<T, R, R2> extends OuterSubscriber<T, R> {\n   private active: number = 0;\n   protected index: number = 0;\n \n-  constructor(destination: Subscriber<R>,\n-              private ish: any,\n+  constructor(destination: Subscriber<R2>,\n+              private ish: Observable<R> | Promise<R>,\n               private resultSelector?: (outerValue: T, innerValue: R, outerIndex: number, innerIndex: number) => R2,\n               private concurrent: number = Number.POSITIVE_INFINITY) {\n     super(destination);\n   }\n-\n   _next(value: any): void {\n     if (this.active < this.concurrent) {\n       const resultSelector = this.resultSelector;"},{"sha":"04ca9e344947a7335e15c1e024b8f9615f8bbf26","filename":"src/operator/mergeMapTo.ts","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeMapTo.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeMapTo.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FmergeMapTo.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -2,10 +2,7 @@ import {Observable} from '../Observable';\n import {MergeMapToOperator} from './mergeMapTo-support';\n \n export function mergeMapTo<T, R, R2>(observable: Observable<R>,\n-                                     resultSelector?: (outerValue: T,\n-                                                       innerValue: R,\n-                                                       outerIndex: number,\n-                                                       innerIndex: number) => R2,\n+                                     resultSelector?: (outerValue: T, innerValue: R, outerIndex: number, innerIndex: number) => R2 | number,\n                                      concurrent: number = Number.POSITIVE_INFINITY): Observable<R2> {\n-  return this.lift(new MergeMapToOperator(observable, resultSelector, concurrent));\n+  return this.lift(new MergeMapToOperator(observable, <any>resultSelector, concurrent));\n }"},{"sha":"318696f784cda9860f03350e06a904f35f2fe678","filename":"src/operator/mergeScan.ts","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeScan.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FmergeScan.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FmergeScan.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -7,14 +7,14 @@ import {errorObject} from '../util/errorObject';\n import {subscribeToResult} from '../util/subscribeToResult';\n import {OuterSubscriber} from '../OuterSubscriber';\n \n-export function mergeScan<T, R>(project: (acc: R, x: T) => Observable<R>,\n+export function mergeScan<T, R>(project: (acc: R, value: T) => Observable<R>,\n                                 seed: R,\n-                                concurrent: number = Number.POSITIVE_INFINITY) {\n+                                concurrent: number = Number.POSITIVE_INFINITY): Observable<R> {\n   return this.lift(new MergeScanOperator(project, seed, concurrent));\n }\n \n export class MergeScanOperator<T, R> implements Operator<T, R> {\n-  constructor(private project: (acc: R, x: T) => Observable<R>,\n+  constructor(private project: (acc: R, value: T) => Observable<R>,\n               private seed: R,\n               private concurrent: number) {\n   }\n@@ -34,7 +34,7 @@ export class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n   protected index: number = 0;\n \n   constructor(destination: Subscriber<R>,\n-              private project: (acc: R, x: T) => Observable<R>,\n+              private project: (acc: R, value: T) => Observable<R>,\n               private acc: R,\n               private concurrent: number) {\n     super(destination);\n@@ -46,7 +46,7 @@ export class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n       const ish = tryCatch(this.project)(this.acc, value);\n       const destination = this.destination;\n       if (ish === errorObject) {\n-        destination.error(ish.e);\n+        destination.error(errorObject.e);\n       } else {\n         this.active++;\n         this._innerSub(ish, value, index);"},{"sha":"ffb3755a4fc0983037da3321a3b2ea90a5cc59ef","filename":"src/operator/min.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmin.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmin.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fmin.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,8 +1,8 @@\n import {Observable} from '../Observable';\n import {ReduceOperator} from './reduce-support';\n \n-export function min<T, R>(comparer?: (x: R, y: T) => R): Observable<R> {\n-  const min = (typeof comparer === 'function')\n+export function min<T>(comparer?: (value1: T, value2: T) => T): Observable<T> {\n+  const min: typeof comparer = (typeof comparer === 'function')\n     ? comparer\n     : (x, y) => x < y ? x : y;\n   return this.lift(new ReduceOperator(min));"},{"sha":"3f0ee213241513b7fb166a0878e8c25d92c89e53","filename":"src/operator/multicast.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmulticast.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fmulticast.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fmulticast.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,7 +1,7 @@\n import {Subject} from '../Subject';\n import {ConnectableObservable} from '../observable/ConnectableObservable';\n \n-export function multicast<T>(subjectOrSubjectFactory: Subject<T>|(() => Subject<T>)) {\n+export function multicast<T>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>)): ConnectableObservable<T> {\n   let subjectFactory: () => Subject<T>;\n   if (typeof subjectOrSubjectFactory === 'function') {\n     subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;"},{"sha":"7e3ff5f5816e29e9315a09f0909e5af63578b102","filename":"src/operator/observeOn-support.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FobserveOn-support.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FobserveOn-support.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FobserveOn-support.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -4,7 +4,7 @@ import {Observer} from '../Observer';\n import {Subscriber} from '../Subscriber';\n import {Notification} from '../Notification';\n \n-export class ObserveOnOperator<T, R> implements Operator<T, R> {\n+export class ObserveOnOperator<T> implements Operator<T, T> {\n   constructor(private scheduler: Scheduler, private delay: number = 0) {\n   }\n "},{"sha":"000196116d763b1b9ec5d75de3c4e578c5fa0bac","filename":"src/operator/partition.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fpartition.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fpartition.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fpartition.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -2,7 +2,7 @@ import {not} from '../util/not';\n import {filter} from './filter';\n import {Observable} from '../Observable';\n \n-export function partition<T>(predicate: (x: any, i?: any, a?: any) => boolean, thisArg?: any): Observable<T>[] {\n+export function partition<T>(predicate: (value: T) => boolean, thisArg?: any): [Observable<T>, Observable<T>] {\n   return [\n     filter.call(this, predicate),\n     filter.call(this, not(predicate, thisArg))"},{"sha":"c694996717b951cbfabebc90374b99876b7c2d5f","filename":"src/operator/publish.ts","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fpublish.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fpublish.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fpublish.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,6 +1,7 @@\n import {Subject} from '../Subject';\n import {multicast} from './multicast';\n+import {ConnectableObservable} from '../observable/ConnectableObservable';\n \n-export function publish() {\n-  return multicast.call(this, new Subject());\n+export function publish<T>(): ConnectableObservable<T> {\n+  return multicast.call(this, new Subject<T>());\n }"},{"sha":"70030175f0c65e3cb32723f64dec50d36a7d5d29","filename":"src/operator/publishBehavior.ts","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FpublishBehavior.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FpublishBehavior.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FpublishBehavior.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,6 +1,7 @@\n import {BehaviorSubject} from '../subject/BehaviorSubject';\n import {multicast} from './multicast';\n+import {ConnectableObservable} from '../observable/ConnectableObservable';\n \n-export function publishBehavior(value: any) {\n-  return multicast.call(this, new BehaviorSubject(value));\n+export function publishBehavior<T>(value: T): ConnectableObservable<T> {\n+  return multicast.call(this, new BehaviorSubject<T>(value));\n }"},{"sha":"2f02a35ae6170c8581cf1427b8107130a5dda66d","filename":"src/operator/publishLast.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FpublishLast.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FpublishLast.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FpublishLast.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -3,5 +3,5 @@ import {multicast} from './multicast';\n import {ConnectableObservable} from '../observable/ConnectableObservable';\r\n \r\n export function publishLast<T>(): ConnectableObservable<T> {\r\n-  return multicast.call(this, new AsyncSubject());\r\n-}\n\\ No newline at end of file\n+  return multicast.call(this, new AsyncSubject<T>());\r\n+}\r"},{"sha":"556c7539d518038083834f05be444982caf7682c","filename":"src/operator/publishReplay.ts","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FpublishReplay.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FpublishReplay.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FpublishReplay.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,9 +1,10 @@\n import {ReplaySubject} from '../subject/ReplaySubject';\n import {Scheduler} from '../Scheduler';\n import {multicast} from './multicast';\n+import {ConnectableObservable} from '../observable/ConnectableObservable';\n \n-export function publishReplay(bufferSize: number = Number.POSITIVE_INFINITY,\n-                              windowTime: number = Number.POSITIVE_INFINITY,\n-                              scheduler?: Scheduler) {\n-  return multicast.call(this, new ReplaySubject(bufferSize, windowTime, scheduler));\n+export function publishReplay<T>(bufferSize: number = Number.POSITIVE_INFINITY,\n+                                 windowTime: number = Number.POSITIVE_INFINITY,\n+                                 scheduler?: Scheduler): ConnectableObservable<T> {\n+  return multicast.call(this, new ReplaySubject<T>(bufferSize, windowTime, scheduler));\n }"},{"sha":"ce7f57c662cce10937742fb1cc223516c1158bbc","filename":"src/operator/reduce-support.ts","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Freduce-support.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Freduce-support.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Freduce-support.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -5,7 +5,7 @@ import {errorObject} from '../util/errorObject';\n \n export class ReduceOperator<T, R> implements Operator<T, R> {\n \n-  constructor(private project: (acc: R, x: T) => R, private seed?: R) {\n+  constructor(private project: (acc: R, value: T) => R, private seed?: R) {\n   }\n \n   call(subscriber: Subscriber<T>): Subscriber<T> {\n@@ -15,19 +15,19 @@ export class ReduceOperator<T, R> implements Operator<T, R> {\n \n export class ReduceSubscriber<T, R> extends Subscriber<T> {\n \n-  acc: R;\n+  acc: T | R;\n   hasSeed: boolean;\n   hasValue: boolean = false;\n-  project: (acc: R, x: T) => R;\n+  project: (acc: R, value: T) => R;\n \n-  constructor(destination: Subscriber<T>, project: (acc: R, x: T) => R, seed?: R) {\n+  constructor(destination: Subscriber<T>, project: (acc: R, value: T) => R, seed?: R) {\n     super(destination);\n     this.acc = seed;\n     this.project = project;\n     this.hasSeed = typeof seed !== 'undefined';\n   }\n \n-  _next(x) {\n+  _next(x: T) {\n     if (this.hasValue || (this.hasValue = this.hasSeed)) {\n       const result = tryCatch(this.project).call(this, this.acc, x);\n       if (result === errorObject) {"},{"sha":"7226ba1b78daeee3c9b8352eadd0b2b3576e3e7f","filename":"src/operator/reduce.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Freduce.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Freduce.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Freduce.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,6 +1,6 @@\n import {Observable} from '../Observable';\n import {ReduceOperator} from './reduce-support';\n \n-export function reduce<T, R>(project: (acc: R, x: T) => R, seed?: R): Observable<R> {\n+export function reduce<T, R>(project: (acc: R, value: T) => R, seed?: R): Observable<R> {\n   return this.lift(new ReduceOperator(project, seed));\n }"},{"sha":"0c9970a445b87528251b60c851ecfaec280a084f","filename":"src/operator/repeat.ts","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Frepeat.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Frepeat.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Frepeat.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -5,19 +5,19 @@ import {EmptyObservable} from '../observable/empty';\n \n export function repeat<T>(count: number = -1): Observable<T> {\n   if (count === 0) {\n-    return new EmptyObservable();\n+    return new EmptyObservable<T>();\n   } else if (count < 0) {\n     return this.lift(new RepeatOperator(-1, this));\n   } else {\n     return this.lift(new RepeatOperator(count - 1, this));\n   }\n }\n \n-class RepeatOperator<T, R> implements Operator<T, R> {\n+class RepeatOperator<T> implements Operator<T, T> {\n   constructor(private count: number,\n               private source: Observable<T>) {\n   }\n-  call(subscriber: Subscriber<R>): Subscriber<T> {\n+  call(subscriber: Subscriber<T>): Subscriber<T> {\n     return new RepeatSubscriber(subscriber, this.count, this.source);\n   }\n }\n@@ -43,4 +43,3 @@ class RepeatSubscriber<T> extends Subscriber<T> {\n     }\n   }\n }\n-"},{"sha":"89d55544a858a585e436b5018543747b56c16955","filename":"src/operator/retry.ts","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fretry.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fretry.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fretry.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -6,11 +6,12 @@ export function retry<T>(count: number = -1): Observable<T> {\n   return this.lift(new RetryOperator(count, this));\n }\n \n-class RetryOperator<T, R> implements Operator<T, R> {\n+class RetryOperator<T> implements Operator<T, T> {\n   constructor(private count: number,\n               private source: Observable<T>) {\n   }\n-  call(subscriber: Subscriber<R>): Subscriber<T> {\n+\n+  call(subscriber: Subscriber<T>): Subscriber<T> {\n     return new RetrySubscriber(subscriber, this.count, this.source);\n   }\n }"},{"sha":"c85593c3c7a834cae017d2d994cb09d23c96e1f6","filename":"src/operator/retryWhen.ts","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FretryWhen.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FretryWhen.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FretryWhen.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -9,16 +9,16 @@ import {errorObject} from '../util/errorObject';\n import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n \n-export function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>) {\n+export function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): Observable<T> {\n   return this.lift(new RetryWhenOperator(notifier, this));\n }\n \n-class RetryWhenOperator<T, R> implements Operator<T, R> {\n+class RetryWhenOperator<T> implements Operator<T, T> {\n   constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n               protected source: Observable<T>) {\n   }\n \n-  call(subscriber: Subscriber<R>): Subscriber<T> {\n+  call(subscriber: Subscriber<T>): Subscriber<T> {\n     return new RetryWhenSubscriber(subscriber, this.notifier, this.source);\n   }\n }"},{"sha":"1663b255155d7b1c0952224f682737769fc8fc4c","filename":"src/operator/sample.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fsample.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fsample.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fsample.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -9,11 +9,11 @@ export function sample<T>(notifier: Observable<any>): Observable<T> {\n   return this.lift(new SampleOperator(notifier));\n }\n \n-class SampleOperator<T, R> implements Operator<T, R> {\n+class SampleOperator<T> implements Operator<T, T> {\n   constructor(private notifier: Observable<any>) {\n   }\n \n-  call(subscriber: Subscriber<R>) {\n+  call(subscriber: Subscriber<T>) {\n     return new SampleSubscriber(subscriber, this.notifier);\n   }\n }"},{"sha":"b331aab2295b0003d0085884a00d3eba98e069f3","filename":"src/operator/sampleTime.ts","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FsampleTime.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FsampleTime.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FsampleTime.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -8,11 +8,11 @@ export function sampleTime<T>(delay: number, scheduler: Scheduler = asap): Obser\n   return this.lift(new SampleTimeOperator(delay, scheduler));\n }\n \n-class SampleTimeOperator<T, R> implements Operator<T, R> {\n+class SampleTimeOperator<T> implements Operator<T, T> {\n   constructor(private delay: number, private scheduler: Scheduler) {\n   }\n \n-  call(subscriber: Subscriber<R>) {\n+  call(subscriber: Subscriber<T>) {\n     return new SampleTimeSubscriber(subscriber, this.delay, this.scheduler);\n   }\n }\n@@ -39,7 +39,7 @@ class SampleTimeSubscriber<T> extends Subscriber<T> {\n   }\n }\n \n-function dispatchNotification<T>(state) {\n+function dispatchNotification<T>(state: any) {\n   let { subscriber, delay } = state;\n   subscriber.notifyNext();\n   (<any>this).schedule(state, delay);"},{"sha":"6c7a61c3f4b4b72acfd5105aecb7ef0569ba3957","filename":"src/operator/single.ts","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fsingle.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fsingle.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fsingle.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -7,13 +7,11 @@ import {tryCatch} from '../util/tryCatch';\n import {errorObject} from '../util/errorObject';\n import {EmptyError} from '../util/EmptyError';\n \n-export function single<T>(predicate?: (value: T,\n-                                       index: number,\n-                                       source: Observable<T>) => boolean): Observable<T> {\n+export function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T> {\n   return this.lift(new SingleOperator(predicate, this));\n }\n \n-class SingleOperator<T, R> implements Operator<T, R> {\n+class SingleOperator<T> implements Operator<T, T> {\n   constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n               private source?: Observable<T>) {\n   }\n@@ -34,7 +32,7 @@ class SingleSubscriber<T> extends Subscriber<T> {\n     super(destination);\n   }\n \n-  private applySingleValue(value): void {\n+  private applySingleValue(value: T): void {\n     if (this.seenValue) {\n       this.destination.error('Sequence contains more than one element');\n     } else {\n@@ -50,7 +48,7 @@ class SingleSubscriber<T> extends Subscriber<T> {\n     if (predicate) {\n       let result = tryCatch(predicate)(value, currentIndex, this.source);\n       if (result === errorObject) {\n-        this.destination.error(result.e);\n+        this.destination.error(errorObject.e);\n       } else if (result) {\n         this.applySingleValue(value);\n       }"},{"sha":"214c1089a1031b3ee39d4f9d7b5f197bf4733249","filename":"src/operator/skip.ts","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fskip.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fskip.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fskip.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,11 +1,12 @@\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n+import {Observable} from '../Observable';\n \n-export function skip(total) {\n+export function skip<T>(total: number): Observable<T> {\n   return this.lift(new SkipOperator(total));\n }\n \n-class SkipOperator<T, R> implements Operator<T, R> {\n+class SkipOperator<T> implements Operator<T, T> {\n   constructor(private total: number) {\n   }\n \n@@ -21,7 +22,7 @@ class SkipSubscriber<T> extends Subscriber<T> {\n     super(destination);\n   }\n \n-  _next(x) {\n+  _next(x: T) {\n     if (++this.count > this.total) {\n       this.destination.next(x);\n     }"},{"sha":"c368283790a96a1319ca2c6f05ea99fe76547bc8","filename":"src/operator/skipUntil.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FskipUntil.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FskipUntil.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FskipUntil.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -9,11 +9,11 @@ export function skipUntil<T>(notifier: Observable<any>): Observable<T> {\n   return this.lift(new SkipUntilOperator(notifier));\n }\n \n-class SkipUntilOperator<T, R> implements Operator<T, R> {\n+class SkipUntilOperator<T> implements Operator<T, T> {\n   constructor(private notifier: Observable<any>) {\n   }\n \n-  call(subscriber: Subscriber<R>): Subscriber<T> {\n+  call(subscriber: Subscriber<T>): Subscriber<T> {\n     return new SkipUntilSubscriber(subscriber, this.notifier);\n   }\n }"},{"sha":"11564e49eda85b8fa1f49234a871c11a42c4b72f","filename":"src/operator/skipWhile.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FskipWhile.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FskipWhile.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FskipWhile.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -4,12 +4,12 @@ import {Subscriber} from '../Subscriber';\n import {tryCatch} from '../util/tryCatch';\n import {errorObject} from '../util/errorObject';\n \n-export function skipWhile<T>(predicate: (x: T, index: number) => boolean): Observable<T> {\n+export function skipWhile<T>(predicate: (value: T, index: number) => boolean): Observable<T> {\n   return this.lift(new SkipWhileOperator(predicate));\n }\n \n class SkipWhileOperator<T, R> implements Operator<T, R> {\n-  constructor(private predicate: (x: T, index: number) => boolean) {\n+  constructor(private predicate: (value: T, index: number) => boolean) {\n   }\n \n   call(subscriber: Subscriber<T>): Subscriber<T> {\n@@ -22,7 +22,7 @@ class SkipWhileSubscriber<T> extends Subscriber<T> {\n   private index: number = 0;\n \n   constructor(destination: Subscriber<T>,\n-              private predicate: (x: T, index: number) => boolean) {\n+              private predicate: (value: T, index: number) => boolean) {\n     super(destination);\n   }\n \n@@ -32,7 +32,7 @@ class SkipWhileSubscriber<T> extends Subscriber<T> {\n       const index = this.index++;\n       const result = tryCatch(this.predicate)(value, index);\n       if (result === errorObject) {\n-        destination.error(result.e);\n+        destination.error(errorObject.e);\n       } else {\n         this.skipping = Boolean(result);\n       }"},{"sha":"b42194f5da5591260ab531ce084110b0f6b8b8eb","filename":"src/operator/startWith.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FstartWith.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FstartWith.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FstartWith.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -6,7 +6,7 @@ import {EmptyObservable} from '../observable/empty';\n import {concat} from './concat-static';\n import {isScheduler} from '../util/isScheduler';\n \n-export function startWith<T>(...array: (T | Scheduler)[]): Observable<T> {\n+export function startWith<T>(...array: Array<T | Scheduler>): Observable<T> {\n   let scheduler = <Scheduler>array[array.length - 1];\n   if (isScheduler(scheduler)) {\n     array.pop();\n@@ -16,10 +16,10 @@ export function startWith<T>(...array: (T | Scheduler)[]): Observable<T> {\n \n   const len = array.length;\n   if (len === 1) {\n-    return concat(new ScalarObservable(array[0], scheduler), this);\n+    return concat(new ScalarObservable<T>(<T>array[0], scheduler), <Observable<T>>this);\n   } else if (len > 1) {\n-    return concat(new ArrayObservable(array, scheduler), this);\n+    return concat(new ArrayObservable<T>(<T[]>array, scheduler), <Observable<T>>this);\n   } else {\n-    return concat(new EmptyObservable(scheduler), this);\n+    return concat(new EmptyObservable<T>(scheduler), <Observable<T>>this);\n   }\n }"},{"sha":"98a6248d6a646db89a5bedad7bdf31104c2c34bf","filename":"src/operator/subscribeOn.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FsubscribeOn.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FsubscribeOn.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FsubscribeOn.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -3,5 +3,5 @@ import {Observable} from '../Observable';\n import {SubscribeOnObservable} from '../observable/SubscribeOnObservable';\n \n export function subscribeOn<T>(scheduler: Scheduler, delay: number = 0): Observable<T> {\n-  return new SubscribeOnObservable(this, delay, scheduler);\n+  return new SubscribeOnObservable<T>(this, delay, scheduler);\n }"},{"sha":"30f184549edebe85e2610113a63b4114af774aab","filename":"src/operator/switch.ts","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fswitch.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fswitch.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fswitch.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -1,11 +1,10 @@\n import {Operator} from '../Operator';\n-import {Observable} from '../Observable';\n import {Subscriber} from '../Subscriber';\n import {Subscription} from '../Subscription';\n import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n \n-export function _switch<T>(): Observable<T> {\n+export function _switch<T>(): T {\n   return this.lift(new SwitchOperator());\n }\n "},{"sha":"05c9309baed2de847ad9fa53e1e2465f3f94e0fb","filename":"src/operator/switchMap.ts","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FswitchMap.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FswitchMap.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FswitchMap.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -8,19 +8,17 @@ import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n \n export function switchMap<T, R, R2>(project: (value: T, index: number) => Observable<R>,\n-                                    resultSelector?: (outerValue: T,\n-                                                      innerValue: R,\n-                                                      outerIndex: number,\n-                                                      innerIndex: number) => R2): Observable<R> {\n+                                    resultSelector?: (\n+                                             outerValue: T,\n+                                             innerValue: R,\n+                                             outerIndex: number,\n+                                             innerIndex: number) => R2): Observable<R2> {\n   return this.lift(new SwitchMapOperator(project, resultSelector));\n }\n \n class SwitchMapOperator<T, R, R2> implements Operator<T, R> {\n   constructor(private project: (value: T, index: number) => Observable<R>,\n-              private resultSelector?: (outerValue: T,\n-                                        innerValue: R,\n-                                        outerIndex: number,\n-                                        innerIndex: number) => R2) {\n+              private resultSelector?: (outerValue: T, innerValue: R, outerIndex: number, innerIndex: number) => R2) {\n   }\n \n   call(subscriber: Subscriber<R>): Subscriber<T> {\n@@ -43,7 +41,7 @@ class SwitchMapSubscriber<T, R, R2> extends OuterSubscriber<T, R> {\n     const destination = this.destination;\n     let result = tryCatch(this.project)(value, index);\n     if (result === errorObject) {\n-      destination.error(result.e);\n+      destination.error(errorObject.e);\n     } else {\n       const innerSubscription = this.innerSubscription;\n       if (innerSubscription) {"},{"sha":"0cbf66953e104edb35abc6e350a93147b9919591","filename":"src/operator/switchMapTo.ts","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FswitchMapTo.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FswitchMapTo.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FswitchMapTo.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -8,19 +8,17 @@ import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n \n export function switchMapTo<T, R, R2>(observable: Observable<R>,\n-                                      projectResult?: (outerValue: T,\n-                                                       innerValue: R,\n-                                                       outerIndex: number,\n-                                                       innerIndex: number) => R2): Observable<R2> {\n-  return this.lift(new SwitchMapToOperator(observable, projectResult));\n+                                      resultSelector?: (\n+                                                 outerValue: T,\n+                                                 innerValue: R,\n+                                                 outerIndex: number,\n+                                                 innerIndex: number) => R2): Observable<R2> {\n+  return this.lift(new SwitchMapToOperator(observable, resultSelector));\n }\n \n class SwitchMapToOperator<T, R, R2> implements Operator<T, R> {\n   constructor(private observable: Observable<R>,\n-              private resultSelector?: (outerValue: T,\n-                                        innerValue: R,\n-                                        outerIndex: number,\n-                                        innerIndex: number) => R2) {\n+              private resultSelector?: (outerValue: T, innerValue: R, outerIndex: number, innerIndex: number) => R2) {\n   }\n \n   call(subscriber: Subscriber<R>): Subscriber<T> {"},{"sha":"e1374d2a651af36a19c9905f54a5364df3c1c6bc","filename":"src/operator/take.ts","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Ftake.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Ftake.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Ftake.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -2,16 +2,17 @@ import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n import {ArgumentOutOfRangeError} from '../util/ArgumentOutOfRangeError';\n import {EmptyObservable} from '../observable/empty';\n+import {Observable} from '../Observable';\n \n-export function take(total) {\n+export function take<T>(total: number): Observable<T> {\n   if (total === 0) {\n-    return new EmptyObservable();\n+    return new EmptyObservable<T>();\n   } else {\n     return this.lift(new TakeOperator(total));\n   }\n }\n \n-class TakeOperator<T, R> implements Operator<T, R> {\n+class TakeOperator<T> implements Operator<T, T> {\n   constructor(private total: number) {\n     if (this.total < 0) {\n       throw new ArgumentOutOfRangeError;"},{"sha":"7ecf4ca97e42c2f4bd14e855307d128011951c31","filename":"src/operator/takeUntil.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FtakeUntil.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FtakeUntil.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FtakeUntil.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -5,11 +5,11 @@ import {Subscriber} from '../Subscriber';\n import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n \n-export function takeUntil<T>(notifier: Observable<any>) {\n+export function takeUntil<T>(notifier: Observable<any>): Observable<T> {\n   return this.lift(new TakeUntilOperator(notifier));\n }\n \n-class TakeUntilOperator<T, R> implements Operator<T, R> {\n+class TakeUntilOperator<T> implements Operator<T, T> {\n   constructor(private notifier: Observable<any>) {\n   }\n "},{"sha":"95798ee7c0e63d248367131b6ea59c74ade33af3","filename":"src/operator/takeWhile.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FtakeWhile.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2FtakeWhile.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FtakeWhile.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -8,7 +8,7 @@ export function takeWhile<T>(predicate: (value: T, index: number) => boolean): O\n   return this.lift(new TakeWhileOperator(predicate));\n }\n \n-class TakeWhileOperator<T, R> implements Operator<T, R> {\n+class TakeWhileOperator<T> implements Operator<T, T> {\n   constructor(private predicate: (value: T, index: number) => boolean) {\n   }\n \n@@ -30,7 +30,7 @@ class TakeWhileSubscriber<T> extends Subscriber<T> {\n     const result = tryCatch(this.predicate)(value, this.index++);\n \n     if (result == errorObject) {\n-      destination.error(result.e);\n+      destination.error(errorObject.e);\n     } else if (Boolean(result)) {\n       destination.next(value);\n     } else {"},{"sha":"345d6caf4c775bae0d83b2ac9e688e0a252eeafb","filename":"src/operator/throttle.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fthrottle.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/db7f0b11b03068d3ab85108aeb02b8e1c1de119b/src%2Foperator%2Fthrottle.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fthrottle.ts?ref=db7f0b11b03068d3ab85108aeb02b8e1c1de119b","patch":"@@ -8,12 +8,12 @@ import {errorObject} from '../util/errorObject';\n import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n \n-export function throttle<T>(durationSelector: (value: T) => Observable<any> | Promise<any>): Observable<T> {\n+export function throttle<T>(durationSelector: (value: T) => Observable<number> | Promise<number>): Observable<T> {\n   return this.lift(new ThrottleOperator(durationSelector));\n }\n \n-class ThrottleOperator<T, R> implements Operator<T, R> {\n-  constructor(private durationSelector: (value: T) => Observable<any> | Promise<any>) {\n+class ThrottleOperator<T> implements Operator<T, T> {\n+  constructor(private durationSelector: (value: T) => Observable<number> | Promise<number>) {\n   }\n \n   call(subscriber: Subscriber<T>): Subscriber<T> {\n@@ -25,7 +25,7 @@ class ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n   private throttled: Subscription;\n \n   constructor(destination: Subscriber<any>,\n-              private durationSelector: (value: T) => Observable<any> | Promise<any>) {\n+              private durationSelector: (value: T) => Observable<number> | Promise<number>) {\n     super(destination);\n   }\n "}]},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1251","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1251/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1251/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1251/events","html_url":"https://github.com/ReactiveX/rxjs/pull/1251","id":128694433,"node_id":"MDExOlB1bGxSZXF1ZXN0NTcxNTkyNDU=","number":1251,"title":"Perf or no perf, there is no try...","user":{"login":"benlesh","id":1540597,"node_id":"MDQ6VXNlcjE1NDA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1540597?v=4","gravatar_id":"","url":"https://api.github.com/users/benlesh","html_url":"https://github.com/benlesh","followers_url":"https://api.github.com/users/benlesh/followers","following_url":"https://api.github.com/users/benlesh/following{/other_user}","gists_url":"https://api.github.com/users/benlesh/gists{/gist_id}","starred_url":"https://api.github.com/users/benlesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benlesh/subscriptions","organizations_url":"https://api.github.com/users/benlesh/orgs","repos_url":"https://api.github.com/users/benlesh/repos","events_url":"https://api.github.com/users/benlesh/events{/privacy}","received_events_url":"https://api.github.com/users/benlesh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-01-26T01:44:55Z","updated_at":"2018-06-07T01:41:32Z","closed_at":"2016-01-27T04:58:38Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/1251","html_url":"https://github.com/ReactiveX/rxjs/pull/1251","diff_url":"https://github.com/ReactiveX/rxjs/pull/1251.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/1251.patch","merged_at":"2016-01-27T04:58:38Z"},"body":"I discovered today that adding custom tryCatcher members to operators with try/catch optimization concerns actually improved performance quite a bit.\n\nSo far: `map` doubled in overall speed (from factor of 1.7x to 3.2x on my machine),\n`mergeMap` improved by a \"factor\" of a little more than 1x\n`zip` improved by a \"factor\" of a little more than 1x-2x.\n\n(\"factor\" coming from micro perf output).\n\nThis will be part of an effort to go through and examine improvements that can be made where `tryCatch`/`errorObject` is being used.\n\nSee commits for details.\n\nAll of these perf tests are of course in V8/Node, however I don't see any reason they wouldn't carry over to other JIT'ed runtimes.\n\ncc/ @trxcllnt \n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1251/timeline","performed_via_github_app":null,"state_reason":null,"score":1,"files":[{"sha":"9b7257b29ae45a8f08e932f539a4bdf9f1bedf51","filename":"perf/micro/current-thread-scheduler/operators/do.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fdo.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fdo.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fdo.js?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require('rx');\n+var RxNew = require('../../../../index');\n+\n+module.exports = function (suite) {\n+  var source = Array.from({ length: 100 }, function (_, i) { return i; });\n+  var _old = RxOld.Observable.fromArray(source);\n+  var _new = RxNew.Observable.fromArray(source);\n+\n+  function _next(x) { }\n+  function _error(e) { }\n+  function _complete() { }\n+  return suite\n+    .add('old groupBy with current thread scheduler', function () {\n+      _old.do(_next, _error, _complete).subscribe(_next);\n+    })\n+    .add('new groupBy with current thread scheduler', function () {\n+      _new.do(_next, _error, _complete).subscribe();\n+    });\n+};\n\\ No newline at end of file"},{"sha":"01a83edc756043d9d4bd27d1bc48996da8617226","filename":"perf/micro/current-thread-scheduler/operators/switchmap.js","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fswitchmap.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fswitchmap.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fswitchmap.js?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -0,0 +1,24 @@\n+var RxOld = require('rx');\n+var RxNew = require('../../../../index');\n+\n+module.exports = function (suite) {\n+  var oldSwitchMapWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread)\n+    .flatMapLatest(function (x) {\n+      return RxOld.Observable.range(x, 25, RxOld.Scheduler.currentThread);\n+    });\n+  var newSwitchMapWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.queue)\n+    .switchMap(function (x) {\n+      return RxNew.Observable.range(x, 25, RxNew.Scheduler.queue);\n+    });\n+\n+  function _next(x) { }\n+  function _error(e) { }\n+  function _complete() { }\n+  return suite\n+    .add('old switchMap with current thread scheduler', function () {\n+      oldSwitchMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+    })\n+    .add('new switchMap with current thread scheduler', function () {\n+      newSwitchMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+    });\n+};\n\\ No newline at end of file"},{"sha":"3ad8f79d95345c5b260236c1f842bb25c966fb4a","filename":"perf/micro/immediate-scheduler/operators/switchmap.js","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fswitchmap.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fswitchmap.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fswitchmap.js?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -0,0 +1,24 @@\n+var RxOld = require('rx');\n+var RxNew = require('../../../../index');\n+\n+module.exports = function (suite) {\n+  var oldSwitchMapWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate)\n+    .flatMapLatest(function (x) {\n+      return RxOld.Observable.range(x, 25, RxOld.Scheduler.immediate);\n+    });\n+  var newSwitchMapWithImmediateScheduler = RxNew.Observable.range(0, 25)\n+    .switchMap(function (x) {\n+      return RxNew.Observable.range(x, 25);\n+    });\n+\n+  function _next(x) { }\n+  function _error(e) { }\n+  function _complete() { }\n+  return suite\n+    .add('old switchMap with immediate scheduler', function () {\n+      oldSwitchMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+    })\n+    .add('new switchMap with immediate scheduler', function () {\n+      newSwitchMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+    });\n+};\n\\ No newline at end of file"},{"sha":"f340323d24d0fc62fa3a80d09ccd96e5d4fe685f","filename":"perf/micro/immediate-scheduler/operators/withlatestfrom.js","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fwithlatestfrom.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fwithlatestfrom.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fwithlatestfrom.js?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -0,0 +1,27 @@\n+var RxOld = require('rx');\n+var RxNew = require('../../../../index');\n+\n+module.exports = function (suite) {\n+  function add(x, y) {\n+    return x + y;\n+  }\n+  var _old = RxOld.Observable.range(0, 25).withLatestFrom(\n+    RxOld.Observable.range(0, 25),\n+    add\n+  );\n+  var _new = RxNew.Observable.range(0, 25).withLatestFrom(\n+    RxNew.Observable.range(0, 25),\n+    add\n+  );\n+\n+  function _next(x) { }\n+  function _error(e) { }\n+  function _complete() { }\n+  return suite\n+      .add('old withLatestFrom with immediate scheduler', function () {\n+        _old.subscribe(_next, _error, _complete);\n+      })\n+      .add('new withLatestFrom with immediate scheduler', function () {\n+        _new.subscribe(_next, _error, _complete);\n+      });\n+};\n\\ No newline at end of file"},{"sha":"e54dd3b9110c3e923a5b82a0bbaaa641a02b81e8","filename":"src/operator/catch.ts","status":"modified","additions":17,"deletions":10,"changes":27,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Fcatch.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Fcatch.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fcatch.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -1,8 +1,6 @@\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n import {Observable} from '../Observable';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n \n /**\n  * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n@@ -37,17 +35,26 @@ class CatchSubscriber<T> extends Subscriber<T> {\n     super(destination);\n   }\n \n+  // NOTE: overriding `error` instead of `_error` because we don't want\n+  // to have this flag this subscriber as `isStopped`.\n   error(err: any) {\n     if (!this.isStopped) {\n-      const result = tryCatch(this.selector)(err, this.caught);\n-      if (result === errorObject) {\n-        super.error(errorObject.e);\n-      } else {\n-        const { destination } = this;\n-        this.unsubscribe();\n-        (<any> destination).remove(this);\n-        result.subscribe(this.destination);\n+      let result: any;\n+\n+      try {\n+        result = this.selector(err, this.caught);\n+      } catch (err) {\n+        this.destination.error(err);\n+        return;\n       }\n+\n+      this._innerSub(result);\n     }\n   }\n+\n+  private _innerSub(result: Observable<any>) {\n+    this.unsubscribe();\n+    (<any>this.destination).remove(this);\n+    result.subscribe(this.destination);\n+  }\n }"},{"sha":"47febdc22376dc42e1a5b81298087174a9db2683","filename":"src/operator/combineLatest.ts","status":"modified","additions":14,"deletions":13,"changes":27,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2FcombineLatest.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2FcombineLatest.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FcombineLatest.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -5,8 +5,6 @@ import {Scheduler} from '../Scheduler';\n import {isScheduler} from '../util/isScheduler';\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n \n@@ -131,19 +129,22 @@ export class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n     }\n \n     if (toRespond.length === 0) {\n-      const project = this.project;\n-      const destination = this.destination;\n-\n-      if (project) {\n-        const result = tryCatch(project).apply(this, values);\n-        if (result === errorObject) {\n-          destination.error(errorObject.e);\n-        } else {\n-          destination.next(result);\n-        }\n+      if (this.project) {\n+        this._tryProject(values);\n       } else {\n-        destination.next(values);\n+        this.destination.next(values);\n       }\n     }\n   }\n+\n+  private _tryProject(values: any[]) {\n+    let result: any;\n+    try {\n+      result = this.project.apply(this, values);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n+    }\n+    this.destination.next(result);\n+  }\n }"},{"sha":"12bba0ef198fb8ae890c7f84bbcc4e150094c6b6","filename":"src/operator/count.ts","status":"modified","additions":18,"deletions":13,"changes":31,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Fcount.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Fcount.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fcount.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -3,9 +3,6 @@ import {Operator} from '../Operator';\n import {Observer} from '../Observer';\n import {Subscriber} from '../Subscriber';\n \n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n-\n /**\n  * Returns an observable of a single number that represents the number of items that either:\n  * Match a provided predicate function, _or_ if a predicate is not provided, the number\n@@ -44,17 +41,25 @@ class CountSubscriber<T> extends Subscriber<T> {\n   }\n \n   protected _next(value: T): void {\n-    const predicate = this.predicate;\n-    let passed: any = true;\n-    if (predicate) {\n-      passed = tryCatch(predicate)(value, this.index++, this.source);\n-      if (passed === errorObject) {\n-        this.destination.error(passed.e);\n-        return;\n-      }\n+    if (this.predicate) {\n+      this._tryPredicate(value);\n+    } else {\n+      this.count++;\n+    }\n+  }\n+\n+  private _tryPredicate(value: T) {\n+    let result: any;\n+\n+    try {\n+      result = this.predicate(value, this.index++, this.source);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n     }\n-    if (passed) {\n-      this.count += 1;\n+\n+    if (result) {\n+      this.count++;\n     }\n   }\n "},{"sha":"73e1ac47f4d94b43330927d23b0ab4036de2e10d","filename":"src/operator/do.ts","status":"modified","additions":22,"deletions":19,"changes":41,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Fdo.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Fdo.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fdo.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -3,8 +3,6 @@ import {Observer} from '../Observer';\n import {Subscriber} from '../Subscriber';\n \n import {noop} from '../util/noop';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n import {Observable} from '../Observable';\n \n /**\n@@ -58,30 +56,35 @@ class DoSubscriber<T> extends Subscriber<T> {\n     this.__complete = complete;\n   }\n \n-  protected _next(x: T) {\n-    const result = tryCatch(this.__next)(x);\n-    if (result === errorObject) {\n-      this.destination.error(errorObject.e);\n-    } else {\n-      this.destination.next(x);\n+  // NOTE: important, all try catch blocks below are there for performance\n+  // reasons. tryCatcher approach does not benefit this operator.\n+  protected _next(value: T) {\n+    try {\n+      this.__next(value);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n     }\n+    this.destination.next(value);\n   }\n \n-  protected _error(e: any) {\n-    const result = tryCatch(this.__error)(e);\n-    if (result === errorObject) {\n-      this.destination.error(errorObject.e);\n-    } else {\n-      this.destination.error(e);\n+  protected _error(err: any) {\n+    try {\n+      this.__error(err);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n     }\n+    this.destination.error(err);\n   }\n \n   protected _complete() {\n-    const result = tryCatch(this.__complete)();\n-    if (result === errorObject) {\n-      this.destination.error(errorObject.e);\n-    } else {\n-      this.destination.complete();\n+    try {\n+      this.__complete();\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n     }\n+    this.destination.complete();\n   }\n }"},{"sha":"011a47cfb5718660df039c1baeed6e7ae3d26198","filename":"src/operator/filter.ts","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Ffilter.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Ffilter.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Ffilter.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -1,7 +1,5 @@\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n import {Observable} from '../Observable';\n \n /**\n@@ -35,12 +33,18 @@ class FilterSubscriber<T> extends Subscriber<T> {\n     this.select = select;\n   }\n \n-  protected _next(x: T) {\n-    const result = tryCatch(this.select).call(this.thisArg || this, x, this.count++);\n-    if (result === errorObject) {\n-      this.destination.error(errorObject.e);\n-    } else if (Boolean(result)) {\n-      this.destination.next(x);\n+  // the try catch block below is left specifically for\n+  // optimization and perf reasons. a tryCatcher is not necessary here.\n+  protected _next(value: T) {\n+    let result: any;\n+    try {\n+      result = this.select.call(this.thisArg, value, this.count++);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n+    }\n+    if (result) {\n+      this.destination.next(value);\n     }\n   }\n }"},{"sha":"c6553f9ba25b66540f27716b7308416c6e77b64f","filename":"src/operator/first.ts","status":"modified","additions":42,"deletions":23,"changes":65,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Ffirst.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Ffirst.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Ffirst.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -1,8 +1,6 @@\n import {Observable} from '../Observable';\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n import {EmptyError} from '../util/EmptyError';\n \n /**\n@@ -42,30 +40,51 @@ class FirstSubscriber<T, R> extends Subscriber<T> {\n   }\n \n   protected _next(value: T): void {\n-    const { destination, predicate, resultSelector } = this;\n     const index = this.index++;\n-    let passed: any = true;\n-    if (predicate) {\n-      passed = tryCatch(predicate)(value, index, this.source);\n-      if (passed === errorObject) {\n-        destination.error(errorObject.e);\n-        return;\n-      }\n+    if (this.predicate) {\n+      this._tryPredicate(value, index);\n+    } else {\n+      this._emit(value, index);\n     }\n-    if (passed) {\n-      if (resultSelector) {\n-        let result = tryCatch(resultSelector)(value, index);\n-        if (result === errorObject) {\n-          destination.error(errorObject.e);\n-          return;\n-        }\n-        destination.next(result);\n-      } else {\n-        destination.next(value);\n-      }\n-      destination.complete();\n-      this.hasCompleted = true;\n+  }\n+\n+  private _tryPredicate(value: T, index: number) {\n+    let result: any;\n+    try {\n+      result = this.predicate(value, index, this.source);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n+    }\n+    if (result) {\n+      this._emit(value, index);\n+    }\n+  }\n+\n+  private _emit(value: any, index: number) {\n+    if (this.resultSelector) {\n+      this._tryResultSelector(value, index);\n+      return;\n     }\n+    this._emitFinal(value);\n+  }\n+\n+  private _tryResultSelector(value: T, index: number) {\n+    let result: any;\n+    try {\n+      result = this.resultSelector(value, index);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n+    }\n+    this._emitFinal(result);\n+  }\n+\n+  private _emitFinal(value: any) {\n+    const destination = this.destination;\n+    destination.next(value);\n+    destination.complete();\n+    this.hasCompleted = true;\n   }\n \n   protected _complete(): void {"},{"sha":"dc07660f9645ba4458088aabda5231a389f968e0","filename":"src/operator/groupBy.ts","status":"modified","additions":53,"deletions":36,"changes":89,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2FgroupBy.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2FgroupBy.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FgroupBy.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -4,8 +4,6 @@ import {Observable} from '../Observable';\n import {Subject} from '../Subject';\n import {Map} from '../util/Map';\n import {FastMap} from '../util/FastMap';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n \n /**\n  * Groups the items emitted by an Observable according to a specified criterion,\n@@ -56,48 +54,67 @@ class GroupBySubscriber<T, K, R> extends Subscriber<T> {\n     this.add(destination);\n   }\n \n-  protected _next(x: T): void {\n-    let key = tryCatch(this.keySelector)(x);\n-    if (key === errorObject) {\n-      this.error(errorObject.e);\n-    } else {\n-      let groups = this.groups;\n-      const elementSelector = this.elementSelector;\n-      const durationSelector = this.durationSelector;\n-\n-      if (!groups) {\n-        groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n-      }\n+  protected _next(value: T): void {\n+    let key: any;\n+    try {\n+      key = this.keySelector(value);\n+    } catch (err) {\n+      this.error(err);\n+      return;\n+    }\n+    this._group(value, key);\n+  }\n \n-      let group = groups.get(key);\n+  private _group(value: T, key: K) {\n+    let groups = this.groups;\n \n-      if (!group) {\n-        groups.set(key, group = new Subject<T|R>());\n-        let groupedObservable = new GroupedObservable(key, group, this.refCountSubscription);\n+    if (!groups) {\n+      groups = this.groups = typeof key === 'string' ? new FastMap() : new Map();\n+    }\n \n-        if (durationSelector) {\n-          let duration = tryCatch(durationSelector)(new GroupedObservable<K, R>(key, <any>group));\n-          if (duration === errorObject) {\n-            this.error(errorObject.e);\n-          } else {\n-            this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n-          }\n-        }\n+    let group = groups.get(key);\n \n-        this.destination.next(groupedObservable);\n-      }\n+    if (!group) {\n+      groups.set(key, group = new Subject<T|R>());\n+      let groupedObservable = new GroupedObservable(key, group, this.refCountSubscription);\n \n-      if (elementSelector) {\n-        let value = tryCatch(elementSelector)(x);\n-        if (value === errorObject) {\n-          this.error(errorObject.e);\n-        } else {\n-          group.next(value);\n+      if (this.durationSelector) {\n+        if (!this._tryDuration(key, group)) {\n+          return;\n         }\n-      } else {\n-        group.next(x);\n       }\n+\n+      this.destination.next(groupedObservable);\n+    }\n+\n+    if (this.elementSelector) {\n+      this._tryElementSelector(value, group);\n+    } else {\n+      group.next(value);\n+    }\n+  }\n+\n+  private _tryElementSelector(value: T, group: Subject<T | R>) {\n+    let result: any;\n+    try {\n+      result = this.elementSelector(value);\n+    } catch (err) {\n+      this.error(err);\n+      return;\n+    }\n+    group.next(result);\n+  }\n+\n+  private _tryDuration(key: K, group: any): boolean {\n+    let duration: any;\n+    try {\n+      duration = this.durationSelector(new GroupedObservable<K, R>(key, group));\n+    } catch (err) {\n+      this.error(err);\n+      return false;\n     }\n+    this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n+    return true;\n   }\n \n   protected _error(err: any): void {"},{"sha":"904ac5f27d3ac1ba8eaa3424c97201d643fe990f","filename":"src/operator/last.ts","status":"modified","additions":33,"deletions":21,"changes":54,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Flast.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Flast.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Flast.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -1,8 +1,6 @@\n import {Observable} from '../Observable';\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n import {EmptyError} from '../util/EmptyError';\n \n /**\n@@ -54,35 +52,49 @@ class LastSubscriber<T, R> extends Subscriber<T> {\n   }\n \n   protected _next(value: T): void {\n-    const { predicate, resultSelector, destination } = this;\n     const index = this.index++;\n-\n-    if (predicate) {\n-      let found = tryCatch(predicate)(value, index, this.source);\n-      if (found === errorObject) {\n-        destination.error(errorObject.e);\n+    if (this.predicate) {\n+      this._tryPredicate(value, index);\n+    } else {\n+      if (this.resultSelector) {\n+        this._tryResultSelector(value, index);\n         return;\n       }\n+      this.lastValue = value;\n+      this.hasValue = true;\n+    }\n+  }\n \n-      if (found) {\n-        if (resultSelector) {\n-          let result = tryCatch(resultSelector)(value, index);\n-          if (result === errorObject) {\n-            destination.error(errorObject.e);\n-            return;\n-          }\n-          this.lastValue = result;\n-        } else {\n-          this.lastValue = value;\n-        }\n-        this.hasValue = true;\n+  private _tryPredicate(value: T, index: number) {\n+    let result: any;\n+    try {\n+      result = this.predicate(value, index, this.source);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n+    }\n+    if (result) {\n+      if (this.resultSelector) {\n+        this._tryResultSelector(value, index);\n+        return;\n       }\n-    } else {\n       this.lastValue = value;\n       this.hasValue = true;\n     }\n   }\n \n+  private _tryResultSelector(value: T, index: number) {\n+    let result: any;\n+    try {\n+      result = this.resultSelector(value, index);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n+    }\n+    this.lastValue = result;\n+    this.hasValue = true;\n+  }\n+\n   protected _complete(): void {\n     const destination = this.destination;\n     if (this.hasValue) {"},{"sha":"929fd5fd3a1fc8833e745a7ec1330bd20d5ec64b","filename":"src/operator/map.ts","status":"modified","additions":13,"deletions":9,"changes":22,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Fmap.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Fmap.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fmap.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -1,8 +1,6 @@\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n import {Observable} from '../Observable';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n \n /**\n  * Similar to the well known `Array.prototype.map` function, this operator\n@@ -32,19 +30,25 @@ class MapOperator<T, R> implements Operator<T, R> {\n \n class MapSubscriber<T, R> extends Subscriber<T> {\n   count: number = 0;\n+  private thisArg: any;\n \n   constructor(destination: Subscriber<R>,\n               private project: (value: T, index: number) => R,\n-              private thisArg: any) {\n+              thisArg: any) {\n     super(destination);\n+    this.thisArg = thisArg || this;\n   }\n \n-  protected _next(x: T) {\n-    const result = tryCatch(this.project).call(this.thisArg || this, x, this.count++);\n-    if (result === errorObject) {\n-      this.error(errorObject.e);\n-    } else {\n-      this.destination.next(result);\n+  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n+  // using try/catch optimizations.\n+  protected _next(value: T) {\n+    let result: any;\n+    try {\n+      result = this.project.call(this.thisArg, value, this.count++);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n     }\n+    this.destination.next(result);\n   }\n }"},{"sha":"71e1b98209e7109762050c2e37eeb9b8de401072","filename":"src/operator/mergeMap.ts","status":"modified","additions":31,"deletions":23,"changes":54,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2FmergeMap.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2FmergeMap.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FmergeMap.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -2,8 +2,6 @@ import {Observable} from '../Observable';\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n import {Subscription} from '../Subscription';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n import {subscribeToResult} from '../util/subscribeToResult';\n import {OuterSubscriber} from '../OuterSubscriber';\n \n@@ -39,7 +37,7 @@ export class MergeMapOperator<T, R, R2> implements Operator<T, R> {\n \n export class MergeMapSubscriber<T, R, R2> extends OuterSubscriber<T, R> {\n   private hasCompleted: boolean = false;\n-  private buffer: T[] = [];\n+  private buffer: Observable<any>[] = [];\n   private active: number = 0;\n   protected index: number = 0;\n \n@@ -50,23 +48,28 @@ export class MergeMapSubscriber<T, R, R2> extends OuterSubscriber<T, R> {\n     super(destination);\n   }\n \n-  protected _next(value: T): void {\n+  protected _next(value: any): void {\n     if (this.active < this.concurrent) {\n-      const index = this.index++;\n-      const ish = tryCatch(this.project)(value, index);\n-      const destination = this.destination;\n-      if (ish === errorObject) {\n-        destination.error(errorObject.e);\n-      } else {\n-        this.active++;\n-        this._innerSub(ish, value, index);\n-      }\n+      this._tryNext(value);\n     } else {\n       this.buffer.push(value);\n     }\n   }\n \n-  private _innerSub(ish: Observable<R>, value: T, index: number): void {\n+  protected _tryNext(value: any) {\n+    let result: any;\n+    const index = this.index++;\n+    try {\n+      result = this.project(value, index);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n+    }\n+    this.active++;\n+    this._innerSub(result, value, index);\n+  }\n+\n+  private _innerSub(ish: any, value: T, index: number): void {\n     this.add(subscribeToResult<T, R>(this, ish, value, index));\n   }\n \n@@ -78,17 +81,22 @@ export class MergeMapSubscriber<T, R, R2> extends OuterSubscriber<T, R> {\n   }\n \n   notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n-    const { destination, resultSelector } = this;\n-    if (resultSelector) {\n-      const result = tryCatch(resultSelector)(outerValue, innerValue, outerIndex, innerIndex);\n-      if (result === errorObject) {\n-        destination.error(errorObject.e);\n-      } else {\n-        destination.next(result);\n-      }\n+    if (this.resultSelector) {\n+      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n     } else {\n-      destination.next(innerValue);\n+      this.destination.next(innerValue);\n+    }\n+  }\n+\n+  _notifyResultSelector(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number) {\n+    let result: any;\n+    try {\n+      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n     }\n+    this.destination.next(result);\n   }\n \n   notifyComplete(innerSub: Subscription): void {"},{"sha":"3d3865086dca97206c107e97b27cd14c5a765649","filename":"src/operator/reduce.ts","status":"modified","additions":14,"deletions":10,"changes":24,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Freduce.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Freduce.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Freduce.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -1,8 +1,6 @@\n import {Observable} from '../Observable';\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n \n /**\n  * Returns an Observable that applies a specified accumulator function to the first item emitted by a source Observable,\n@@ -48,20 +46,26 @@ export class ReduceSubscriber<T, R> extends Subscriber<T> {\n     this.hasSeed = typeof seed !== 'undefined';\n   }\n \n-  protected _next(x: T) {\n+  protected _next(value: T) {\n     if (this.hasValue || (this.hasValue = this.hasSeed)) {\n-      const result = tryCatch(this.project).call(this, this.acc, x);\n-      if (result === errorObject) {\n-        this.destination.error(errorObject.e);\n-      } else {\n-        this.acc = result;\n-      }\n+      this._tryReduce(value);\n     } else {\n-      this.acc = x;\n+      this.acc = value;\n       this.hasValue = true;\n     }\n   }\n \n+  private _tryReduce(value: T) {\n+    let result: any;\n+    try {\n+      result = this.project(<R>this.acc, value);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n+    }\n+    this.acc = result;\n+  }\n+\n   protected _complete() {\n     if (this.hasValue || this.hasSeed) {\n       this.destination.next(this.acc);"},{"sha":"e98941690be8434a46a0a5a486edf394ad6507f9","filename":"src/operator/scan.ts","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Fscan.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Fscan.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fscan.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -1,8 +1,6 @@\n import {Operator} from '../Operator';\n import {Observable} from '../Observable';\n import {Subscriber} from '../Subscriber';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n \n /**\n  * Returns an Observable that applies a specified accumulator function to each item emitted by the source Observable.\n@@ -54,13 +52,18 @@ class ScanSubscriber<T, R> extends Subscriber<T> {\n       this.seed = value;\n       this.destination.next(value);\n     } else {\n-      const result = tryCatch(this.accumulator).call(this, this.seed, value);\n-      if (result === errorObject) {\n-        this.destination.error(errorObject.e);\n-      } else {\n-        this.seed = result;\n-        this.destination.next(this.seed);\n-      }\n+      return this._tryNext(value);\n     }\n   }\n+\n+  private _tryNext(value: T): void {\n+    let result: any;\n+    try {\n+      result = this.accumulator(<R>this.seed, value);\n+    } catch (err) {\n+      this.destination.error(err);\n+    }\n+    this.seed = result;\n+    this.destination.next(result);\n+  }\n }"},{"sha":"744020405429423ad815be89d6be780369d8cbab","filename":"src/operator/switchMap.ts","status":"modified","additions":30,"deletions":22,"changes":52,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2FswitchMap.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2FswitchMap.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FswitchMap.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -2,8 +2,6 @@ import {Operator} from '../Operator';\n import {Observable} from '../Observable';\n import {Subscriber} from '../Subscriber';\n import {Subscription} from '../Subscription';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n \n@@ -46,19 +44,24 @@ class SwitchMapSubscriber<T, R, R2> extends OuterSubscriber<T, R> {\n     super(destination);\n   }\n \n-  protected _next(value: T): void {\n+  protected _next(value: T) {\n+    let result: any;\n     const index = this.index++;\n-    const destination = this.destination;\n-    let result = tryCatch(this.project)(value, index);\n-    if (result === errorObject) {\n-      destination.error(errorObject.e);\n-    } else {\n-      const innerSubscription = this.innerSubscription;\n-      if (innerSubscription) {\n-        innerSubscription.unsubscribe();\n-      }\n-      this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n+    try {\n+      result = this.project(value, index);\n+    } catch (error) {\n+      this.destination.error(error);\n+      return;\n+    }\n+    this._innerSub(result, value, index);\n+  }\n+\n+  private _innerSub(result: any, value: T, index: number) {\n+    const innerSubscription = this.innerSubscription;\n+    if (innerSubscription) {\n+      innerSubscription.unsubscribe();\n     }\n+    this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n   }\n \n   protected _complete(): void {\n@@ -81,16 +84,21 @@ class SwitchMapSubscriber<T, R, R2> extends OuterSubscriber<T, R> {\n   }\n \n   notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n-    const { resultSelector, destination } = this;\n-    if (resultSelector) {\n-      const result = tryCatch(resultSelector)(outerValue, innerValue, outerIndex, innerIndex);\n-      if (result === errorObject) {\n-        destination.error(errorObject.e);\n-      } else {\n-        destination.next(result);\n-      }\n+    if (this.resultSelector) {\n+      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n     } else {\n-      destination.next(innerValue);\n+      this.destination.next(innerValue);\n+    }\n+  }\n+\n+  _tryNotifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n+    let result: any;\n+    try {\n+      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n     }\n+    this.destination.next(result);\n   }\n }"},{"sha":"cdc5d89d5ec40b1d33f84f1df992d004bc6d91ff","filename":"src/operator/withLatestFrom.ts","status":"modified","additions":15,"deletions":14,"changes":29,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2FwithLatestFrom.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2FwithLatestFrom.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FwithLatestFrom.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -1,8 +1,6 @@\n import {Operator} from '../Operator';\n import {Subscriber} from '../Subscriber';\n import {Observable} from '../Observable';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n \n@@ -81,20 +79,23 @@ class WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n \n   protected _next(value: T) {\n     if (this.toRespond.length === 0) {\n-      const values = this.values;\n-      const destination = this.destination;\n-      const project = this.project;\n-      const args = [value, ...values];\n-      if (project) {\n-        let result = tryCatch(this.project).apply(this, args);\n-        if (result === errorObject) {\n-          destination.error(result.e);\n-        } else {\n-          destination.next(result);\n-        }\n+      const args = [value, ...this.values];\n+      if (this.project) {\n+        this._tryProject(args);\n       } else {\n-        destination.next(args);\n+        this.destination.next(args);\n       }\n     }\n   }\n+\n+  private _tryProject(args: any[]) {\n+    let result: any;\n+    try {\n+      result = this.project.apply(this, args);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n+    }\n+    this.destination.next(result);\n+  }\n }"},{"sha":"6b3c6e02418a14669133d44b01ead756b8f585a6","filename":"src/operator/zip.ts","status":"modified","additions":13,"deletions":10,"changes":23,"blob_url":"https://github.com/ReactiveX/rxjs/blob/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Fzip.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/7004c2630aa6c3d521068d2a4b43d86c8c45e8da/src%2Foperator%2Fzip.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fzip.ts?ref=7004c2630aa6c3d521068d2a4b43d86c8c45e8da","patch":"@@ -4,8 +4,6 @@ import {isArray} from '../util/isArray';\n import {Operator} from '../Operator';\n import {Observer} from '../Observer';\n import {Subscriber} from '../Subscriber';\n-import {tryCatch} from '../util/tryCatch';\n-import {errorObject} from '../util/errorObject';\n import {OuterSubscriber} from '../OuterSubscriber';\n import {subscribeToResult} from '../util/subscribeToResult';\n import {SymbolShim} from '../util/SymbolShim';\n@@ -117,14 +115,8 @@ export class ZipSubscriber<T, R> extends Subscriber<T> {\n       args.push(result.value);\n     }\n \n-    const project = this.project;\n-    if (project) {\n-      let result = tryCatch(project).apply(this, args);\n-      if (result === errorObject) {\n-        destination.error(errorObject.e);\n-      } else {\n-        destination.next(result);\n-      }\n+    if (this.project) {\n+      this._tryProject(args);\n     } else {\n       destination.next(args);\n     }\n@@ -133,6 +125,17 @@ export class ZipSubscriber<T, R> extends Subscriber<T> {\n       destination.complete();\n     }\n   }\n+\n+  protected _tryProject(args: any[]) {\n+    let result: any;\n+    try {\n+      result = this.project.apply(this, args);\n+    } catch (err) {\n+      this.destination.error(err);\n+      return;\n+    }\n+    this.destination.next(result);\n+  }\n }\n \n interface LookAheadIterator<T> extends Iterator<T> {"}]},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2851","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2851/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2851/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2851/events","html_url":"https://github.com/ReactiveX/rxjs/pull/2851","id":259985517,"node_id":"MDExOlB1bGxSZXF1ZXN0MTQyNzAxNjY0","number":2851,"title":"Simplify test script pipeline","user":{"login":"kwonoj","id":1210596,"node_id":"MDQ6VXNlcjEyMTA1OTY=","avatar_url":"https://avatars.githubusercontent.com/u/1210596?v=4","gravatar_id":"","url":"https://api.github.com/users/kwonoj","html_url":"https://github.com/kwonoj","followers_url":"https://api.github.com/users/kwonoj/followers","following_url":"https://api.github.com/users/kwonoj/following{/other_user}","gists_url":"https://api.github.com/users/kwonoj/gists{/gist_id}","starred_url":"https://api.github.com/users/kwonoj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kwonoj/subscriptions","organizations_url":"https://api.github.com/users/kwonoj/orgs","repos_url":"https://api.github.com/users/kwonoj/repos","events_url":"https://api.github.com/users/kwonoj/events{/privacy}","received_events_url":"https://api.github.com/users/kwonoj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2017-09-23T05:42:12Z","updated_at":"2018-06-06T05:46:13Z","closed_at":"2017-10-27T03:21:03Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/2851","html_url":"https://github.com/ReactiveX/rxjs/pull/2851","diff_url":"https://github.com/ReactiveX/rxjs/pull/2851.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/2851.patch","merged_at":"2017-10-27T03:21:03Z"},"body":"<!--\r\nThank you very much for your pull request!\r\n\r\nIf your PR is the addition of a new operator, please make sure all these boxes are ticked with an x:\r\n\r\n- [ ] Add the operator to Rx\r\n- [ ] It must have a `-spec.ts` tests file covering the canonical corner cases, with marble diagram tests\r\n- [ ] If possible, write a `asDiagram` test case too, for PNG diagram generation purposes\r\n- [ ] The spec file should have a type definition test at the end of the spec to verify type definition for various use cases\r\n- [ ] The operator must be documented in JSDoc style in the implementation file, including also the PNG marble diagram image\r\n- [ ] The operator should be listed in `doc/operators.md` in a category of operators\r\n- [ ] It should also be inserted in the operator decision tree file `doc/decision-tree-widget/tree.yml`\r\n- [ ] You may need to update `MIGRATION.md` if the operator differs from the corresponding one in RxJS v4\r\n-->\r\n\r\n**Description:**\r\nThis PR fixes https://github.com/ReactiveX/rxjs/issues/2850, also revises current build pipeline around unit tests. Our test setup is quite complex, by using compiled output from src for importing modules, then build each (src, spec) separately to run test cases. This also causes coverage remapping tricky, as recent change caused.\r\n\r\nInstead, PR changes test cases to require sources directly - then run compile just once for specs and create coverage as well. It get rid of few npm scripts for testing purpose only, performance wise doesn't have much differences.\r\n\r\nFew caveat is it requires to update some other scripts like doc generation but it can be dealt with seperately.\r\n\r\n**Related issue (if exists):**\r\n- closes https://github.com/ReactiveX/rxjs/issues/2850.","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2851/timeline","performed_via_github_app":null,"state_reason":null,"score":1,"files":[{"sha":"9ca5ce215d049ad3e9dc440ea445d9a8bd96b273","filename":".gitignore","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/.gitignore","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/.gitignore","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/.gitignore?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -16,6 +16,7 @@ coverage/\n img/\n spec-js/\n .nyc_output/\n+.out/\n \n # Misc\n npm-debug.log"},{"sha":"8c81800286bdcab8815bdbf29ef45d33489ee1a7","filename":".travis.yml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/.travis.yml","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/.travis.yml","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/.travis.yml?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -30,8 +30,8 @@ install:\n \n script:\n   - if [ \"$FULL_VALIDATE\" == \"true\" ] && [ -n \"DANGER_GITHUB_API_TOKEN\" ]; then echo {} > ./.babelrc && npx danger; fi\n-  - npm run build_spec && npm run test_mocha && node ./node_modules/markdown-doctest/bin/cmd.js\n+  - npm test\n \n after_success:\n-  - if [ \"$FULL_VALIDATE\" == \"true\" ]; then npm run cover && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js; fi\n+  - if [ \"$FULL_VALIDATE\" == \"true\" ]; then npm run test:cover && npx nyc report --reporter=text-lcov | npx coveralls; fi\n   - if [ \"$FULL_VALIDATE\" == \"true\" ] && [ \"$TRAVIS_PULL_REQUEST\" = \"false\" ] && [ -n \"$SAUCE_ACCESS_KEY\" ]; then npm run build_spec_browser && grunt --gruntfile spec/support/mocha.sauce.gruntfile.js; fi\n\\ No newline at end of file"},{"sha":"0cf80ca9ca33cfd9a22d77658324dec9a9801ad0","filename":"appveyor.yml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/appveyor.yml","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/appveyor.yml","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/appveyor.yml?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -13,9 +13,9 @@ install:\n   - npm install\n \n build_script:\n-  - npm run build_spec\n+  - npm run build_all\n \n test_script:\n-  - npm run cover\n+  - npm test\n \n version: \"{build}\"\n\\ No newline at end of file"},{"sha":"25b5f8c737498e7c2ae712cb1606347c404dd437","filename":"package.json","status":"modified","additions":36,"deletions":20,"changes":56,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/package.json","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/package.json","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/package.json?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -8,6 +8,29 @@\n       \"path\": \"cz-conventional-changelog\"\n     }\n   },\n+  \"nyc\": {\n+    \"include\": [\n+      \"src/*.ts\",\n+      \"src/**/*.ts\"\n+    ],\n+    \"exclude\": [\n+      \"node_modules\",\n+      \"dist\",\n+      \"typings\",\n+      \"*.d.ts\",\n+      \"src/**/MiscJSDoc.ts\"\n+    ],\n+    \"extension\": [\n+      \".ts\"\n+    ],\n+    \"require\": [\n+      \"ts-node/register\"\n+    ],\n+    \"reporter\": [\n+      \"html\"\n+    ],\n+    \"all\": true\n+  },\n   \"lint-staged\": {\n     \"*.@(js)\": [\n       \"eslint --fix\",\n@@ -28,11 +51,8 @@\n     \"build_global\": \"Build Global package, then minify build\",\n     \"build_perf\": \"Build CJS & Global build, run macro performance test\",\n     \"build_test\": \"Build CJS package & test spec, execute mocha test runner\",\n-    \"build_cover\": \"Run lint to current code, build CJS & test spec, execute test coverage\",\n     \"build_docs\": \"Build ESM2015 & global package, create documentation using it\",\n-    \"build_spec\": \"Build test specs\",\n     \"check_circular_dependencies\": \"Check codebase has circular dependencies\",\n-    \"clean_spec\": \"Clean up existing test spec build output\",\n     \"clean_dist_cjs\": \"Clean up existing CJS package output\",\n     \"clean_dist_esm5\": \"Clean up existing ESM/ES5 package output\",\n     \"clean_dist_esm2015\": \"Clean up existing ESM/ES2015 package output\",\n@@ -41,7 +61,6 @@\n     \"compile_dist_cjs\": \"Compile codebase into CJS module\",\n     \"compile_module_esm5\": \"Compile codebase into ESM/ES5\",\n     \"compile_dist_esm2015\": \"Compile codebase into ESM/ES2015\",\n-    \"cover\": \"Execute test coverage\",\n     \"lint_perf\": \"Run lint against performance test suite\",\n     \"lint_spec\": \"Run lint against test spec\",\n     \"lint_src\": \"Run lint against source\",\n@@ -51,6 +70,7 @@\n     \"test_mocha\": \"Execute mocha test runner against existing test spec build\",\n     \"test_browser\": \"Execute mocha test runner on browser against existing test spec build\",\n     \"test\": \"Clean up existing test spec build, build test spec and execute mocha test runner\",\n+    \"test:cover\": \"Execute test coverage\",\n     \"tests2png\": \"Generate marble diagram image from test spec\",\n     \"watch\": \"Watch codebase, trigger compile when source code changes\"\n   },\n@@ -68,27 +88,22 @@\n     \"build_global\": \"npm-run-all clean_dist_global build_esm5_for_rollup && mkdirp ./dist/global && node ./tools/make-umd-bundle.js && npm-run-all build_closure_core clean_dist_esm5_for_rollup\",\n     \"build_umd\": \"npm-run-all clean_dist_global && mkdirp ./dist/global && node ./tools/make-umd-bundle.js && npm-run-all build_closure_core\",\n     \"build_perf\": \"webdriver-manager update && npm-run-all build_cjs build_global perf\",\n-    \"build_test\": \"shx rm -rf ./dist/ && npm-run-all copy_sources build_cjs generate_packages clean_spec build_spec test_mocha\",\n-    \"build_cover\": \"shx rm -rf ./dist/ && npm-run-all build_all build_spec cover\",\n-    \"build_docs\": \"npm-run-all build_global build_esm2015_for_docs build_cjs clean_spec build_spec tests2png decision_tree_widget && esdoc -c esdoc.json && npm-run-all clean_dist_esm2015\",\n-    \"build_spec\": \"tsc --project ./spec --pretty\",\n+    \"build_docs\": \"npm-run-all build_global build_esm2015_for_docs build_cjs tests2png decision_tree_widget && esdoc -c esdoc.json && npm-run-all clean_dist_esm2015\",\n     \"build_spec_browser\": \"webpack --config spec/support/webpack.mocha.config.js\",\n     \"check_circular_dependencies\": \"madge ./dist/cjs --circular\",\n-    \"clean_spec\": \"shx rm -rf spec-js\",\n     \"clean_dist\": \"shx rm -rf ./dist\",\n     \"clean_dist_cjs\": \"shx rm -rf ./dist/cjs\",\n     \"clean_dist_esm5\": \"shx rm -rf ./dist/esm5\",\n     \"clean_dist_esm5_for_rollup\": \"shx rm -rf ./dist/esm5_for_rollup\",\n     \"clean_dist_esm2015\": \"shx rm -rf ./dist/esm2015\",\n     \"clean_dist_global\": \"shx rm -rf ./dist/global\",\n     \"commit\": \"git-cz\",\n-    \"compile_dist_cjs\": \"tsc   ./dist/src/Rx.ts ./dist/src/add/observable/of.ts ./dist/src/operator/toPromise.ts -m commonjs --lib es5,es2015.iterable,es2015.collection,es2015.promise,dom --sourceMap --inlineSources --outDir ./dist/cjs   --target ES5    --diagnostics --pretty --noImplicitAny --noImplicitReturns --noImplicitThis --suppressImplicitAnyIndexErrors --moduleResolution node -d --declarationDir ./dist/typings\",\n-    \"compile_dist_esm5\": \"tsc  ./dist/src/Rx.ts ./dist/src/add/observable/of.ts ./dist/src/operator/toPromise.ts -m es2015   --lib es5,es2015.iterable,es2015.collection,es2015.promise,dom --sourceMap --outDir ./dist/esm5  --target ES5    --diagnostics --pretty --noImplicitAny --noImplicitReturns --noImplicitThis --suppressImplicitAnyIndexErrors --moduleResolution node\",\n-    \"compile_dist_esm2015\": \"tsc ./dist/src/Rx.ts ./dist/src/add/observable/of.ts ./dist/src/operator/toPromise.ts -m es2015   --lib es5,es2015.iterable,es2015.collection,es2015.promise,dom --sourceMap --outDir ./dist/esm2015 --target es2015 --diagnostics --pretty --noImplicitAny --noImplicitReturns --noImplicitThis --suppressImplicitAnyIndexErrors --moduleResolution node\",\n-    \"compile_dist_esm2015_for_docs\": \"tsc ./dist/src/Rx.ts ./dist/src/add/observable/of.ts ./dist/src/MiscJSDoc.ts ./dist/src/operator/toPromise.ts -m es2015   --sourceMap --outDir ./dist/es6 --target es2015 -d --diagnostics --pretty --noImplicitAny --noImplicitReturns --noImplicitThis --suppressImplicitAnyIndexErrors --moduleResolution node\",\n-    \"compile_dist_esm5_for_rollup\": \"tsc  ./dist/src/Rx.ts ./dist/src/add/observable/of.ts ./dist/src/operator/toPromise.ts -m es2015   --lib es5,es2015.iterable,es2015.collection,es2015.promise,dom --sourceMap --outDir ./dist/esm5_for_rollup  --target ES5    --diagnostics --pretty --noImplicitAny --noImplicitReturns --noImplicitThis --suppressImplicitAnyIndexErrors --moduleResolution node --noEmitHelpers\",\n+    \"compile_dist_cjs\": \"tsc   ./dist/src/Rx.ts ./dist/src/add/observable/of.ts -m commonjs --lib es5,es2015.iterable,es2015.collection,es2015.promise,dom --sourceMap --outDir ./dist/cjs   --target ES5    --diagnostics --pretty --noImplicitAny --noImplicitReturns --noImplicitThis --suppressImplicitAnyIndexErrors --moduleResolution node -d --declarationDir ./dist/typings\",\n+    \"compile_dist_esm5\": \"tsc  ./dist/src/Rx.ts ./dist/src/add/observable/of.ts -m es2015   --lib es5,es2015.iterable,es2015.collection,es2015.promise,dom --sourceMap --outDir ./dist/esm5  --target ES5    --diagnostics --pretty --noImplicitAny --noImplicitReturns --noImplicitThis --suppressImplicitAnyIndexErrors --moduleResolution node\",\n+    \"compile_dist_esm2015\": \"tsc ./dist/src/Rx.ts ./dist/src/add/observable/of.ts -m es2015   --lib es5,es2015.iterable,es2015.collection,es2015.promise,dom --sourceMap --outDir ./dist/esm2015 --target es2015 --diagnostics --pretty --noImplicitAny --noImplicitReturns --noImplicitThis --suppressImplicitAnyIndexErrors --moduleResolution node\",\n+    \"compile_dist_esm2015_for_docs\": \"tsc ./dist/src/Rx.ts ./dist/src/add/observable/of.ts ./dist/src/MiscJSDoc.ts -m es2015   --sourceMap --outDir ./dist/es6 --target es2015 -d --diagnostics --pretty --noImplicitAny --noImplicitReturns --noImplicitThis --suppressImplicitAnyIndexErrors --moduleResolution node\",\n+    \"compile_dist_esm5_for_rollup\": \"tsc  ./dist/src/Rx.ts ./dist/src/add/observable/of.ts -m es2015   --lib es5,es2015.iterable,es2015.collection,es2015.promise,dom --sourceMap --outDir ./dist/esm5_for_rollup  --target ES5    --diagnostics --pretty --noImplicitAny --noImplicitReturns --noImplicitThis --suppressImplicitAnyIndexErrors --moduleResolution node --noEmitHelpers\",\n     \"copy_sources\": \"mkdirp dist && shx cp -r ./src/ ./dist/src\",\n-    \"cover\": \"shx rm -rf dist/cjs && tsc dist/src/Rx.ts dist/src/add/observable/of.ts -m commonjs --lib es5,es2015.iterable,es2015.collection,es2015.promise,dom --outDir dist/cjs --sourceMap --target ES5 -d && nyc --reporter=lcov --reporter=html --exclude=spec/support/**/* --exclude=spec-js/**/* --exclude=node_modules mocha --opts spec/support/default.opts spec-js\",\n     \"decision_tree_widget\": \"cd doc/decision-tree-widget && npm run build && cd ../..\",\n     \"doctoc\": \"doctoc CONTRIBUTING.md\",\n     \"generate_packages\": \"node .make-packages.js\",\n@@ -100,11 +115,10 @@\n     \"perf_micro\": \"node ./perf/micro/index.js\",\n     \"prepublish\": \"shx rm -rf ./typings && typings install && npm run build_all\",\n     \"publish_docs\": \"./publish_docs.sh\",\n-    \"test_mocha\": \"mocha --opts spec/support/default.opts spec-js\",\n-    \"debug_mocha\": \"node --inspect --debug-brk ./node_modules/.bin/_mocha --opts spec/support/debug.opts spec-js\",\n     \"test_browser\": \"npm-run-all build_spec_browser && opn spec/support/mocha-browser-runner.html\",\n-    \"test\": \"npm-run-all clean_spec build_spec test_mocha clean_spec\",\n-    \"tests2png\": \"npm run build_spec && mkdirp tmp/docs/img && mkdirp spec-js/support && shx cp spec/support/*.opts spec-js/support/ && mocha --opts spec/support/tests2png.opts spec-js\",\n+    \"test\": \"cross-env TS_NODE_FAST=true mocha --compilers ts:ts-node/register --opts spec/support/coverage.opts \\\"spec/**/*-spec.ts\\\"\",\n+    \"test:cover\": \"cross-env TS_NODE_FAST=true nyc npm test\",\n+    \"tests2png\": \"tsc && mkdirp tmp/docs/img && mkdirp spec-js/support && shx cp spec/support/*.opts spec-js/support/ && mocha --opts spec/support/tests2png.opts spec-js\",\n     \"watch\": \"watch \\\"echo triggering build && npm run build_test && echo build completed\\\" src -d -u -w=15\"\n   },\n   \"repository\": {\n@@ -165,6 +179,7 @@\n     \"colors\": \"1.1.2\",\n     \"commitizen\": \"^2.8.6\",\n     \"coveralls\": \"^2.11.13\",\n+    \"cross-env\": \"^5.1.0\",\n     \"cz-conventional-changelog\": \"^1.2.0\",\n     \"danger\": \"^1.1.0\",\n     \"doctoc\": \"^1.0.0\",\n@@ -190,7 +205,7 @@\n     \"mocha-in-sauce\": \"0.0.1\",\n     \"npm-run-all\": \"^4.0.2\",\n     \"npm-scripts-info\": \"^0.3.4\",\n-    \"nyc\": \"^10.2.0\",\n+    \"nyc\": \"^11.3.0\",\n     \"opn-cli\": \"^3.1.0\",\n     \"platform\": \"^1.3.1\",\n     \"promise\": \"^7.1.1\",\n@@ -204,6 +219,7 @@\n     \"sinon\": \"^2.1.0\",\n     \"sinon-chai\": \"^2.9.0\",\n     \"source-map-support\": \"^0.4.0\",\n+    \"ts-node\": \"^3.3.0\",\n     \"tslib\": \"^1.5.0\",\n     \"tslint\": \"^4.4.2\",\n     \"typescript\": \"~2.0.6\","},{"sha":"faeb92d2ff5e73bc6d069f88810e0b45dd2ae1e1","filename":"spec/Notification-spec.ts","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2FNotification-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2FNotification-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2FNotification-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,7 +1,8 @@\n import { expect } from 'chai';\n-import * as Rx from '../dist/package/Rx';\n+import * as Rx from '../src/Rx';\n+import marbleTestingSignature = require('./helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n-declare const expectObservable;\n+declare const expectObservable: typeof marbleTestingSignature.expectObservable;\n const Notification = Rx.Notification;\n \n /** @test {Notification} */"},{"sha":"9d3d7590fb157978027a6ba1753fe15678307833","filename":"spec/Observable-spec.ts","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2FObservable-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2FObservable-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2FObservable-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,11 +1,13 @@\n import { expect } from 'chai';\n import * as sinon from 'sinon';\n-import * as Rx from '../dist/package/Rx';\n-import { TeardownLogic } from '../dist/package/Subscription';\n+import * as Rx from '../src/Rx';\n+import { TeardownLogic } from '../src/Subscription';\n import marbleTestingSignature = require('./helpers/marble-testing'); // tslint:disable-line:no-require-imports\n-import { map } from '../dist/package/operators/map';\n+import { map } from '../src/operators/map';\n+//tslint:disable-next-line\n+require('./helpers/test-helper');\n \n-declare const { asDiagram, rxTestScheduler };\n+declare const asDiagram: any, rxTestScheduler: any;\n declare const cold: typeof marbleTestingSignature.cold;\n declare const expectObservable: typeof marbleTestingSignature.expectObservable;\n declare const expectSubscriptions: typeof marbleTestingSignature.expectSubscriptions;\n@@ -15,7 +17,7 @@ const Observable = Rx.Observable;\n \n declare const __root__: any;\n \n-function expectFullObserver(val) {\n+function expectFullObserver(val: any) {\n   expect(val).to.be.a('object');\n   expect(val.next).to.be.a('function');\n   expect(val.error).to.be.a('function');"},{"sha":"4dff8e3ac78895f65d90ad0cbc173dda8a3f55c3","filename":"spec/Scheduler-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2FScheduler-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2FScheduler-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2FScheduler-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../dist/package/Rx';\n+import * as Rx from '../src/Rx';\n \n const Scheduler = Rx.Scheduler;\n "},{"sha":"8bc1e19d190c0e61acef1ea4e133afa6392e9ce4","filename":"spec/Subject-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2FSubject-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2FSubject-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2FSubject-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../dist/package/Rx';\n+import * as Rx from '../src/Rx';\n import marbleTestingSignature = require('./helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { time };"},{"sha":"cd2d13e18c5344284b7bda97b839bf30fcd1737a","filename":"spec/Subscriber-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2FSubscriber-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2FSubscriber-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2FSubscriber-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,6 +1,6 @@\n import { expect } from 'chai';\n import * as sinon from 'sinon';\n-import * as Rx from '../dist/package/Rx';\n+import * as Rx from '../src/Rx';\n \n const Subscriber = Rx.Subscriber;\n "},{"sha":"4fc0cd015fb4a9c9b6f762c8d925d4d5f2f19039","filename":"spec/Subscription-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2FSubscription-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2FSubscription-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2FSubscription-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../dist/package/Rx';\n+import * as Rx from '../src/Rx';\n \n const Observable = Rx.Observable;\n const Subscription = Rx.Subscription;"},{"sha":"1e481295c683e6b83da3e22957a7c8a751d66b08","filename":"spec/exports-spec.ts","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fexports-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fexports-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fexports-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,29 +1,29 @@\n import { expect } from 'chai';\n-import { bindCallback } from '../dist/package/observable/bindCallback';\n-import { bindNodeCallback } from '../dist/package/observable/bindNodeCallback';\n-import { combineLatest } from '../dist/package/observable/combineLatest';\n-import { concat } from '../dist/package/observable/concat';\n-import { defer } from '../dist/package/observable/defer';\n-import { empty } from '../dist/package/observable/empty';\n-import { forkJoin } from '../dist/package/observable/forkJoin';\n-import { from } from '../dist/package/observable/from';\n-import { fromEvent } from '../dist/package/observable/fromEvent';\n-import { fromEventPattern } from '../dist/package/observable/fromEventPattern';\n-import { fromPromise } from '../dist/package/observable/fromPromise';\n-import { _if } from '../dist/package/observable/if';\n-import { interval } from '../dist/package/observable/interval';\n-import { merge } from '../dist/package/observable/merge';\n-import { never } from '../dist/package/observable/never';\n-import { of } from '../dist/package/observable/of';\n-import { onErrorResumeNext } from '../dist/package/observable/onErrorResumeNext';\n-import { pairs } from '../dist/package/observable/pairs';\n-import { race } from '../dist/package/observable/race';\n-import { range } from '../dist/package/observable/range';\n-import { _throw } from '../dist/package/observable/throw';\n-import { timer } from '../dist/package/observable/timer';\n-import { using } from '../dist/package/observable/using';\n-import { zip } from '../dist/package/observable/zip';\n-import * as Rx from '../dist/package/Rx';\n+import { bindCallback } from '../src/observable/bindCallback';\n+import { bindNodeCallback } from '../src/observable/bindNodeCallback';\n+import { combineLatest } from '../src/observable/combineLatest';\n+import { concat } from '../src/observable/concat';\n+import { defer } from '../src/observable/defer';\n+import { empty } from '../src/observable/empty';\n+import { forkJoin } from '../src/observable/forkJoin';\n+import { from } from '../src/observable/from';\n+import { fromEvent } from '../src/observable/fromEvent';\n+import { fromEventPattern } from '../src/observable/fromEventPattern';\n+import { fromPromise } from '../src/observable/fromPromise';\n+import { _if } from '../src/observable/if';\n+import { interval } from '../src/observable/interval';\n+import { merge } from '../src/observable/merge';\n+import { never } from '../src/observable/never';\n+import { of } from '../src/observable/of';\n+import { onErrorResumeNext } from '../src/observable/onErrorResumeNext';\n+import { pairs } from '../src/observable/pairs';\n+import { race } from '../src/observable/race';\n+import { range } from '../src/observable/range';\n+import { _throw } from '../src/observable/throw';\n+import { timer } from '../src/observable/timer';\n+import { using } from '../src/observable/using';\n+import { zip } from '../src/observable/zip';\n+import * as Rx from '../src/Rx';\n \n describe('exports', () => {\n   it('should have rxjs/observable/bindCallback', () => {\n@@ -121,4 +121,4 @@ describe('exports', () => {\n   it('should have rxjs/observable/zip', () => {\n     expect(zip).to.equal(Rx.Observable.zip);\n   });\n-});\n+});\n\\ No newline at end of file"},{"sha":"3956841d802389245563c20584f48163160835e7","filename":"spec/helpers/ambient.d.ts","status":"removed","additions":0,"deletions":12,"changes":12,"blob_url":"https://github.com/ReactiveX/rxjs/blob/24854cf66172f91f55729765c4d64e61607563c8/spec%2Fhelpers%2Fambient.d.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/24854cf66172f91f55729765c4d64e61607563c8/spec%2Fhelpers%2Fambient.d.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fhelpers%2Fambient.d.ts?ref=24854cf66172f91f55729765c4d64e61607563c8","patch":"@@ -1,12 +0,0 @@\n-//ambient declarations to allow modules do not have type definition\n-declare module 'mocha/lib/interfaces/common' {\n-}\n-\n-declare module 'escape-string-regexp' {\n-}\n-\n-declare module 'mocha/lib/suite' {\n-}\n-\n-declare module 'mocha/lib/test' {\n-}\n\\ No newline at end of file"},{"sha":"1589bb29413851c6b3d3d9abb6a97bb604466432","filename":"spec/helpers/marble-testing.ts","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fhelpers%2Fmarble-testing.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fhelpers%2Fmarble-testing.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fhelpers%2Fmarble-testing.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,9 +1,9 @@\n ///<reference path='../../typings/index.d.ts'/>\n-import { Observable } from '../../dist/package/Observable';\n-import { SubscriptionLog } from '../../dist/package/testing/SubscriptionLog';\n-import { ColdObservable } from '../../dist/package/testing/ColdObservable';\n-import { HotObservable } from '../../dist/package/testing/HotObservable';\n-import { TestScheduler, observableToBeFn, subscriptionLogsToBeFn } from '../../dist/package/testing/TestScheduler';\n+import { Observable } from '../../src/Observable';\n+import { SubscriptionLog } from '../../src/testing/SubscriptionLog';\n+import { ColdObservable } from '../../src/testing/ColdObservable';\n+import { HotObservable } from '../../src/testing/HotObservable';\n+import { TestScheduler, observableToBeFn, subscriptionLogsToBeFn } from '../../src/testing/TestScheduler';\n \n declare const global: any;\n "},{"sha":"24a862634858c7004ad509019c776232148989e2","filename":"spec/helpers/test-helper.ts","status":"modified","additions":21,"deletions":18,"changes":39,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fhelpers%2Ftest-helper.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fhelpers%2Ftest-helper.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fhelpers%2Ftest-helper.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,24 +1,25 @@\n ///<reference path='../../typings/index.d.ts'/>\n declare const global: any;\n \n-import * as Rx from '../../dist/package/Rx';\n-import { ObservableInput } from '../../dist/package/Observable';\n-import { root } from '../../dist/package/util/root';\n-import {$$iterator} from '../../dist/package/symbol/iterator';\n+import * as Rx from '../../src/Rx';\n+import { ObservableInput } from '../../src/Observable';\n+import { root } from '../../src/util/root';\n+import { $$iterator } from '../../src/symbol/iterator';\n import $$symbolObservable from 'symbol-observable';\n+import { Observable } from '../../src/Observable';\n \n-export function lowerCaseO<T>(...args): Rx.Observable<T> {\n+export function lowerCaseO<T>(...args: Array<any>): Rx.Observable<T> {\n \n   const o = {\n-    subscribe: function (observer) {\n+    subscribe: function (observer: any) {\n       args.forEach(function (v) {\n         observer.next(v);\n       });\n       observer.complete();\n     }\n   };\n \n-  o[$$symbolObservable] = function () {\n+  o[$$symbolObservable] = function (this: any) {\n     return this;\n   };\n \n@@ -30,17 +31,19 @@ export const createObservableInputs = <T>(value: T) => Rx.Observable.of<Observab\n   Rx.Observable.of<T>(value, Rx.Scheduler.async),\n   [value],\n   Promise.resolve(value),\n-  <any>({ [$$iterator]: () => {\n-      const iteratorResults = [\n-        {value, done: false},\n-        {done: true}\n-      ];\n-      return {\n-        next: () => {\n-          return iteratorResults.shift();\n-        }\n-      };\n-    }}),\n+  <any>({\n+  [$$iterator]: () => {\n+    const iteratorResults = [\n+      { value, done: false },\n+      { done: true }\n+    ];\n+    return {\n+      next: () => {\n+        return iteratorResults.shift();\n+      }\n+    };\n+  }\n+  }),\n   <any>({ [$$symbolObservable]: () => Rx.Observable.of(value) })\n );\n "},{"sha":"5d0c2d455cdceba65805a99ede8b068dd4e462c1","filename":"spec/helpers/testScheduler-ui.ts","status":"modified","additions":28,"deletions":24,"changes":52,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fhelpers%2FtestScheduler-ui.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fhelpers%2FtestScheduler-ui.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fhelpers%2FtestScheduler-ui.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,19 +1,23 @@\n ///<reference path='../../typings/index.d.ts'/>\n-///<reference path='ambient.d.ts'/>\n \n import * as _ from 'lodash';\n-import * as commonInterface from 'mocha/lib/interfaces/common';\n-import * as escapeRe from 'escape-string-regexp';\n+//import * as commonInterface from 'mocha/lib/interfaces/common';\n+//import * as escapeRe from 'escape-string-regexp';\n import * as chai from 'chai';\n import * as sinonChai from 'sinon-chai';\n \n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import * as marble from './marble-testing';\n \n+//tslint:disable:no-var-requires no-require-imports\n+const commonInterface = require('mocha/lib/interfaces/common');\n+const escapeRe = require('escape-string-regexp');\n+//tslint:enable:no-var-requires no-require-imports\n+\n //setup sinon-chai\n chai.use(sinonChai);\n \n-declare const module, global, Suite, Test: any;\n+declare const module: any, global: any, Suite: any, Test: any;\n \n if (global && !(typeof window !== 'undefined')) {\n   global.mocha = require('mocha'); // tslint:disable-line:no-require-imports no-var-requires\n@@ -29,10 +33,10 @@ const diagramFunction = global.asDiagram;\n \n //mocha creates own global context per each test suite, simple patching to global won't deliver its context into test cases.\n //this custom interface is just mimic of existing one amending test scheduler behavior previously test-helper does via global patching.\n-module.exports = function(suite) {\n+module.exports = function(suite: any) {\n   const suites = [suite];\n \n-  suite.on('pre-require', function(context, file, mocha) {\n+  suite.on('pre-require', function(context: any, file: any, mocha: any) {\n     const common = (<any>commonInterface)(suites, context);\n \n     context.before = common.before;\n@@ -57,7 +61,7 @@ module.exports = function(suite) {\n      * and/or tests.\n      */\n \n-    context.describe = context.context = function(title, fn) {\n+    context.describe = context.context = function(title: any, fn: any) {\n       const suite = (<any>Suite).create(suites[0], title);\n       suite.file = file;\n       suites.unshift(suite);\n@@ -70,7 +74,7 @@ module.exports = function(suite) {\n      * Pending describe.\n      */\n \n-    context.xdescribe = context.xcontext = context.describe.skip = function(title, fn) {\n+    context.xdescribe = context.xcontext = context.describe.skip = function(title: any, fn: any) {\n       const suite = (<any>Suite).create(suites[0], title);\n       suite.pending = true;\n       suites.unshift(suite);\n@@ -82,7 +86,7 @@ module.exports = function(suite) {\n      * Exclusive suite.\n      */\n \n-    context.describe.only = function(title, fn) {\n+    context.describe.only = function(title: any, fn: any) {\n       const suite = context.describe(title, fn);\n       mocha.grep(suite.fullTitle());\n       return suite;\n@@ -94,13 +98,13 @@ module.exports = function(suite) {\n      * exceptional type definition won't be used in test cases.\n      */\n \n-    context.type = function (title, fn) {\n+    context.type = function(title: any, fn: any) {\n       //intentionally does not execute to avoid unexpected side effect occurs by subscription,\n       //or infinite source. Suffecient to check build time only.\n     };\n \n-    function stringify(x): string {\n-      return JSON.stringify(x, function (key, value) {\n+    function stringify(x: any): string {\n+      return JSON.stringify(x, function (key: string, value: any) {\n         if (Array.isArray(value)) {\n           return '[' + value\n             .map(function (i) {\n@@ -114,7 +118,7 @@ module.exports = function(suite) {\n       .replace(/\\\\n/g, '\\n');\n     }\n \n-    function deleteErrorNotificationStack(marble) {\n+    function deleteErrorNotificationStack(marble: any) {\n       const { notification } = marble;\n       if (notification) {\n         const { kind, error } = notification;\n@@ -129,7 +133,7 @@ module.exports = function(suite) {\n      * custom assertion formatter for expectObservable test\n      */\n \n-    function observableMatcher(actual, expected) {\n+    function observableMatcher(actual: any, expected: any) {\n       if (Array.isArray(actual) && Array.isArray(expected)) {\n         actual = actual.map(deleteErrorNotificationStack);\n         expected = expected.map(deleteErrorNotificationStack);\n@@ -139,10 +143,10 @@ module.exports = function(suite) {\n         }\n \n         let message = '\\nExpected \\n';\n-        actual.forEach((x) => message += `\\t${stringify(x)}\\n`);\n+        actual.forEach((x: any) => message += `\\t${stringify(x)}\\n`);\n \n         message += '\\t\\nto deep equal \\n';\n-        expected.forEach((x) => message += `\\t${stringify(x)}\\n`);\n+        expected.forEach((x: any) => message += `\\t${stringify(x)}\\n`);\n \n         chai.assert(passed, message);\n       } else {\n@@ -156,7 +160,7 @@ module.exports = function(suite) {\n      * acting as a thunk.\n      */\n \n-    const it = context.it = context.specify = function(title, fn) {\n+    const it = context.it = context.specify = function(title: any, fn: any) {\n       context.rxTestScheduler = null;\n       let modified = fn;\n \n@@ -188,7 +192,7 @@ module.exports = function(suite) {\n      * to be represented as marble diagram png.\n      * It will still serve as normal test cases as well.\n      */\n-    context.asDiagram = function (label) {\n+    context.asDiagram = function (label: any) {\n       if (diagramFunction) {\n         return diagramFunction(label, it);\n       }\n@@ -199,7 +203,7 @@ module.exports = function(suite) {\n      * Exclusive test-case.\n      */\n \n-    context.it.only = function(title, fn) {\n+    context.it.only = function(title: any, fn: any) {\n       const test = it(title, fn);\n       const reString = '^' + (<any>escapeRe)(test.fullTitle()) + '$';\n       mocha.grep(new RegExp(reString));\n@@ -210,14 +214,14 @@ module.exports = function(suite) {\n      * Pending test case.\n      */\n \n-    context.xit = context.xspecify = context.it.skip = function(title) {\n+    context.xit = context.xspecify = context.it.skip = function(title: string) {\n       context.it(title);\n     };\n \n     /**\n      * Number of attempts to retry.\n      */\n-    context.it.retries = function(n) {\n+    context.it.retries = function(n: number) {\n       context.retries(n);\n     };\n   });\n@@ -232,10 +236,10 @@ if (global.Mocha) {\n \n //overrides JSON.toStringfy to serialize error object\n Object.defineProperty(Error.prototype, 'toJSON', {\n-  value: function () {\n+  value: function (this: any) {\n     const alt = {};\n \n-    Object.getOwnPropertyNames(this).forEach(function (key) {\n+    Object.getOwnPropertyNames(this).forEach(function (this: any, key: string) {\n       if (key !== 'stack') {\n         alt[key] = this[key];\n       }"},{"sha":"7907a27b80640223546e5b59edecb22800603f8e","filename":"spec/observables/IteratorObservable-spec.ts","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FIteratorObservable-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FIteratorObservable-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2FIteratorObservable-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,7 +1,7 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n-import { queue } from '../../dist/package/scheduler/queue';\n-import { IteratorObservable } from '../../dist/package/observable/IteratorObservable';\n+import * as Rx from '../../src/Rx';\n+import { queue } from '../../src/scheduler/queue';\n+import { IteratorObservable } from '../../src/observable/IteratorObservable';\n \n declare const expectObservable;\n declare const rxTestScheduler: Rx.TestScheduler;"},{"sha":"325ab39e2332e435b015b064f20766b6fbdd61a3","filename":"spec/observables/ScalarObservable-spec.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FScalarObservable-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FScalarObservable-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2FScalarObservable-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,6 +1,6 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n-import { ScalarObservable } from '../../dist/package/observable/ScalarObservable';\n+import * as Rx from '../../src/Rx';\n+import { ScalarObservable } from '../../src/observable/ScalarObservable';\n \n declare const rxTestScheduler: Rx.TestScheduler;\n "},{"sha":"3e9d88176a64f49a650571f7fd26a9448cfdf59f","filename":"spec/observables/SubscribeOnObservable-spec.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FSubscribeOnObservable-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FSubscribeOnObservable-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2FSubscribeOnObservable-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,7 +1,7 @@\n import { expect } from 'chai';\n import * as sinon from 'sinon';\n-import * as Rx from '../../dist/package/Rx';\n-import { SubscribeOnObservable } from '../../dist/package/observable/SubscribeOnObservable';\n+import * as Rx from '../../src/Rx';\n+import { SubscribeOnObservable } from '../../src/observable/SubscribeOnObservable';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const hot: typeof marbleTestingSignature.hot;"},{"sha":"02f3bbd28e0f81175fd9c8f702b6f23d80b58512","filename":"spec/observables/bindCallback-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FbindCallback-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FbindCallback-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2FbindCallback-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,6 +1,6 @@\n import { expect } from 'chai';\n import * as sinon from 'sinon';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n \n declare const rxTestScheduler: Rx.TestScheduler;\n const Observable = Rx.Observable;"},{"sha":"16fa09e64ddccc150d129d8633d3590e5fbd84f2","filename":"spec/observables/bindNodeCallback-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FbindNodeCallback-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FbindNodeCallback-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2FbindNodeCallback-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,6 +1,6 @@\n import { expect } from 'chai';\n import * as sinon from 'sinon';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n \n declare const rxTestScheduler: Rx.TestScheduler;\n const Observable = Rx.Observable;"},{"sha":"c7a2b0df713023e7163402465ccf07e031486147","filename":"spec/observables/combineLatest-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FcombineLatest-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FcombineLatest-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2FcombineLatest-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { type };"},{"sha":"0da4bb15b7fbad6f01c829a4e5ddd598678c7e1a","filename":"spec/observables/concat-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fconcat-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fconcat-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fconcat-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import { lowerCaseO } from '../helpers/test-helper';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n "},{"sha":"1713771162cd7fbea4f06c237b584dd3d93840ee","filename":"spec/observables/defer-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fdefer-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fdefer-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fdefer-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"19c3e271d7bb01e6955aac08544c33e1ceb21783","filename":"spec/observables/dom/ajax-spec.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fdom%2Fajax-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fdom%2Fajax-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fdom%2Fajax-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,7 +1,7 @@\n import { expect } from 'chai';\n import * as sinon from 'sinon';\n-import * as Rx from '../../../dist/package/Rx';\n-import { root } from '../../../dist/package/util/root';\n+import * as Rx from '../../../src/Rx';\n+import { root } from '../../../src/util/root';\n \n declare const global: any;\n "},{"sha":"b817267aa8faa8422078441fd04f481ed6104b7c","filename":"spec/observables/dom/webSocket-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fdom%2FwebSocket-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fdom%2FwebSocket-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fdom%2FwebSocket-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,6 +1,6 @@\n import { expect } from 'chai';\n import * as sinon from 'sinon';\n-import * as Rx from '../../../dist/package/Rx';\n+import * as Rx from '../../../src/Rx';\n \n declare const __root__: any;\n "},{"sha":"311b5a675fc8b33370d838ab7c8d33cd2088fa41","filename":"spec/observables/empty-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fempty-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fempty-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fempty-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"685b5c5aabc12e548648f7a8978fc09bd4a72f4c","filename":"spec/observables/forkJoin-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FforkJoin-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FforkJoin-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2FforkJoin-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import { lowerCaseO } from '../helpers/test-helper';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n "},{"sha":"1bb3f1369bb8887f5032b696a461753e6d184c49","filename":"spec/observables/from-promise-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Ffrom-promise-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Ffrom-promise-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Ffrom-promise-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,6 +1,6 @@\n import { expect } from 'chai';\n import * as sinon from 'sinon';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n \n declare const process: any;\n const Observable = Rx.Observable;"},{"sha":"d527ee3ba6069eb9363418fc0b54602b6c83a5af","filename":"spec/observables/from-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Ffrom-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Ffrom-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Ffrom-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n \n declare const {asDiagram, expectObservable, Symbol, type};\n declare const rxTestScheduler: Rx.TestScheduler;"},{"sha":"d6c0cfe0cb733411397834f3bfa79f428eeb17d2","filename":"spec/observables/fromEvent-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FfromEvent-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FfromEvent-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2FfromEvent-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"2f71e0beeadc465a15a26ed272790dc834359f1d","filename":"spec/observables/fromEventPattern-spec.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FfromEventPattern-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FfromEventPattern-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2FfromEventPattern-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,7 +1,7 @@\n import { expect } from 'chai';\n import * as sinon from 'sinon';\n-import * as Rx from '../../dist/package/Rx';\n-import { noop } from '../../dist/package/util/noop';\n+import * as Rx from '../../src/Rx';\n+import { noop } from '../../src/util/noop';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"f7c6fa1a0cb742b221c15a1aa02c8ce5df12b6df","filename":"spec/observables/generate-spec.ts","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fgenerate-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fgenerate-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fgenerate-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,6 +1,6 @@\n-import * as Rx from '../../dist/package/Rx';\n-import '../../dist/package/add/observable/generate';\n-import { TestScheduler } from '../../dist/package/testing/TestScheduler';\n+import * as Rx from '../../src/Rx';\n+import '../../src/add/observable/generate';\n+import { TestScheduler } from '../../src/testing/TestScheduler';\n import { expect } from 'chai';\n declare const {asDiagram, expectObservable};\n declare const rxTestScheduler: TestScheduler;"},{"sha":"22ca35e49a8d98531392bc9cbd5d5e824d58309c","filename":"spec/observables/if-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fif-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fif-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fif-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const expectObservable: typeof marbleTestingSignature.expectObservable;"},{"sha":"2faded0ddb8beea99a102ea36540ceb8854b792e","filename":"spec/observables/interval-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Finterval-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Finterval-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Finterval-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,6 +1,6 @@\n import { expect } from 'chai';\n import * as sinon from 'sinon';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"2147d2849e14ff0684cdf0bf2afda9aee1bb7fb5","filename":"spec/observables/merge-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fmerge-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fmerge-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fmerge-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import { lowerCaseO } from '../helpers/test-helper';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n "},{"sha":"124de22f9e3f50078853577dad29f92bf41742f4","filename":"spec/observables/never-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fnever-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fnever-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fnever-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"e5b49d0cd5754aebdfc1d23a0255e9b952654343","filename":"spec/observables/of-spec.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fof-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fof-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fof-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,8 +1,8 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n-import { ArrayObservable } from '../../dist/package/observable/ArrayObservable';\n-import { ScalarObservable } from '../../dist/package/observable/ScalarObservable';\n-import { EmptyObservable } from '../../dist/package/observable/EmptyObservable';\n+import * as Rx from '../../src/Rx';\n+import { ArrayObservable } from '../../src/observable/ArrayObservable';\n+import { ScalarObservable } from '../../src/observable/ScalarObservable';\n+import { EmptyObservable } from '../../src/observable/EmptyObservable';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"7854dcafa343b276e93b912fa0b42c0f8de398f2","filename":"spec/observables/onErrorResumeNext-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FonErrorResumeNext-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2FonErrorResumeNext-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2FonErrorResumeNext-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\r\n+import * as Rx from '../../src/Rx';\r\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\r\n \r\n declare const hot: typeof marbleTestingSignature.hot;\r"},{"sha":"ef8aa05f51a08e60701ee18541ec6d524d597a1a","filename":"spec/observables/pairs-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fpairs-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fpairs-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fpairs-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"b2eaa1f7c2e6c3cf2e6d314173d4c86001e7beb0","filename":"spec/observables/race-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Frace-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Frace-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Frace-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const hot: typeof marbleTestingSignature.hot;"},{"sha":"e9d13e929c97f4419f9d261cbe274a2b68a7f74d","filename":"spec/observables/range-spec.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Frange-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Frange-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Frange-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,7 +1,7 @@\n import { expect } from 'chai';\n import * as sinon from 'sinon';\n-import * as Rx from '../../dist/package/Rx';\n-import { RangeObservable } from '../../dist/package/observable/RangeObservable';\n+import * as Rx from '../../src/Rx';\n+import { RangeObservable } from '../../src/observable/RangeObservable';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"577bef871ea41aec617ea7bd75410887cdba69e4","filename":"spec/observables/throw-spec.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fthrow-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fthrow-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fthrow-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,6 +1,6 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n-import { ErrorObservable } from '../../dist/package/observable/ErrorObservable';\n+import * as Rx from '../../src/Rx';\n+import { ErrorObservable } from '../../src/observable/ErrorObservable';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"e09b809ad5bb1deec0adc944bbda7df65c8b991c","filename":"spec/observables/timer-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Ftimer-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Ftimer-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Ftimer-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n \n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n "},{"sha":"8b5a7a80b09a4cc362c74298744b763693f87b3f","filename":"spec/observables/using-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fusing-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fusing-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fusing-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n \n const Observable = Rx.Observable;\n const Subscription = Rx.Subscription;"},{"sha":"3be791b039881f50ec6f8a9ae9a7081b639770a8","filename":"spec/observables/zip-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fzip-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Fobservables%2Fzip-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Fzip-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { type };"},{"sha":"ebecd4cf86d737cd009550e8cee912571a047e4c","filename":"spec/operators/audit-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Faudit-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Faudit-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Faudit-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"e9d53c05300839e48b913322d9308bc193fc2450","filename":"spec/operators/auditTime-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FauditTime-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FauditTime-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FauditTime-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"c70a13fb117b864a6556041876e3264141d0f51f","filename":"spec/operators/buffer-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fbuffer-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fbuffer-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fbuffer-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"d1a0bb4f92d0d010f4a87c3a8c22c3186302e673","filename":"spec/operators/bufferCount-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FbufferCount-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FbufferCount-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FbufferCount-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import { expect } from 'chai';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n "},{"sha":"b3f729e2488d214a953ccb7b00e8aaf843b7a1d8","filename":"spec/operators/bufferTime-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FbufferTime-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FbufferTime-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FbufferTime-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram, time };"},{"sha":"2f54785a214eaa5af7daa2f4a7a6214fc2dcfbd7","filename":"spec/operators/bufferToggle-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FbufferToggle-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FbufferToggle-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FbufferToggle-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"d42b7f0a0c32a9f724dd72ee8659ef3fc82bfb8c","filename":"spec/operators/bufferWhen-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FbufferWhen-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FbufferWhen-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FbufferWhen-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"22996203b8e92fba136aa4928c48e6a756c87850","filename":"spec/operators/catch-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fcatch-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fcatch-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fcatch-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import * as sinon from 'sinon';\n import { createObservableInputs } from '../helpers/test-helper';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports"},{"sha":"e30227e6f9c9c6edc5c9aa5f74cac69148e3a86f","filename":"spec/operators/combineAll-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FcombineAll-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FcombineAll-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FcombineAll-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"b4c942c8702dbd35b7f24625e9cb02326046cc57","filename":"spec/operators/combineLatest-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FcombineLatest-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FcombineLatest-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FcombineLatest-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"c6d6681b2971158d8a8b8e62f8ea60fe27f4d112","filename":"spec/operators/concat-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fconcat-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fconcat-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fconcat-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"616c395e42892eb09a1d1b01bfaeea28fff74187","filename":"spec/operators/concatAll-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FconcatAll-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FconcatAll-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FconcatAll-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"f0216973fd6b65758203dbf5af4416f97e615fc7","filename":"spec/operators/concatMap-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FconcatMap-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FconcatMap-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FconcatMap-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"00fed8d222fedb552fdb79eb8feada87c7b8d289","filename":"spec/operators/concatMapTo-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FconcatMapTo-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FconcatMapTo-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FconcatMapTo-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"afa813659e348aa5a8aa499ccf137b5c284e01f2","filename":"spec/operators/count-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fcount-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fcount-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fcount-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"20e60790890f66f66da07691b25965d99e1f042c","filename":"spec/operators/debounce-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fdebounce-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fdebounce-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fdebounce-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"693469d80325203bccda50e8fc88f3be0f276fc7","filename":"spec/operators/debounceTime-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FdebounceTime-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FdebounceTime-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FdebounceTime-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"d591d64b3ad8ee64d5e91bc2889b5193bc5e96e2","filename":"spec/operators/defaultIfEmpty-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FdefaultIfEmpty-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FdefaultIfEmpty-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FdefaultIfEmpty-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"40c4008da495b0201ba78ebdeeba19515b51f08d","filename":"spec/operators/delay-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fdelay-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fdelay-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fdelay-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram, time };"},{"sha":"e666b7f95a23ee00f5047ac03effc958bb5cb745","filename":"spec/operators/delayWhen-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FdelayWhen-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FdelayWhen-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FdelayWhen-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n import { expect } from 'chai';\n "},{"sha":"4feef72ecd035bf3c9d16982057936694916ce64","filename":"spec/operators/dematerialize-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fdematerialize-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fdematerialize-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fdematerialize-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"8cae1d7415dd304a65c5c9349d85f08c3b95a8aa","filename":"spec/operators/distinct-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fdistinct-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fdistinct-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fdistinct-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\r\n+import * as Rx from '../../src/Rx';\r\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\r\n \r\n declare const hot: typeof marbleTestingSignature.hot;\r"},{"sha":"50875f6003ccc44cf88553bbfe9c91851647ac93","filename":"spec/operators/distinctUntilChanged-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FdistinctUntilChanged-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FdistinctUntilChanged-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FdistinctUntilChanged-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"4d537298a850ef1fa3c075a1947c03ca04d86461","filename":"spec/operators/distinctUntilKeyChanged-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FdistinctUntilKeyChanged-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FdistinctUntilKeyChanged-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FdistinctUntilKeyChanged-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"2c22d7f4883dd648f4ee75471004f900e19cf0b8","filename":"spec/operators/do-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fdo-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fdo-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fdo-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"f302ea0bd1c05e00cb128fb3814ecc5f9dc0b522","filename":"spec/operators/elementAt-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FelementAt-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FelementAt-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FelementAt-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"f80a1137158a76c607c8fe1e9d30b0a1fa677691","filename":"spec/operators/every-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fevery-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fevery-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fevery-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"cc36ffc2045bffad333b07020e9c7b06886611f9","filename":"spec/operators/exhaust-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fexhaust-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fexhaust-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fexhaust-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"2fca97bd83603fb889e842853cddd258f82c5200","filename":"spec/operators/exhaustMap-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FexhaustMap-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FexhaustMap-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FexhaustMap-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"49e3af04557219722fd69676528db5fb507a882d","filename":"spec/operators/expand-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fexpand-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fexpand-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fexpand-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"4bd95b0f2e963cda781fd7dd9171d3a839565e30","filename":"spec/operators/filter-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Ffilter-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Ffilter-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Ffilter-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"33b3ffc20632b9357b0b14e6a72702e7c02168f2","filename":"spec/operators/finally-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Ffinally-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Ffinally-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Ffinally-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram, Symbol, type };"},{"sha":"6ebdcb696cbad80741e93627b93ac320311f1bf0","filename":"spec/operators/find-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Ffind-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Ffind-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Ffind-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"dba420e589d00184b859ea00ad9de04a05ebf36b","filename":"spec/operators/findIndex-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FfindIndex-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FfindIndex-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FfindIndex-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"8e4fdedb6513192e39f320a596d14f6bb172b4cf","filename":"spec/operators/first-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Ffirst-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Ffirst-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Ffirst-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"5ff73a913e970e6d9466980cb04bb35b1f1bca23","filename":"spec/operators/groupBy-spec.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FgroupBy-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FgroupBy-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FgroupBy-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,6 +1,6 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n-import { GroupedObservable } from '../../dist/package/operators/groupBy';\n+import * as Rx from '../../src/Rx';\n+import { GroupedObservable } from '../../src/operators/groupBy';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"8ab327cb7d33be4b47f4d7002944971cffb94d12","filename":"spec/operators/ignoreElements-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FignoreElements-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FignoreElements-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FignoreElements-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"262896383b193cf3e959db39444827a5ad3e211b","filename":"spec/operators/isEmpty-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FisEmpty-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FisEmpty-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FisEmpty-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"131b0149b0a6045975a51907229845a5f9f1c85a","filename":"spec/operators/last-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Flast-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Flast-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Flast-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"672dfc782b8d4060fcf03ef50b27fca3528d30b7","filename":"spec/operators/let-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Flet-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Flet-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Flet-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n \n /** @test {let} */\n describe('Observable.prototype.let', () => {"},{"sha":"5b23d44735861f8e664363bfa16acd1dfae91312","filename":"spec/operators/map-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fmap-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fmap-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fmap-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"b270d3b1db47cf2492d39a5ce308cf9cac57d2d9","filename":"spec/operators/mapTo-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FmapTo-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FmapTo-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FmapTo-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"fb2c95ab6a3fed98f423fa9d29f7215a72dd997e","filename":"spec/operators/materialize-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fmaterialize-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fmaterialize-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fmaterialize-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"b8f995aab8730ae279416424045a60c61cd94cc9","filename":"spec/operators/max-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fmax-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fmax-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fmax-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"fdcc56e8239ddc1d2f66d26ddaae30b91a757f22","filename":"spec/operators/merge-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fmerge-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fmerge-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fmerge-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"32654a18b0d124e4be5352a46afce05f237066b1","filename":"spec/operators/mergeAll-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FmergeAll-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FmergeAll-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FmergeAll-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"4db8cab7ad2479e969257722b20eca676cd4e872","filename":"spec/operators/mergeMap-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FmergeMap-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FmergeMap-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FmergeMap-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram, type };"},{"sha":"fef41e0a977cabc66cdb6e41b5493eb933e7c051","filename":"spec/operators/mergeMapTo-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FmergeMapTo-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FmergeMapTo-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FmergeMapTo-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram, type };"},{"sha":"90194db1ffa355536239307baa2362305c73f3b8","filename":"spec/operators/mergeScan-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FmergeScan-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FmergeScan-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FmergeScan-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const hot: typeof marbleTestingSignature.hot;"},{"sha":"29555ebbe3bcf755996920c8e82c720917877829","filename":"spec/operators/min-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fmin-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fmin-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fmin-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"164925138ceffeb827610c4d1907fb930f38a0d8","filename":"spec/operators/multicast-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fmulticast-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fmulticast-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fmulticast-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram, time, rxTestScheduler };"},{"sha":"dcc181b917ff97402810deb013f45c104347469f","filename":"spec/operators/observeOn-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FobserveOn-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FobserveOn-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FobserveOn-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,4 +1,4 @@\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import { expect } from 'chai';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n "},{"sha":"86ced330819f70be2e904d2eb8706a03bcebb994","filename":"spec/operators/onErrorResumeNext-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FonErrorResumeNext-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2FonErrorResumeNext-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2FonErrorResumeNext-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"000e4c36fa90f5a44af282948157adab550a9eb0","filename":"spec/operators/partition-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fpartition-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fpartition-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fpartition-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"},{"sha":"391958192b8c208c2ca299501b6c187335bcd0df","filename":"spec/operators/pluck-spec.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fpluck-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8d137ac0a401533f48512b703abc62f3f82ab81f/spec%2Foperators%2Fpluck-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Foperators%2Fpluck-spec.ts?ref=8d137ac0a401533f48512b703abc62f3f82ab81f","patch":"@@ -1,5 +1,5 @@\n import { expect } from 'chai';\n-import * as Rx from '../../dist/package/Rx';\n+import * as Rx from '../../src/Rx';\n import marbleTestingSignature = require('../helpers/marble-testing'); // tslint:disable-line:no-require-imports\n \n declare const { asDiagram };"}]},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1820","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1820/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1820/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1820/events","html_url":"https://github.com/ReactiveX/rxjs/pull/1820","id":164750568,"node_id":"MDExOlB1bGxSZXF1ZXN0NzY4OTM0NTU=","number":1820,"title":"fix(schedulers): fix asap and animationFrame schedulers to execute across their respective async boundaries","user":{"login":"trxcllnt","id":178183,"node_id":"MDQ6VXNlcjE3ODE4Mw==","avatar_url":"https://avatars.githubusercontent.com/u/178183?v=4","gravatar_id":"","url":"https://api.github.com/users/trxcllnt","html_url":"https://github.com/trxcllnt","followers_url":"https://api.github.com/users/trxcllnt/followers","following_url":"https://api.github.com/users/trxcllnt/following{/other_user}","gists_url":"https://api.github.com/users/trxcllnt/gists{/gist_id}","starred_url":"https://api.github.com/users/trxcllnt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trxcllnt/subscriptions","organizations_url":"https://api.github.com/users/trxcllnt/orgs","repos_url":"https://api.github.com/users/trxcllnt/repos","events_url":"https://api.github.com/users/trxcllnt/events{/privacy}","received_events_url":"https://api.github.com/users/trxcllnt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2016-07-11T02:46:26Z","updated_at":"2018-06-06T21:42:22Z","closed_at":"2016-07-16T01:57:38Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/1820","html_url":"https://github.com/ReactiveX/rxjs/pull/1820","diff_url":"https://github.com/ReactiveX/rxjs/pull/1820.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/1820.patch","merged_at":"2016-07-16T01:57:38Z"},"body":"<!--\nThank you very much for your pull request!\n\nIf your PR is the addition of a new operator, please make sure all these boxes are ticked with an x:\n\n- [ ] Add the operator to Rx\n- [ ] It must have a `-spec.ts` tests file covering the canonical corner cases, with marble diagram tests\n- [ ] If possible, write a `asDiagram` test case too, for PNG diagram generation purposes\n- [ ] The spec file should have a type definition test at the end of the spec to verify type definition for various use cases\n- [ ] The operator must be documented in JSDoc style in the implementation file, including also the PNG marble diagram image\n- [ ] The operator should be listed in `doc/operators.md` in a category of operators\n- [ ] It should also be inserted in the operator decision tree file `doc/decision-tree-widget/tree.yml`\n- [ ] You may need to update `MIGRATION.md` if the operator differs from the corresponding one in RxJS v4\n-->\n\n**Description:**\n\nThe AsapScheduler and AnimationFrameScheduler were totally busted. My bad. Now they execute their scheduled actions in batches. If actions reschedule while executing a batch, a new frame is requested for the rescheduled action to execute in.\n\nOther updates included in this PR:\n- simplifies the public `Scheduler` and `Action` APIs. Implementation details like the `actions` queue and `active` boolean are now on the concrete implementations, so it's easier for people to implement the Scheduler API.\n- renames `FutureAction` -> `AsyncAction` to conform to the same naming convention as the rest of the Action types.\n- Actions should be able to be recursively rescheduled with different delay times and switch between their delay = 0 and delay > 0 behaviors. For example, a delay=0 `QueueAction` should be able to reschedule with delay > 0 and fall back to its parent class's (`AsyncAction`) behavior.\n- If a scheduled action throws an error, the schedulers now dispose (and un-reference) the rest of the scheduled actions before re-throwing. I'm not sure how necessary this is, but it did seem like keeping the actions in the queue could was incorrect (they'd stick around until the Scheduler was flushed, at which time they'd be executed) or possibly leaky.\n\n**Related issue (if exists):**\n\nFixes #1814\n\n**Performance results:**\n\nRe-ran a few of the performance tests to check regressions when using the queue scheduler. No discernible perf hits.\n\nCurrent master:\n\n|  | RxJS 4.1.0 | RxJS 5.0.0-beta.10 | factor | % improved |\n| --- | --- | --- | --- | --- |\n| concat - immediate | 50,291 (±1.21%) | 357,051 (±2.00%) | 7.10x | 610.0% |\n| merge - immediate | 5,621 (±1.53%) | 56,834 (±1.00%) | 10.11x | 911.1% |\n| concat | 21,527 (±1.74%) | 153,550 (±4.04%) | 7.13x | 613.3% |\n| merge | 2,283 (±2.35%) | 21,295 (±2.45%) | 9.33x | 832.8% |\n| from-with-array - immediate | 127,203 (±1.81%) | 895,727 (±1.10%) | 7.04x | 604.2% |\n| from-with-iterable - immediate | 105,449 (±2.19%) | 357,870 (±3.85%) | 3.39x | 239.4% |\n| from-with-string - immediate | 60,665 (±4.35%) | 384,754 (±3.69%) | 6.34x | 534.2% |\n| of - immediate | 59,050 (±3.56%) | 829,434 (±3.29%) | 14.05x | 1,304.6% |\n| from-with-array | 54,174 (±3.47%) | 668,259 (±3.17%) | 12.34x | 1,133.6% |\n| from-with-iterable | 51,085 (±3.41%) | 366,127 (±2.51%) | 7.17x | 616.7% |\n| from-with-string | 33,901 (±2.78%) | 365,895 (±3.86%) | 10.79x | 979.3% |\n| of | 60,350 (±3.36%) | 443,226 (±2.38%) | 7.34x | 634.4% |\n\nThis PR:\n\n|  | RxJS 4.1.0 | RxJS 5.0.0-beta.10 | factor | % improved |\n| --- | --- | --- | --- | --- |\n| concat - immediate | 54,293 (±1.61%) | 386,044 (±1.16%) | 7.11x | 611.0% |\n| merge - immediate | 5,751 (±1.11%) | 57,951 (±0.86%) | 10.08x | 907.6% |\n| concat | 22,460 (±1.07%) | 169,922 (±1.51%) | 7.57x | 656.5% |\n| merge | 2,415 (±1.21%) | 22,674 (±1.01%) | 9.39x | 838.7% |\n| from-with-array - immediate | 128,302 (±1.54%) | 851,673 (±1.70%) | 6.64x | 563.8% |\n| from-with-iterable - immediate | 114,602 (±1.34%) | 364,576 (±1.75%) | 3.18x | 218.1% |\n| from-with-string - immediate | 60,711 (±4.18%) | 367,734 (±3.85%) | 6.06x | 505.7% |\n| of - immediate | 58,137 (±3.61%) | 853,370 (±3.29%) | 14.68x | 1,367.9% |\n| from-with-array | 51,498 (±3.14%) | 691,779 (±3.70%) | 13.43x | 1,243.3% |\n| from-with-iterable | 51,048 (±3.52%) | 372,203 (±3.40%) | 7.29x | 629.1% |\n| from-with-string | 33,374 (±3.06%) | 394,613 (±2.56%) | 11.82x | 1,082.4% |\n| of | 53,013 (±4.33%) | 395,391 (±2.94%) | 7.46x | 645.8% |\n\nSide-by-side:\n\n|  | RxJS 5.0.0-beta.10 (master) | RxJS 5.0.0-beta.10 (PR) |\n| --- | --- | --- |\n| concat - immediate | 357,051 (±2.00%) | 386,044 (±1.16%) |\n| merge - immediate | 56,834 (±1.00%) | 57,951 (±0.86%) |\n| concat | 153,550 (±4.04%) | 169,922 (±1.51%) |\n| merge | 21,295 (±2.45%) | 22,674 (±1.01%) |\n| from-with-array - immediate | 895,727 (±1.10%) | 851,673 (±1.70%) |\n| from-with-iterable - immediate | 357,870 (±3.85%) | 364,576 (±1.75%) |\n| from-with-string - immediate | 384,754 (±3.69%) | 367,734 (±3.85%) |\n| of - immediate | 829,434 (±3.29%) | 853,370 (±3.29%) |\n| from-with-array | 668,259 (±3.17%) | 691,779 (±3.70%) |\n| from-with-iterable | 366,127 (±2.51%) | 372,203 (±3.40%) |\n| from-with-string | 365,895 (±3.86%) | 394,613 (±2.56%) |\n| of | 443,226 (±2.38%) | 395,391 (±2.94%) |\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1820/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1820/timeline","performed_via_github_app":null,"state_reason":null,"score":1,"files":[{"sha":"c37b3bb1baac8507e8d22127e25e03fb42fb6c3e","filename":"package.json","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/package.json","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/package.json","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/package.json?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -94,6 +94,7 @@\n     \"prepublish\": \"shx rm -rf ./typings && typings install && npm run build_all\",\n     \"publish_docs\": \"./publish_docs.sh\",\n     \"test_mocha\": \"mocha --opts spec/support/default.opts spec-js\",\n+    \"debug_mocha\": \"node-debug _mocha --opts spec/support/debug.opts spec-js\",\n     \"test_browser\": \"npm-run-all build_spec_browser && opn spec/support/mocha-browser-runner.html\",\n     \"test\": \"npm-run-all clean_spec build_spec test_mocha clean_spec\",\n     \"tests2png\": \"npm run build_spec && mkdirp tmp/docs/img && mkdirp spec-js/support && shx cp spec/support/*.opts spec-js/support/ && mocha --opts spec/support/tests2png.opts spec-js\","},{"sha":"eca500960eabb1f9ba69d2ec2b974d02bbfb780a","filename":"spec/Scheduler-spec.ts","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/spec%2FScheduler-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/spec%2FScheduler-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2FScheduler-spec.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -19,6 +19,21 @@ describe('Scheduler.queue', () => {\n     expect(call2).to.be.true;\n   });\n \n+  it('should schedule things recursively via this.schedule', () => {\n+    let call1 = false;\n+    let call2 = false;\n+    Scheduler.queue.active = false;\n+    Scheduler.queue.schedule(function (state) {\n+      call1 = state.call1;\n+      call2 = state.call2;\n+      if (!call2) {\n+        this.schedule({ call1: true, call2: true });\n+      }\n+    }, 0, { call1: true, call2: false });\n+    expect(call1).to.be.true;\n+    expect(call2).to.be.true;\n+  });\n+\n   it('should schedule things in the future too', (done: MochaDone) => {\n     let called = false;\n     Scheduler.queue.schedule(() => {\n@@ -55,4 +70,4 @@ describe('Scheduler.queue', () => {\n       });\n     }, 0);\n   });\n-});\n\\ No newline at end of file\n+});"},{"sha":"1b0b75e9e29c737150ec783064f88df65168fed0","filename":"spec/schedulers/AnimationFrameScheduler-spec.ts","status":"added","additions":88,"deletions":0,"changes":88,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/spec%2Fschedulers%2FAnimationFrameScheduler-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/spec%2Fschedulers%2FAnimationFrameScheduler-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fschedulers%2FAnimationFrameScheduler-spec.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -0,0 +1,88 @@\n+import {expect} from 'chai';\n+import * as Rx from '../../dist/cjs/Rx';\n+\n+const animationFrame = Rx.Scheduler.animationFrame;\n+\n+/** @test {Scheduler} */\n+describe('Scheduler.animationFrame', () => {\n+  it('should exist', () => {\n+    expect(animationFrame).exist;\n+  });\n+\n+  it('should schedule an action to happen later', (done: MochaDone) => {\n+    let actionHappened = false;\n+    animationFrame.schedule(() => {\n+      actionHappened = true;\n+      done();\n+    });\n+    if (actionHappened) {\n+      done(new Error('Scheduled action happened synchronously'));\n+    }\n+  });\n+\n+  it('should execute recursively scheduled actions in separate asynchronous contexts', (done: MochaDone) => {\n+    let syncExec1 = true;\n+    let syncExec2 = true;\n+    animationFrame.schedule(function (index) {\n+      if (index === 0) {\n+        this.schedule(1);\n+        animationFrame.schedule(() => { syncExec1 = false; });\n+      } else if (index === 1) {\n+        this.schedule(2);\n+        animationFrame.schedule(() => { syncExec2 = false; });\n+      } else if (index === 2) {\n+        this.schedule(3);\n+      } else if (index === 3) {\n+        if (!syncExec1 && !syncExec2) {\n+          done();\n+        } else {\n+          done(new Error('Execution happened synchronously.'));\n+        }\n+      }\n+    }, 0, 0);\n+  });\n+\n+  it('should cancel the animation frame if all scheduled actions unsubscribe before it executes', (done: MochaDone) => {\n+    let animationFrameExec1 = false;\n+    let animationFrameExec2 = false;\n+    const action1 = animationFrame.schedule(() => { animationFrameExec1 = true; });\n+    const action2 = animationFrame.schedule(() => { animationFrameExec2 = true; });\n+    expect(animationFrame.scheduled).to.exist;\n+    expect(animationFrame.actions.length).to.equal(2);\n+    action1.unsubscribe();\n+    action2.unsubscribe();\n+    expect(animationFrame.actions.length).to.equal(0);\n+    expect(animationFrame.scheduled).to.equal(undefined);\n+    animationFrame.schedule(() => {\n+      expect(animationFrameExec1).to.equal(false);\n+      expect(animationFrameExec2).to.equal(false);\n+      done();\n+    });\n+  });\n+\n+  it('should execute the rest of the scheduled actions if the first action is canceled', (done: MochaDone) => {\n+    let actionHappened = false;\n+    let firstSubscription = null;\n+    let secondSubscription = null;\n+\n+    firstSubscription = animationFrame.schedule(() => {\n+      actionHappened = true;\n+      if (secondSubscription) {\n+        secondSubscription.unsubscribe();\n+      }\n+      done(new Error('The first action should not have executed.'));\n+    });\n+\n+    secondSubscription = animationFrame.schedule(() => {\n+      if (!actionHappened) {\n+        done();\n+      }\n+    });\n+\n+    if (actionHappened) {\n+      done(new Error('Scheduled action happened synchronously'));\n+    } else {\n+      firstSubscription.unsubscribe();\n+    }\n+  });\n+});"},{"sha":"9cb1e338be63771e029e4809c8d1e97e6180cd12","filename":"spec/schedulers/AsapScheduler-spec.ts","status":"modified","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/spec%2Fschedulers%2FAsapScheduler-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/spec%2Fschedulers%2FAsapScheduler-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fschedulers%2FAsapScheduler-spec.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -20,6 +20,46 @@ describe('Scheduler.asap', () => {\n     }\n   });\n \n+  it('should execute recursively scheduled actions in separate asynchronous contexts', (done: MochaDone) => {\n+    let syncExec1 = true;\n+    let syncExec2 = true;\n+    asap.schedule(function (index) {\n+      if (index === 0) {\n+        this.schedule(1);\n+        asap.schedule(() => { syncExec1 = false; });\n+      } else if (index === 1) {\n+        this.schedule(2);\n+        asap.schedule(() => { syncExec2 = false; });\n+      } else if (index === 2) {\n+        this.schedule(3);\n+      } else if (index === 3) {\n+        if (!syncExec1 && !syncExec2) {\n+          done();\n+        } else {\n+          done(new Error('Execution happened synchronously.'));\n+        }\n+      }\n+    }, 0, 0);\n+  });\n+\n+  it('should cancel the setImmediate if all scheduled actions unsubscribe before it executes', (done: MochaDone) => {\n+    let asapExec1 = false;\n+    let asapExec2 = false;\n+    const action1 = asap.schedule(() => { asapExec1 = true; });\n+    const action2 = asap.schedule(() => { asapExec2 = true; });\n+    expect(asap.scheduled).to.exist;\n+    expect(asap.actions.length).to.equal(2);\n+    action1.unsubscribe();\n+    action2.unsubscribe();\n+    expect(asap.actions.length).to.equal(0);\n+    expect(asap.scheduled).to.equal(undefined);\n+    asap.schedule(() => {\n+      expect(asapExec1).to.equal(false);\n+      expect(asapExec2).to.equal(false);\n+      done();\n+    });\n+  });\n+\n   it('should execute the rest of the scheduled actions if the first action is canceled', (done: MochaDone) => {\n     let actionHappened = false;\n     let firstSubscription = null;"},{"sha":"d7e99be869b95df42c0b285bfb0b8d563839ad0d","filename":"spec/schedulers/QueueScheduler-spec.ts","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/spec%2Fschedulers%2FQueueScheduler-spec.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/spec%2Fschedulers%2FQueueScheduler-spec.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fschedulers%2FQueueScheduler-spec.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -0,0 +1,56 @@\n+import {expect} from 'chai';\n+import * as Rx from '../../dist/cjs/Rx';\n+\n+const Scheduler = Rx.Scheduler;\n+const queue = Scheduler.queue;\n+\n+/** @test {Scheduler} */\n+describe('Scheduler.queue', () => {\n+  it('should switch from synchronous to asynchronous at will', (done: MochaDone) => {\n+    let lastExecTime = 0;\n+    let asyncExec = false;\n+    queue.schedule(function (index) {\n+      if (index === 0) {\n+        lastExecTime = queue.now();\n+        this.schedule(1, 100);\n+      } else if (index === 1) {\n+        if (queue.now() - lastExecTime < 100) {\n+          done(new Error('Execution happened synchronously.'));\n+        } else {\n+          asyncExec = true;\n+          lastExecTime = queue.now();\n+          this.schedule(2, 0);\n+        }\n+      } else if (index === 2) {\n+        if (asyncExec === false) {\n+          done(new Error('Execution happened synchronously.'));\n+        } else {\n+          done();\n+        }\n+      }\n+    }, 0, 0);\n+    asyncExec = false;\n+  });\n+  it('should unsubscribe the rest of the scheduled actions if an action throws an error', () => {\n+    const actions = [];\n+    let action2Exec = false;\n+    let action3Exec = false;\n+    let errorValue = undefined;\n+    try {\n+      queue.schedule(() => {\n+        actions.push(\n+          queue.schedule(() => { throw new Error('oops'); }),\n+          queue.schedule(() => { action2Exec = true; }),\n+          queue.schedule(() => { action3Exec = true; })\n+        );\n+      });\n+    } catch (e) {\n+      errorValue = e;\n+    }\n+    expect(actions.every((action) => action.isUnsubscribed)).to.be.true;\n+    expect(action2Exec).to.be.false;\n+    expect(action3Exec).to.be.false;\n+    expect(errorValue).exist;\n+    expect(errorValue.message).to.equal('oops');\n+  });\n+});"},{"sha":"3954bc650719efe1cc36bce074468d7ceacb2f69","filename":"spec/support/debug.opts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/spec%2Fsupport%2Fdebug.opts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/spec%2Fsupport%2Fdebug.opts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fsupport%2Fdebug.opts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -8,7 +8,7 @@\n --bail\n --full-trace\n --check-leaks\n---globals WebSocket,FormData\n+--globals WebSocket,FormData,XDomainRequest,ActiveXObject\n \n --recursive\n --timeout 100000"},{"sha":"dce64e6703d331a5044582781313f9087849c5e1","filename":"src/MiscJSDoc.ts","status":"modified","additions":0,"deletions":89,"changes":89,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2FMiscJSDoc.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2FMiscJSDoc.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2FMiscJSDoc.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -8,8 +8,6 @@\n import {Subscriber} from './Subscriber';\n import {TeardownLogic} from './Subscription';\n import {Observable} from './Observable';\n-import {Subscription} from './Subscription';\n-import {Action} from './scheduler/Action';\n import './scheduler/MiscJSDoc';\n import './observable/dom/MiscJSDoc';\n \n@@ -130,90 +128,3 @@ export class ObserverDoc<T> {\n     return void 0;\n   }\n }\n-\n-/**\n- * An execution context and a data structure to order tasks and schedule their\n- * execution. Provides a notion of (potentially virtual) time, through the\n- * `now()` getter method.\n- *\n- * Each unit of work in a Scheduler is called an {@link Action}.\n- *\n- * ```ts\n- * interface Scheduler {\n- *   now(): number;\n- *   schedule(work, delay?, state?): Subscription;\n- *   flush(): void;\n- *   active: boolean;\n- *   actions: Action[];\n- *   scheduledId: number;\n- * }\n- * ```\n- *\n- * @interface\n- * @name Scheduler\n- * @noimport true\n- */\n-export class SchedulerDoc {\n-  /**\n-   * A getter method that returns a number representing the current time\n-   * (at the time this function was called) according to the scheduler's own\n-   * internal clock.\n-   * @return {number} A number that represents the current time. May or may not\n-   * have a relation to wall-clock time. May or may not refer to a time unit\n-   * (e.g. milliseconds).\n-   */\n-  now(): number {\n-    return 0;\n-  }\n-\n-  /**\n-   * Schedules a function, `work`, for execution. May happen at some point in\n-   * the future, according to the `delay` parameter, if specified. May be passed\n-   * some context object, `state`, which will be passed to the `work` function.\n-   *\n-   * The given arguments will be processed an stored as an Action object in a\n-   * queue of actions.\n-   *\n-   * @param {function(state: ?T): ?Subscription} work A function representing a\n-   * task, or some unit of work to be executed by the Scheduler.\n-   * @param {number} [delay] Time to wait before executing the work, where the\n-   * time unit is implicit and defined by the Scheduler itself.\n-   * @param {T} [state] Some contextual data that the `work` function uses when\n-   * called by the Scheduler.\n-   * @return {Subscription} A subscription in order to be able to unsubscribe\n-   * the scheduled work.\n-   */\n-  schedule<T>(work: (state?: T) => Subscription | void, delay?: number, state?: T): Subscription {\n-    return void 0;\n-  }\n-\n-  /**\n-   * Prompt the Scheduler to execute all of its queued actions, therefore\n-   * clearing its queue.\n-   * @return {void}\n-   */\n-  flush(): void {\n-    return void 0;\n-  }\n-\n-  /**\n-   * A flag to indicate whether the Scheduler is currently executing a batch of\n-   * queued actions.\n-   * @type {boolean}\n-   */\n-  active: boolean = false;\n-\n-  /**\n-   * The queue of scheduled actions as an array.\n-   * @type {Action[]}\n-   */\n-  actions: Action<any>[] = [];\n-\n-  /**\n-   * An internal ID used to track the latest asynchronous task such as those\n-   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n-   * others.\n-   * @type {number}\n-   */\n-  scheduledId: number = 0;\n-}"},{"sha":"2962a89173faa930c09a635e7a6e361ae717623a","filename":"src/Rx.ts","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2FRx.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2FRx.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2FRx.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -184,6 +184,8 @@ import observable from 'symbol-observable';\n  * asynchronous conversions.\n  * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n  * time-based operations.\n+ * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\n+ * Use this for synchronizing with the platform's painting\n  */\n let Scheduler = {\n   asap,"},{"sha":"29e5dae2b52a40ca9fbecb47b359cefd5b124317","filename":"src/Scheduler.ts","status":"modified","additions":56,"deletions":8,"changes":64,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2FScheduler.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2FScheduler.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2FScheduler.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,11 +1,59 @@\n-import {Subscription} from './Subscription';\n import {Action} from './scheduler/Action';\n+import {Subscription} from './Subscription';\n+\n+/**\n+ * An execution context and a data structure to order tasks and schedule their\n+ * execution. Provides a notion of (potentially virtual) time, through the\n+ * `now()` getter method.\n+ *\n+ * Each unit of work in a Scheduler is called an {@link Action}.\n+ *\n+ * ```ts\n+ * class Scheduler {\n+ *   now(): number;\n+ *   schedule(work, delay?, state?): Subscription;\n+ * }\n+ * ```\n+ *\n+ * @class Scheduler\n+ */\n+export class Scheduler {\n+\n+  public static now: () => number = Date.now ? Date.now : () => +new Date();\n+\n+  constructor(private SchedulerAction: typeof Action,\n+              now: () => number = Scheduler.now) {\n+    this.now = now;\n+  }\n+\n+  /**\n+   * A getter method that returns a number representing the current time\n+   * (at the time this function was called) according to the scheduler's own\n+   * internal clock.\n+   * @return {number} A number that represents the current time. May or may not\n+   * have a relation to wall-clock time. May or may not refer to a time unit\n+   * (e.g. milliseconds).\n+   */\n+  public now: () => number;\n \n-export interface Scheduler {\n-  now(): number;\n-  schedule<T>(work: (state?: T) => Subscription | void, delay?: number, state?: T): Subscription;\n-  flush(): void;\n-  active: boolean;\n-  actions: Action<any>[]; // XXX: use `any` to remove type param `T` from `Scheduler`.\n-  scheduledId: number;\n+  /**\n+   * Schedules a function, `work`, for execution. May happen at some point in\n+   * the future, according to the `delay` parameter, if specified. May be passed\n+   * some context object, `state`, which will be passed to the `work` function.\n+   *\n+   * The given arguments will be processed an stored as an Action object in a\n+   * queue of actions.\n+   *\n+   * @param {function(state: ?T): ?Subscription} work A function representing a\n+   * task, or some unit of work to be executed by the Scheduler.\n+   * @param {number} [delay] Time to wait before executing the work, where the\n+   * time unit is implicit and defined by the Scheduler itself.\n+   * @param {T} [state] Some contextual data that the `work` function uses when\n+   * called by the Scheduler.\n+   * @return {Subscription} A subscription in order to be able to unsubscribe\n+   * the scheduled work.\n+   */\n+  public schedule<T>(work: (state?: T) => void, delay: number = 0, state?: T): Subscription {\n+    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n+  }\n }"},{"sha":"290d428df2449aa05e7294c3ac994b6da17f578a","filename":"src/observable/GenerateObservable.ts","status":"modified","additions":10,"deletions":11,"changes":21,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fobservable%2FGenerateObservable.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fobservable%2FGenerateObservable.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservable%2FGenerateObservable.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,9 +1,8 @@\n-import {Observable} from '../Observable' ;\n import {Scheduler} from '../Scheduler';\n+import {Action} from '../scheduler/Action';\n+import {Observable} from '../Observable' ;\n import {Subscriber} from '../Subscriber';\n import {Subscription} from '../Subscription';\n-import {Action} from '../scheduler/Action';\n-\n import {isScheduler} from '../util/isScheduler';\n \n const selfSelector = <T>(value: T) => value;\n@@ -70,16 +69,16 @@ export class GenerateObservable<T, S> extends Observable<T> {\n    * to send out observer messages.\n    *\n    * <img src=\"./img/generate.png\" width=\"100%\">\n-   * \n+   *\n    * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n    * var res = Rx.Observable.generate(0, x => x < 10, x => x + 1, x => x);\n-   * \n+   *\n    * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n    * var res = Rx.Observable.generate(1, x => x < 5, x => x * 2, x => x + 1, Rx.Scheduler.asap);\n    *\n    * @see {@link from}\n    * @see {@link create}\n-   * \n+   *\n    * @param {S} initialState Initial state.\n    * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n    * @param {function (state: S): S} iterate Iteration step function.\n@@ -98,12 +97,12 @@ export class GenerateObservable<T, S> extends Observable<T> {\n    * producing the sequence's elements, using the specified scheduler\n    * to send out observer messages.\n    * The overload uses state as an emitted value.\n-   * \n+   *\n    * <img src=\"./img/generate.png\" width=\"100%\">\n    *\n    * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n    * var res = Rx.Observable.generate(0, x => x < 10, x => x + 1);\n-   * \n+   *\n    * @example <caption>Using asap scheduler, produces sequence of 1, 2, 4, then completes.</caption>\n    * var res = Rx.Observable.generate(1, x => x < 5, x => x * 2, Rx.Scheduler.asap);\n    *\n@@ -127,7 +126,7 @@ export class GenerateObservable<T, S> extends Observable<T> {\n    * to send out observer messages.\n    * The overload accepts options object that might contain inital state, iterate,\n    * condition and scheduler.\n-   * \n+   *\n    * <img src=\"./img/generate.png\" width=\"100%\">\n    *\n    * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n@@ -151,7 +150,7 @@ export class GenerateObservable<T, S> extends Observable<T> {\n    * to send out observer messages.\n    * The overload accepts options object that might contain inital state, iterate,\n    * condition, result selector and scheduler.\n-   * \n+   *\n    * <img src=\"./img/generate.png\" width=\"100%\">\n    *\n    * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n@@ -293,4 +292,4 @@ export class GenerateObservable<T, S> extends Observable<T> {\n     }\n     return (<Action<SchedulerState<T, S>>><any>this).schedule(state);\n   }\n-}\n\\ No newline at end of file\n+}"},{"sha":"7186fe2589a486f76b944a10a4cc9bc84ffe6d62","filename":"src/operator/bufferTime.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Foperator%2FbufferTime.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Foperator%2FbufferTime.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FbufferTime.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,10 +1,10 @@\n-import {Operator} from '../Operator';\n-import {Subscriber} from '../Subscriber';\n-import {Subscription} from '../Subscription';\n-import {Observable} from '../Observable';\n import {Scheduler} from '../Scheduler';\n import {Action} from '../scheduler/Action';\n+import {Operator} from '../Operator';\n import {async} from '../scheduler/async';\n+import {Observable} from '../Observable';\n+import {Subscriber} from '../Subscriber';\n+import {Subscription} from '../Subscription';\n import {isScheduler} from '../util/isScheduler';\n \n /**"},{"sha":"ef4778c991eccf726c082e00ecdaf7632aa64430","filename":"src/operator/do.ts","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Foperator%2Fdo.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Foperator%2Fdo.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2Fdo.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -119,4 +119,3 @@ class DoSubscriber<T> extends Subscriber<T> {\n     }\n   }\n }\n-"},{"sha":"a2778c1db89c1c09a6139b508df8a85e248099a9","filename":"src/operator/windowTime.ts","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Foperator%2FwindowTime.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Foperator%2FwindowTime.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Foperator%2FwindowTime.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,11 +1,11 @@\n+import {Scheduler} from '../Scheduler';\n+import {Action} from '../scheduler/Action';\n+import {Subject} from '../Subject';\n import {Operator} from '../Operator';\n+import {async} from '../scheduler/async';\n import {Subscriber} from '../Subscriber';\n import {Observable} from '../Observable';\n-import {Subject} from '../Subject';\n import {Subscription} from '../Subscription';\n-import {Scheduler} from '../Scheduler';\n-import {Action} from '../scheduler/Action';\n-import {async} from '../scheduler/async';\n \n /**\n  * Branch out the source Observable values as a nested Observable periodically"},{"sha":"4d4c70fc4c824ab2cb7626985900c9adb9973802","filename":"src/scheduler/Action.ts","status":"modified","additions":33,"deletions":10,"changes":43,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAction.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAction.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FAction.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,12 +1,35 @@\n-import {Subscription} from '../Subscription';\n import {Scheduler} from '../Scheduler';\n+import {Subscription} from '../Subscription';\n \n-export interface Action<T> extends Subscription {\n-  work: (state?: T) => void|Subscription;\n-  state?: T;\n-  delay?: number;\n-  schedule(state?: T, delay?: number): void;\n-  execute(): void;\n-  scheduler: Scheduler;\n-  error: any;\n-}\n\\ No newline at end of file\n+/**\n+ * A unit of work to be executed in a {@link Scheduler}. An action is typically\n+ * created from within a Scheduler and an RxJS user does not need to concern\n+ * themselves about creating and manipulating an Action.\n+ *\n+ * ```ts\n+ * class Action<T> extends Subscription {\n+ *   new (scheduler: Scheduler, work: (state?: T) => void);\n+ *   schedule(state?: T, delay: number = 0): Subscription;\n+ * }\n+ * ```\n+ *\n+ * @class Action<T>\n+ */\n+export class Action<T> extends Subscription {\n+  constructor(scheduler: Scheduler, work: (state?: T) => void) {\n+    super();\n+  }\n+  /**\n+   * Schedules this action on its parent Scheduler for execution. May be passed\n+   * some context object, `state`. May happen at some point in the future,\n+   * according to the `delay` parameter, if specified.\n+   * @param {T} [state] Some contextual data that the `work` function uses when\n+   * called by the Scheduler.\n+   * @param {number} [delay] Time to wait before executing the work, where the\n+   * time unit is implicit and defined by the Scheduler.\n+   * @return {void}\n+   */\n+  public schedule(state?: T, delay: number = 0): Subscription {\n+    return this;\n+  }\n+}"},{"sha":"4924bf44c7b65c1911a0b5a4f9056a37a185b2fc","filename":"src/scheduler/AnimationFrameAction.ts","status":"modified","additions":32,"deletions":30,"changes":62,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAnimationFrameAction.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAnimationFrameAction.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FAnimationFrameAction.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,44 +1,46 @@\n-import {Action} from './Action';\n-import {FutureAction} from './FutureAction';\n+import {AsyncAction} from './AsyncAction';\n import {AnimationFrame} from '../util/AnimationFrame';\n+import {AnimationFrameScheduler} from './AnimationFrameScheduler';\n \n /**\n  * We need this JSDoc comment for affecting ESDoc.\n  * @ignore\n  * @extends {Ignored}\n  */\n-export class AnimationFrameAction<T> extends FutureAction<T> {\n+export class AnimationFrameAction<T> extends AsyncAction<T> {\n \n-  protected _schedule(state?: T, delay: number = 0): Action<T> {\n-    if (delay > 0) {\n-      return super._schedule(state, delay);\n+  constructor(protected scheduler: AnimationFrameScheduler,\n+              protected work: (state?: T) => void) {\n+    super(scheduler, work);\n+  }\n+\n+  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n+    // If delay is greater than 0, request as an async action.\n+    if (delay !== null && delay > 0) {\n+      return super.requestAsyncId(scheduler, id, delay);\n     }\n-    this.delay = delay;\n-    this.state = state;\n-    const {scheduler} = this;\n+    // Push the action to the end of the scheduler queue.\n     scheduler.actions.push(this);\n-    if (!scheduler.scheduledId) {\n-      scheduler.scheduledId = AnimationFrame.requestAnimationFrame(() => {\n-        scheduler.scheduledId = null;\n-        scheduler.flush();\n-      });\n-    }\n-    return this;\n+    // If an animation frame has already been requested, don't request another\n+    // one. If an animation frame hasn't been requested yet, request one. Return\n+    // the current animation frame request id.\n+    return scheduler.scheduled || (scheduler.scheduled = AnimationFrame.requestAnimationFrame(\n+      scheduler.flush.bind(scheduler, null)\n+    ));\n   }\n-\n-  protected _unsubscribe(): void {\n-\n-    const {scheduler} = this;\n-    const {scheduledId, actions} = scheduler;\n-\n-    super._unsubscribe();\n-\n-    if (actions.length === 0) {\n-      scheduler.active = false;\n-      if (scheduledId != null) {\n-        scheduler.scheduledId = null;\n-        AnimationFrame.cancelAnimationFrame(scheduledId);\n-      }\n+  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n+    // If delay exists and is greater than 0, recycle as an async action.\n+    if (delay !== null && delay > 0) {\n+      return super.recycleAsyncId(scheduler, id, delay);\n+    }\n+    // If the scheduler queue is empty, cancel the requested animation frame and\n+    // set the scheduled flag to undefined so the next AnimationFrameAction will\n+    // request its own.\n+    if (scheduler.actions.length === 0) {\n+      AnimationFrame.cancelAnimationFrame(id);\n+      scheduler.scheduled = undefined;\n     }\n+    // Return undefined so the action knows to request a new async id if it's rescheduled.\n+    return undefined;\n   }\n }"},{"sha":"ed0c4087bf0f87c9170641b583000ea49472eef3","filename":"src/scheduler/AnimationFrameScheduler.ts","status":"modified","additions":29,"deletions":8,"changes":37,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAnimationFrameScheduler.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAnimationFrameScheduler.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FAnimationFrameScheduler.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,10 +1,31 @@\n-import {Action} from './Action';\n-import {Subscription} from '../Subscription';\n-import {QueueScheduler} from './QueueScheduler';\n-import {AnimationFrameAction} from './AnimationFrameAction';\n-\n-export class AnimationFrameScheduler extends QueueScheduler {\n-  scheduleNow<T>(work: (x?: T) => Subscription, state?: T): Action<T> {\n-    return new AnimationFrameAction(this, work).schedule(state);\n+import {AsyncAction} from './AsyncAction';\n+import {AsyncScheduler} from './AsyncScheduler';\n+\n+export class AnimationFrameScheduler extends AsyncScheduler {\n+  public flush(): void {\n+\n+    this.active = true;\n+    this.scheduled = undefined;\n+\n+    const {actions} = this;\n+    let error: any;\n+    let index: number = -1;\n+    let count: number = actions.length;\n+    let action: AsyncAction<any> = actions.shift();\n+\n+    do {\n+      if (error = action.execute(action.state, action.delay)) {\n+        break;\n+      }\n+    } while (++index < count && (action = actions.shift()));\n+\n+    this.active = false;\n+\n+    if (error) {\n+      while (++index < count && (action = actions.shift())) {\n+        action.unsubscribe();\n+      }\n+      throw error;\n+    }\n   }\n }"},{"sha":"1fcd7244802c154f42bf6d5e42015873a88db738","filename":"src/scheduler/AsapAction.ts","status":"modified","additions":32,"deletions":30,"changes":62,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAsapAction.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAsapAction.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FAsapAction.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,44 +1,46 @@\n-import {Action} from './Action';\n import {Immediate} from '../util/Immediate';\n-import {FutureAction} from './FutureAction';\n+import {AsyncAction} from './AsyncAction';\n+import {AsapScheduler} from './AsapScheduler';\n \n /**\n  * We need this JSDoc comment for affecting ESDoc.\n  * @ignore\n  * @extends {Ignored}\n  */\n-export class AsapAction<T> extends FutureAction<T> {\n+export class AsapAction<T> extends AsyncAction<T> {\n \n-  protected _schedule(state?: T, delay: number = 0): Action<T> {\n-    if (delay > 0) {\n-      return super._schedule(state, delay);\n+  constructor(protected scheduler: AsapScheduler,\n+              protected work: (state?: T) => void) {\n+    super(scheduler, work);\n+  }\n+\n+  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n+    // If delay is greater than 0, request as an async action.\n+    if (delay !== null && delay > 0) {\n+      return super.requestAsyncId(scheduler, id, delay);\n     }\n-    this.delay = delay;\n-    this.state = state;\n-    const {scheduler} = this;\n+    // Push the action to the end of the scheduler queue.\n     scheduler.actions.push(this);\n-    if (!scheduler.scheduledId) {\n-      scheduler.scheduledId = Immediate.setImmediate(() => {\n-        scheduler.scheduledId = null;\n-        scheduler.flush();\n-      });\n-    }\n-    return this;\n+    // If a microtask has already been scheduled, don't schedule another\n+    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n+    // the current scheduled microtask id.\n+    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n+      scheduler.flush.bind(scheduler, null)\n+    ));\n   }\n-\n-  protected _unsubscribe(): void {\n-\n-    const {scheduler} = this;\n-    const {scheduledId, actions} = scheduler;\n-\n-    super._unsubscribe();\n-\n-    if (actions.length === 0) {\n-      scheduler.active = false;\n-      if (scheduledId != null) {\n-        scheduler.scheduledId = null;\n-        Immediate.clearImmediate(scheduledId);\n-      }\n+  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n+    // If delay exists and is greater than 0, recycle as an async action.\n+    if (delay !== null && delay > 0) {\n+      return super.recycleAsyncId(scheduler, id, delay);\n+    }\n+    // If the scheduler queue is empty, cancel the requested microtask and\n+    // set the scheduled flag to undefined so the next AsapAction will schedule\n+    // its own.\n+    if (scheduler.actions.length === 0) {\n+      Immediate.clearImmediate(id);\n+      scheduler.scheduled = undefined;\n     }\n+    // Return undefined so the action knows to request a new async id if it's rescheduled.\n+    return undefined;\n   }\n }"},{"sha":"551912a1cd26db9874bdfa389e0a80dae12448a2","filename":"src/scheduler/AsapScheduler.ts","status":"modified","additions":29,"deletions":8,"changes":37,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAsapScheduler.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAsapScheduler.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FAsapScheduler.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,10 +1,31 @@\n-import {Action} from './Action';\n-import {AsapAction} from './AsapAction';\n-import {Subscription} from '../Subscription';\n-import {QueueScheduler} from './QueueScheduler';\n-\n-export class AsapScheduler extends QueueScheduler {\n-  scheduleNow<T>(work: (x?: T) => Subscription, state?: T): Action<T> {\n-    return new AsapAction(this, work).schedule(state);\n+import {AsyncAction} from './AsyncAction';\n+import {AsyncScheduler} from './AsyncScheduler';\n+\n+export class AsapScheduler extends AsyncScheduler {\n+  public flush(): void {\n+\n+    this.active = true;\n+    this.scheduled = undefined;\n+\n+    const {actions} = this;\n+    let error: any;\n+    let index: number = -1;\n+    let count: number = actions.length;\n+    let action: AsyncAction<any> = actions.shift();\n+\n+    do {\n+      if (error = action.execute(action.state, action.delay)) {\n+        break;\n+      }\n+    } while (++index < count && (action = actions.shift()));\n+\n+    this.active = false;\n+\n+    if (error) {\n+      while (++index < count && (action = actions.shift())) {\n+        action.unsubscribe();\n+      }\n+      throw error;\n+    }\n   }\n }"},{"sha":"b95a4e60fb0a51e5c24f4d0c4f094eae41bfda43","filename":"src/scheduler/AsyncAction.ts","status":"added","additions":153,"deletions":0,"changes":153,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAsyncAction.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAsyncAction.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FAsyncAction.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -0,0 +1,153 @@\n+import {root} from '../util/root';\n+import {Action} from './Action';\n+import {Subscription} from '../Subscription';\n+import {AsyncScheduler} from './AsyncScheduler';\n+\n+/**\n+ * We need this JSDoc comment for affecting ESDoc.\n+ * @ignore\n+ * @extends {Ignored}\n+ */\n+export class AsyncAction<T> extends Action<T> {\n+\n+  public id: any;\n+  public state: T;\n+  public delay: number;\n+  protected pending: boolean = false;\n+\n+  constructor(protected scheduler: AsyncScheduler,\n+              protected work: (state?: T) => void) {\n+    super(scheduler, work);\n+  }\n+\n+  public schedule(state?: T, delay: number = 0): Subscription {\n+\n+    if (this.isUnsubscribed) {\n+      return this;\n+     }\n+\n+    // Always replace the current state with the new state.\n+    this.state = state;\n+\n+    // Set the pending flag indicating that this action has been scheduled, or\n+    // has recursively rescheduled itself.\n+    this.pending = true;\n+\n+    const id = this.id;\n+    const scheduler = this.scheduler;\n+\n+    //\n+    // Important implementation note:\n+    //\n+    // Actions only execute once by default, unless rescheduled from within the\n+    // scheduled callback. This allows us to implement single and repeat\n+    // actions via the same code path, without adding API surface area, as well\n+    // as mimic traditional recursion but across asynchronous boundaries.\n+    //\n+    // However, JS runtimes and timers distinguish between intervals achieved by\n+    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n+    // serial `setTimeout` calls can be individually delayed, which delays\n+    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n+    // guarantee the interval callback will be invoked more precisely to the\n+    // interval period, regardless of load.\n+    //\n+    // Therefore, we use `setInterval` to schedule single and repeat actions.\n+    // If the action reschedules itself with the same delay, the interval is not\n+    // canceled. If the action doesn't reschedule, or reschedules with a\n+    // different delay, the interval will be canceled after scheduled callback\n+    // execution.\n+    //\n+    if (id != null) {\n+      this.id = this.recycleAsyncId(scheduler, id, delay);\n+    }\n+\n+    this.delay = delay;\n+    // If this action has already an async Id, don't request a new one.\n+    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n+\n+    return this;\n+  }\n+\n+  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n+    return root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n+  }\n+\n+  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n+    // If this action is rescheduled with the same delay time, don't clear the interval id.\n+    if (delay !== null && this.delay === delay) {\n+      return id;\n+    }\n+    // Otherwise, if the action's delay time is different from the current delay,\n+    // clear the interval id\n+    return root.clearInterval(id) && undefined || undefined;\n+  }\n+\n+  /**\n+   * Immediately executes this action and the `work` it contains.\n+   * @return {any}\n+   */\n+  public execute(state: T, delay: number): any {\n+\n+    if (this.isUnsubscribed) {\n+      return new Error('executing a cancelled action');\n+    }\n+\n+    this.pending = false;\n+    const error = this._execute(state, delay);\n+    if (error) {\n+      return error;\n+    } else if (this.pending === false && this.id != null) {\n+      // Dequeue if the action didn't reschedule itself. Don't call\n+      // unsubscribe(), because the action could reschedule later.\n+      // For example:\n+      // ```\n+      // scheduler.schedule(function doWork(counter) {\n+      //   /* ... I'm a busy worker bee ... */\n+      //   var originalAction = this;\n+      //   /* wait 100ms before rescheduling the action */\n+      //   setTimeout(function () {\n+      //     originalAction.schedule(counter + 1);\n+      //   }, 100);\n+      // }, 1000);\n+      // ```\n+      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n+    }\n+  }\n+\n+  protected _execute(state: T, delay: number): any {\n+    let errored: boolean = false;\n+    let errorValue: any = undefined;\n+    try {\n+      this.work(state);\n+    } catch (e) {\n+      errored = true;\n+      errorValue = !!e && e || new Error(e);\n+    }\n+    if (errored) {\n+      this.unsubscribe();\n+      return errorValue;\n+    }\n+  }\n+\n+  protected _unsubscribe() {\n+\n+    const id = this.id;\n+    const scheduler = this.scheduler;\n+    const actions = scheduler.actions;\n+    const index = actions.indexOf(this);\n+\n+    this.work  = null;\n+    this.delay = null;\n+    this.state = null;\n+    this.pending = false;\n+    this.scheduler = null;\n+\n+    if (index !== -1) {\n+      actions.splice(index, 1);\n+    }\n+\n+    if (id != null) {\n+      this.id = this.recycleAsyncId(scheduler, id, null);\n+    }\n+  }\n+}"},{"sha":"fc68d358eb9a90690d48bc567f775d869cd90376","filename":"src/scheduler/AsyncScheduler.ts","status":"modified","additions":45,"deletions":8,"changes":53,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAsyncScheduler.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FAsyncScheduler.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FAsyncScheduler.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,10 +1,47 @@\n-import {Action} from './Action';\n-import {FutureAction} from './FutureAction';\n-import {Subscription} from '../Subscription';\n-import {QueueScheduler} from './QueueScheduler';\n-\n-export class AsyncScheduler extends QueueScheduler {\n-  scheduleNow<T>(work: (x?: T) => Subscription, state?: T): Action<T> {\n-    return new FutureAction(this, work).schedule(state, 0);\n+import {Scheduler} from '../Scheduler';\n+import {AsyncAction} from './AsyncAction';\n+\n+export class AsyncScheduler extends Scheduler {\n+  public actions: Array<AsyncAction<any>> = [];\n+  /**\n+   * A flag to indicate whether the Scheduler is currently executing a batch of\n+   * queued actions.\n+   * @type {boolean}\n+   */\n+  public active: boolean = false;\n+  /**\n+   * An internal ID used to track the latest asynchronous task such as those\n+   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n+   * others.\n+   * @type {any}\n+   */\n+  public scheduled: any = undefined;\n+\n+  public flush(action: AsyncAction<any>): void {\n+\n+    const {actions} = this;\n+\n+    if (this.active) {\n+      actions.push(action);\n+      return;\n+    }\n+\n+    let error: any;\n+    this.active = true;\n+\n+    do {\n+      if (error = action.execute(action.state, action.delay)) {\n+        break;\n+      }\n+    } while (action = actions.shift()); // exhaust the scheduler queue\n+\n+    this.active = false;\n+\n+    if (error) {\n+      while (action = actions.shift()) {\n+        action.unsubscribe();\n+      }\n+      throw error;\n+    }\n   }\n }"},{"sha":"58cd9c37ac64c08ec0026a26f283c3c0b0f67fdc","filename":"src/scheduler/FutureAction.ts","status":"removed","additions":0,"deletions":147,"changes":147,"blob_url":"https://github.com/ReactiveX/rxjs/blob/4f65b03ce6908a934602d619993fa31ec49a2cbf/src%2Fscheduler%2FFutureAction.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/4f65b03ce6908a934602d619993fa31ec49a2cbf/src%2Fscheduler%2FFutureAction.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FFutureAction.ts?ref=4f65b03ce6908a934602d619993fa31ec49a2cbf","patch":"@@ -1,147 +0,0 @@\n-import {root} from '../util/root';\n-import {Action} from './Action';\n-import {Scheduler} from '../Scheduler';\n-import {Subscription} from '../Subscription';\n-\n-/**\n- * We need this JSDoc comment for affecting ESDoc.\n- * @ignore\n- * @extends {Ignored}\n- */\n-export class FutureAction<T> extends Subscription implements Action<T> {\n-\n-  public id: number;\n-  public state: T;\n-  public delay: number;\n-  public error: any;\n-\n-  private pending: boolean = false;\n-\n-  constructor(public scheduler: Scheduler,\n-              public work: (x?: T) => Subscription | void) {\n-    super();\n-  }\n-\n-  execute() {\n-    if (this.isUnsubscribed) {\n-      this.error = new Error('executing a cancelled action');\n-    } else {\n-      try {\n-        this.work(this.state);\n-      } catch (e) {\n-        this.unsubscribe();\n-        this.error = e;\n-      }\n-    }\n-  }\n-\n-  schedule(state?: T, delay: number = 0): Action<T> {\n-    if (this.isUnsubscribed) {\n-      return this;\n-    }\n-    return this._schedule(state, delay);\n-  }\n-\n-  protected _schedule(state?: T, delay: number = 0): Action<T> {\n-\n-    // Always replace the current state with the new state.\n-    this.state = state;\n-\n-    // Set the pending flag indicating that this action has been scheduled, or\n-    // has recursively rescheduled itself.\n-    this.pending = true;\n-\n-    const id = this.id;\n-    // If this action has an intervalID and the specified delay matches the\n-    // delay we used to create the intervalID, don't call `setInterval` again.\n-    if (id != null && this.delay === delay) {\n-      return this;\n-    }\n-\n-    this.delay = delay;\n-\n-    // If this action has an intervalID, but was rescheduled with a different\n-    // `delay` time, cancel the current intervalID and call `setInterval` with\n-    // the new `delay` time.\n-    if (id != null) {\n-      this.id = null;\n-      root.clearInterval(id);\n-    }\n-\n-    //\n-    // Important implementation note:\n-    //\n-    // By default, FutureAction only executes once. However, Actions have the\n-    // ability to be rescheduled from within the scheduled callback (mimicking\n-    // recursion for asynchronous methods). This allows us to implement single\n-    // and repeated actions with the same code path without adding API surface\n-    // area, and implement tail-call optimization over asynchronous boundaries.\n-    //\n-    // However, JS runtimes make a distinction between intervals scheduled by\n-    // repeatedly calling `setTimeout` vs. a single `setInterval` call, with\n-    // the latter providing a better guarantee of precision.\n-    //\n-    // In order to accommodate both single and repeatedly rescheduled actions,\n-    // use `setInterval` here for both cases. By default, the interval will be\n-    // canceled after its first execution, or if the action schedules itself to\n-    // run again with a different `delay` time.\n-    //\n-    // If the action recursively schedules itself to run again with the same\n-    // `delay` time, the interval is not canceled, but allowed to loop again.\n-    // The check of whether the interval should be canceled or not is run every\n-    // time the interval is executed. The first time an action fails to\n-    // reschedule itself, the interval is canceled.\n-    //\n-    this.id = root.setInterval(() => {\n-\n-      this.pending = false;\n-      const {id, scheduler} = this;\n-      scheduler.actions.push(this);\n-      scheduler.flush();\n-\n-      //\n-      // Terminate this interval if the action didn't reschedule itself.\n-      // Don't call `this.unsubscribe()` here, because the action could be\n-      // rescheduled later. For example:\n-      //\n-      // ```\n-      // scheduler.schedule(function doWork(counter) {\n-      //   /* ... I'm a busy worker bee ... */\n-      //   var originalAction = this;\n-      //   /* wait 100ms before rescheduling this action again */\n-      //   setTimeout(function () {\n-      //     originalAction.schedule(counter + 1);\n-      //   }, 100);\n-      // }, 1000);\n-      // ```\n-\n-      if (this.pending === false && id != null) {\n-        this.id = null;\n-        root.clearInterval(id);\n-      }\n-    }, delay);\n-\n-    return this;\n-  }\n-\n-  protected _unsubscribe() {\n-\n-    this.pending = false;\n-    const {id, scheduler} = this;\n-    const {actions} = scheduler;\n-    const index = actions.indexOf(this);\n-\n-    if (id != null) {\n-      this.id = null;\n-      root.clearInterval(id);\n-    }\n-\n-    if (index !== -1) {\n-      actions.splice(index, 1);\n-    }\n-\n-    this.work = null;\n-    this.state = null;\n-    this.scheduler = null;\n-  }\n-}"},{"sha":"1ca6d9ac7ec496def310cd2ca864c00ab7cba759","filename":"src/scheduler/MiscJSDoc.ts","status":"removed","additions":0,"deletions":85,"changes":85,"blob_url":"https://github.com/ReactiveX/rxjs/blob/4f65b03ce6908a934602d619993fa31ec49a2cbf/src%2Fscheduler%2FMiscJSDoc.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/4f65b03ce6908a934602d619993fa31ec49a2cbf/src%2Fscheduler%2FMiscJSDoc.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FMiscJSDoc.ts?ref=4f65b03ce6908a934602d619993fa31ec49a2cbf","patch":"@@ -1,85 +0,0 @@\n-import {Subscription} from '../Subscription';\n-import {Scheduler} from '../Scheduler';\n-\n-/**\n- * A unit of work to be executed in a {@link Scheduler}. An action is typically\n- * created from within a Scheduler and an RxJS user does not need to concern\n- * themselves about creating and manipulating an Action.\n- *\n- * ```ts\n- * interface Action extends Subscription {\n- *   work: (state?: any) => void|Subscription;\n- *   state?: any;\n- *   delay?: number;\n- *   schedule(state?: any, delay?: number): void;\n- *   execute(): void;\n- *   scheduler: Scheduler;\n- *   error: any;\n- * }\n- * ```\n- *\n- * @interface\n- * @name Action\n- * @noimport true\n- */\n-export class ActionDoc extends Subscription {\n-  /**\n-   * The function that represents the raw work to be executed on a Scheduler.\n-   * @param {any} [state] Some contextual data that the `work` function uses\n-   * when called by the Scheduler.\n-   * @return {?Subscription} A subscription in order to be able to unsubscribe\n-   * the scheduled work.\n-   */\n-  work(state?: any): void|Subscription {\n-    return void 0;\n-  }\n-\n-  /**\n-   * The current state. This is the object that will be given to the `work`\n-   * method.\n-   * @type {any}\n-   */\n-  state: any = void 0;\n-\n-  /**\n-   * Represents the time (relative to the Scheduler's own clock) when this\n-   * action should be executed.\n-   * @type {number}\n-   */\n-  delay: number = 0;\n-\n-  /**\n-   * Schedules this action on its parent Scheduler for execution. May be passed\n-   * some context object, `state`. May happen at some point in the future,\n-   * according to the `delay` parameter, if specified.\n-   * @param {any} [state] Some contextual data that the `work` function uses when\n-   * called by the Scheduler.\n-   * @param {number} [delay] Time to wait before executing the work, where the\n-   * time unit is implicit and defined by the Scheduler.\n-   * @return {void}\n-   */\n-  schedule(state?: any, delay?: number): void {\n-    return void 0;\n-  }\n-\n-  /**\n-   * Immediately executes this action and the `work` it contains.\n-   * @return {any}\n-   */\n-  execute(): void {\n-    return void 0;\n-  }\n-\n-  /**\n-   * The Scheduler which owns this action.\n-   * @type {Scheduler}\n-   */\n-  scheduler: Scheduler = null;\n-\n-  /**\n-   * A reference to the latest error that may have occurred during action\n-   * execution.\n-   * @type {any}\n-   */\n-  error: any;\n-}"},{"sha":"2c806f0c58ebcb75743b055912f3fe0d0618a8a9","filename":"src/scheduler/QueueAction.ts","status":"modified","additions":28,"deletions":8,"changes":36,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FQueueAction.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FQueueAction.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FQueueAction.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,21 +1,41 @@\n-import {Action} from './Action';\n-import {FutureAction} from './FutureAction';\n+import {AsyncAction} from './AsyncAction';\n+import {Subscription} from '../Subscription';\n+import {QueueScheduler} from './QueueScheduler';\n \n /**\n  * We need this JSDoc comment for affecting ESDoc.\n  * @ignore\n  * @extends {Ignored}\n  */\n-export class QueueAction<T> extends FutureAction<T> {\n-  protected _schedule(state?: T, delay: number = 0): Action<T> {\n+export class QueueAction<T> extends AsyncAction<T> {\n+\n+  constructor(protected scheduler: QueueScheduler,\n+              protected work: (state?: T) => void) {\n+    super(scheduler, work);\n+  }\n+\n+  public schedule(state?: T, delay: number = 0): Subscription {\n     if (delay > 0) {\n-      return super._schedule(state, delay);\n+      return super.schedule(state, delay);\n     }\n     this.delay = delay;\n     this.state = state;\n-    const scheduler = this.scheduler;\n-    scheduler.actions.push(this);\n-    scheduler.flush();\n+    this.scheduler.flush(this);\n     return this;\n   }\n+\n+  public execute(state: T, delay: number): any {\n+    return (delay > 0 || this.isUnsubscribed) ?\n+      super.execute(state, delay) :\n+      this._execute(state, delay) ;\n+  }\n+\n+  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n+    // If delay is greater than 0, enqueue as an async action.\n+    if (delay !== null && delay > 0) {\n+      return super.requestAsyncId(scheduler, id, delay);\n+    }\n+    // Otherwise flush the scheduler starting with this action.\n+    return scheduler.flush(this);\n+  }\n }"},{"sha":"e2974d974062804d620a256a86cdc88939aec25a","filename":"src/scheduler/QueueScheduler.ts","status":"modified","additions":2,"deletions":44,"changes":46,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FQueueScheduler.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FQueueScheduler.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FQueueScheduler.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,46 +1,4 @@\n-import {Scheduler} from '../Scheduler';\n-import {QueueAction} from './QueueAction';\n-import {Subscription} from '../Subscription';\n-import {FutureAction} from './FutureAction';\n-import {Action} from './Action';\n+import {AsyncScheduler} from './AsyncScheduler';\n \n-export class QueueScheduler implements Scheduler {\n-  public active: boolean = false;\n-  public actions: QueueAction<any>[] = []; // XXX: use `any` to remove type param `T` from `VirtualTimeScheduler`.\n-  public scheduledId: number = null;\n-\n-  now() {\n-    return Date.now();\n-  }\n-\n-  flush() {\n-    if (this.active || this.scheduledId) {\n-      return;\n-    }\n-    this.active = true;\n-    const actions = this.actions;\n-    // XXX: use `any` to remove type param `T` from `VirtualTimeScheduler`.\n-    for (let action: QueueAction<any> = null; action = actions.shift(); ) {\n-      action.execute();\n-      if (action.error) {\n-        this.active = false;\n-        throw action.error;\n-      }\n-    }\n-    this.active = false;\n-  }\n-\n-  schedule<T>(work: (x?: T) => Subscription | void, delay: number = 0, state?: T): Subscription {\n-    return (delay <= 0) ?\n-      this.scheduleNow(work, state) :\n-      this.scheduleLater(work, delay, state);\n-  }\n-\n-  scheduleNow<T>(work: (x?: T) => Subscription | void, state?: T): Action<T> {\n-    return new QueueAction(this, work).schedule(state);\n-  }\n-\n-  scheduleLater<T>(work: (x?: T) => Subscription | void, delay: number, state?: T): Action<T> {\n-    return new FutureAction(this, work).schedule(state, delay);\n-  }\n+export class QueueScheduler extends AsyncScheduler {\n }"},{"sha":"76de9f641b84a470b846bcf2ba34df8c5802779c","filename":"src/scheduler/VirtualTimeScheduler.ts","status":"modified","additions":64,"deletions":97,"changes":161,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FVirtualTimeScheduler.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FVirtualTimeScheduler.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FVirtualTimeScheduler.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,68 +1,41 @@\n-import {Scheduler} from '../Scheduler';\n+import {AsyncAction} from './AsyncAction';\n import {Subscription} from '../Subscription';\n-import {Action} from './Action';\n+import {AsyncScheduler} from './AsyncScheduler';\n \n-export class VirtualTimeScheduler implements Scheduler {\n-  actions: Action<any>[] = []; // XXX: use `any` to remove type param `T` from `VirtualTimeScheduler`.\n-  active: boolean = false;\n-  scheduledId: number = null;\n-  index: number = 0;\n-  sorted: boolean = false;\n-  frame: number = 0;\n-  maxFrames: number = 750;\n+export class VirtualTimeScheduler extends AsyncScheduler {\n \n   protected static frameTimeFactor: number = 10;\n \n-  now() {\n-    return this.frame;\n-  }\n+  public frame: number = 0;\n+  public index: number = -1;\n \n-  flush() {\n-    const actions = this.actions;\n-    const maxFrames = this.maxFrames;\n-    while (actions.length > 0) {\n-      let action = actions.shift();\n-      this.frame = action.delay;\n-      if (this.frame <= maxFrames) {\n-        action.execute();\n-        if (action.error) {\n-          actions.length = 0;\n-          this.frame = 0;\n-          throw action.error;\n-        }\n-      } else {\n-        break;\n-      }\n-    }\n-    actions.length = 0;\n-    this.frame = 0;\n+  constructor(SchedulerAction: typeof AsyncAction = VirtualAction,\n+              public maxFrames: number = 750) {\n+    super(SchedulerAction, () => this.frame);\n   }\n \n-  addAction<T>(action: Action<T>): void {\n-    const actions: Action<T>[] = this.actions;\n+  /**\n+   * Prompt the Scheduler to execute all of its queued actions, therefore\n+   * clearing its queue.\n+   * @return {void}\n+   */\n+  public flush(): void {\n \n-    actions.push(action);\n+    const {actions, maxFrames} = this;\n+    let error: any, action: AsyncAction<any>;\n \n-    actions.sort((a: VirtualAction<T>, b: VirtualAction<T>) => {\n-      if (a.delay === b.delay) {\n-        if (a.index === b.index) {\n-          return 0;\n-        } else if (a.index > b.index) {\n-          return 1;\n-        } else {\n-          return -1;\n-        }\n-      } else if (a.delay > b.delay) {\n-        return 1;\n-      } else {\n-        return -1;\n+    while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n+      if (error = action.execute(action.state, action.delay)) {\n+        break;\n       }\n-    });\n-  }\n+    }\n \n-  schedule<T>(work: (x?: T) => Subscription | void, delay: number = 0, state?: T): Subscription {\n-    this.sorted = false;\n-    return new VirtualAction(this, work, this.index++).schedule(state, delay);\n+    if (error) {\n+      while (action = actions.shift()) {\n+        action.unsubscribe();\n+      }\n+      throw error;\n+    }\n   }\n }\n \n@@ -71,58 +44,52 @@ export class VirtualTimeScheduler implements Scheduler {\n  * @ignore\n  * @extends {Ignored}\n  */\n-class VirtualAction<T> extends Subscription implements Action<T> {\n-  state: T;\n-  delay: number;\n-  calls = 0;\n-  error: any;\n+export class VirtualAction<T> extends AsyncAction<T> {\n \n-  constructor(public scheduler: VirtualTimeScheduler,\n-              public work: (x?: T) => Subscription | void,\n-              public index: number) {\n-    super();\n+  constructor(protected scheduler: VirtualTimeScheduler,\n+              protected work: (state?: T) => void,\n+              protected index: number = scheduler.index += 1) {\n+    super(scheduler, work);\n+    this.index = scheduler.index = index;\n   }\n \n-  schedule(state?: T, delay: number = 0): VirtualAction<T> {\n-    if (this.isUnsubscribed) {\n-      return this;\n-    }\n-    const scheduler = this.scheduler;\n-    let action: Action<T> = null;\n-    if (this.calls++ === 0) {\n-      // the action is not being rescheduled.\n-      action = this;\n-    } else {\n-      // the action is being rescheduled, and we can't mutate the one in the actions list\n-      // in the scheduler, so we'll create a new one.\n-      action = new VirtualAction(scheduler, this.work, scheduler.index += 1);\n-      this.add(action);\n-    }\n-    action.state = state;\n-    action.delay = scheduler.frame + delay;\n-    scheduler.addAction(action);\n-    return this;\n+  public schedule(state?: T, delay: number = 0): Subscription {\n+    return !this.id ?\n+      super.schedule(state, delay) : (\n+      // If an action is rescheduled, we save allocations by mutating its state,\n+      // pushing it to the end of the scheduler queue, and recycling the action.\n+      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n+      // must be immutable so they can be inspected later.\n+      <VirtualAction<T>> this.add(\n+        new VirtualAction<T>(this.scheduler, this.work))\n+      ).schedule(state, delay);\n   }\n \n-  execute() {\n-    if (this.isUnsubscribed) {\n-      throw new Error('How did did we execute a canceled Action?');\n-    }\n-    this.work(this.state);\n+  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n+    this.delay = scheduler.frame + delay;\n+    const {actions} = scheduler;\n+    actions.push(this);\n+    actions.sort(VirtualAction.sortActions);\n+    return true;\n   }\n \n-  unsubscribe() {\n-    const actions = this.scheduler.actions;\n-    const index = actions.indexOf(this);\n-\n-    this.work = void 0;\n-    this.state = void 0;\n-    this.scheduler = void 0;\n+  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n+    return undefined;\n+  }\n \n-    if (index !== -1) {\n-      actions.splice(index, 1);\n+  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n+    if (a.delay === b.delay) {\n+      if (a.index === b.index) {\n+        return 0;\n+      } else if (a.index > b.index) {\n+        return 1;\n+      } else {\n+        return -1;\n+      }\n+    } else if (a.delay > b.delay) {\n+      return 1;\n+    } else {\n+      return -1;\n     }\n-\n-    super.unsubscribe();\n   }\n }"},{"sha":"0861861bb751209193dab6b65892f5a40004add6","filename":"src/scheduler/animationFrame.ts","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FanimationFrame.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2FanimationFrame.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2FanimationFrame.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,3 +1,4 @@\n+import {AnimationFrameAction} from './AnimationFrameAction';\n import {AnimationFrameScheduler} from './AnimationFrameScheduler';\n \n-export const animationFrame = new AnimationFrameScheduler();\n+export const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);"},{"sha":"5c69789f2c261e7ca11e86a083f560e97bdd559b","filename":"src/scheduler/asap.ts","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2Fasap.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2Fasap.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2Fasap.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,3 +1,4 @@\n+import {AsapAction} from './AsapAction';\n import {AsapScheduler} from './AsapScheduler';\n \n-export const asap = new AsapScheduler();\n\\ No newline at end of file\n+export const asap = new AsapScheduler(AsapAction);"},{"sha":"e0a2219d5862215f1180af998701239c25a87436","filename":"src/scheduler/async.ts","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2Fasync.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2Fasync.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2Fasync.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,3 +1,4 @@\n+import {AsyncAction} from './AsyncAction';\n import {AsyncScheduler} from './AsyncScheduler';\n \n-export const async = new AsyncScheduler();\n+export const async = new AsyncScheduler(AsyncAction);"},{"sha":"e2aeb741fb89dcbf6256745f1a3302ec6ee8cf05","filename":"src/scheduler/queue.ts","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2Fqueue.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Fscheduler%2Fqueue.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fscheduler%2Fqueue.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,3 +1,4 @@\n+import {QueueAction} from './QueueAction';\n import {QueueScheduler} from './QueueScheduler';\n \n-export const queue = new QueueScheduler();\n\\ No newline at end of file\n+export const queue = new QueueScheduler(QueueAction);"},{"sha":"25b5edc49a37fe6570fcf1850e4495539eff1d45","filename":"src/testing/HotObservable.ts","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Ftesting%2FHotObservable.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Ftesting%2FHotObservable.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Ftesting%2FHotObservable.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -50,4 +50,3 @@ export class HotObservable<T> extends Subject<T> implements SubscriptionLoggable\n   }\n }\n applyMixins(HotObservable, [SubscriptionLoggable]);\n-"},{"sha":"84be06a18a896425abefd8e410beba12dc0bf7a3","filename":"src/testing/SubscriptionLoggable.ts","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Ftesting%2FSubscriptionLoggable.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Ftesting%2FSubscriptionLoggable.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Ftesting%2FSubscriptionLoggable.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -19,4 +19,3 @@ export class SubscriptionLoggable {\n     );\n   }\n }\n-"},{"sha":"dd1b57737d5efc4c9ba6d01ab41e33d60d61769a","filename":"src/testing/TestScheduler.ts","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Ftesting%2FTestScheduler.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/8968293650213f5ced3cb409dd95e4a9450ad266/src%2Ftesting%2FTestScheduler.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Ftesting%2FTestScheduler.ts?ref=8968293650213f5ced3cb409dd95e4a9450ad266","patch":"@@ -1,12 +1,12 @@\n import {Observable} from '../Observable';\n-import {VirtualTimeScheduler} from '../scheduler/VirtualTimeScheduler';\n import {Notification} from '../Notification';\n import {Subject} from '../Subject';\n import {ColdObservable} from './ColdObservable';\n import {HotObservable} from './HotObservable';\n import {TestMessage} from './TestMessage';\n import {SubscriptionLog} from './SubscriptionLog';\n import {Subscription} from '../Subscription';\n+import {VirtualTimeScheduler} from '../scheduler/VirtualTimeScheduler';\n \n interface FlushableTest {\n   ready: boolean;\n@@ -240,4 +240,4 @@ export class TestScheduler extends VirtualTimeScheduler {\n     }\n     return testMessages;\n   }\n-}\n\\ No newline at end of file\n+}"}]},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/146","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/146/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/146/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/146/events","html_url":"https://github.com/ReactiveX/rxjs/pull/146","id":98069460,"node_id":"MDExOlB1bGxSZXF1ZXN0NDExOTE3MjA=","number":146,"title":"Adds micro-benchmark performance tests.","user":{"login":"trxcllnt","id":178183,"node_id":"MDQ6VXNlcjE3ODE4Mw==","avatar_url":"https://avatars.githubusercontent.com/u/178183?v=4","gravatar_id":"","url":"https://api.github.com/users/trxcllnt","html_url":"https://github.com/trxcllnt","followers_url":"https://api.github.com/users/trxcllnt/followers","following_url":"https://api.github.com/users/trxcllnt/following{/other_user}","gists_url":"https://api.github.com/users/trxcllnt/gists{/gist_id}","starred_url":"https://api.github.com/users/trxcllnt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trxcllnt/subscriptions","organizations_url":"https://api.github.com/users/trxcllnt/orgs","repos_url":"https://api.github.com/users/trxcllnt/repos","events_url":"https://api.github.com/users/trxcllnt/events{/privacy}","received_events_url":"https://api.github.com/users/trxcllnt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-07-30T02:05:04Z","updated_at":"2019-01-19T07:37:49Z","closed_at":"2015-07-30T06:05:24Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/146","html_url":"https://github.com/ReactiveX/rxjs/pull/146","diff_url":"https://github.com/ReactiveX/rxjs/pull/146.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/146.patch","merged_at":"2015-07-30T06:05:24Z"},"body":"Addresses #126.\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/146/timeline","performed_via_github_app":null,"state_reason":null,"score":1,"files":[{"sha":"1a862b9065023355873716017f50e590e5079c55","filename":"perf/macro/flatMap-scalar/flatmap-scalar.spec.js","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap-scalar%2Fflatmap-scalar.spec.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap-scalar%2Fflatmap-scalar.spec.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2FflatMap-scalar%2Fflatmap-scalar.spec.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -14,7 +14,7 @@ describe('flatMap comparison', function () {\n   ].forEach(function (val) {\n     it('should be fast in Rx2', function (done) {\n       browser.ignoreSynchronization = true;\n-      browser.get('http://localhost:8080/perf/flatMap-scalar/index.html?iterations=' + val);\n+      browser.get('http://localhost:8080/perf/macro/flatMap-scalar/index.html?iterations=' + val);\n       runner.sample({\n         id: 'flatMap-range-to-scalar Rx2',\n         execute: function () {\n@@ -30,7 +30,7 @@ describe('flatMap comparison', function () {\n \n     it('should be fast in RxNext', function (done) {\n       browser.ignoreSynchronization = true;\n-      browser.get('http://localhost:8080/perf/flatMap-scalar/index.html?iterations=' + val);\n+      browser.get('http://localhost:8080/perf/macro/flatMap-scalar/index.html?iterations=' + val);\n       runner.sample({\n         id: 'flatMap-range-to-scalar RxNext',\n         execute: function () {","previous_filename":"perf/flatMap-scalar/flatmap-scalar.spec.js"},{"sha":"30bc72a2e9d8f35935121e003f85ef5bc4b36157","filename":"perf/macro/flatMap-scalar/index.html","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap-scalar%2Findex.html","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap-scalar%2Findex.html","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2FflatMap-scalar%2Findex.html?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -3,12 +3,12 @@\n <head>\n \t<meta charset=\"UTF-8\">\n \t<title>RxJS 3 Perf Tests</title>\n-  <script src=\"../../dist/global/Rx.js\"></script>\n+  <script src=\"../../../dist/global/Rx.js\"></script>\n   <script type=\"text/javascript\">\n     window.RxNext = window.Rx;\n     window.Rx = void 0;\n   </script>\n-  <script src=\"../../node_modules/rx/dist/rx.all.js\"></script>\n+  <script src=\"../../../node_modules/rx/dist/rx.all.js\"></script>\n \n </head>\n <body>","previous_filename":"perf/flatMap-scalar/index.html"},{"sha":"e23837f41d329537cf9ce138614b5d67aa62bed3","filename":"perf/macro/flatMap-scalar/perf.js","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap-scalar%2Fperf.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap-scalar%2Fperf.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2FflatMap-scalar%2Fperf.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","previous_filename":"perf/flatMap-scalar/perf.js"},{"sha":"6e83f391fa562bcb5e5c70c9e7081095e244dc7f","filename":"perf/macro/flatMap/flatmap.spec.js","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap%2Fflatmap.spec.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap%2Fflatmap.spec.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2FflatMap%2Fflatmap.spec.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -15,7 +15,7 @@ describe('flatMap comparison', function() {\n \n     it('should be fast in Rx2', function (done) {\n       browser.ignoreSynchronization = true;\n-      browser.get('http://localhost:8080/perf/flatMap/index.html?iterations=' + val);\n+      browser.get('http://localhost:8080/perf/macro/flatMap/index.html?iterations=' + val);\n       runner.sample({\n         id: 'flatMap Rx2',\n         execute: function () {\n@@ -31,7 +31,7 @@ describe('flatMap comparison', function() {\n \n     it('should be fast in RxNext', function (done) {\n       browser.ignoreSynchronization = true;\n-      browser.get('http://localhost:8080/perf/flatMap/index.html?iterations=' + val);\n+      browser.get('http://localhost:8080/perf/macro/flatMap/index.html?iterations=' + val);\n       runner.sample({\n         id: 'flatMap RxNext',\n         execute: function () {","previous_filename":"perf/flatMap/flatmap.spec.js"},{"sha":"c6c90133c5aa654ad882709769882c8358fbd3cb","filename":"perf/macro/flatMap/index.html","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap%2Findex.html","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap%2Findex.html","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2FflatMap%2Findex.html?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -3,12 +3,12 @@\n <head>\n \t<meta charset=\"UTF-8\">\n \t<title>RxJS 3 Perf Tests</title>\n-  <script src=\"../../dist/global/Rx.js\"></script>\n+  <script src=\"../../../dist/global/Rx.js\"></script>\n   <script type=\"text/javascript\">\n     window.RxNext = window.Rx;\n     window.Rx = void 0;\n   </script>\n-  <script src=\"../../node_modules/rx/dist/rx.all.js\"></script>\n+  <script src=\"../../../node_modules/rx/dist/rx.all.js\"></script>\n \n </head>\n <body>","previous_filename":"perf/flatMap/index.html"},{"sha":"58428e03303417a0a9daca243d6a9b970ac03435","filename":"perf/macro/flatMap/perf.js","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap%2Fperf.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2FflatMap%2Fperf.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2FflatMap%2Fperf.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","previous_filename":"perf/flatMap/perf.js"},{"sha":"e519f8bd578fb2cf17fef0c0ac811221554573fc","filename":"perf/macro/index.html","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2Findex.html","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2Findex.html","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2Findex.html?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","previous_filename":"perf/index.html"},{"sha":"c61e7115e28f5906a0a4b0deeafa404d101c2e16","filename":"perf/macro/perf-helpers.js","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2Fperf-helpers.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmacro%2Fperf-helpers.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmacro%2Fperf-helpers.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","previous_filename":"perf/perf-helpers.js"},{"sha":"4631951c6b5eb567d0766d99519397dc03f2247e","filename":"perf/micro/current-thread-scheduler/observable/from-array.js","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-array.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-array.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-array.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,24 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function fromArray(suite) {\n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+\n+    var oldFromArrayWithCurrentThreadScheduler = RxOld.Observable.fromArray(args, RxOld.Scheduler.currentThread);\n+    var newFromArrayWithCurrentThreadScheduler = RxNew.Observable.fromArray(args, RxNew.Scheduler.immediate);\n+\n+    // add tests\n+    return suite\n+        .add('old fromArray with current thread scheduler', function () {\n+            oldFromArrayWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new fromArray with current thread scheduler', function () {\n+            newFromArrayWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"4df7cd05ddd7cef3639e9a77cab7c4d5a7b9dc5e","filename":"perf/micro/current-thread-scheduler/observable/from-with-array.js","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-with-array.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-with-array.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-with-array.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,21 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function fromWithArray(suite) {\n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+\n+    // add tests\n+    return suite\n+        .add('old from (array) with current thread scheduler', function () {\n+            RxOld.Observable.from(args, null, null, RxOld.Scheduler.currentThread).subscribe(_next, _error, _complete);\n+        })\n+        .add('new from (array) with current thread scheduler', function () {\n+            RxNew.Observable.from(args, null, null, RxNew.Scheduler.immediate).subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"9a9e3b49f1eb3fc55e66bdcc1abe040d6bdc300c","filename":"perf/micro/current-thread-scheduler/observable/from-with-string.js","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-with-string.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-with-string.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Ffrom-with-string.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,22 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function fromWithString(suite) {\n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+    var argStr = args.join('');\n+\n+    // add tests\n+    return suite\n+        .add('old from (string) with current thread scheduler', function () {\n+            RxOld.Observable.from(argStr, null, null, RxOld.Scheduler.currentThread).subscribe(_next, _error, _complete);\n+        })\n+        .add('new from (string) with current thread scheduler', function () {\n+            RxNew.Observable.from(argStr, null, null, RxNew.Scheduler.immediate).subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"a91d3238a1f4b0dfb55a7d0cdd3400a841b6afde","filename":"perf/micro/current-thread-scheduler/observable/of.js","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Fof.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Fof.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Fof.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,25 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function of(suite) {\n+    \n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+\n+    var oldOfWithCurrentThreadScheduler = RxOld.Observable.of.apply(null, args.concat(RxOld.Scheduler.currentThread));\n+    var newOfWithCurrentThreadScheduler = RxNew.Observable.of.apply(null, args.concat(RxNew.Scheduler.immediate));\n+\n+    // add tests\n+    return suite\n+        .add('old of with current thread scheduler', function () {\n+            oldOfWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new of with current thread scheduler', function () {\n+            newOfWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"38f6168a35d83800df7dd78297443b39398af7cd","filename":"perf/micro/current-thread-scheduler/observable/range.js","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Frange.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Frange.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Fobservable%2Frange.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,20 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function range(suite) {\n+    // add tests\n+\n+    var oldRangeWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread);\n+    var newRangeWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate);\n+\n+    return suite\n+        .add('old range with current thread scheduler', function () {\n+            oldRangeWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new range with current thread scheduler', function () {\n+            newRangeWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"d3be9ee89026e19d037bb6b3a8eee6e14028a447","filename":"perf/micro/current-thread-scheduler/operators/combine-latest.js","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fcombine-latest.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fcombine-latest.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fcombine-latest.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldCombineLatestWithCurrentThreadScheduler = RxOld.Observable.combineLatest(RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread), RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread), add);\n+    var newCombineLatestWithCurrentThreadScheduler = RxNew.Observable.combineLatest(RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate), RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate), add);\n+\n+    return suite\n+        .add('old combineLatest with current thread scheduler', function () {\n+            oldCombineLatestWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new combineLatest with current thread scheduler', function () {\n+            newCombineLatestWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    \n+    function add(x, y) {\n+        return x + y;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"00328dc56b7101ec4061b506cf368688966ffe9b","filename":"perf/micro/current-thread-scheduler/operators/concat-many.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fconcat-many.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fconcat-many.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fconcat-many.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldConcatMapWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).concatMap(function (x) { return RxOld.Observable.range(x, 25, RxOld.Scheduler.currentThread); });\n+    var newConcatMapWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).concatMap(function (x) { return RxNew.Observable.range(x, 25, RxNew.Scheduler.immediate); });\n+\n+    return suite\n+        .add('old concatMap with current thread scheduler', function () {\n+            oldConcatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new concatMap with current thread scheduler', function () {\n+            newConcatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"292b3c789cc187554d7747344c1f0b1c90cf8b2d","filename":"perf/micro/current-thread-scheduler/operators/filter.js","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Ffilter.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Ffilter.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Ffilter.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,27 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldFilterWithCurrentThreadScheduler = RxOld.Observable.range(0, 50, RxOld.Scheduler.currentThread).filter(divByTwo).filter(divByTen);\n+    var newFilterWithCurrentThreadScheduler = RxNew.Observable.range(0, 50, RxNew.Scheduler.immediate).filter(divByTwo).filter(divByTen);\n+\n+    return suite\n+        .add('old filter with current thread scheduler', function () {\n+            oldFilterWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new filter with current thread scheduler', function () {\n+            newFilterWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function divByTwo(x) {\n+        return x / 2 === 0;\n+    }\n+\n+    function divByTen(x) {\n+        return x / 10 === 0;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};"},{"sha":"6ccecde921f8ae70342d170572d8e94170c22711","filename":"perf/micro/current-thread-scheduler/operators/flat-map-observable-scalar.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-observable-scalar.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-observable-scalar.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-observable-scalar.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldFlatMapWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).flatMap(RxOld.Observable.return(0, RxOld.Scheduler.currentThread));\n+    var newFlatMapWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).flatMapTo(RxNew.Observable.return(0, RxNew.Scheduler.immediate));\n+\n+    return suite\n+        .add('old flatMap (scalar Observable) with current thread scheduler', function () {\n+            oldFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap (scalar Observable) with current thread scheduler', function () {\n+            newFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"4e232c69b06332b563487e6086b829ae55635b66","filename":"perf/micro/current-thread-scheduler/operators/flat-map-observable.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-observable.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-observable.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-observable.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldFlatMapWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).flatMap(RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread));\n+    var newFlatMapWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).flatMapTo(RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate));\n+\n+    return suite\n+        .add('old flatMap (Observable) with current thread scheduler', function () {\n+            oldFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap (Observable) with current thread scheduler', function () {\n+            newFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"08a3453c5ef652381d215cc301760714470c6f83","filename":"perf/micro/current-thread-scheduler/operators/flat-map-scalar.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-scalar.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-scalar.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map-scalar.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldFlatMapWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).flatMap(function (x) { return RxOld.Observable.return(x, RxOld.Scheduler.currentThread); });\n+    var newFlatMapWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).flatMap(function (x) { return RxNew.Observable.return(x); });\n+\n+    return suite\n+        .add('old flatMap (scalar) with current thread scheduler', function () {\n+            oldFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap (scalar) with current thread scheduler', function () {\n+            newFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"f0e4ce35aa0b9167606646d6f4bb8b3f26f2e91e","filename":"perf/micro/current-thread-scheduler/operators/flat-map.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fflat-map.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldFlatMapWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).flatMap(function (x) { return RxOld.Observable.range(x, 25, RxOld.Scheduler.currentThread); });\n+    var newFlatMapWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).flatMap(function (x) { return RxNew.Observable.range(x, 25, RxNew.Scheduler.immediate); });\n+\n+    return suite\n+        .add('old flatMap with current thread scheduler', function () {\n+            oldFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap with current thread scheduler', function () {\n+            newFlatMapWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"c88cca11a1e0161e71aa22927189ef73384c3ab8","filename":"perf/micro/current-thread-scheduler/operators/map.js","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmap.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmap.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmap.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,27 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldSelectWithCurrentThreadScheduler = RxOld.Observable.range(0, 50).map(square).map(double);\n+    var newSelectWithCurrentThreadScheduler = RxNew.Observable.range(0, 50, RxNew.Scheduler.immediate).map(square).map(double);\n+\n+    return suite\n+        .add('old select with current thread scheduler', function () {\n+            oldSelectWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new select with current thread scheduler', function () {\n+            newSelectWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function square(x) {\n+        return x * x;\n+    }\n+\n+    function double(x) {\n+        return x + x;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"90e7d923eb9afa2728d22ad45123b9790c9a8d36","filename":"perf/micro/current-thread-scheduler/operators/merge-all.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmerge-all.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmerge-all.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmerge-all.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldMergeAllWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).map(RxOld.Observable.range(0, 25), RxOld.Scheduler.currentThread).mergeAll();\n+    var newMergeAllWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).map(RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate)).mergeAll();\n+\n+    return suite\n+        .add('old mergeAll with current thread scheduler', function () {\n+            oldMergeAllWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new mergeAll with current thread scheduler', function () {\n+            newMergeAllWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"1c8debc8721fcf2970b0d46619d3b49b2969918d","filename":"perf/micro/current-thread-scheduler/operators/merge.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmerge.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmerge.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fmerge.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldMergeWithCurrentThreadScheduler = RxOld.Observable.range(0, 250, RxOld.Scheduler.currentThread).merge(RxOld.Observable.range(0, 250, RxOld.Scheduler.currentThread));\n+    var newMergeWithCurrentThreadScheduler = RxNew.Observable.range(0, 250, RxNew.Scheduler.immediate).merge(RxNew.Observable.range(0, 250, RxNew.Scheduler.immediate));\n+\n+    return suite\n+        .add('old merge (proto) with current thread scheduler', function () {\n+            oldMergeWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new merge (proto) with current thread scheduler', function () {\n+            newMergeWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"d8ef522af89f8e30fdacb9cb5bd8161eba1e5b13","filename":"perf/micro/current-thread-scheduler/operators/reduce.js","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Freduce.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Freduce.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Freduce.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldReduceWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).reduce(add);\n+    var newReduceWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).reduce(add);\n+\n+    return suite\n+        .add('old reduce with current thread scheduler', function () {\n+            oldReduceWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new reduce with current thread scheduler', function () {\n+            newReduceWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function add(acc, x) {\n+        return x + x\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"596708d6203d8feef6f8fe1fe784cb0ad2272a8e","filename":"perf/micro/current-thread-scheduler/operators/scan.js","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fscan.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fscan.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fscan.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldScanWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).scan(add);\n+    var newScanWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).scan(add);\n+\n+    return suite\n+        .add('old scan with current thread scheduler', function () {\n+            oldScanWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new scan with current thread scheduler', function () {\n+            newScanWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function add(acc, x) {\n+        return x + x\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"19b3974fef6bec6901d2c7fb4b4488791900dac6","filename":"perf/micro/current-thread-scheduler/operators/to-array.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fto-array.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fto-array.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fto-array.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldToArrayWithCurrentThreadScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread).toArray();\n+    var newToArrayWithCurrentThreadScheduler = RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate).toArray();\n+\n+    return suite\n+        .add('old toArray with current thread scheduler', function () {\n+            oldToArrayWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new toArray with current thread scheduler', function () {\n+            newToArrayWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"8c2208ce8efc4fcca0dba2f8162a1c054a5774dd","filename":"perf/micro/current-thread-scheduler/operators/zip.js","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fzip.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fzip.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fcurrent-thread-scheduler%2Foperators%2Fzip.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldZipWithCurrentThreadScheduler = RxOld.Observable.zip(RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread), RxOld.Observable.range(0, 25, RxOld.Scheduler.currentThread), add);\n+    var newZipWithCurrentThreadScheduler = RxNew.Observable.zip(RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate), RxNew.Observable.range(0, 25, RxNew.Scheduler.immediate), add);\n+\n+    return suite\n+        .add('old zip with current thread scheduler', function () {\n+            oldZipWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new zip with current thread scheduler', function () {\n+            newZipWithCurrentThreadScheduler.subscribe(_next, _error, _complete);\n+        });\n+    \n+    function add(x, y) {\n+        return x + y;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"8b4c2874c13f678cc33bb4082f5794bed16219e7","filename":"perf/micro/immediate-scheduler/observable/from-array.js","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-array.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-array.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-array.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,24 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function fromArray(suite) {\n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+\n+    var oldFromArrayWithImmediateScheduler = RxOld.Observable.fromArray(args, RxOld.Scheduler.immediate);\n+    var newFromArrayWithImmediateScheduler = RxNew.Observable.fromArray(args);\n+\n+    // add tests\n+    return suite\n+        .add('old fromArray with immediate scheduler', function () {\n+            oldFromArrayWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new fromArray with immediate scheduler', function () {\n+            newFromArrayWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"05d9f05c9321a27c67c4b2217f76dc63357eb4e8","filename":"perf/micro/immediate-scheduler/observable/from-with-array.js","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-with-array.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-with-array.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-with-array.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,21 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function fromWithArray(suite) {\n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+\n+    // add tests\n+    return suite\n+        .add('old from (array) with immediate scheduler', function () {\n+            RxOld.Observable.from(args, null, null, RxOld.Scheduler.immediate).subscribe(_next, _error, _complete);\n+        })\n+        .add('new from (array) with immediate scheduler', function () {\n+            RxNew.Observable.from(args, null, null).subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"41924204aa4db9877133fe3fa7b3319b3b1be595","filename":"perf/micro/immediate-scheduler/observable/from-with-string.js","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-with-string.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-with-string.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Ffrom-with-string.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,22 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function fromWithString(suite) {\n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+    var argStr = args.join('');\n+\n+    // add tests\n+    return suite\n+        .add('old from (string) with immediate scheduler', function () {\n+            RxOld.Observable.from(argStr, null, null, RxOld.Scheduler.immediate).subscribe(_next, _error, _complete);\n+        })\n+        .add('new from (string) with immediate scheduler', function () {\n+            RxNew.Observable.from(argStr, null, null).subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"8aa0e90033390abf0f6ce96b562c33c13fd30c0f","filename":"perf/micro/immediate-scheduler/observable/of.js","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Fof.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Fof.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Fof.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,25 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function of(suite) {\n+    \n+    var args = [];\n+    for (var i = 0; i < 25; i++) {\n+        args.push(i);\n+    }\n+\n+    var oldOfWithImmediateScheduler = RxOld.Observable.of.apply(null, args.concat(RxOld.Scheduler.immediate));\n+    var newOfWithImmediateScheduler = RxNew.Observable.of.apply(null, args);\n+\n+    // add tests\n+    return suite\n+        .add('old of with immediate scheduler', function () {\n+            oldOfWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new of with immediate scheduler', function () {\n+            newOfWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"e3e749d0eca798fc56c2475f16ddd51ecffa2625","filename":"perf/micro/immediate-scheduler/observable/range.js","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Frange.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Frange.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Fobservable%2Frange.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,20 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function range(suite) {\n+    // add tests\n+    \n+    var oldRangeWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate);\n+    var newRangeWithImmediateScheduler = RxNew.Observable.range(0, 25);\n+\n+    return suite\n+        .add('old range with immediate scheduler', function () {\n+            oldRangeWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new range with immediate scheduler', function () {\n+            newRangeWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"363698b3333cde5408fcb2cf7f55dec9d66da697","filename":"perf/micro/immediate-scheduler/operators/combine-latest.js","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fcombine-latest.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fcombine-latest.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fcombine-latest.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldCombineLatestWithImmediateScheduler = RxOld.Observable.combineLatest(RxOld.Observable.range(0, 25), RxOld.Observable.range(0, 25), add);\n+    var newCombineLatestWithImmediateScheduler = RxNew.Observable.combineLatest(RxNew.Observable.range(0, 25), RxNew.Observable.range(0, 25), add);\n+\n+    return suite\n+        .add('old combineLatest with immediate scheduler', function () {\n+            oldCombineLatestWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new combineLatest with immediate scheduler', function () {\n+            newCombineLatestWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    \n+    function add(x, y) {\n+        return x + y;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"8277abb104a89a7c47d73d97f402096f3c5c5e91","filename":"perf/micro/immediate-scheduler/operators/concat-many.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fconcat-many.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fconcat-many.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fconcat-many.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldConcatMapWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).concatMap(function (x) { return RxOld.Observable.range(x, 25, RxOld.Scheduler.immediate); });\n+    var newConcatMapWithImmediateScheduler = RxNew.Observable.range(0, 25).concatMap(function (x) { return RxNew.Observable.range(x, 25); });\n+\n+    return suite\n+        .add('old concatMap with immediate scheduler', function () {\n+            oldConcatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new concatMap with immediate scheduler', function () {\n+            newConcatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"489d10c2818422e5a825ca38c45ba84b50ec9984","filename":"perf/micro/immediate-scheduler/operators/filter.js","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Ffilter.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Ffilter.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Ffilter.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,27 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldFilterWithImmediateScheduler = RxOld.Observable.range(0, 50, RxOld.Scheduler.immediate).filter(divByTwo).filter(divByTen);\n+    var newFilterWithImmediateScheduler = RxNew.Observable.range(0, 50).filter(divByTwo).filter(divByTen);\n+\n+    return suite\n+        .add('old filter with immediate scheduler', function () {\n+            oldFilterWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new filter with immediate scheduler', function () {\n+            newFilterWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function divByTwo(x) {\n+        return x / 2 === 0;\n+    }\n+\n+    function divByTen(x) {\n+        return x / 10 === 0;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};"},{"sha":"e963d42b527a43e65acf35adac0f671d71a7453b","filename":"perf/micro/immediate-scheduler/operators/flat-map-observable-scalar.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-observable-scalar.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-observable-scalar.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-observable-scalar.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldFlatMapWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).flatMap(RxOld.Observable.return(0, RxOld.Scheduler.immediate));\n+    var newFlatMapWithImmediateScheduler = RxNew.Observable.range(0, 25).flatMapTo(RxNew.Observable.return(0));\n+\n+    return suite\n+        .add('old flatMap (scalar Observable) with immediate scheduler', function () {\n+            oldFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap (scalar Observable) with immediate scheduler', function () {\n+            newFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"df05008e2b6953257caf1fe56232cf4f4ea8870f","filename":"perf/micro/immediate-scheduler/operators/flat-map-observable.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-observable.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-observable.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-observable.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldFlatMapWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).flatMap(RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate));\n+    var newFlatMapWithImmediateScheduler = RxNew.Observable.range(0, 25).flatMapTo(RxNew.Observable.range(0, 25));\n+\n+    return suite\n+        .add('old flatMap (Observable) with immediate scheduler', function () {\n+            oldFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap (Observable) with immediate scheduler', function () {\n+            newFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"fb12b252822231240d77805205ca87a404fa0335","filename":"perf/micro/immediate-scheduler/operators/flat-map-scalar.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-scalar.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-scalar.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map-scalar.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldFlatMapWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).flatMap(function (x) { return RxOld.Observable.return(x, RxOld.Scheduler.immediate); });\n+    var newFlatMapWithImmediateScheduler = RxNew.Observable.range(0, 25).flatMap(function (x) { return RxNew.Observable.return(x); });\n+\n+    return suite\n+        .add('old flatMap (scalar) with immediate scheduler', function () {\n+            oldFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap (scalar) with immediate scheduler', function () {\n+            newFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"8517b9da1a31073d86063f919a934bfc176a48c9","filename":"perf/micro/immediate-scheduler/operators/flat-map.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fflat-map.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldFlatMapWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).flatMap(function (x) { return RxOld.Observable.range(x, 25, RxOld.Scheduler.immediate); });\n+    var newFlatMapWithImmediateScheduler = RxNew.Observable.range(0, 25).flatMap(function (x) { return RxNew.Observable.range(x, 25); });\n+\n+    return suite\n+        .add('old flatMap with immediate scheduler', function () {\n+            oldFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new flatMap with immediate scheduler', function () {\n+            newFlatMapWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"4eeab3c572729f945a298ad3250a6b652c771b2e","filename":"perf/micro/immediate-scheduler/operators/map.js","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmap.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmap.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmap.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,27 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldSelectWithImmediateScheduler = RxOld.Observable.range(0, 50, RxOld.Scheduler.immediate).map(square).map(double);\n+    var newSelectWithImmediateScheduler = RxNew.Observable.range(0, 50).map(square).map(double);\n+\n+    return suite\n+        .add('old select with immediate scheduler', function () {\n+            oldSelectWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new select with immediate scheduler', function () {\n+            newSelectWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function square(x) {\n+        return x * x;\n+    }\n+\n+    function double(x) {\n+        return x + x;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"c0849dc94bf468813103650d1c8e2269c006e3f4","filename":"perf/micro/immediate-scheduler/operators/merge-all.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmerge-all.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmerge-all.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmerge-all.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldMergeAllWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).map(RxOld.Observable.range(0, 25), RxOld.Scheduler.immediate).mergeAll();\n+    var newMergeAllWithImmediateScheduler = RxNew.Observable.range(0, 25).map(RxNew.Observable.range(0, 25)).mergeAll();\n+\n+    return suite\n+        .add('old mergeAll with immediate scheduler', function () {\n+            oldMergeAllWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new mergeAll with immediate scheduler', function () {\n+            newMergeAllWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"692304b22201c3942873fd628b5b56d55aa1c1d3","filename":"perf/micro/immediate-scheduler/operators/merge.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmerge.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmerge.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fmerge.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldMergeWithImmediateScheduler = RxOld.Observable.range(0, 250, RxOld.Scheduler.immediate).merge(RxOld.Observable.range(0, 250, RxOld.Scheduler.immediate));\n+    var newMergeWithImmediateScheduler = RxNew.Observable.range(0, 250).merge(RxNew.Observable.range(0, 250));\n+\n+    return suite\n+        .add('old merge (proto) with immediate scheduler', function () {\n+            oldMergeWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new merge (proto) with immediate scheduler', function () {\n+            newMergeWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"2d8aa8dc50b126686daef2bf26b9e20ce4cafc54","filename":"perf/micro/immediate-scheduler/operators/reduce.js","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Freduce.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Freduce.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Freduce.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldReduceWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).reduce(add);\n+    var newReduceWithImmediateScheduler = RxNew.Observable.range(0, 25).reduce(add);\n+\n+    return suite\n+        .add('old reduce with immediate scheduler', function () {\n+            oldReduceWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new reduce with immediate scheduler', function () {\n+            newReduceWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function add(acc, x) {\n+        return x + x\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"5fe7a6c188ba4ca21c4d74758a34481a5cfbbeed","filename":"perf/micro/immediate-scheduler/operators/scan.js","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fscan.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fscan.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fscan.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldScanWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).scan(add);\n+    var newScanWithImmediateScheduler = RxNew.Observable.range(0, 25).scan(add);\n+\n+    return suite\n+        .add('old scan with immediate scheduler', function () {\n+            oldScanWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new scan with immediate scheduler', function () {\n+            newScanWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+\n+    function add(acc, x) {\n+        return x + x\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"ec93723d5e7f32b2d5b24e1f81d91fbce46913cc","filename":"perf/micro/immediate-scheduler/operators/to-array.js","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fto-array.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fto-array.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fto-array.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,19 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+\n+    var oldToArrayWithImmediateScheduler = RxOld.Observable.range(0, 25, RxOld.Scheduler.immediate).toArray();\n+    var newToArrayWithImmediateScheduler = RxNew.Observable.range(0, 25).toArray();\n+\n+    return suite\n+        .add('old toArray with immediate scheduler', function () {\n+            oldToArrayWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new toArray with immediate scheduler', function () {\n+            newToArrayWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"b59bae7ad6c4e0a76d7e3ff2c57c5fc2cd650a1b","filename":"perf/micro/immediate-scheduler/operators/zip.js","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fzip.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fzip.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Fimmediate-scheduler%2Foperators%2Fzip.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,23 @@\n+var RxOld = require(\"rx\");\n+var RxNew = require(\"../../../../index\");\n+\n+module.exports = function (suite) {\n+    \n+    var oldZipWithImmediateScheduler = RxOld.Observable.zip(RxOld.Observable.range(0, 25), RxOld.Observable.range(0, 25), add);\n+    var newZipWithImmediateScheduler = RxNew.Observable.zip(RxNew.Observable.range(0, 25), RxNew.Observable.range(0, 25), add);\n+\n+    return suite\n+        .add('old zip with immediate scheduler', function () {\n+            oldZipWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        })\n+        .add('new zip with immediate scheduler', function () {\n+            newZipWithImmediateScheduler.subscribe(_next, _error, _complete);\n+        });\n+    \n+    function add(x, y) {\n+        return x + y;\n+    }\n+    function _next(x) { }\n+    function _error(e){ }\n+    function _complete(){ }\n+};\n\\ No newline at end of file"},{"sha":"db55024c40e1d4632bf79bdfc3c0cc2cde95fda0","filename":"perf/micro/index.js","status":"added","additions":79,"deletions":0,"changes":79,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Findex.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/perf%2Fmicro%2Findex.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/perf%2Fmicro%2Findex.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,79 @@\n+var Rx = require(\"rx\");\n+var colors = require(\"colors\");\n+var Observable = Rx.Observable;\n+var Benchmark = require(\"benchmark\");\n+var suite = new Benchmark.Suite;\n+\n+Observable.from([\n+        require(\"./immediate-scheduler/observable/from-array\"),\n+        require(\"./immediate-scheduler/observable/from-with-array\"),\n+        require(\"./immediate-scheduler/observable/from-with-string\"),\n+        require(\"./immediate-scheduler/observable/of\"),\n+        require(\"./immediate-scheduler/observable/range\"),\n+\n+        require(\"./immediate-scheduler/operators/combine-latest\"),\n+        require(\"./immediate-scheduler/operators/concat-many\"),\n+        require(\"./immediate-scheduler/operators/filter\"),\n+        require(\"./immediate-scheduler/operators/merge\"),\n+        require(\"./immediate-scheduler/operators/reduce\"),\n+\n+        require(\"./immediate-scheduler/operators/flat-map\"),\n+        require(\"./immediate-scheduler/operators/flat-map-scalar\"),\n+        require(\"./immediate-scheduler/operators/flat-map-observable\"),\n+        require(\"./immediate-scheduler/operators/flat-map-observable-scalar\"),\n+\n+        require(\"./immediate-scheduler/operators/map\"),\n+        require(\"./immediate-scheduler/operators/scan\"),\n+        require(\"./immediate-scheduler/operators/to-array\"),\n+        require(\"./immediate-scheduler/operators/zip\"),\n+\n+        require(\"./current-thread-scheduler/observable/from-array\"),\n+        require(\"./current-thread-scheduler/observable/from-with-array\"),\n+        require(\"./current-thread-scheduler/observable/from-with-string\"),\n+        require(\"./current-thread-scheduler/observable/of\"),\n+        require(\"./current-thread-scheduler/observable/range\"),\n+\n+        require(\"./current-thread-scheduler/operators/combine-latest\"),\n+        require(\"./current-thread-scheduler/operators/concat-many\"),\n+        require(\"./current-thread-scheduler/operators/filter\"),\n+        require(\"./current-thread-scheduler/operators/merge\"),\n+        require(\"./current-thread-scheduler/operators/reduce\"),\n+\n+        require(\"./current-thread-scheduler/operators/flat-map\"),\n+        require(\"./current-thread-scheduler/operators/flat-map-scalar\"),\n+        require(\"./current-thread-scheduler/operators/flat-map-observable\"),\n+        require(\"./current-thread-scheduler/operators/flat-map-observable-scalar\"),\n+\n+        require(\"./current-thread-scheduler/operators/map\"),\n+        require(\"./current-thread-scheduler/operators/scan\"),\n+        require(\"./current-thread-scheduler/operators/to-array\"),\n+        require(\"./current-thread-scheduler/operators/zip\"),\n+\n+    ])\n+    .concatMap(function (test) {\n+        var tests = test(new Benchmark.Suite());\n+        return Observable.defer(function () {\n+\n+            var cycles = new Rx.ReplaySubject();\n+            var complete = new Rx.ReplaySubject();\n+\n+            tests.on(\"cycle\", function (e) {\n+                cycles.onNext(String(e.target));\n+            }).on(\"complete\", function () {\n+                var fastest = this.filter(\"fastest\");\n+                var fastestName = String(fastest.pluck(\"name\"));\n+                var fastestTime = parseFloat(this.filter(\"fastest\").pluck(\"hz\"));\n+                var slowestTime = parseFloat(this.filter(\"slowest\").pluck(\"hz\"));\n+                \n+                // percent change formula: ((V2 - V1) / |V1|) * 100\n+                if(fastestName.substr(0, 3) === \"new\") {\n+                    complete.onNext(\"\\t\" + (Math.round((fastestTime - slowestTime) / slowestTime * 10000) / 100) + \"% \" + \"faster\".green +\" than Rx2\\n\");\n+                } else {\n+                    complete.onNext(\"\\t\" + (Math.round((slowestTime - fastestTime) / fastestTime * 10000) / 100) + \"% \" + \"slower\".red + \" than Rx2\\n\");\n+                }\n+            }).run({ \"async\": true });\n+\n+            return cycles.merge(complete).take(tests.length + 1);\n+        });\n+    })\n+    .subscribe(console.log.bind(console));"},{"sha":"94fc57a3da63f44f4cde57783b9c87a360240cee","filename":"protractor.conf.js","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/protractor.conf.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/protractor.conf.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/protractor.conf.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -17,7 +17,7 @@ exports.config = {\n     }\n   },\n \n-  specs: ['perf/**/*.spec.js'],\n+  specs: ['perf/macro/**/*.spec.js'],\n   framework: 'jasmine2',\n \n   beforeLaunch: function () {"},{"sha":"1357038a6ab9e2fb63cb8eb18ceb8bd57a8bef6d","filename":"spec/observables/from-spec.js","status":"added","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/spec%2Fobservables%2Ffrom-spec.js","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/spec%2Fobservables%2Ffrom-spec.js","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/spec%2Fobservables%2Ffrom-spec.js?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -0,0 +1,13 @@\n+/* globals describe, it, expect */\n+var Rx = require('../../dist/cjs/Rx');\n+var Observable = Rx.Observable;\n+\n+describe('Observable.from', function () {\n+  it('should enumerate an Array', function (done) {\n+    var expected = [1, 2, 3];\n+    var i = 0;\n+    Observable.from(expected).subscribe(function (x) {\n+        expect(x).toBe(expected[i++])\n+      }, null, done);\n+  }, 300);\n+});\n\\ No newline at end of file"},{"sha":"82b22a947c0f42c846b83f060e2931616a6bfbfc","filename":"src/Scheduler.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/src%2FScheduler.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/src%2FScheduler.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2FScheduler.ts?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -74,7 +74,7 @@ export class Action<T> extends Subscription<T> {\n     if (this.isUnsubscribed) {\n       throw new Error(\"How did did we execute a canceled Action?\");\n     }\n-    this.add(this.work(this.state));\n+    this.work(this.state);\n   }\n \n   unsubscribe() {"},{"sha":"31bb3aa49d5c2813d283b70123076ad69e311074","filename":"src/observables/IteratorObservable.ts","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/ReactiveX/rxjs/blob/f84b1f51bd2075ea882e5fa3577259d0eea53926/src%2Fobservables%2FIteratorObservable.ts","raw_url":"https://github.com/ReactiveX/rxjs/raw/f84b1f51bd2075ea882e5fa3577259d0eea53926/src%2Fobservables%2FIteratorObservable.ts","contents_url":"https://api.github.com/repos/ReactiveX/rxjs/contents/src%2Fobservables%2FIteratorObservable.ts?ref=f84b1f51bd2075ea882e5fa3577259d0eea53926","patch":"@@ -70,7 +70,7 @@ export default class IteratorObservable<T> extends Observable<T> {\n     let index = 0;\n     const project = this.project;\n     const thisArg = this.thisArg;\n-    const iterator = this.iterator;\n+    const iterator = getIterator(Object(this.iterator));\n     const scheduler = this.scheduler;\n \n     if (scheduler) {"}]}]