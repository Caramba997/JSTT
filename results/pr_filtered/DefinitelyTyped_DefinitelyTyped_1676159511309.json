[
  {
    "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/61991",
    "repository_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped",
    "labels_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/61991/labels{/name}",
    "comments_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/61991/comments",
    "events_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/61991/events",
    "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/61991",
    "id": 1353152095,
    "node_id": "PR_kwDOAFz6BM496Yjk",
    "number": 61991,
    "title": "[benchmark] Added Suite constructor type",
    "user": {
      "login": "kallekankaanpaa",
      "id": 31701643,
      "node_id": "MDQ6VXNlcjMxNzAxNjQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31701643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallekankaanpaa",
      "html_url": "https://github.com/kallekankaanpaa",
      "followers_url": "https://api.github.com/users/kallekankaanpaa/followers",
      "following_url": "https://api.github.com/users/kallekankaanpaa/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallekankaanpaa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallekankaanpaa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallekankaanpaa/subscriptions",
      "organizations_url": "https://api.github.com/users/kallekankaanpaa/orgs",
      "repos_url": "https://api.github.com/users/kallekankaanpaa/repos",
      "events_url": "https://api.github.com/users/kallekankaanpaa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallekankaanpaa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 697018972,
        "node_id": "MDU6TGFiZWw2OTcwMTg5NzI=",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Self%20Merge",
        "name": "Self Merge",
        "color": "000000",
        "default": false,
        "description": "This PR can now be self-merged by the PR author or an owner"
      },
      {
        "id": 905334095,
        "node_id": "MDU6TGFiZWw5MDUzMzQwOTU=",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Owner%20Approved",
        "name": "Owner Approved",
        "color": "0e8a16",
        "default": false,
        "description": "A listed owner of this package signed off on the pull request."
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2022-08-27T21:28:10Z",
    "updated_at": "2022-08-28T06:43:53Z",
    "closed_at": "2022-08-28T06:43:21Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/pulls/61991",
      "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/61991",
      "diff_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/61991.diff",
      "patch_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/61991.patch",
      "merged_at": "2022-08-28T06:43:21Z"
    },
    "body": "Please fill in this template.\r\n\r\n- [x] Use a meaningful title for the pull request. Include the name of the package modified.\r\n- [x] Test the change in your own code. (Compile and run.)\r\n- [x] [Add or edit tests](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#my-package-teststs) to reflect the change.\r\n- [x] Follow the advice from the [readme](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#make-a-pull-request).\r\n- [x] Avoid [common mistakes](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#common-mistakes).\r\n- [x] [Run `npm test <package to test>`](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#running-tests).\r\n\r\nSelect one of these and delete the others:\r\n\r\nIf changing an existing definition:\r\n- [x] Provide a URL to documentation or source code which provides context for the suggested changes: The documentation doesn't mention it but the [Suite constructor](https://github.com/bestiejs/benchmark.js/blob/42f3b732bac3640eddb3ae5f50e445f3141016fd/benchmark.js#L467-L483) checks if the first parameter is an object and if it is the first parameter is used as the options object. \r\n- [ ] If this PR brings the type definitions up to date with a new version of the JS library, update the version number in the header.\r\n\r\nI also added the `name` field to `Suite` definition since it has one similarly to `Benchmark`.\r\n\r\nI changed `Benchmark`s `name` field to be optional since it will be undefined when `Benchmark` is constructed without a name. I'm unsure if this requires a major version update.",
    "reactions": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/61991/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/61991/timeline",
    "performed_via_github_app": null,
    "state_reason": null,
    "score": 1,
    "files": [
      {
        "sha": "dc8627a2875a3b06890056d1a57b8c79863e871b",
        "filename": "types/benchmark/benchmark-tests.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/3e8adb89e809348f797c401f7cca83507c110f0c/types%2Fbenchmark%2Fbenchmark-tests.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/3e8adb89e809348f797c401f7cca83507c110f0c/types%2Fbenchmark%2Fbenchmark-tests.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fbenchmark%2Fbenchmark-tests.ts?ref=3e8adb89e809348f797c401f7cca83507c110f0c",
        "patch": "@@ -1,7 +1,17 @@\n import Benchmark = require(\"benchmark\");\n \n+// Constructor with no params\n var suite = new Benchmark.Suite;\n \n+// Constructor with name param\n+var suite = new Benchmark.Suite(\"just name\");\n+\n+// Constructor with name and options\n+var suite = new Benchmark.Suite(\"name and options\", { async: true });\n+\n+// Constructor with just options\n+var suite = new Benchmark.Suite({ name: \"Just options\" });\n+\n // add tests\n suite.add('RegExp#test', function() {\n     /o/.test('Hello World!');"
      },
      {
        "sha": "ae36fafb7bb8b38e606a23dfef71f8f6b98d6bfa",
        "filename": "types/benchmark/index.d.ts",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/3e8adb89e809348f797c401f7cca83507c110f0c/types%2Fbenchmark%2Findex.d.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/3e8adb89e809348f797c401f7cca83507c110f0c/types%2Fbenchmark%2Findex.d.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fbenchmark%2Findex.d.ts?ref=3e8adb89e809348f797c401f7cca83507c110f0c",
        "patch": "@@ -33,7 +33,7 @@ declare class Benchmark {\n     constructor(options: Benchmark.Options);\n \n     id: number;\n-    name: string;\n+    name?: string;\n     count: number;\n     cycles: number;\n     hz: number;\n@@ -168,10 +168,12 @@ declare namespace Benchmark {\n         static options: { name: string };\n \n         constructor(name?: string, options?: Options);\n+        constructor(options?: Options);\n \n         length: number;\n         aborted: boolean;\n         running: boolean;\n+        name?: string;\n \n         abort(): Suite;\n         add(name: string, fn: Function | string, options?: Options): Suite;"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/57135",
    "repository_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped",
    "labels_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/57135/labels{/name}",
    "comments_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/57135/comments",
    "events_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/57135/events",
    "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/57135",
    "id": 1052635636,
    "node_id": "PR_kwDOAFz6BM4ue8bs",
    "number": 57135,
    "title": "Add types for `react-component-benchmark`",
    "user": {
      "login": "yifanwww",
      "id": 55199350,
      "node_id": "MDQ6VXNlcjU1MTk5MzUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/55199350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yifanwww",
      "html_url": "https://github.com/yifanwww",
      "followers_url": "https://api.github.com/users/yifanwww/followers",
      "following_url": "https://api.github.com/users/yifanwww/following{/other_user}",
      "gists_url": "https://api.github.com/users/yifanwww/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yifanwww/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yifanwww/subscriptions",
      "organizations_url": "https://api.github.com/users/yifanwww/orgs",
      "repos_url": "https://api.github.com/users/yifanwww/repos",
      "events_url": "https://api.github.com/users/yifanwww/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yifanwww/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 646788888,
        "node_id": "MDU6TGFiZWw2NDY3ODg4ODg=",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/New%20Definition",
        "name": "New Definition",
        "color": "4eca56",
        "default": false,
        "description": "This PR creates a new definition package."
      },
      {
        "id": 697018972,
        "node_id": "MDU6TGFiZWw2OTcwMTg5NzI=",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Self%20Merge",
        "name": "Self Merge",
        "color": "000000",
        "default": false,
        "description": "This PR can now be self-merged by the PR author or an owner"
      },
      {
        "id": 1608552410,
        "node_id": "MDU6TGFiZWwxNjA4NTUyNDEw",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Maintainer%20Approved",
        "name": "Maintainer Approved",
        "color": "33CC22",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-11-13T09:08:19Z",
    "updated_at": "2021-11-14T03:04:31Z",
    "closed_at": "2021-11-14T03:04:31Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/pulls/57135",
      "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/57135",
      "diff_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/57135.diff",
      "patch_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/57135.patch",
      "merged_at": "2021-11-14T03:04:31Z"
    },
    "body": "Please fill in this template.\r\n\r\n- [x] Use a meaningful title for the pull request. Include the name of the package modified.\r\n- [x] Test the change in your own code. (Compile and run.)\r\n- [x] [Add or edit tests](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#my-package-teststs) to reflect the change.\r\n- [x] Follow the advice from the [readme](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#make-a-pull-request).\r\n- [x] Avoid [common mistakes](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#common-mistakes).\r\n- [x] [Run `npm test <package to test>`](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#running-tests).\r\n\r\nSelect one of these and delete the others:\r\n\r\nIf adding a new definition:\r\n- [x] The package does not already provide its own types, or cannot have its `.d.ts` files generated via `--declaration`\r\n- [x] If this is for an npm package, match the name. If not, do not conflict with the name of an npm package.\r\n- [x] Create it with `dts-gen --dt`, not by basing it on an existing project.\r\n- [x] Represents shape of module/library [correctly](https://www.typescriptlang.org/docs/handbook/declaration-files/library-structures.html)\r\n- [x] `tslint.json` [should contain](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#linter-tslintjson) `{ \"extends\": \"dtslint/dt.json\" }`, and no additional rules.\r\n- [x] `tsconfig.json` [should have](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#tsconfigjson) `noImplicitAny`, `noImplicitThis`, `strictNullChecks`, and `strictFunctionTypes` set to `true`.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/57135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/57135/timeline",
    "performed_via_github_app": null,
    "state_reason": null,
    "score": 1,
    "files": [
      {
        "sha": "f9a059ab99acbba19eb562aac418414505498a8c",
        "filename": "types/react-component-benchmark/index.d.ts",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/37bdf259646235cfe1ede7dd3f7fc5905c7a4772/types%2Freact-component-benchmark%2Findex.d.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/37bdf259646235cfe1ede7dd3f7fc5905c7a4772/types%2Freact-component-benchmark%2Findex.d.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Freact-component-benchmark%2Findex.d.ts?ref=37bdf259646235cfe1ede7dd3f7fc5905c7a4772",
        "patch": "@@ -0,0 +1,60 @@\n+// Type definitions for react-component-benchmark 1.0\n+// Project: https://github.com/paularmstrong/react-component-benchmark\n+// Definitions by: Yi Fan <https://github.com/yifanwww>\n+// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n+\n+import { ComponentType, ForwardRefExoticComponent, RefAttributes } from 'react';\n+\n+export const BenchmarkType: {\n+    MOUNT: 'mount';\n+    UPDATE: 'update';\n+    UNMOUNT: 'unmount';\n+};\n+\n+export interface Sample {\n+    start: number;\n+    end: number;\n+    elapsed: number;\n+    layout: number;\n+}\n+\n+export interface ComputedResult {\n+    max: number;\n+    min: number;\n+    median: number;\n+    mean: number;\n+    stdDev: number;\n+    p70: number;\n+    p95: number;\n+    p99: number;\n+}\n+\n+export interface BenchResultsType extends ComputedResult {\n+    startTime: number;\n+    endTime: number;\n+    runTime: number;\n+    sampleCount: number;\n+    samples: Sample[];\n+    layout?: ComputedResult;\n+}\n+\n+export interface BenchmarkProps {\n+    component: ComponentType<any>;\n+    componentProps?: Record<string, unknown>;\n+    /** Default is `false`. */\n+    includeLayout?: boolean;\n+    onComplete: (res: BenchResultsType) => void;\n+    samples: number;\n+    /** Default is `10000`. */\n+    timeout?: number;\n+    /** Default is `BenchmarkType.MOUNT`. */\n+    type?: typeof BenchmarkType[keyof typeof BenchmarkType];\n+}\n+\n+export interface BenchmarkRef {\n+    start: () => void;\n+}\n+\n+declare const Benchmark: ForwardRefExoticComponent<BenchmarkProps & RefAttributes<BenchmarkRef>>;\n+\n+export default Benchmark;"
      },
      {
        "sha": "4f8b0e225ba6a3b6b5c69ae4b190b10bad76d586",
        "filename": "types/react-component-benchmark/react-component-benchmark-tests.tsx",
        "status": "added",
        "additions": 114,
        "deletions": 0,
        "changes": 114,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/37bdf259646235cfe1ede7dd3f7fc5905c7a4772/types%2Freact-component-benchmark%2Freact-component-benchmark-tests.tsx",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/37bdf259646235cfe1ede7dd3f7fc5905c7a4772/types%2Freact-component-benchmark%2Freact-component-benchmark-tests.tsx",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Freact-component-benchmark%2Freact-component-benchmark-tests.tsx?ref=37bdf259646235cfe1ede7dd3f7fc5905c7a4772",
        "patch": "@@ -0,0 +1,114 @@\n+/*\n+ * This test code is simplified from https://github.com/paularmstrong/react-component-benchmark-example\n+ */\n+\n+import * as React from 'react';\n+import Benchmark, { BenchmarkRef, BenchmarkType, BenchResultsType } from 'react-component-benchmark';\n+\n+// https://github.com/paularmstrong/react-component-benchmark-example/blob/main/src/Result.js\n+\n+interface ResultInfo {\n+    component: string;\n+    result: BenchResultsType;\n+    type: typeof BenchmarkType[keyof typeof BenchmarkType];\n+}\n+\n+function Result({ component, index, result, type }: ResultInfo & { index: number }) {\n+    return (\n+        <tbody>\n+            <tr>\n+                <th colSpan={3}>\n+                    Run {index}: {type} - {component}\n+                </th>\n+                <th colSpan={1}>{result.sampleCount} samples</th>\n+            </tr>\n+            <tr>\n+                <td>{result.startTime}</td>\n+                <td>{result.endTime}</td>\n+                <td>{result.runTime}</td>\n+                <td>\n+                    {result.mean.toFixed(3)}ms (±{result.stdDev.toFixed(3)}ms)\n+                </td>\n+                <td>{result.layout!.mean.toFixed(3)}ms</td>\n+                <td>{result.p95.toFixed(3)}ms</td>\n+                <td>{result.p99.toFixed(3)}ms</td>\n+            </tr>\n+        </tbody>\n+    );\n+}\n+\n+interface ResultsProps {\n+    results: ResultInfo[];\n+}\n+\n+function Results({ results }: ResultsProps) {\n+    return (\n+        <table>\n+            <thead>\n+                <tr>\n+                    <th>start time</th>\n+                    <th>end time</th>\n+                    <th>run time</th>\n+                    <th>mean</th>\n+                    <th>layout</th>\n+                    <th>p95</th>\n+                    <th>p99</th>\n+                </tr>\n+            </thead>\n+            {[...results].reverse().map((result, i) => (\n+                <Result key={i} index={results.length - i} {...result} />\n+            ))}\n+        </table>\n+    );\n+}\n+\n+// https://github.com/paularmstrong/react-component-benchmark-example/blob/main/src/TestCases.js\n+\n+export function Tree({ breadth = 2, depth = 7 }) {\n+    return breadth > 0 && depth > 0 ? (\n+        <div>\n+            {Array.from({ length: breadth }).map((_, index) => (\n+                <Tree key={`${breadth}-${depth}-${index}`} breadth={breadth} depth={depth - 1} />\n+            ))}\n+        </div>\n+    ) : null;\n+}\n+\n+// https://github.com/paularmstrong/react-component-benchmark-example/blob/main/src/App.js\n+\n+function resultsReducer(state: ResultInfo[] = [], results: ResultInfo | 'CLEAR') {\n+    if (results === 'CLEAR') {\n+        return [];\n+    }\n+    state.push(results);\n+    return state;\n+}\n+\n+function App() {\n+    const benchmarkRef = React.useRef<BenchmarkRef>(null);\n+    const [results, dispatch] = React.useReducer(resultsReducer, []);\n+\n+    const type = BenchmarkType.MOUNT;\n+\n+    const handleComplete = (result: BenchResultsType) => dispatch({ result, type, component: Tree.name });\n+    const handleStart = () => benchmarkRef.current!.start();\n+\n+    return (\n+        <div>\n+            <button onClick={handleStart}>Start</button>\n+\n+            <Results results={results} />\n+\n+            <Benchmark\n+                component={Tree}\n+                componentProps={{}}\n+                includeLayout\n+                onComplete={handleComplete}\n+                ref={benchmarkRef}\n+                samples={50}\n+                timeout={10000}\n+                type={type}\n+            />\n+        </div>\n+    );\n+}"
      },
      {
        "sha": "5d50e502ae3e0259756f8b09a3c0c9761c6849e5",
        "filename": "types/react-component-benchmark/tsconfig.json",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/37bdf259646235cfe1ede7dd3f7fc5905c7a4772/types%2Freact-component-benchmark%2Ftsconfig.json",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/37bdf259646235cfe1ede7dd3f7fc5905c7a4772/types%2Freact-component-benchmark%2Ftsconfig.json",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Freact-component-benchmark%2Ftsconfig.json?ref=37bdf259646235cfe1ede7dd3f7fc5905c7a4772",
        "patch": "@@ -0,0 +1,25 @@\n+{\n+    \"compilerOptions\": {\n+        \"module\": \"commonjs\",\n+        \"lib\": [\n+            \"es6\",\n+            \"dom\"\n+        ],\n+        \"noImplicitAny\": true,\n+        \"noImplicitThis\": true,\n+        \"strictFunctionTypes\": true,\n+        \"strictNullChecks\": true,\n+        \"baseUrl\": \"../\",\n+        \"typeRoots\": [\n+            \"../\"\n+        ],\n+        \"types\": [],\n+        \"noEmit\": true,\n+        \"jsx\": \"react\",\n+        \"forceConsistentCasingInFileNames\": true\n+    },\n+    \"files\": [\n+        \"index.d.ts\",\n+        \"react-component-benchmark-tests.tsx\"\n+    ]\n+}"
      },
      {
        "sha": "3db14f85eaf7b98d594ccba79bcfafea0337f0b2",
        "filename": "types/react-component-benchmark/tslint.json",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/37bdf259646235cfe1ede7dd3f7fc5905c7a4772/types%2Freact-component-benchmark%2Ftslint.json",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/37bdf259646235cfe1ede7dd3f7fc5905c7a4772/types%2Freact-component-benchmark%2Ftslint.json",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Freact-component-benchmark%2Ftslint.json?ref=37bdf259646235cfe1ede7dd3f7fc5905c7a4772",
        "patch": "@@ -0,0 +1 @@\n+{ \"extends\": \"dtslint/dt.json\" }"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/49076",
    "repository_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped",
    "labels_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/49076/labels{/name}",
    "comments_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/49076/comments",
    "events_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/49076/events",
    "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/49076",
    "id": 728848087,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTA5NDc0NDY3",
    "number": 49076,
    "title": "fix(benchmark): update benchmark types to match release 2.1.4",
    "user": {
      "login": "makepanic",
      "id": 1205444,
      "node_id": "MDQ6VXNlcjEyMDU0NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1205444?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makepanic",
      "html_url": "https://github.com/makepanic",
      "followers_url": "https://api.github.com/users/makepanic/followers",
      "following_url": "https://api.github.com/users/makepanic/following{/other_user}",
      "gists_url": "https://api.github.com/users/makepanic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makepanic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makepanic/subscriptions",
      "organizations_url": "https://api.github.com/users/makepanic/orgs",
      "repos_url": "https://api.github.com/users/makepanic/repos",
      "events_url": "https://api.github.com/users/makepanic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makepanic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 697018972,
        "node_id": "MDU6TGFiZWw2OTcwMTg5NzI=",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Self%20Merge",
        "name": "Self Merge",
        "color": "000000",
        "default": false,
        "description": "This PR can now be self-merged by the PR author or an owner"
      },
      {
        "id": 905334095,
        "node_id": "MDU6TGFiZWw5MDUzMzQwOTU=",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Owner%20Approved",
        "name": "Owner Approved",
        "color": "0e8a16",
        "default": false,
        "description": "A listed owner of this package signed off on the pull request."
      },
      {
        "id": 1596194744,
        "node_id": "MDU6TGFiZWwxNTk2MTk0NzQ0",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Perf:%20Same",
        "name": "Perf: Same",
        "color": "7CB772",
        "default": false,
        "description": "typescript-bot determined that this PR will not significantly impact compilation performance."
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-10-24T18:30:59Z",
    "updated_at": "2020-11-01T02:16:13Z",
    "closed_at": "2020-11-01T02:11:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/pulls/49076",
      "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/49076",
      "diff_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/49076.diff",
      "patch_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/49076.patch",
      "merged_at": "2020-11-01T02:11:06Z"
    },
    "body": "Please fill in this template.\r\n\r\n- [x] Use a meaningful title for the pull request. Include the name of the package modified.\r\n- [x] Test the change in your own code. (Compile and run.)\r\n- [x] Add or edit tests to reflect the change. (Run with `npm test YOUR_PACKAGE_NAME`.)\r\n- [x] Follow the advice from the [readme](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#make-a-pull-request).\r\n- [x] Avoid [common mistakes](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#common-mistakes).\r\n- [x] Run `npm run lint package-name` (or `tsc` if no `tslint.json` is present).\r\n\r\nSelect one of these and delete the others:\r\n\r\nIf changing an existing definition:\r\n- [x] Provide a URL to documentation or source code which provides context for the suggested changes: <<url here>>\r\n\r\nThe current types where for benchmark@1.0.0 which was [released in January 2016](https://github.com/bestiejs/benchmark.js/releases/tag/1.0.0). I've updated them to match the latest benchmark release 2.1.4 which was [released in March 2017](https://github.com/bestiejs/benchmark.js/releases/tag/2.1.4).\r\n\r\nThere were various changes between the versions which resulted in breaking changes, e.g. [removal of `pluck`](https://github.com/bestiejs/benchmark.js/commit/37dc7b083a363bd4b96c1431600caea145e4377a).\r\nI wasn't able to find atomic commits for each change so I mostly relied on [comparing 1.0.0 with 2.1.4](https://github.com/bestiejs/benchmark.js/compare/1.0.0...2.1.4).\r\n\r\nHere are the current field and methods:\r\n* [Benchmark.Options fields](https://github.com/bestiejs/benchmark.js/blob/master/benchmark.js#L2133-L2298) (including Benchmark.Platform fields\r\n* [Benchmark static methods](https://github.com/bestiejs/benchmark.js/blob/master/benchmark.js#L2300-L2307)\r\n* [Benchmark static methods copied from lodash](https://github.com/bestiejs/benchmark.js/blob/master/benchmark.js#L2310-L2312)\r\n* [Benchmark instance fields](https://github.com/bestiejs/benchmark.js/blob/master/benchmark.js#L2316-L2558)\r\n* [Benchmark instance methods](https://github.com/bestiejs/benchmark.js/blob/master/benchmark.js#L2560-L2571)\r\n* [Deferred instance fields and methods](https://github.com/bestiejs/benchmark.js/blob/master/benchmark.js#L2575-L2612)\r\n* [Event instance fields](https://github.com/bestiejs/benchmark.js/blob/master/benchmark.js#L2616-L2673)\r\n* [Suite instance fields and methods](https://github.com/bestiejs/benchmark.js/blob/master/benchmark.js#L2697-L2744)\r\n* [Support fields](https://github.com/bestiejs/benchmark.js/blob/master/benchmark.js#L195-L235)\r\n\r\nNote: I reordered some fields and methods because it was easier to make sure that nothing is missing from the source if it's in the same order.\r\n\r\n- [x] If this PR brings the type definitions up to date with a new version of the JS library, update the version number in the header.\r\n- [x] Include [tests for your changes](https://github.com/DefinitelyTyped/DefinitelyTyped#testing)\r\n- [ ] If you are making substantial changes, consider adding a `tslint.json` containing `{ \"extends\": \"dtslint/dt.json\" }`. If for reason the any rule need to be disabled, disable it for that line using `// tslint:disable-next-line [ruleName]` and not for whole package so that the need for disabling can be reviewed.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/49076/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/49076/timeline",
    "performed_via_github_app": null,
    "state_reason": null,
    "score": 1,
    "files": [
      {
        "sha": "106dee781eef0ec89b788cba5da62546ee2a5734",
        "filename": "types/benchmark/benchmark-tests.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/ebfd7e425de3657a1bd4e11a5595ab458e8954e9/types%2Fbenchmark%2Fbenchmark-tests.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/ebfd7e425de3657a1bd4e11a5595ab458e8954e9/types%2Fbenchmark%2Fbenchmark-tests.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fbenchmark%2Fbenchmark-tests.ts?ref=ebfd7e425de3657a1bd4e11a5595ab458e8954e9",
        "patch": "@@ -4,23 +4,23 @@ var suite = new Benchmark.Suite;\n \n // add tests\n suite.add('RegExp#test', function() {\n-  /o/.test('Hello World!');\n+    /o/.test('Hello World!');\n })\n-.add('String#indexOf', function() {\n-  'Hello World!'.indexOf('o') > -1;\n-})\n-.add('String#match', function() {\n-  !!'Hello World!'.match(/o/);\n-})\n-// add listeners\n-.on('cycle', function(event: {target: any}) {\n-  console.log(String(event.target));\n-})\n-.on('complete', function() {\n-  console.log('Fastest is ' + this.filter('fastest').pluck('name'));\n-})\n-// run async\n-.run({ 'async': true });\n+    .add('String#indexOf', function() {\n+        'Hello World!'.indexOf('o') > -1;\n+    })\n+    .add('String#match', function() {\n+        !!'Hello World!'.match(/o/);\n+    })\n+    // add listeners\n+    .on('cycle', function(event: Benchmark.Event) {\n+        console.log(String(event.target));\n+    })\n+    .on('complete', function(this: Benchmark.Suite) {\n+        console.log('Fastest is ' + this.filter('fastest').map('name'));\n+    })\n+    // run async\n+    .run({ 'async': true });\n \n var fn: Function;\n var onStart: Function;\n@@ -44,7 +44,7 @@ var bench = new Benchmark('foo', fn);\n // or with options\n var bench = new Benchmark('foo', fn, {\n \n-  // displayed by Benchmark#toString if `name` is not available\n+  // displayed by `Benchmark#toString` if `name` is not available\n   'id': 'xyz',\n \n   // called when the benchmark starts running\n@@ -79,8 +79,8 @@ var bench = new Benchmark('foo', {\n   'defer': true,\n \n   // benchmark test function\n-  'fn': function(deferred: {resolve(): void}) {\n-    // call resolve() when the deferred test is finished\n+  'fn': function(deferred: Benchmark.Deferred) {\n+    // call `Deferred#resolve` when the deferred test is finished\n     deferred.resolve();\n   }\n });\n@@ -97,7 +97,7 @@ var bench = new Benchmark({\n \n // a test’s `this` binding is set to the benchmark instance\n var bench = new Benchmark('foo', function() {\n-  'My name is '.concat(this.name); // My name is foo\n+  'My name is '.concat(this.name); // \"My name is foo\"\n });\n \n // get odd numbers"
      },
      {
        "sha": "6194d332994fa59b1dd115bfc8750ded64ba7231",
        "filename": "types/benchmark/index.d.ts",
        "status": "modified",
        "additions": 35,
        "deletions": 38,
        "changes": 73,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/ebfd7e425de3657a1bd4e11a5595ab458e8954e9/types%2Fbenchmark%2Findex.d.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/ebfd7e425de3657a1bd4e11a5595ab458e8954e9/types%2Fbenchmark%2Findex.d.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fbenchmark%2Findex.d.ts?ref=ebfd7e425de3657a1bd4e11a5595ab458e8954e9",
        "patch": "@@ -1,4 +1,4 @@\n-// Type definitions for Benchmark v1.0.0\n+// Type definitions for Benchmark v2.1.4\n // Project: https://benchmarkjs.com\n // Definitions by: Asana <https://asana.com>\n //                 Charlie Fish <https://github.com/fishcharlie>\n@@ -7,21 +7,19 @@\n \n \n declare class Benchmark {\n-    static deepClone<T>(value: T): T;\n-    static each(obj: Object | any[], callback: Function, thisArg?: any): void;\n-    static extend(destination: Object, ...sources: Object[]): Object;\n     static filter<T>(arr: T[], callback: (value: T) => any, thisArg?: any): T[];\n     static filter<T>(arr: T[], filter: string, thisArg?: any): T[];\n-    static forEach<T>(arr: T[], callback: (value: T) => any, thisArg?: any): void;\n     static formatNumber(num: number): string;\n+    static join(obj: Object, separator1?: string, separator2?: string): string;\n+    static invoke(benches: Benchmark[], name: string | Object, ...args: any[]): any[];\n+    static runInContext(context: Object): Function;\n+\n+    static each(obj: Object | any[], callback: Function, thisArg?: any): void;\n+    static forEach<T>(arr: T[], callback: (value: T) => any, thisArg?: any): void;\n     static forOwn(obj: Object, callback: Function, thisArg?: any): void;\n-    static hasKey(obj: Object, key: string): boolean;\n+    static has(obj: Object, path: any[] | string): boolean;\n     static indexOf<T>(arr: T[], value: T, fromIndex?: number): number;\n-    static interpolate(template: string, values: Object): string;\n-    static invoke(benches: Benchmark[], name: string | Object, ...args: any[]): any[];\n-    static join(obj: Object, separator1?: string, separator2?: string): string;\n     static map<T, K>(arr: T[], callback: (value: T) => K, thisArg?: any): K[];\n-    static pluck<T, K>(arr: T[], key: string): K[];\n     static reduce<T, K>(arr: T[], callback: (accumulator: K, value: T) => K, thisArg?: any): K;\n \n     static options: Benchmark.Options;\n@@ -34,13 +32,15 @@ declare class Benchmark {\n     constructor(name: string, options?: Benchmark.Options);\n     constructor(options: Benchmark.Options);\n \n-    aborted: boolean;\n-    compiled: Function | string;\n+    id: number;\n+    name: string;\n     count: number;\n     cycles: number;\n+    hz: number;\n+    compiled: Function | string;\n     error: Error;\n     fn: Function | string;\n-    hz: number;\n+    aborted: boolean;\n     running: boolean;\n     setup: Function | string;\n     teardown: Function | string;\n@@ -88,37 +88,28 @@ declare namespace Benchmark {\n     export interface Platform {\n         description: string;\n         layout: string;\n-        manufacturer: string;\n+        product: string;\n         name: string;\n+        manufacturer: string;\n         os: string;\n         prerelease: string;\n-        product: string;\n         version: string;\n         toString(): string;\n     }\n \n     export interface Support {\n-        air: boolean;\n-        argumentsClass: boolean;\n         browser: boolean;\n-        charByIndex: boolean;\n-        charByOwnIndex: boolean;\n-        decompilation: boolean;\n-        descriptors: boolean;\n-        getAllKeys: boolean;\n-        iteratesOwnFirst: boolean;\n-        java: boolean;\n-        nodeClass: boolean;\n         timeout: boolean;\n+        decompilation: boolean;\n     }\n \n     export interface Stats {\n-        deviation: number;\n-        mean: number;\n         moe: number;\n         rme: number;\n-        sample: any[];\n         sem: number;\n+        deviation: number;\n+        mean: number;\n+        sample: any[];\n         variance: number;\n     }\n \n@@ -136,6 +127,8 @@ declare namespace Benchmark {\n         cycles: number;\n         elapsed: number;\n         timeStamp: number;\n+\n+        resolve(): void;\n     }\n \n     export interface Target {\n@@ -176,9 +169,10 @@ declare namespace Benchmark {\n \n         constructor(name?: string, options?: Options);\n \n-        aborted: boolean;\n         length: number;\n+        aborted: boolean;\n         running: boolean;\n+\n         abort(): Suite;\n         add(name: string, fn: Function | string, options?: Options): Suite;\n         add(fn: Function | string, options?: Options): Suite;\n@@ -187,27 +181,30 @@ declare namespace Benchmark {\n         clone(options: Options): Suite;\n         emit(type: string | Object): any;\n         filter(callback: Function | string): Suite;\n-        forEach(callback: Function): Suite;\n-        indexOf(value: any): number;\n-        invoke(name: string, ...args: any[]): any[];\n         join(separator?: string): string;\n         listeners(type: string): Function[];\n-        map(callback: Function): any[];\n         off(type?: string, callback?: Function): Suite;\n         off(types: string[]): Suite;\n         on(type?: string, callback?: Function): Suite;\n         on(types: string[]): Suite;\n-        pluck(property: string): any[];\n-        pop(): Function;\n         push(benchmark: Benchmark): number;\n-        reduce<T>(callback: Function, accumulator: T): T;\n         reset(): Suite;\n-        reverse(): any[];\n         run(options?: Options): Suite;\n+        reverse(): any[];\n+        sort(compareFn: (a: any, b: any) => number): any[];\n+        splice(start: number, deleteCount?: number): any[];\n+        unshift(benchmark: Benchmark): number;\n+\n+        each(callback: Function): Suite;\n+        forEach(callback: Function): Suite;\n+        indexOf(value: any): number;\n+        map(callback: Function | string): any[];\n+        reduce<T>(callback: Function, accumulator: T): T;\n+\n+        pop(): Function;\n         shift(): Benchmark;\n         slice(start: number, end: number): any[];\n         slice(start: number, deleteCount: number, ...values: any[]): any[];\n-        unshift(benchmark: Benchmark): number;\n     }\n }\n "
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/47986",
    "repository_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped",
    "labels_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/47986/labels{/name}",
    "comments_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/47986/comments",
    "events_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/47986/events",
    "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47986",
    "id": 706970735,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDkxNDQ2NDY2",
    "number": 47986,
    "title": "[benchmark] Remove unused lint exceptions",
    "user": {
      "login": "jablko",
      "id": 78493,
      "node_id": "MDQ6VXNlcjc4NDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/78493?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jablko",
      "html_url": "https://github.com/jablko",
      "followers_url": "https://api.github.com/users/jablko/followers",
      "following_url": "https://api.github.com/users/jablko/following{/other_user}",
      "gists_url": "https://api.github.com/users/jablko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jablko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jablko/subscriptions",
      "organizations_url": "https://api.github.com/users/jablko/orgs",
      "repos_url": "https://api.github.com/users/jablko/repos",
      "events_url": "https://api.github.com/users/jablko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jablko/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2154816549,
        "node_id": "MDU6TGFiZWwyMTU0ODE2NTQ5",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Check%20Config",
        "name": "Check Config",
        "color": "B7A845",
        "default": false,
        "description": "Changes a module config files"
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-09-23T03:11:43Z",
    "updated_at": "2020-09-23T21:24:53Z",
    "closed_at": "2020-09-23T21:24:53Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/pulls/47986",
      "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47986",
      "diff_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47986.diff",
      "patch_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47986.patch",
      "merged_at": "2020-09-23T21:24:53Z"
    },
    "body": "#47588",
    "reactions": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/47986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/47986/timeline",
    "performed_via_github_app": null,
    "state_reason": null,
    "score": 1,
    "files": [
      {
        "sha": "a1185a9fe69d53f2ea266635e8c76e754e00d0ce",
        "filename": "types/benchmark/tslint.json",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/4eb8bf228289f01324c94a2e4b8abf61ce3da563/types%2Fbenchmark%2Ftslint.json",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/4eb8bf228289f01324c94a2e4b8abf61ce3da563/types%2Fbenchmark%2Ftslint.json",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fbenchmark%2Ftslint.json?ref=4eb8bf228289f01324c94a2e4b8abf61ce3da563",
        "patch": "@@ -2,13 +2,11 @@\n     \"extends\": \"dtslint/dt.json\",\n     \"rules\": {\n         \"ban-types\": false,\n-        \"callable-types\": false,\n         \"dt-header\": false,\n         \"new-parens\": false,\n         \"no-consecutive-blank-lines\": false,\n         \"no-duplicate-variable\": false,\n         \"no-padding\": false,\n-        \"no-redundant-jsdoc\": false,\n         \"no-unnecessary-generics\": false,\n         \"no-unnecessary-type-assertion\": false,\n         \"no-var-keyword\": false,\n@@ -17,7 +15,6 @@\n         \"one-variable-per-declaration\": false,\n         \"only-arrow-functions\": false,\n         \"prefer-const\": false,\n-        \"prefer-method-signature\": false,\n         \"strict-export-declare-modifiers\": false,\n         \"unified-signatures\": false\n     }"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/44282",
    "repository_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped",
    "labels_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/44282/labels{/name}",
    "comments_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/44282/comments",
    "events_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/44282/events",
    "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/44282",
    "id": 607920522,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDA5ODAxMzk2",
    "number": 44282,
    "title": "[benchmark] Adding typings for event.target",
    "user": {
      "login": "fishcharlie",
      "id": 860375,
      "node_id": "MDQ6VXNlcjg2MDM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/860375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fishcharlie",
      "html_url": "https://github.com/fishcharlie",
      "followers_url": "https://api.github.com/users/fishcharlie/followers",
      "following_url": "https://api.github.com/users/fishcharlie/following{/other_user}",
      "gists_url": "https://api.github.com/users/fishcharlie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fishcharlie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fishcharlie/subscriptions",
      "organizations_url": "https://api.github.com/users/fishcharlie/orgs",
      "repos_url": "https://api.github.com/users/fishcharlie/repos",
      "events_url": "https://api.github.com/users/fishcharlie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fishcharlie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1596194744,
        "node_id": "MDU6TGFiZWwxNTk2MTk0NzQ0",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Perf:%20Same",
        "name": "Perf: Same",
        "color": "7CB772",
        "default": false,
        "description": "typescript-bot determined that this PR will not significantly impact compilation performance."
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2020-04-27T23:33:23Z",
    "updated_at": "2020-05-13T06:12:57Z",
    "closed_at": "2020-05-12T18:35:45Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/pulls/44282",
      "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/44282",
      "diff_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/44282.diff",
      "patch_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/44282.patch",
      "merged_at": "2020-05-12T18:35:45Z"
    },
    "body": "Please fill in this template.\r\n\r\n- [x] Use a meaningful title for the pull request. Include the name of the package modified.\r\n- [x] Test the change in your own code. (Compile and run.)\r\n- [x] Add or edit tests to reflect the change. (Run with `npm test`.)\r\n- [x] Follow the advice from the [readme](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#make-a-pull-request).\r\n- [x] Avoid [common mistakes](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#common-mistakes).\r\n- [x] Run `npm run lint package-name` (or `tsc` if no `tslint.json` is present).\r\n\r\nSelect one of these and delete the others:\r\n\r\nIf changing an existing definition:\r\n- [x] Provide a URL to documentation or source code which provides context for the suggested changes: https://benchmarkjs.com/docs#Event_prototype_target\r\n- [ ] If this PR brings the type definitions up to date with a new version of the JS library, update the version number in the header.\r\n- [x] Include [tests for your changes](https://github.com/DefinitelyTyped/DefinitelyTyped#testing)\r\n- [ ] If you are making substantial changes, consider adding a `tslint.json` containing `{ \"extends\": \"dtslint/dt.json\" }`. If for reason the any rule need to be disabled, disable it for that line using `// tslint:disable-next-line [ruleName]` and not for whole package so that the need for disabling can be reviewed.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/44282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/44282/timeline",
    "performed_via_github_app": null,
    "state_reason": null,
    "score": 1,
    "files": [
      {
        "sha": "09481f35360a7794243510e1813db9b9f33edb20",
        "filename": "types/benchmark/benchmark-tests.ts",
        "status": "modified",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/25794304acf8c1fd70712bd068beb07b0e09755e/types%2Fbenchmark%2Fbenchmark-tests.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/25794304acf8c1fd70712bd068beb07b0e09755e/types%2Fbenchmark%2Fbenchmark-tests.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fbenchmark%2Fbenchmark-tests.ts?ref=25794304acf8c1fd70712bd068beb07b0e09755e",
        "patch": "@@ -193,6 +193,40 @@ bench.off();\n // register a listener for an event type\n bench.on('cycle', listener);\n \n+// ensure target is correct type\n+bench.on('cycle', (event: Benchmark.Event) => {\n+  const target = event.target;\n+  target.options;\n+  target.async;\n+  target.defer;\n+  target.delay;\n+  target.initCount;\n+  target.maxTime;\n+  target.minSamples;\n+  target.minTime;\n+  target.name;\n+  target.fn;\n+  target.id;\n+  target.stats;\n+  target.stats.moe;\n+  target.stats.rme;\n+  target.stats.sem;\n+  target.stats.deviation;\n+  target.stats.mean;\n+  target.stats.sample;\n+  target.stats.variances;\n+  target.times;\n+  target.times.cycle;\n+  target.times.elapsed;\n+  target.times.period;\n+  target.times.timeStamp;\n+  target.running;\n+  target.count;\n+  target.compiled;\n+  target.cycles;\n+  target.hz;\n+});\n+\n // register a listener for multiple event types\n bench.on('start cycle', listener);\n "
      },
      {
        "sha": "68ed196fc019e59f3cdff28a60ccdaa9d1c76226",
        "filename": "types/benchmark/index.d.ts",
        "status": "modified",
        "additions": 37,
        "deletions": 2,
        "changes": 39,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/25794304acf8c1fd70712bd068beb07b0e09755e/types%2Fbenchmark%2Findex.d.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/25794304acf8c1fd70712bd068beb07b0e09755e/types%2Fbenchmark%2Findex.d.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fbenchmark%2Findex.d.ts?ref=25794304acf8c1fd70712bd068beb07b0e09755e",
        "patch": "@@ -1,6 +1,7 @@\n // Type definitions for Benchmark v1.0.0\n-// Project: http://benchmarkjs.com\n+// Project: https://benchmarkjs.com\n // Definitions by: Asana <https://asana.com>\n+//                 Charlie Fish <https://github.com/fishcharlie>\n // Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n \n \n@@ -136,14 +137,48 @@ declare namespace Benchmark {\n         timeStamp: number;\n     }\n \n+    export interface Target {\n+        options: Options;\n+        async?: boolean;\n+        defer?: boolean;\n+        delay?: number;\n+        initCount?: number;\n+        maxTime?: number;\n+        minSamples?: number;\n+        minTime?: number;\n+        name?: string;\n+        fn?: Function;\n+        id: number;\n+        stats?: {\n+            moe?: number;\n+            rme?: number;\n+            sem?: number;\n+            deviation?: number;\n+            mean?: number;\n+            sample?: any[];\n+            variances?: number;\n+        };\n+        times?: {\n+            cycle?: number;\n+            elapsed?: number;\n+            period?: number;\n+            timeStamp?: number;\n+        };\n+        running: boolean;\n+        count?: number;\n+        compiled?: Function;\n+        cycles?: number;\n+        hz?: number;\n+    }\n+\n     export class Event {\n         constructor(type: string | Object);\n \n         aborted: boolean;\n         cancelled: boolean;\n         currentTarget: Object;\n         result: any;\n-        target: Object;\n+        target: Target;\n         timeStamp: number;\n         type: string;\n     }"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/44710",
    "repository_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped",
    "labels_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/44710/labels{/name}",
    "comments_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/44710/comments",
    "events_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/44710/events",
    "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/44710",
    "id": 617910992,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDE3NzM5OTU1",
    "number": 44710,
    "title": "benchmark: switch to using Stats and Times interfaces.",
    "user": {
      "login": "blair",
      "id": 2297,
      "node_id": "MDQ6VXNlcjIyOTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blair",
      "html_url": "https://github.com/blair",
      "followers_url": "https://api.github.com/users/blair/followers",
      "following_url": "https://api.github.com/users/blair/following{/other_user}",
      "gists_url": "https://api.github.com/users/blair/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blair/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blair/subscriptions",
      "organizations_url": "https://api.github.com/users/blair/orgs",
      "repos_url": "https://api.github.com/users/blair/repos",
      "events_url": "https://api.github.com/users/blair/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blair/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 697018972,
        "node_id": "MDU6TGFiZWw2OTcwMTg5NzI=",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Self%20Merge",
        "name": "Self Merge",
        "color": "000000",
        "default": false,
        "description": "This PR can now be self-merged by the PR author or an owner"
      },
      {
        "id": 905334095,
        "node_id": "MDU6TGFiZWw5MDUzMzQwOTU=",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Owner%20Approved",
        "name": "Owner Approved",
        "color": "0e8a16",
        "default": false,
        "description": "A listed owner of this package signed off on the pull request."
      },
      {
        "id": 1596194744,
        "node_id": "MDU6TGFiZWwxNTk2MTk0NzQ0",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Perf:%20Same",
        "name": "Perf: Same",
        "color": "7CB772",
        "default": false,
        "description": "typescript-bot determined that this PR will not significantly impact compilation performance."
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-05-14T04:16:52Z",
    "updated_at": "2020-05-15T04:28:08Z",
    "closed_at": "2020-05-15T03:27:56Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/pulls/44710",
      "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/44710",
      "diff_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/44710.diff",
      "patch_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/44710.patch",
      "merged_at": "2020-05-15T03:27:56Z"
    },
    "body": "This also fixes an issue with the previous `variances` property which\r\ndoesn't exist in the benchmark module source code.\r\n\r\nPlease fill in this template.\r\n\r\n- [x] Use a meaningful title for the pull request. Include the name of the package modified.\r\n- [x] Test the change in your own code. (Compile and run.)\r\n- [x] Add or edit tests to reflect the change. (Run with `npm test`.)\r\n- [x] Follow the advice from the [readme](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#make-a-pull-request).\r\n- [x] Avoid [common mistakes](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#common-mistakes).\r\n- [x] Run `npm run lint package-name` (or `tsc` if no `tslint.json` is present).\r\n\r\nSelect one of these and delete the others:\r\n\r\nIf changing an existing definition:\r\n- [x] Include [tests for your changes](https://github.com/DefinitelyTyped/DefinitelyTyped#testing)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/44710/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/44710/timeline",
    "performed_via_github_app": null,
    "state_reason": null,
    "score": 1,
    "files": [
      {
        "sha": "f70f17b95208ee5749ba9df2eb4461a8d475a452",
        "filename": "types/benchmark/benchmark-tests.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/cfae75f4eba870bbb55283525bd4175ddda38c56/types%2Fbenchmark%2Fbenchmark-tests.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/cfae75f4eba870bbb55283525bd4175ddda38c56/types%2Fbenchmark%2Fbenchmark-tests.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fbenchmark%2Fbenchmark-tests.ts?ref=cfae75f4eba870bbb55283525bd4175ddda38c56",
        "patch": "@@ -214,7 +214,7 @@ bench.on('cycle', (event: Benchmark.Event) => {\n   target.stats.deviation;\n   target.stats.mean;\n   target.stats.sample;\n-  target.stats.variances;\n+  target.stats.variance;\n   target.times;\n   target.times.cycle;\n   target.times.elapsed;"
      },
      {
        "sha": "d3c3dfa51040be21829d20ac34739a741847ab0b",
        "filename": "types/benchmark/index.d.ts",
        "status": "modified",
        "additions": 3,
        "deletions": 15,
        "changes": 18,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/cfae75f4eba870bbb55283525bd4175ddda38c56/types%2Fbenchmark%2Findex.d.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/cfae75f4eba870bbb55283525bd4175ddda38c56/types%2Fbenchmark%2Findex.d.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fbenchmark%2Findex.d.ts?ref=cfae75f4eba870bbb55283525bd4175ddda38c56",
        "patch": "@@ -2,6 +2,7 @@\n // Project: https://benchmarkjs.com\n // Definitions by: Asana <https://asana.com>\n //                 Charlie Fish <https://github.com/fishcharlie>\n+//                 Blair Zajac <https://github.com/blair>\n // Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n \n \n@@ -149,21 +150,8 @@ declare namespace Benchmark {\n         name?: string;\n         fn?: Function;\n         id: number;\n-        stats?: {\n-            moe?: number;\n-            rme?: number;\n-            sem?: number;\n-            deviation?: number;\n-            mean?: number;\n-            sample?: any[];\n-            variances?: number;\n-        };\n-        times?: {\n-            cycle?: number;\n-            elapsed?: number;\n-            period?: number;\n-            timeStamp?: number;\n-        };\n+        stats?: Stats;\n+        times?: Times;\n         running: boolean;\n         count?: number;\n         compiled?: Function;"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38631",
    "repository_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped",
    "labels_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38631/labels{/name}",
    "comments_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38631/comments",
    "events_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38631/events",
    "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38631",
    "id": 498907908,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzIxNzM4NjQ0",
    "number": 38631,
    "title": "msgpack-lite - Typings for individual Decoder factory",
    "user": {
      "login": "marco6",
      "id": 719256,
      "node_id": "MDQ6VXNlcjcxOTI1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/719256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marco6",
      "html_url": "https://github.com/marco6",
      "followers_url": "https://api.github.com/users/marco6/followers",
      "following_url": "https://api.github.com/users/marco6/following{/other_user}",
      "gists_url": "https://api.github.com/users/marco6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marco6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marco6/subscriptions",
      "organizations_url": "https://api.github.com/users/marco6/orgs",
      "repos_url": "https://api.github.com/users/marco6/repos",
      "events_url": "https://api.github.com/users/marco6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marco6/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 905334095,
        "node_id": "MDU6TGFiZWw5MDUzMzQwOTU=",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Owner%20Approved",
        "name": "Owner Approved",
        "color": "0e8a16",
        "default": false,
        "description": "A listed owner of this package signed off on the pull request."
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2019-09-26T14:05:43Z",
    "updated_at": "2019-09-26T19:09:07Z",
    "closed_at": "2019-09-26T19:09:07Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/pulls/38631",
      "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38631",
      "diff_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38631.diff",
      "patch_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/38631.patch",
      "merged_at": "2019-09-26T19:09:07Z"
    },
    "body": "Decoder can be built standalone (is part of the actual public interface\r\nand part of the performance-test interface described in the README.md of\r\nthe project). Moreover, Decoder is an event emitter. The interface has\r\nbeen update accordingly.\r\n\r\nPlease fill in this template.\r\n\r\n- [x] Use a meaningful title for the pull request. Include the name of the package modified.\r\n- [x] Test the change in your own code. (Compile and run.)\r\n- [x] Add or edit tests to reflect the change. (Run with `npm test`.)\r\n- [x] Follow the advice from the [readme](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#make-a-pull-request).\r\n- [x] Avoid [common mistakes](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#common-mistakes).\r\n- [ ] Run `npm run lint package-name` (or `tsc` if no `tslint.json` is present).\r\n- [x] Provide a URL to documentation or source code which provides context for the suggested changes: https://github.com/kawanet/msgpack-lite#benchmarks (this is not really documented, but part of the test cases and part of the tests) https://github.com/kawanet/msgpack-lite/blob/master/test/13.decoder.js\r\n- [ ] If this PR brings the type definitions up to date with a new version of the JS library, update the version number in the header.\r\n- [ ] If you are making substantial changes, consider adding a `tslint.json` containing `{ \"extends\": \"dtslint/dt.json\" }`. If for reason the any rule need to be disabled, disable it for that line using `// tslint:disable-next-line [ruleName]` and not for whole package so that the need for disabling can be reviewed.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/38631/timeline",
    "performed_via_github_app": null,
    "state_reason": null,
    "score": 1,
    "files": [
      {
        "sha": "cb01aab422c4c50f61a20d6fff483508050a6524",
        "filename": "types/msgpack-lite/index.d.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/1c49bfe664ffaa7f93232de5f2019a7d50fcec1b/types%2Fmsgpack-lite%2Findex.d.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/1c49bfe664ffaa7f93232de5f2019a7d50fcec1b/types%2Fmsgpack-lite%2Findex.d.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fmsgpack-lite%2Findex.d.ts?ref=1c49bfe664ffaa7f93232de5f2019a7d50fcec1b",
        "patch": "@@ -5,6 +5,7 @@\n \n /// <reference types=\"node\" />\n import * as stream from 'stream';\n+import { EventEmitter } from 'events';\n \n /**\n  * encode from JS Object to MessagePack\n@@ -84,7 +85,9 @@ export interface Encoder {\n   end(chunk: any): void;\n }\n \n-export interface Decoder {\n+export function Decoder(options?: DecoderOptions): Decoder;\n+\n+export interface Decoder extends EventEmitter {\n   bufferish: any;\n   offset: number;\n   fetch(): void;"
      },
      {
        "sha": "975e7e0c7f8c5489c6b806793b14efd296f954be",
        "filename": "types/msgpack-lite/msgpack-lite-tests.ts",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/1c49bfe664ffaa7f93232de5f2019a7d50fcec1b/types%2Fmsgpack-lite%2Fmsgpack-lite-tests.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/1c49bfe664ffaa7f93232de5f2019a7d50fcec1b/types%2Fmsgpack-lite%2Fmsgpack-lite-tests.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fmsgpack-lite%2Fmsgpack-lite-tests.ts?ref=1c49bfe664ffaa7f93232de5f2019a7d50fcec1b",
        "patch": "@@ -84,3 +84,18 @@ function customExtensionTypes() {\n     return new MyVector(array[0], array[1]); // return Object deserialized\n   }\n }\n+\n+// https://github.com/kawanet/msgpack-lite#benchmarks\n+// (this is not well documented, but in the test there is an example usage.)\n+function standaloneDecoder() {\n+  const decoder = msgpack.Decoder();\n+  const object = { test: \"Object\" };\n+  const encoded = msgpack.encode(object);\n+  decoder.on('data', (obj) => {\n+    if (object.test !== obj.test) {\n+      throw Error();\n+    }\n+  });\n+\n+  decoder.push(encoded);\n+}"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/21410",
    "repository_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped",
    "labels_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/21410/labels{/name}",
    "comments_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/21410/comments",
    "events_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/21410/events",
    "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21410",
    "id": 272981978,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxOTQ0OTM5",
    "number": 21410,
    "title": "[benchmark] Fixed return types of on(), off().",
    "user": {
      "login": "karak",
      "id": 156341,
      "node_id": "MDQ6VXNlcjE1NjM0MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/156341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karak",
      "html_url": "https://github.com/karak",
      "followers_url": "https://api.github.com/users/karak/followers",
      "following_url": "https://api.github.com/users/karak/following{/other_user}",
      "gists_url": "https://api.github.com/users/karak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karak/subscriptions",
      "organizations_url": "https://api.github.com/users/karak/orgs",
      "repos_url": "https://api.github.com/users/karak/repos",
      "events_url": "https://api.github.com/users/karak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 646789205,
        "node_id": "MDU6TGFiZWw2NDY3ODkyMDU=",
        "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/labels/Unowned",
        "name": "Unowned",
        "color": "f9d0c4",
        "default": false,
        "description": "This PR touches a package that doesn't have any listed owners."
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-11-10T16:10:30Z",
    "updated_at": "2018-02-02T10:24:10Z",
    "closed_at": "2017-11-14T17:18:06Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/pulls/21410",
      "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21410",
      "diff_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21410.diff",
      "patch_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/21410.patch",
      "merged_at": "2017-11-14T17:18:06Z"
    },
    "body": "The methods on, off returns this, Benchmark or Benchmark.Suite respectively.\r\n\r\nPlease fill in this template.\r\n\r\n- [x] Use a meaningful title for the pull request. Include the name of the package modified.\r\n- [x] Test the change in your own code. (Compile and run.)\r\n- [x] Follow the advice from the [readme](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#make-a-pull-request).\r\n  ...but we had better adopt `this` rather than its class name all around.\r\n- [x] Avoid [common mistakes](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/README.md#common-mistakes).\r\n- [x] Run `npm run lint package-name` (or `tsc` if no `tslint.json` is present).\r\n\r\nSelect one of these and delete the others:\r\nIf changing an existing definition:\r\n- [x] Provide a URL to documentation or source code which provides context for the suggested changes: https://github.com/bestiejs/benchmark.js/blob/master/benchmark.js#L1289 and https://github.com/bestiejs/benchmark.js/blob/master/benchmark.js#L1317\r\n- [ ] Increase the version number in the header if appropriate.\r\n- [ ] If you are making substantial changes, consider adding a `tslint.json` containing `{ \"extends\": \"dtslint/dt.json\" }`.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/21410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/21410/timeline",
    "performed_via_github_app": null,
    "state_reason": null,
    "score": 1,
    "files": [
      {
        "sha": "cb02940b37b26efe0208b5cdfbbd4519ad24c5bd",
        "filename": "types/benchmark/benchmark-tests.ts",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/c3b8d5b4cf2c3de51a9a43805c0d5f474de96671/types%2Fbenchmark%2Fbenchmark-tests.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/c3b8d5b4cf2c3de51a9a43805c0d5f474de96671/types%2Fbenchmark%2Fbenchmark-tests.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fbenchmark%2Fbenchmark-tests.ts?ref=c3b8d5b4cf2c3de51a9a43805c0d5f474de96671",
        "patch": "@@ -229,6 +229,27 @@ suite.add({\n   'onComplete': onComplete\n });\n \n+// unregister a listener for an event type\n+suite.off('cycle', listener) as Benchmark.Suite;\n+\n+// unregister a listener for multiple event types\n+suite.off('start cycle', listener) as Benchmark.Suite;\n+\n+// unregister all listeners for an event type\n+suite.off('cycle') as Benchmark.Suite;\n+\n+// unregister all listeners for multiple event types\n+suite.off('start cycle complete') as Benchmark.Suite;\n+\n+// unregister all listeners for all event types\n+suite.off() as Benchmark.Suite;\n+\n+// register a listener for an event type\n+suite.on('cycle', listener) as Benchmark.Suite;\n+\n+// register a listener for multiple event types\n+suite.on('start cycle', listener) as Benchmark.Suite;\n+\n // basic usage\n suite.run();\n "
      },
      {
        "sha": "d8c72aef682da7410261fd4b2ac06664bf77f550",
        "filename": "types/benchmark/index.d.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/c3b8d5b4cf2c3de51a9a43805c0d5f474de96671/types%2Fbenchmark%2Findex.d.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/c3b8d5b4cf2c3de51a9a43805c0d5f474de96671/types%2Fbenchmark%2Findex.d.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/types%2Fbenchmark%2Findex.d.ts?ref=c3b8d5b4cf2c3de51a9a43805c0d5f474de96671",
        "patch": "@@ -170,10 +170,10 @@ declare namespace Benchmark {\n         join(separator?: string): string;\n         listeners(type: string): Function[];\n         map(callback: Function): any[];\n-        off(type?: string, callback?: Function): Benchmark;\n-        off(types: string[]): Benchmark;\n-        on(type?: string, callback?: Function): Benchmark;\n-        on(types: string[]): Benchmark;\n+        off(type?: string, callback?: Function): Suite;\n+        off(types: string[]): Suite;\n+        on(type?: string, callback?: Function): Suite;\n+        on(types: string[]): Suite;\n         pluck(property: string): any[];\n         pop(): Function;\n         push(benchmark: Benchmark): number;"
      }
    ]
  },
  {
    "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/6294",
    "repository_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped",
    "labels_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/6294/labels{/name}",
    "comments_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/6294/comments",
    "events_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/6294/events",
    "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/6294",
    "id": 111497007,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDc3MTcxNjI=",
    "number": 6294,
    "title": "Add benchmark.js",
    "user": {
      "login": "pspeter3",
      "id": 607701,
      "node_id": "MDQ6VXNlcjYwNzcwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/607701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pspeter3",
      "html_url": "https://github.com/pspeter3",
      "followers_url": "https://api.github.com/users/pspeter3/followers",
      "following_url": "https://api.github.com/users/pspeter3/following{/other_user}",
      "gists_url": "https://api.github.com/users/pspeter3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pspeter3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pspeter3/subscriptions",
      "organizations_url": "https://api.github.com/users/pspeter3/orgs",
      "repos_url": "https://api.github.com/users/pspeter3/repos",
      "events_url": "https://api.github.com/users/pspeter3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pspeter3/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2015-10-14T21:26:07Z",
    "updated_at": "2015-10-16T13:01:13Z",
    "closed_at": "2015-10-16T13:01:09Z",
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/pulls/6294",
      "html_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/6294",
      "diff_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/6294.diff",
      "patch_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/pull/6294.patch",
      "merged_at": "2015-10-16T13:01:09Z"
    },
    "body": "This adds the benchmark tests.\n",
    "reactions": {
      "url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/6294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/issues/6294/timeline",
    "performed_via_github_app": null,
    "state_reason": null,
    "score": 1,
    "files": [
      {
        "sha": "363e522b0b465f01961261f5cc3c092ec5842943",
        "filename": "benchmark/benchmark-tests.ts",
        "status": "added",
        "additions": 237,
        "deletions": 0,
        "changes": 237,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/c04af9e6ad6aafd0dc041fb0125a1fb8d714ad4d/benchmark%2Fbenchmark-tests.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/c04af9e6ad6aafd0dc041fb0125a1fb8d714ad4d/benchmark%2Fbenchmark-tests.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/benchmark%2Fbenchmark-tests.ts?ref=c04af9e6ad6aafd0dc041fb0125a1fb8d714ad4d",
        "patch": "@@ -0,0 +1,237 @@\n+/// <reference path=\"./benchmark.d.ts\"/>\n+import Benchmark = require(\"benchmark\");\n+\n+var suite = new Benchmark.Suite;\n+\n+// add tests\n+suite.add('RegExp#test', function() {\n+  /o/.test('Hello World!');\n+})\n+.add('String#indexOf', function() {\n+  'Hello World!'.indexOf('o') > -1;\n+})\n+.add('String#match', function() {\n+  !!'Hello World!'.match(/o/);\n+})\n+// add listeners\n+.on('cycle', function(event: {target: any}) {\n+  console.log(String(event.target));\n+})\n+.on('complete', function() {\n+  console.log('Fastest is ' + this.filter('fastest').pluck('name'));\n+})\n+// run async\n+.run({ 'async': true });\n+\n+var fn: Function;\n+var onStart: Function;\n+var onCycle: Function;\n+var onAbort: Function;\n+var onError: Function;\n+var onReset: Function;\n+var onComplete: Function;\n+var setup: Function;\n+var teardown: Function;\n+var benches: Benchmark[];\n+var listener: Function;\n+var count: number;\n+\n+// basic usage (the `new` operator is optional)\n+var bench = new Benchmark(fn);\n+\n+// or using a name first\n+var bench = new Benchmark('foo', fn);\n+\n+// or with options\n+var bench = new Benchmark('foo', fn, {\n+\n+  // displayed by Benchmark#toString if `name` is not available\n+  'id': 'xyz',\n+\n+  // called when the benchmark starts running\n+  'onStart': onStart,\n+\n+  // called after each run cycle\n+  'onCycle': onCycle,\n+\n+  // called when aborted\n+  'onAbort': onAbort,\n+\n+  // called when a test errors\n+  'onError': onError,\n+\n+  // called when reset\n+  'onReset': onReset,\n+\n+  // called when the benchmark completes running\n+  'onComplete': onComplete,\n+\n+  // compiled/called before the test loop\n+  'setup': setup,\n+\n+  // compiled/called after the test loop\n+  'teardown': teardown\n+});\n+\n+// or name and options\n+var bench = new Benchmark('foo', {\n+\n+  // a flag to indicate the benchmark is deferred\n+  'defer': true,\n+\n+  // benchmark test function\n+  'fn': function(deferred: {resolve(): void}) {\n+    // call resolve() when the deferred test is finished\n+    deferred.resolve();\n+  }\n+});\n+\n+// or options only\n+var bench = new Benchmark({\n+\n+  // benchmark name\n+  'name': 'foo',\n+\n+  // benchmark test as a string\n+  'fn': '[1,2,3,4].sort()'\n+});\n+\n+// a test’s `this` binding is set to the benchmark instance\n+var bench = new Benchmark('foo', function() {\n+  'My name is '.concat(this.name); // My name is foo\n+});\n+\n+// get odd numbers\n+Benchmark.filter([1, 2, 3, 4, 5], function(n) {\n+  return n % 2;\n+}); // -> [1, 3, 5];\n+\n+// get fastest benchmarks\n+Benchmark.filter(benches, 'fastest');\n+\n+// get slowest benchmarks\n+Benchmark.filter(benches, 'slowest');\n+\n+// get benchmarks that completed without erroring\n+Benchmark.filter(benches, 'successful');\n+\n+// invoke `reset` on all benchmarks\n+Benchmark.invoke(benches, 'reset');\n+\n+// invoke `emit` with arguments\n+Benchmark.invoke(benches, 'emit', 'complete', listener);\n+\n+// invoke `run(true)`, treat benchmarks as a queue, and register invoke callbacks\n+Benchmark.invoke(benches, {\n+\n+  // invoke the `run` method\n+  'name': 'run',\n+\n+  // pass a single argument\n+  'args': true,\n+\n+  // treat as queue, removing benchmarks from front of `benches` until empty\n+  'queued': true,\n+\n+  // called before any benchmarks have been invoked.\n+  'onStart': onStart,\n+\n+  // called between invoking benchmarks\n+  'onCycle': onCycle,\n+\n+  // called after all benchmarks have been invoked.\n+  'onComplete': onComplete\n+});\n+\n+var element: HTMLElement;\n+// basic usage\n+var bench = new Benchmark({\n+  'setup': function() {\n+    var c = this.count,\n+      element = document.getElementById('container');\n+    while (c--) {\n+      element.appendChild(document.createElement('div'));\n+    }\n+  },\n+  'fn': function() {\n+    element.removeChild(element.lastChild);\n+  }\n+});\n+\n+// or using strings\n+var bench = new Benchmark({\n+  'setup': '\\\n+    var a = 0;\\n\\\n+    (function() {\\n\\\n+      (function() {\\n\\\n+        (function() {',\n+  'fn': 'a += 1;',\n+  'teardown': '\\\n+         }())\\n\\\n+       }())\\n\\\n+     }())'\n+});\n+\n+var bizarro = bench.clone({\n+  'name': 'doppelganger'\n+});\n+\n+// unregister a listener for an event type\n+bench.off('cycle', listener);\n+\n+// unregister a listener for multiple event types\n+bench.off('start cycle', listener);\n+\n+// unregister all listeners for an event type\n+bench.off('cycle');\n+\n+// unregister all listeners for multiple event types\n+bench.off('start cycle complete');\n+\n+// unregister all listeners for all event types\n+bench.off();\n+\n+// register a listener for an event type\n+bench.on('cycle', listener);\n+\n+// register a listener for multiple event types\n+bench.on('start cycle', listener);\n+\n+// basic usage\n+bench.run();\n+\n+// or with options\n+bench.run({ 'async': true });\n+\n+// basic usage\n+suite.add(fn);\n+\n+// or using a name first\n+suite.add('foo', fn);\n+\n+// or with options\n+suite.add('foo', fn, {\n+  'onCycle': onCycle,\n+  'onComplete': onComplete\n+});\n+\n+// or name and options\n+suite.add('foo', {\n+  'fn': fn,\n+  'onCycle': onCycle,\n+  'onComplete': onComplete\n+});\n+\n+// or options only\n+suite.add({\n+  'name': 'foo',\n+  'fn': fn,\n+  'onCycle': onCycle,\n+  'onComplete': onComplete\n+});\n+\n+// basic usage\n+suite.run();\n+\n+// or with options\n+suite.run({ 'async': true, 'queued': true });"
      },
      {
        "sha": "3365f335c1c9e571280b99646b07847efe33f38a",
        "filename": "benchmark/benchmark.d.ts",
        "status": "added",
        "additions": 192,
        "deletions": 0,
        "changes": 192,
        "blob_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/blob/c04af9e6ad6aafd0dc041fb0125a1fb8d714ad4d/benchmark%2Fbenchmark.d.ts",
        "raw_url": "https://github.com/DefinitelyTyped/DefinitelyTyped/raw/c04af9e6ad6aafd0dc041fb0125a1fb8d714ad4d/benchmark%2Fbenchmark.d.ts",
        "contents_url": "https://api.github.com/repos/DefinitelyTyped/DefinitelyTyped/contents/benchmark%2Fbenchmark.d.ts?ref=c04af9e6ad6aafd0dc041fb0125a1fb8d714ad4d",
        "patch": "@@ -0,0 +1,192 @@\n+// Type definitions for Benchmark v1.0.0\n+// Project: http://benchmarkjs.com\n+// Definitions by: Asana <https://asana.com>\n+// Definitions: https://github.com/borisyankov/DefinitelyTyped\n+\n+declare module \"benchmark\" {\n+    class Benchmark {\n+        static deepClone<T>(value: T): T;\n+        static each(obj: Object | any[], callback: Function, thisArg?: any): void;\n+        static extend(destination: Object, ...sources: Object[]): Object;\n+        static filter<T>(arr: T[], callback: (value: T) => any, thisArg?: any): T[];\n+        static filter<T>(arr: T[], filter: string, thisArg?: any): T[];\n+        static forEach<T>(arr: T[], callback: (value: T) => any, thisArg?: any): void;\n+        static formatNumber(num: number): string;\n+        static forOwn(obj: Object, callback: Function, thisArg?: any): void;\n+        static hasKey(obj: Object, key: string): boolean;\n+        static indexOf<T>(arr: T[], value: T, fromIndex?: number): number;\n+        static interpolate(template: string, values: Object): string;\n+        static invoke(benches: Benchmark[], name: string | Object, ...args: any[]): any[];\n+        static join(obj: Object, separator1?: string, separator2?: string): string;\n+        static map<T, K>(arr: T[], callback: (value: T) => K, thisArg?: any): K[];\n+        static pluck<T, K>(arr: T[], key: string): K[];\n+        static reduce<T, K>(arr: T[], callback: (accumulator: K, value: T) => K, thisArg?: any): K;\n+\n+        static options: Benchmark.Options;\n+        static platform: Benchmark.Platform;\n+        static support: Benchmark.Support;\n+        static version: string;\n+\n+        constructor(fn: Function | string, options?: Benchmark.Options);\n+        constructor(name: string, fn: Function | string, options?: Benchmark.Options);\n+        constructor(name: string, options?: Benchmark.Options);\n+        constructor(options: Benchmark.Options);\n+\n+        aborted: boolean;\n+        compiled: Function | string;\n+        count: number;\n+        cycles: number;\n+        error: Error;\n+        fn: Function | string;\n+        hz: number;\n+        running: boolean;\n+        setup: Function | string;\n+        teardown: Function | string;\n+\n+        stats: Benchmark.Stats;\n+        times: Benchmark.Times;\n+\n+        abort(): Benchmark;\n+        clone(options: Benchmark.Options): Benchmark;\n+        compare(benchmark: Benchmark): number;\n+        emit(type: string | Object): any;\n+        listeners(type: string): Function[];\n+        off(type?: string, listener?: Function): Benchmark;\n+        off(types: string[]): Benchmark;\n+        on(type?: string, listener?: Function): Benchmark;\n+        on(types: string[]): Benchmark;\n+        reset(): Benchmark;\n+        run(options?: Benchmark.Options): Benchmark;\n+        toString(): string;\n+    }\n+\n+    module Benchmark {\n+        export interface Options {\n+            async?: boolean;\n+            defer?: boolean;\n+            delay?: number;\n+            id?: string;\n+            initCount?: number;\n+            maxTime?: number;\n+            minSamples?: number;\n+            minTime?: number;\n+            name?: string;\n+            onAbort?: Function;\n+            onComplete?: Function;\n+            onCycle?: Function;\n+            onError?: Function;\n+            onReset?: Function;\n+            onStart?: Function;\n+            setup?: Function | string;\n+            teardown?: Function | string;\n+            fn?: Function | string;\n+            queued?: boolean;\n+        }\n+\n+        export interface Platform {\n+            description: string;\n+            layout: string;\n+            manufacturer: string;\n+            name: string;\n+            os: string;\n+            prerelease: string;\n+            product: string;\n+            version: string;\n+            toString(): string;\n+        }\n+\n+        export interface Support {\n+            air: boolean;\n+            argumentsClass: boolean;\n+            browser: boolean;\n+            charByIndex: boolean;\n+            charByOwnIndex: boolean;\n+            decompilation: boolean;\n+            descriptors: boolean;\n+            getAllKeys: boolean;\n+            iteratesOwnFirst: boolean;\n+            java: boolean;\n+            nodeClass: boolean;\n+            timeout: boolean;\n+        }\n+\n+        export interface Stats {\n+            deviation: number;\n+            mean: number;\n+            moe: number;\n+            rme: number;\n+            sample: any[];\n+            sem: number;\n+            variance: number;\n+        }\n+\n+        export interface Times {\n+            cycle: number;\n+            elapsed: number;\n+            period: number;\n+            timeStamp: number;\n+        }\n+\n+        export class Deferred {\n+            constructor(clone: Benchmark);\n+\n+            benchmark: Benchmark;\n+            cycles: number;\n+            elapsed: number;\n+            timeStamp: number;\n+        }\n+\n+        export class Event {\n+            constructor(type: string | Object);\n+\n+            aborted: boolean;\n+            cancelled: boolean;\n+            currentTarget: Object;\n+            result: any;\n+            target: Object;\n+            timeStamp: number;\n+            type: string;\n+        }\n+\n+        export class Suite {\n+            static options: { name: string };\n+\n+            constructor(name?: string, options?: Options);\n+\n+            aborted: boolean;\n+            length: number;\n+            running: boolean;\n+            abort(): Suite;\n+            add(name: string, fn: Function | string, options?: Options): Suite;\n+            add(fn: Function | string, options?: Options): Suite;\n+            add(name: string, options?: Options): Suite;\n+            add(options: Options): Suite;\n+            clone(options: Options): Suite;\n+            emit(type: string | Object): any;\n+            filter(callback: Function | string): Suite;\n+            forEach(callback: Function): Suite;\n+            indexOf(value: any): number;\n+            invoke(name: string, ...args: any[]): any[];\n+            join(separator?: string): string;\n+            listeners(type: string): Function[];\n+            map(callback: Function): any[];\n+            off(type?: string, callback?: Function): Benchmark;\n+            off(types: string[]): Benchmark;\n+            on(type?: string, callback?: Function): Benchmark;\n+            on(types: string[]): Benchmark;\n+            pluck(property: string): any[];\n+            pop(): Function;\n+            push(benchmark: Benchmark): number;\n+            reduce<T>(callback: Function, accumulator: T): T;\n+            reset(): Suite;\n+            reverse(): any[];\n+            run(options?: Options): Suite;\n+            shift(): Benchmark;\n+            slice(start: number, end: number): any[];\n+            slice(start: number, deleteCount: number, ...values: any[]): any[];\n+            unshift(benchmark: Benchmark): number;\n+        }\n+    }\n+\n+    export = Benchmark;\n+}"
      }
    ]
  }
]
