[{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/7165","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/7165/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/7165/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/7165/events","html_url":"https://github.com/ReactiveX/rxjs/pull/7165","id":1552359194,"node_id":"PR_kwDOAewQJ85IScWR","number":7165,"title":"perf(operator): simplify the implementation of the `endWith` operator","user":{"login":"demensky","id":10235949,"node_id":"MDQ6VXNlcjEwMjM1OTQ5","avatar_url":"https://avatars.githubusercontent.com/u/10235949?v=4","gravatar_id":"","url":"https://api.github.com/users/demensky","html_url":"https://github.com/demensky","followers_url":"https://api.github.com/users/demensky/followers","following_url":"https://api.github.com/users/demensky/following{/other_user}","gists_url":"https://api.github.com/users/demensky/gists{/gist_id}","starred_url":"https://api.github.com/users/demensky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/demensky/subscriptions","organizations_url":"https://api.github.com/users/demensky/orgs","repos_url":"https://api.github.com/users/demensky/repos","events_url":"https://api.github.com/users/demensky/events{/privacy}","received_events_url":"https://api.github.com/users/demensky/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-01-23T00:49:14Z","updated_at":"2023-01-24T03:09:22Z","closed_at":"2023-01-24T03:09:22Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/7165","html_url":"https://github.com/ReactiveX/rxjs/pull/7165","diff_url":"https://github.com/ReactiveX/rxjs/pull/7165.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/7165.patch","merged_at":"2023-01-24T03:09:22Z"},"body":"I would like to propose a simplification and optimization of the `endWith` operator.\r\n\r\nSome operators may spend significantly more CPU and RAM than you expect from them. When trying to use the debugging tools, you can notice that often the problem lies in the fact that operators can consist of other operators. For example, in dealing with [`count`](https://github.com/ReactiveX/rxjs/blob/71a26ac155cb0f48c8054843282e7bbb5ed4e6fe/src/internal/operators/count.ts#L59-L61) you can see that the `reduce` operator is used in the implementation, but the code is quite simple and can hardly affect performance in any way. But if you take the operator from this PR ([`endWith`](https://github.com/ReactiveX/rxjs/blob/71a26ac155cb0f48c8054843282e7bbb5ed4e6fe/src/internal/operators/endWith.ts#L54-L58)), you can see that the relatively \"heavy\" operator `concatAll` is used in combination with the `fromArrayLike` functions.\r\n\r\nI suggest trying to avoid using other operators in the implementation of operators if their implementation has a large amount of code that under no circumstances will be required (dead code) for the functionality of operators.\r\n\r\nAs an example, the difference in the number of created objects in this code:\r\n\r\n```ts\r\nnew Observable<string>((subscriber) => {\r\n  subscriber.next('a');\r\n  subscriber.next('b');\r\n  subscriber.next('c');\r\n  subscriber.complete();\r\n})\r\n  .pipe(endWith('e', 'f', 'g'))\r\n  .subscribe({\r\n    next: (next) => {\r\n      console.log('next', next);\r\n    },\r\n    complete: () => {\r\n      console.log('complete');\r\n    },\r\n    error: (error) => {\r\n      console.log('error', error);\r\n    },\r\n  });\r\n```\r\n\r\n|          | `Observable` | `Subscriber` | `Subscription` |\r\n| -------- | -----------: | -----------: | -------------: |\r\n| `master` |            5 |            4 |              5 |\r\n| this PR  |            2 |            2 |              3 |\r\n\r\nI would be very happy to hear reasoned criticism. ðŸ˜„","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/7165/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/7165/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/7059","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/7059/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/7059/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/7059/events","html_url":"https://github.com/ReactiveX/rxjs/pull/7059","id":1367107349,"node_id":"PR_kwDOAewQJ84-pDUm","number":7059,"title":"fix(schedulers): improve performance of animationFrameScheduler and asapScheduler","user":{"login":"benlesh","id":1540597,"node_id":"MDQ6VXNlcjE1NDA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1540597?v=4","gravatar_id":"","url":"https://api.github.com/users/benlesh","html_url":"https://github.com/benlesh","followers_url":"https://api.github.com/users/benlesh/followers","following_url":"https://api.github.com/users/benlesh/following{/other_user}","gists_url":"https://api.github.com/users/benlesh/gists{/gist_id}","starred_url":"https://api.github.com/users/benlesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benlesh/subscriptions","organizations_url":"https://api.github.com/users/benlesh/orgs","repos_url":"https://api.github.com/users/benlesh/repos","events_url":"https://api.github.com/users/benlesh/events{/privacy}","received_events_url":"https://api.github.com/users/benlesh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-09-08T23:58:16Z","updated_at":"2022-09-25T18:21:23Z","closed_at":"2022-09-25T18:21:22Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/7059","html_url":"https://github.com/ReactiveX/rxjs/pull/7059","diff_url":"https://github.com/ReactiveX/rxjs/pull/7059.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/7059.patch","merged_at":"2022-09-25T18:21:22Z"},"body":"+ Changes the check for existing action ids to simply check the last action in the queue to see if its id matches. Previously we were doing an O(n) loop on each execution of an action to check to see if the scheduling id needed to be recycled. This is problematic in AsapScheduler and AnimationFrameScheduler, where we're not reusing an interval. Since AsapScheduler and AnimationFrameScheduler reuse the most recent action id until their scheduled microtask or animation frame fires, the last action in the actions queue array is all we really need to check (rather than checking them all with `some`). O(1) vs O(n).\r\n+ Refactors a weird conditional gaff from `if ((X && A) || (!X && B))` to just be `if (X ? A : B)`\r\n+ Appropriately types action ids\r\n    \r\nresolves #7017\r\nrelated #7018\r\nrelated #6674","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/7059/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/7059/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6752","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6752/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6752/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6752/events","html_url":"https://github.com/ReactiveX/rxjs/pull/6752","id":1099606778,"node_id":"PR_kwDOAewQJ84w0j4e","number":6752,"title":"chore(timeInterval): reduced size and improved performance","user":{"login":"benlesh","id":1540597,"node_id":"MDQ6VXNlcjE1NDA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1540597?v=4","gravatar_id":"","url":"https://api.github.com/users/benlesh","html_url":"https://github.com/benlesh","followers_url":"https://api.github.com/users/benlesh/followers","following_url":"https://api.github.com/users/benlesh/following{/other_user}","gists_url":"https://api.github.com/users/benlesh/gists{/gist_id}","starred_url":"https://api.github.com/users/benlesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benlesh/subscriptions","organizations_url":"https://api.github.com/users/benlesh/orgs","repos_url":"https://api.github.com/users/benlesh/repos","events_url":"https://api.github.com/users/benlesh/events{/privacy}","received_events_url":"https://api.github.com/users/benlesh/received_events","type":"User","site_admin":false},"labels":[{"id":2970127263,"node_id":"MDU6TGFiZWwyOTcwMTI3MjYz","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/7.x","name":"7.x","color":"5319E7","default":false,"description":"Issues and PRs for version 6.x"},{"id":2970127870,"node_id":"MDU6TGFiZWwyOTcwMTI3ODcw","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/8.x","name":"8.x","color":"5319E7","default":false,"description":"Issues and PRs for version 8.x"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-01-11T20:54:01Z","updated_at":"2022-01-12T16:18:55Z","closed_at":"2022-01-12T16:18:55Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/6752","html_url":"https://github.com/ReactiveX/rxjs/pull/6752","diff_url":"https://github.com/ReactiveX/rxjs/pull/6752.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/6752.patch","merged_at":"2022-01-12T16:18:55Z"},"body":"Simply removes complexity and creates the operator in the simplest possible way.\r\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6752/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6752/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6622","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6622/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6622/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6622/events","html_url":"https://github.com/ReactiveX/rxjs/pull/6622","id":1011609307,"node_id":"PR_kwDOAewQJ84sexLP","number":6622,"title":"build(test): run mocha directly without separate transpilation","user":{"login":"kwonoj","id":1210596,"node_id":"MDQ6VXNlcjEyMTA1OTY=","avatar_url":"https://avatars.githubusercontent.com/u/1210596?v=4","gravatar_id":"","url":"https://api.github.com/users/kwonoj","html_url":"https://github.com/kwonoj","followers_url":"https://api.github.com/users/kwonoj/followers","following_url":"https://api.github.com/users/kwonoj/following{/other_user}","gists_url":"https://api.github.com/users/kwonoj/gists{/gist_id}","starred_url":"https://api.github.com/users/kwonoj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kwonoj/subscriptions","organizations_url":"https://api.github.com/users/kwonoj/orgs","repos_url":"https://api.github.com/users/kwonoj/repos","events_url":"https://api.github.com/users/kwonoj/events{/privacy}","received_events_url":"https://api.github.com/users/kwonoj/received_events","type":"User","site_admin":false},"labels":[{"id":2970127263,"node_id":"MDU6TGFiZWwyOTcwMTI3MjYz","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/7.x","name":"7.x","color":"5319E7","default":false,"description":"Issues and PRs for version 6.x"},{"id":2970127870,"node_id":"MDU6TGFiZWwyOTcwMTI3ODcw","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/8.x","name":"8.x","color":"5319E7","default":false,"description":"Issues and PRs for version 8.x"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2021-09-30T01:55:45Z","updated_at":"2022-03-26T03:44:55Z","closed_at":"2022-01-12T22:13:15Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/6622","html_url":"https://github.com/ReactiveX/rxjs/pull/6622","diff_url":"https://github.com/ReactiveX/rxjs/pull/6622.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/6622.patch","merged_at":"2022-01-12T22:13:15Z"},"body":"We've been running mocha with separate transpilation step via tsc as we've been experiencing transpilation performance via ts-node (or other mocha's transpiler registration) was not good enough. The current approach is generally fine for the perf, but as it requires 2 stage it makes bit tricky to setup things by pointing /dist, also some tooling side support like watch mode is not cleanly working.\r\n\r\nThis PR goes back to transpilation registration via mocha directly. But the difference is now this uses swc as transpilation backend instead of typescript itself. I've been trying to use swc for few places and so far our limited usecase (test) it seems working well sufficiently. If not, we can make upstream fix as well. \r\n\r\nYou may notice this uses `ts-node` still instead of directly using `@swc/register`. I choose this to let ts-node interops our tsconfig into swc instead of we maintain another swcrc config.\r\n\r\nPlease give it a go local run for the performance. So far on my local machine this works quite well.\r\n\r\n<!--\r\nThank you very much for your pull request!\r\n\r\nIf your PR is the addition of a new operator, please make sure all these boxes are ticked with an x:\r\n\r\n- [ ] Add the operator to Rx\r\n- [ ] It must have a `-spec.ts` tests file covering the canonical corner cases, with marble diagram tests\r\n- [ ] The spec file should have a type definition test at the end of the spec to verify type definition for various use cases\r\n- [ ] The operator must be documented in JSDoc style in the implementation file, including also the PNG marble diagram image\r\n- [ ] The operator should be listed in `docs_app/content/guide/operators.md` in a category of operators\r\n- [ ] The operator should also be documented. See [Documentation Guidelines](../CONTRIBUTING.md).\r\n- [ ] You may need to update `MIGRATION.md` if the operator differs from the corresponding one in RxJS v4\r\n-->\r\n\r\n**Description:**\r\n\r\n<!--\r\nIf this PR introduces a breaking change, it must contain a notice for it to be included in the CHANGELOG.\r\n-->\r\n\r\n**BREAKING CHANGE:** <!-- add description or remove entirely if not breaking -->\r\n\r\n**Related issue (if exists):**\r\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6622/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6622/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6842","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6842/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6842/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6842/events","html_url":"https://github.com/ReactiveX/rxjs/pull/6842","id":1145113940,"node_id":"PR_kwDOAewQJ84zMaqr","number":6842,"title":"perf(Subject): Don't clone observers array unless we have to","user":{"login":"benlesh","id":1540597,"node_id":"MDQ6VXNlcjE1NDA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1540597?v=4","gravatar_id":"","url":"https://api.github.com/users/benlesh","html_url":"https://github.com/benlesh","followers_url":"https://api.github.com/users/benlesh/followers","following_url":"https://api.github.com/users/benlesh/following{/other_user}","gists_url":"https://api.github.com/users/benlesh/gists{/gist_id}","starred_url":"https://api.github.com/users/benlesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benlesh/subscriptions","organizations_url":"https://api.github.com/users/benlesh/orgs","repos_url":"https://api.github.com/users/benlesh/repos","events_url":"https://api.github.com/users/benlesh/events{/privacy}","received_events_url":"https://api.github.com/users/benlesh/received_events","type":"User","site_admin":false},"labels":[{"id":2970127263,"node_id":"MDU6TGFiZWwyOTcwMTI3MjYz","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/7.x","name":"7.x","color":"5319E7","default":false,"description":"Issues and PRs for version 6.x"},{"id":2970127870,"node_id":"MDU6TGFiZWwyOTcwMTI3ODcw","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/8.x","name":"8.x","color":"5319E7","default":false,"description":"Issues and PRs for version 8.x"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-02-20T19:36:18Z","updated_at":"2022-02-21T06:34:47Z","closed_at":"2022-02-21T06:34:47Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/6842","html_url":"https://github.com/ReactiveX/rxjs/pull/6842","diff_url":"https://github.com/ReactiveX/rxjs/pull/6842.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/6842.patch","merged_at":"2022-02-21T06:34:47Z"},"body":"Previously we were cloning the observers array every time `next` was called on a `Subject`. This change attempts to reuse the same clone over and over until a new one is required because a new observer joined, or because an observer left.\r\n\r\nI attempted to performance test this, and in terms of ops/sec it didn't show any real difference, but I didn't check memory pressure. Adding as a placeholder. I'm wondering what @cartant and @kwonoj think.","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6842/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6815","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6815/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6815/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6815/events","html_url":"https://github.com/ReactiveX/rxjs/pull/6815","id":1127521668,"node_id":"PR_kwDOAewQJ84yP8oC","number":6815,"title":"refactor(SafeSubscriber): optimize perf for ordinary observers","user":{"login":"benlesh","id":1540597,"node_id":"MDQ6VXNlcjE1NDA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1540597?v=4","gravatar_id":"","url":"https://api.github.com/users/benlesh","html_url":"https://github.com/benlesh","followers_url":"https://api.github.com/users/benlesh/followers","following_url":"https://api.github.com/users/benlesh/following{/other_user}","gists_url":"https://api.github.com/users/benlesh/gists{/gist_id}","starred_url":"https://api.github.com/users/benlesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benlesh/subscriptions","organizations_url":"https://api.github.com/users/benlesh/orgs","repos_url":"https://api.github.com/users/benlesh/repos","events_url":"https://api.github.com/users/benlesh/events{/privacy}","received_events_url":"https://api.github.com/users/benlesh/received_events","type":"User","site_admin":false},"labels":[{"id":2970127263,"node_id":"MDU6TGFiZWwyOTcwMTI3MjYz","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/7.x","name":"7.x","color":"5319E7","default":false,"description":"Issues and PRs for version 6.x"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-02-08T17:01:49Z","updated_at":"2022-02-09T14:08:03Z","closed_at":"2022-02-09T14:08:03Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/6815","html_url":"https://github.com/ReactiveX/rxjs/pull/6815","diff_url":"https://github.com/ReactiveX/rxjs/pull/6815.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/6815.patch","merged_at":"2022-02-09T14:08:02Z"},"body":"No longer require function binding if we aren't using the deprecated next context. This should improve performance in the common path of consumers subscribing with an object or even with a function.\r\n\r\nAdds a simple class `ConsumerObserver` which is mostly meant to optimize the number of function refrences created. We should never expose this externally.\r\n\r\nRelated #6783\r\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6815/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6815/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6824","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6824/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6824/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6824/events","html_url":"https://github.com/ReactiveX/rxjs/pull/6824","id":1131757044,"node_id":"PR_kwDOAewQJ84yedAO","number":6824,"title":"chore(deps): bump ajv from 6.9.1 to 6.12.6","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":2970127263,"node_id":"MDU6TGFiZWwyOTcwMTI3MjYz","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/7.x","name":"7.x","color":"5319E7","default":false,"description":"Issues and PRs for version 6.x"},{"id":2970127870,"node_id":"MDU6TGFiZWwyOTcwMTI3ODcw","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/8.x","name":"8.x","color":"5319E7","default":false,"description":"Issues and PRs for version 8.x"},{"id":2978584291,"node_id":"MDU6TGFiZWwyOTc4NTg0Mjkx","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2022-02-11T05:15:13Z","updated_at":"2022-03-08T17:10:32Z","closed_at":"2022-03-08T17:10:23Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/6824","html_url":"https://github.com/ReactiveX/rxjs/pull/6824","diff_url":"https://github.com/ReactiveX/rxjs/pull/6824.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/6824.patch","merged_at":"2022-03-08T17:10:23Z"},"body":"Bumps [ajv](https://github.com/ajv-validator/ajv) from 6.9.1 to 6.12.6.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/ajv-validator/ajv/releases\">ajv's releases</a>.</em></p>\n<blockquote>\n<h2>v6.12.6</h2>\n<p>Fix performance issue of &quot;url&quot; format.</p>\n<h2>v6.12.5</h2>\n<p>Fix uri scheme validation (<a href=\"https://github.com/ChALkeR\"><code>@â€‹ChALkeR</code></a>).\nFix boolean schemas with strictKeywords option (<a href=\"https://github-redirect.dependabot.com/ajv-validator/ajv/issues/1270\">#1270</a>)</p>\n<h2>v6.12.4</h2>\n<p>Fix: coercion of one-item arrays to scalar that should fail validation (<a href=\"https://runkit.com/esp/5f3672ba2f6642001ae27411\">failing example</a>).</p>\n<h2>v6.12.3</h2>\n<p>Pass schema object to processCode function\nOption for strictNumbers (<a href=\"https://github.com/issacgerges\"><code>@â€‹issacgerges</code></a>, <a href=\"https://github-redirect.dependabot.com/ajv-validator/ajv/issues/1128\">#1128</a>)\nFixed vulnerability related to untrusted schemas (<a href=\"https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=CVE-2020-15366\">CVE-2020-15366</a>)</p>\n<h2>v6.12.2</h2>\n<p>Removed post-install script</p>\n<h2>v6.12.1</h2>\n<p>Docs and dependency updates</p>\n<h2>v6.12.0</h2>\n<p>Improved hostname validation (<a href=\"https://github.com/sambauers\"><code>@â€‹sambauers</code></a>, <a href=\"https://github-redirect.dependabot.com/ajv-validator/ajv/issues/1143\">#1143</a>)\nOption <code>keywords</code> to add custom keywords (<a href=\"https://github.com/franciscomorais\"><code>@â€‹franciscomorais</code></a>, <a href=\"https://github-redirect.dependabot.com/ajv-validator/ajv/issues/1137\">#1137</a>)\nTypes fixes (<a href=\"https://github.com/boenrobot\"><code>@â€‹boenrobot</code></a>, <a href=\"https://github.com/MattiAstedrone\"><code>@â€‹MattiAstedrone</code></a>)\nDocs:</p>\n<ul>\n<li><a href=\"https://github.com/epoberezkin/ajv#error-logging\">error logging</a> example (<a href=\"https://github.com/RadiationSickness\"><code>@â€‹RadiationSickness</code></a>)</li>\n<li>TypeScript usage notes (<a href=\"https://github.com/thetric\"><code>@â€‹thetric</code></a>)</li>\n</ul>\n<h2>v6.11.0</h2>\n<p>Time formats support two digit and colon-less variants of timezone offset (<a href=\"https://github-redirect.dependabot.com/ajv-validator/ajv/issues/1061\">#1061</a> , <a href=\"https://github.com/cjpillsbury\"><code>@â€‹cjpillsbury</code></a>)\nDocs: RegExp related security considerations\nTests: Disabled failing typescript test</p>\n<h2>v6.10.2</h2>\n<p>Fix: the unknown keywords were ignored with the option <code>strictKeywords: true</code> (instead of failing compilation) in some sub-schemas (e.g. anyOf), when the sub-schema didn't have known keywords.</p>\n<h2>v6.10.1</h2>\n<p>Fix types\nFix addSchema (<a href=\"https://github-redirect.dependabot.com/ajv-validator/ajv/issues/1001\">#1001</a>)\nUpdate dependencies</p>\n<h2>v6.10.0</h2>\n<p>Option <code>strictDefaults</code> to report ignored defaults (<a href=\"https://github-redirect.dependabot.com/ajv-validator/ajv/issues/957\">#957</a>, <a href=\"https://github.com/not-an-aardvark\"><code>@â€‹not-an-aardvark</code></a>)\nOption <code>strictKeywords</code> to report unknown keywords (<a href=\"https://github-redirect.dependabot.com/ajv-validator/ajv/issues/781\">#781</a>)</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/ajv-validator/ajv/commit/fe591439f34e24030f69df9eb8d91e6d037a3af7\"><code>fe59143</code></a> 6.12.6</li>\n<li><a href=\"https://github.com/ajv-validator/ajv/commit/d580d3e8ac6a467670d68d86e3a39fd661ac8c23\"><code>d580d3e</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/ajv-validator/ajv/issues/1298\">#1298</a> from ajv-validator/fix-url</li>\n<li><a href=\"https://github.com/ajv-validator/ajv/commit/fd363896a8d6c5697b5da41f4d9a400a84efaf8e\"><code>fd36389</code></a> fix: regular expression for &quot;url&quot; format</li>\n<li><a href=\"https://github.com/ajv-validator/ajv/commit/490e34c4846064db5c962a77087e17078954c2f6\"><code>490e34c</code></a> docs: link to v7-beta branch</li>\n<li><a href=\"https://github.com/ajv-validator/ajv/commit/9cd93a1bdbdefd5a7ba3db5e123d20c84d1d1d0e\"><code>9cd93a1</code></a> docs: note about v7 in readme</li>\n<li><a href=\"https://github.com/ajv-validator/ajv/commit/877d286e7f145b1b2127da66c6800b071533f28f\"><code>877d286</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/ajv-validator/ajv/issues/1262\">#1262</a> from b4h0-c4t/refactor-opt-object-type</li>\n<li><a href=\"https://github.com/ajv-validator/ajv/commit/f1c8e45b9cdff918be28becf03bf0b339321c398\"><code>f1c8e45</code></a> 6.12.5</li>\n<li><a href=\"https://github.com/ajv-validator/ajv/commit/764035e201d7733b8d700d4a04dd079fef9f4d30\"><code>764035e</code></a> Merge branch 'ChALkeR-chalker/fix-comma'</li>\n<li><a href=\"https://github.com/ajv-validator/ajv/commit/37981602ce6d43313ae106644b372b021626a8af\"><code>3798160</code></a> Merge branch 'chalker/fix-comma' of git://github.com/ChALkeR/ajv into ChALkeR...</li>\n<li><a href=\"https://github.com/ajv-validator/ajv/commit/a3c7ebab222e4cce07b5e30ebcbb809da7f934e8\"><code>a3c7eba</code></a> Merge branch 'refactor-opt-object-type' of github.com:b4h0-c4t/ajv into refac...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/ajv-validator/ajv/compare/v6.9.1...v6.12.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ajv&package-manager=npm_and_yarn&previous-version=6.9.1&new-version=6.12.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/ReactiveX/rxjs/network/alerts).\n\n</details>","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6824/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6049","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6049/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6049/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6049/events","html_url":"https://github.com/ReactiveX/rxjs/pull/6049","id":815544602,"node_id":"MDExOlB1bGxSZXF1ZXN0NTc5MzU2ODU0","number":6049,"title":"fix(debounceTime): improves performance on quick succession of emits","user":{"login":"voliva","id":5365487,"node_id":"MDQ6VXNlcjUzNjU0ODc=","avatar_url":"https://avatars.githubusercontent.com/u/5365487?v=4","gravatar_id":"","url":"https://api.github.com/users/voliva","html_url":"https://github.com/voliva","followers_url":"https://api.github.com/users/voliva/followers","following_url":"https://api.github.com/users/voliva/following{/other_user}","gists_url":"https://api.github.com/users/voliva/gists{/gist_id}","starred_url":"https://api.github.com/users/voliva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/voliva/subscriptions","organizations_url":"https://api.github.com/users/voliva/orgs","repos_url":"https://api.github.com/users/voliva/repos","events_url":"https://api.github.com/users/voliva/events{/privacy}","received_events_url":"https://api.github.com/users/voliva/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2021-02-24T14:44:09Z","updated_at":"2021-02-25T09:53:49Z","closed_at":"2021-02-24T23:22:07Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/6049","html_url":"https://github.com/ReactiveX/rxjs/pull/6049","diff_url":"https://github.com/ReactiveX/rxjs/pull/6049.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/6049.patch","merged_at":"2021-02-24T23:22:07Z"},"body":"Addresses #6045 \r\n\r\nThis turned out to be similar to `debounce`, but with the optimisation on the scheduling bit. Tests unchanged are green, I'm not sure how can I add a test for performance.\r\n\r\nThis optimization can't be used in the `debounce` operator, as that one takes in a stream, where only way of getting the \"time window\" is by unsubscribing from the previous stream and subscribing on the current one. With `debounceTime`, as the dueTime is always the same we can optimise.\r\n\r\nIn case this PR moves forward, would it be worth also having the same optimisation on RxJS@^6' debounceTime?","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6049/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6049/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6378","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6378/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6378/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6378/events","html_url":"https://github.com/ReactiveX/rxjs/pull/6378","id":878622414,"node_id":"MDExOlB1bGxSZXF1ZXN0NjMyNDIxNjMw","number":6378,"title":"chore(deps): bump lodash from 4.17.20 to 4.17.21 in /docs_app/tools/decision-tree-generator","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":2978584291,"node_id":"MDU6TGFiZWwyOTc4NTg0Mjkx","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-07T08:48:10Z","updated_at":"2021-05-10T16:31:06Z","closed_at":"2021-05-10T16:30:59Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/6378","html_url":"https://github.com/ReactiveX/rxjs/pull/6378","diff_url":"https://github.com/ReactiveX/rxjs/pull/6378.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/6378.patch","merged_at":"2021-05-10T16:30:59Z"},"body":"Bumps [lodash](https://github.com/lodash/lodash) from 4.17.20 to 4.17.21.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash/commit/f299b52f39486275a9e6483b60a410e06520c538\"><code>f299b52</code></a> Bump to v4.17.21</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a\"><code>c4847eb</code></a> Improve performance of <code>toNumber</code>, <code>trim</code> and <code>trimEnd</code> on large input strings</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c\"><code>3469357</code></a> Prevent command injection through <code>_.template</code>'s <code>variable</code> option</li>\n<li>See full diff in <a href=\"https://github.com/lodash/lodash/compare/4.17.20...4.17.21\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.20&new-version=4.17.21)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/ReactiveX/rxjs/network/alerts).\n\n</details>","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6378/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6374","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6374/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6374/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6374/events","html_url":"https://github.com/ReactiveX/rxjs/pull/6374","id":878086746,"node_id":"MDExOlB1bGxSZXF1ZXN0NjMxOTUyNDQ0","number":6374,"title":"chore(deps-dev): bump lodash from 4.17.19 to 4.17.21","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":2978584291,"node_id":"MDU6TGFiZWwyOTc4NTg0Mjkx","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-05-06T21:52:49Z","updated_at":"2021-05-10T16:31:26Z","closed_at":"2021-05-10T16:31:14Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/6374","html_url":"https://github.com/ReactiveX/rxjs/pull/6374","diff_url":"https://github.com/ReactiveX/rxjs/pull/6374.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/6374.patch","merged_at":"2021-05-10T16:31:14Z"},"body":"Bumps [lodash](https://github.com/lodash/lodash) from 4.17.19 to 4.17.21.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash/commit/f299b52f39486275a9e6483b60a410e06520c538\"><code>f299b52</code></a> Bump to v4.17.21</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a\"><code>c4847eb</code></a> Improve performance of <code>toNumber</code>, <code>trim</code> and <code>trimEnd</code> on large input strings</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c\"><code>3469357</code></a> Prevent command injection through <code>_.template</code>'s <code>variable</code> option</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/ded9bc66583ed0b4e3b7dc906206d40757b4a90a\"><code>ded9bc6</code></a> Bump to v4.17.20.</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/63150ef7645ac07961b63a86490f419f356429aa\"><code>63150ef</code></a> Documentation fixes.</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/00f0f62a979d2f5fa0287c06eae70cf9a62d8794\"><code>00f0f62</code></a> test.js: Remove trailing comma.</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/846e434c7a5b5692c55ebf5715ed677b70a32389\"><code>846e434</code></a> Temporarily use a custom fork of <code>lodash-cli</code>.</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/5d046f39cbd27f573914768e3b36eeefcc4f1229\"><code>5d046f3</code></a> Re-enable Travis tests on <code>4.17</code> branch.</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/aa816b36d402a1ad9385142ce7188f17dae514fd\"><code>aa816b3</code></a> Remove <code>/npm-package</code>.</li>\n<li>See full diff in <a href=\"https://github.com/lodash/lodash/compare/4.17.19...4.17.21\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~bnjmnt4n\">bnjmnt4n</a>, a new releaser for lodash since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.19&new-version=4.17.21)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/ReactiveX/rxjs/network/alerts).\n\n</details>","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/6374/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5980","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5980/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5980/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5980/events","html_url":"https://github.com/ReactiveX/rxjs/pull/5980","id":793779520,"node_id":"MDExOlB1bGxSZXF1ZXN0NTYxNDA5NDM1","number":5980,"title":"fix: Resolve issues with deprecated synchronous error handling and chained operators","user":{"login":"benlesh","id":1540597,"node_id":"MDQ6VXNlcjE1NDA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1540597?v=4","gravatar_id":"","url":"https://api.github.com/users/benlesh","html_url":"https://github.com/benlesh","followers_url":"https://api.github.com/users/benlesh/followers","following_url":"https://api.github.com/users/benlesh/following{/other_user}","gists_url":"https://api.github.com/users/benlesh/gists{/gist_id}","starred_url":"https://api.github.com/users/benlesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benlesh/subscriptions","organizations_url":"https://api.github.com/users/benlesh/orgs","repos_url":"https://api.github.com/users/benlesh/repos","events_url":"https://api.github.com/users/benlesh/events{/privacy}","received_events_url":"https://api.github.com/users/benlesh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2021-01-25T22:41:43Z","updated_at":"2021-01-26T01:36:04Z","closed_at":"2021-01-26T01:36:04Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/5980","html_url":"https://github.com/ReactiveX/rxjs/pull/5980","diff_url":"https://github.com/ReactiveX/rxjs/pull/5980.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/5980.patch","merged_at":"2021-01-26T01:36:04Z"},"body":"Adds some logic to handle the deprecated case. This is unfortunate, but it's necessary to properly support people who are still using this feature until we can remove it. Note that there is potentially a severe performance penalty for people using this feature. But they're being warned at every turn, and the migration path to get away from this is easy: Stop relying on synchronously thrown errors.\r\n\r\nfixes #5979\r\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5980/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5607","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5607/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5607/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5607/events","html_url":"https://github.com/ReactiveX/rxjs/pull/5607","id":665868053,"node_id":"MDExOlB1bGxSZXF1ZXN0NDU2ODExNDE2","number":5607,"title":"feat(TestScheduler): add an animate \"run mode\" helper","user":{"login":"cartant","id":3878593,"node_id":"MDQ6VXNlcjM4Nzg1OTM=","avatar_url":"https://avatars.githubusercontent.com/u/3878593?v=4","gravatar_id":"","url":"https://api.github.com/users/cartant","html_url":"https://github.com/cartant","followers_url":"https://api.github.com/users/cartant/followers","following_url":"https://api.github.com/users/cartant/following{/other_user}","gists_url":"https://api.github.com/users/cartant/gists{/gist_id}","starred_url":"https://api.github.com/users/cartant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cartant/subscriptions","organizations_url":"https://api.github.com/users/cartant/orgs","repos_url":"https://api.github.com/users/cartant/repos","events_url":"https://api.github.com/users/cartant/events{/privacy}","received_events_url":"https://api.github.com/users/cartant/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-07-26T22:00:50Z","updated_at":"2020-09-24T07:10:33Z","closed_at":"2020-07-31T17:05:43Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/5607","html_url":"https://github.com/ReactiveX/rxjs/pull/5607","diff_url":"https://github.com/ReactiveX/rxjs/pull/5607.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/5607.patch","merged_at":"2020-07-31T17:05:43Z"},"body":"<!--\r\nThank you very much for your pull request!\r\n\r\nIf your PR is the addition of a new operator, please make sure all these boxes are ticked with an x:\r\n\r\n- [ ] Add the operator to Rx\r\n- [ ] It must have a `-spec.ts` tests file covering the canonical corner cases, with marble diagram tests\r\n- [ ] The spec file should have a type definition test at the end of the spec to verify type definition for various use cases\r\n- [ ] The operator must be documented in JSDoc style in the implementation file, including also the PNG marble diagram image\r\n- [ ] The operator should be listed in `docs_app/content/guide/operators.md` in a category of operators\r\n- [ ] The operator should also be documented. See [Documentation Guidelines](../CONTRIBUTING.md).\r\n- [ ] You may need to update `MIGRATION.md` if the operator differs from the corresponding one in RxJS v4\r\n-->\r\n\r\n**Description:**\r\n\r\nThis PR:\r\n\r\n* Adds a `Date` timestamp provider.\r\n* Adds a `performance` timestamp provider.\r\n* Adds a `requestAnimationFrame` provider.\r\n* All providers have `delegate` properties that are `undefined` by default but are used - by `TestScheduler#run` - to override the default behaviour. This mirrors the `delegate` implementation detail that's used with the schedulers.\r\n* Removes the arrow function from the static `Scheduler.now` - it's unnecessary, as the `Date.now` call now occurs within the `dateTimestampProvider`.\r\n* The `animationFrames` observable now uses the `requestAnimationFramesProvider`.\r\n* `TestScheduler#run` sets the delegates for the providers, with the `requestAnimationFramesProvider`'s delegate working in conjunction with a `animate()` marble that's added to the run helpers:\r\n\r\n    ```ts\r\n    testScheduler.run(({ animate }) => {\r\n      animate('---x---x---x---x---x');\r\n      /* ... */\r\n    });\r\n    ```\r\n\r\n    Each time an animation/repaint occurs, all queued `rAF` callbacks will be executed - in the order in which they were scheduled - and each will be passed the same timestamp - the `TestScheduler`'s `now` value - which is also what will be returned from the timestamp providers - as the `TestScheduler` itself is the delegate.\r\n\r\n* Adds tests for the `animate` `run` helper.\r\n* Updates API guardian for the inclusion of the `animate` `run` helper.\r\n* Reimplements the `animationFrames` tests to use the `run` helper and the provider - which is spied upon - and removes the `rAF` mock.\r\n* Fixes the `rAF` provider so that cancellation of already fulfilled requests (upon unsubscription) is not attempted.\r\n\r\n**Related issue (if exists):** #5438 and #5475\r\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5607/reactions","total_count":6,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":2,"rocket":1,"eyes":2},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5607/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5123","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5123/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5123/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5123/events","html_url":"https://github.com/ReactiveX/rxjs/pull/5123","id":517110520,"node_id":"MDExOlB1bGxSZXF1ZXN0MzM2MjQyOTc2","number":5123,"title":"chore: replace dtslint with dtslint-like rules in tslint-etc","user":{"login":"cartant","id":3878593,"node_id":"MDQ6VXNlcjM4Nzg1OTM=","avatar_url":"https://avatars.githubusercontent.com/u/3878593?v=4","gravatar_id":"","url":"https://api.github.com/users/cartant","html_url":"https://github.com/cartant","followers_url":"https://api.github.com/users/cartant/followers","following_url":"https://api.github.com/users/cartant/following{/other_user}","gists_url":"https://api.github.com/users/cartant/gists{/gist_id}","starred_url":"https://api.github.com/users/cartant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cartant/subscriptions","organizations_url":"https://api.github.com/users/cartant/orgs","repos_url":"https://api.github.com/users/cartant/repos","events_url":"https://api.github.com/users/cartant/events{/privacy}","received_events_url":"https://api.github.com/users/cartant/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-11-04T12:07:14Z","updated_at":"2020-09-24T07:09:01Z","closed_at":"2019-11-11T18:58:01Z","author_association":"COLLABORATOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/5123","html_url":"https://github.com/ReactiveX/rxjs/pull/5123","diff_url":"https://github.com/ReactiveX/rxjs/pull/5123.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/5123.patch","merged_at":"2019-11-11T18:58:01Z"},"body":"<!--\r\nThank you very much for your pull request!\r\n\r\nIf your PR is the addition of a new operator, please make sure all these boxes are ticked with an x:\r\n\r\n- [ ] Add the operator to Rx\r\n- [ ] It must have a `-spec.ts` tests file covering the canonical corner cases, with marble diagram tests\r\n- [ ] If possible, write a `asDiagram` test case too, for PNG diagram generation purposes\r\n- [ ] The spec file should have a type definition test at the end of the spec to verify type definition for various use cases\r\n- [ ] The operator must be documented in JSDoc style in the implementation file, including also the PNG marble diagram image\r\n- [ ] The operator should be listed in `doc/operators.md` in a category of operators\r\n- [ ] The operator should also be documented. See [Documentation Guidelines](../CONTRIBUTING.md).\r\n- [ ] It should also be inserted in the operator decision tree file `doc/decision-tree-widget/tree.yml`\r\n- [ ] You may need to update `MIGRATION.md` if the operator differs from the corresponding one in RxJS v4\r\n-->\r\n\r\n**Description:**\r\n\r\nThis PR removes dtslint and replaces it with an [`expect-type` rule](https://github.com/cartant/tslint-etc/blob/master/source/rules/expectTypeRule.ts) - in `tslint-etc` - that is a modified version of the [`expect` rule](https://github.com/microsoft/dtslint/blob/master/src/rules/expectRule.ts) from the `dtslint` package (which is MIT licensed). Essentially, this PR reduces the number of moving parts in the type tests.\r\n\r\nThe modified rule uses the locally-installed `typescript` - i.e. the `typescript` version specified in the RxJS `package.json` file - and removes the performance-related code that attempts to write profiling data to the caller's home directory.\r\n\r\nInstead of running dtslint, we can now run tslint directly - passing it the `tsconfig.json` and the `tslint.json` files that are in the `spec-dtslint` directory - and can be sure that dtslint isn't doing anything weird in its implementation.\r\n\r\nAlso, I've added an [`expect-deprecation` rule](https://github.com/cartant/tslint-etc/blob/master/source/rules/expectDeprecationRule.ts) to `tslint-etc` which will allow us to ensure that our deprecations are working as they should, like this:\r\n\r\n```ts\r\nof<number>(); // $ExpectDeprecation\r\nof(); // $ExpectNoDeprecation\r\n```\r\n\r\nI'll start adding more deprecation-related tests once/if this is merged.\r\n\r\nAnd there is a [`no-dtslint-typo` rule](https://github.com/cartant/tslint-etc/blob/master/source/rules/noDtslintTypoRule.ts) to catch some of the invalid dtslint-like expectations - like [these](https://github.com/ReactiveX/rxjs/pull/5123/commits/c19f7e53a290b459e47e77f90b182423b49a2de7) - that have crept into the codebase.\r\n\r\n**Related issue (if exists):** #4871","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/5123/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/4858","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/4858/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/4858/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/4858/events","html_url":"https://github.com/ReactiveX/rxjs/pull/4858","id":455345340,"node_id":"MDExOlB1bGxSZXF1ZXN0Mjg3NjEyNjI1","number":4858,"title":"fix(scan/reduce): Typings correct for mixed seed/value types","user":{"login":"benlesh","id":1540597,"node_id":"MDQ6VXNlcjE1NDA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1540597?v=4","gravatar_id":"","url":"https://api.github.com/users/benlesh","html_url":"https://github.com/benlesh","followers_url":"https://api.github.com/users/benlesh/followers","following_url":"https://api.github.com/users/benlesh/following{/other_user}","gists_url":"https://api.github.com/users/benlesh/gists{/gist_id}","starred_url":"https://api.github.com/users/benlesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benlesh/subscriptions","organizations_url":"https://api.github.com/users/benlesh/orgs","repos_url":"https://api.github.com/users/benlesh/repos","events_url":"https://api.github.com/users/benlesh/events{/privacy}","received_events_url":"https://api.github.com/users/benlesh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-06-12T17:50:33Z","updated_at":"2019-09-25T19:38:49Z","closed_at":"2019-08-26T19:30:07Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/4858","html_url":"https://github.com/ReactiveX/rxjs/pull/4858","diff_url":"https://github.com/ReactiveX/rxjs/pull/4858.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/4858.patch","merged_at":"2019-08-26T19:30:07Z"},"body":"- Adds dtslint tests to cover various mixtures of seeds, accumulator results, and value types\r\n- Refactors scan a little bit, as types needed to be updated in the implementation\r\n- Resolves a performance issue where scan was calling next on the destination Subscriber when it had already errored\r\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/4858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/4858/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2677","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2677/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2677/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2677/events","html_url":"https://github.com/ReactiveX/rxjs/pull/2677","id":236899960,"node_id":"MDExOlB1bGxSZXF1ZXN0MTI2MzA5NjA1","number":2677,"title":"perf(ReplaySubject): slightly improved performance","user":{"login":"martinsik","id":238765,"node_id":"MDQ6VXNlcjIzODc2NQ==","avatar_url":"https://avatars.githubusercontent.com/u/238765?v=4","gravatar_id":"","url":"https://api.github.com/users/martinsik","html_url":"https://github.com/martinsik","followers_url":"https://api.github.com/users/martinsik/followers","following_url":"https://api.github.com/users/martinsik/following{/other_user}","gists_url":"https://api.github.com/users/martinsik/gists{/gist_id}","starred_url":"https://api.github.com/users/martinsik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinsik/subscriptions","organizations_url":"https://api.github.com/users/martinsik/orgs","repos_url":"https://api.github.com/users/martinsik/repos","events_url":"https://api.github.com/users/martinsik/events{/privacy}","received_events_url":"https://api.github.com/users/martinsik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2017-06-19T13:58:10Z","updated_at":"2018-06-05T22:35:45Z","closed_at":"2018-03-30T22:36:24Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/2677","html_url":"https://github.com/ReactiveX/rxjs/pull/2677","diff_url":"https://github.com/ReactiveX/rxjs/pull/2677.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/2677.patch","merged_at":"2018-03-30T22:36:24Z"},"body":"I was going through the `ReplaySubject` class and I think in some situations it can be simplified. Most importantly when I don't set the `timeWindow` parameter the buffer trimming method can be avoided completely and I can store just the values without wrapping them with `ReplayEvent`.\r\n\r\nAlso, I tried some performance tests to see whether `splice()` or `shift()` would be better. It seems that running `shift()` in a for loop is faster than `splice()` when removing `< 25` items. However, `splice()` is more consistent even when removing a large portion of an array. See https://jsperf.com/splice-vs-shift-2\r\n\r\nThere were no benchmarks for Subjects in `perf` directory so I made a few myself but I'm not sure I'm testing it the right way. It shows that RxJS 4 implementation was faster than RxJS 5...\r\n\r\nBefore:\r\n\r\n```\r\n                                         |                     RxJS 4.1.0 |                     RxJS 5.4.1 |          factor |      % improved\r\n---------------------------------------------------------------------------------------------------------------------------------------------------\r\n    replaysubject_windowtime - immediate |                68,591 (Â±1.36%) |                17,151 (Â±2.57%) |           0.25x |          -75.0%\r\n               replaysubject - immediate |                72,951 (Â±1.08%) |                17,099 (Â±2.69%) |           0.23x |          -76.6%\r\n                replaysubject_windowtime |                39,104 (Â±0.85%) |                15,393 (Â±2.85%) |           0.39x |          -60.6%\r\n                           replaysubject |                34,721 (Â±1.13%) |                15,393 (Â±2.30%) |           0.44x |          -55.7%\r\n```\r\n\r\nAfter:\r\n\r\n```\r\n                                        |                     RxJS 4.1.0 |                     RxJS 5.4.1 |          factor |      % improved\r\n---------------------------------------------------------------------------------------------------------------------------------------------------\r\n    replaysubject_windowtime - immediate |                63,306 (Â±1.14%) |                19,745 (Â±2.68%) |           0.31x |          -68.8%\r\n               replaysubject - immediate |                63,870 (Â±3.35%) |                28,659 (Â±2.49%) |           0.45x |          -55.1%\r\n                replaysubject_windowtime |                36,607 (Â±1.78%) |                16,646 (Â±2.83%) |           0.45x |          -54.5%\r\n                           replaysubject |                36,058 (Â±1.29%) |                22,130 (Â±2.86%) |           0.61x |          -38.6%\r\n```","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2677/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2491","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2491/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2491/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2491/events","html_url":"https://github.com/ReactiveX/rxjs/pull/2491","id":216771971,"node_id":"MDExOlB1bGxSZXF1ZXN0MTEyNDQ2MzU2","number":2491,"title":"perf(pluck,bufferTime,asObservable): add performance tests for pluck(), bufferTime() and asObservable() operators","user":{"login":"martinsik","id":238765,"node_id":"MDQ6VXNlcjIzODc2NQ==","avatar_url":"https://avatars.githubusercontent.com/u/238765?v=4","gravatar_id":"","url":"https://api.github.com/users/martinsik","html_url":"https://github.com/martinsik","followers_url":"https://api.github.com/users/martinsik/followers","following_url":"https://api.github.com/users/martinsik/following{/other_user}","gists_url":"https://api.github.com/users/martinsik/gists{/gist_id}","starred_url":"https://api.github.com/users/martinsik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinsik/subscriptions","organizations_url":"https://api.github.com/users/martinsik/orgs","repos_url":"https://api.github.com/users/martinsik/repos","events_url":"https://api.github.com/users/martinsik/events{/privacy}","received_events_url":"https://api.github.com/users/martinsik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-03-24T12:31:36Z","updated_at":"2018-06-05T22:35:41Z","closed_at":"2018-03-30T22:40:17Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/2491","html_url":"https://github.com/ReactiveX/rxjs/pull/2491","diff_url":"https://github.com/ReactiveX/rxjs/pull/2491.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/2491.patch","merged_at":"2018-03-30T22:40:17Z"},"body":"**Description:**\r\n\r\nI've noticed that `pluck()`, `bufferTime()` and `asObservable()` operators don't have any performance tests so this PR adds them. All three of them have their RxJS 4 counterparts.\r\n\r\nThere're more operators without performance tests (for example `audit()` or `windowToggle()`) but these don't have any RxJS 4 alternative to compare them to and the current benchmark runner requires always two tests per suite. But this is probably for a separate another issue.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2491/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2491/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/3855","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/3855/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/3855/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/3855/events","html_url":"https://github.com/ReactiveX/rxjs/pull/3855","id":335068353,"node_id":"MDExOlB1bGxSZXF1ZXN0MTk2ODgxNTk2","number":3855,"title":"chore(build): Build a umd bundle of rxjs-compat","user":{"login":"wbinnssmith","id":755844,"node_id":"MDQ6VXNlcjc1NTg0NA==","avatar_url":"https://avatars.githubusercontent.com/u/755844?v=4","gravatar_id":"","url":"https://api.github.com/users/wbinnssmith","html_url":"https://github.com/wbinnssmith","followers_url":"https://api.github.com/users/wbinnssmith/followers","following_url":"https://api.github.com/users/wbinnssmith/following{/other_user}","gists_url":"https://api.github.com/users/wbinnssmith/gists{/gist_id}","starred_url":"https://api.github.com/users/wbinnssmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wbinnssmith/subscriptions","organizations_url":"https://api.github.com/users/wbinnssmith/orgs","repos_url":"https://api.github.com/users/wbinnssmith/repos","events_url":"https://api.github.com/users/wbinnssmith/events{/privacy}","received_events_url":"https://api.github.com/users/wbinnssmith/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-06-23T04:46:07Z","updated_at":"2018-08-25T20:44:04Z","closed_at":"2018-07-26T20:17:07Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/3855","html_url":"https://github.com/ReactiveX/rxjs/pull/3855","diff_url":"https://github.com/ReactiveX/rxjs/pull/3855.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/3855.patch","merged_at":"2018-07-26T20:17:07Z"},"body":"Resolves #3626\n\nThis introduces a build step for creating a umd bundle (and minified umd bundle)  of rxjs-compat.\n\nThis involved creating a new tsconfig for esm5 for rollup (no helpers), a new rollup build script for producing the bundle, and a closure build script for producing the minified bundle. Each was derived from their rxjs counterpart.\n\nThis also creates a `umd.ts` entrypoint in `rxjs-compat` which exposes `testing`, `operators`, etc. just like the rxjs umd entry.\n\nTested by using this bundle in place of the rxjs 5 bundle in [Nuclide](https://github.com/facebook/nuclide/)\n\nTested the performance impact of the unminified bundle by loading it in <=20ms with `for i in {1..5}; do node -p \"s=Date.now();require('./dist-compat/global/rxjs-compat.umd');Date.now()-s\"; done`. The commonjs entrypoint to `rxjs-compat` loaded in 130ms by comparison. Note this improvement over the [rxjs 5 bundle](https://github.com/ReactiveX/rxjs/pull/2064) which loads in 26ms -- I verified I could reproduce nearly @zertosh's exact values on the hardware I tested 6 on.\n\ncc @zertosh @matthewwithanm @captbaritone","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/3855/reactions","total_count":3,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/3855/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2359","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2359/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2359/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2359/events","html_url":"https://github.com/ReactiveX/rxjs/pull/2359","id":206989249,"node_id":"MDExOlB1bGxSZXF1ZXN0MTA1NzU3ODAw","number":2359,"title":"perf(bufferCount): optimize bufferCount operator","user":{"login":"martinsik","id":238765,"node_id":"MDQ6VXNlcjIzODc2NQ==","avatar_url":"https://avatars.githubusercontent.com/u/238765?v=4","gravatar_id":"","url":"https://api.github.com/users/martinsik","html_url":"https://github.com/martinsik","followers_url":"https://api.github.com/users/martinsik/followers","following_url":"https://api.github.com/users/martinsik/following{/other_user}","gists_url":"https://api.github.com/users/martinsik/gists{/gist_id}","starred_url":"https://api.github.com/users/martinsik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinsik/subscriptions","organizations_url":"https://api.github.com/users/martinsik/orgs","repos_url":"https://api.github.com/users/martinsik/repos","events_url":"https://api.github.com/users/martinsik/events{/privacy}","received_events_url":"https://api.github.com/users/martinsik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2017-02-11T16:04:32Z","updated_at":"2018-06-06T12:40:56Z","closed_at":"2017-04-03T19:50:44Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/2359","html_url":"https://github.com/ReactiveX/rxjs/pull/2359","diff_url":"https://github.com/ReactiveX/rxjs/pull/2359.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/2359.patch","merged_at":"2017-04-03T19:50:44Z"},"body":"The `bufferCount()` operator can be used as `bufferCount(5, 3)` or `bufferCount(5)` (= `bufferCount(5, 5)`.\r\n\r\nMy assumption is that the second use-case `bufferCount(5)` is very common (maybe even more common that the first one) and can be handled in an simpler way. This means instead of keeping an array of buffers `T[][]` we can have just a single buffer `T[]`. This simplifies the subscriber class significantly and runs faster.\r\n\r\nFor this reason I split the original subscriber into two classes `BufferSkipCountSubscriber` and `BufferCountSubscriber` each handling one use-case.\r\n\r\n**Performance of `bufferCount(5)`:**\r\n\r\nBefore:\r\n\r\n```\r\n$ node perf/micro buffercount \r\n                                         |                     RxJS 4.1.0 |                     RxJS 5.1.0 |          factor |      % improved\r\n---------------------------------------------------------------------------------------------------------------------------------------------------\r\n                 buffercount - immediate |                13,277 (Â±1.39%) |               308,516 (Â±2.25%) |          23.24x |        2,223.6%\r\n                             buffercount |                 9,046 (Â±2.52%) |               143,636 (Â±2.19%) |          15.88x |        1,487.9%\r\n```\r\n\r\nAfter:\r\n\r\n```\r\n$ node perf/micro buffercount \r\n                                         |                     RxJS 4.1.0 |                     RxJS 5.1.0 |          factor |      % improved\r\n---------------------------------------------------------------------------------------------------------------------------------------------------\r\n                 buffercount - immediate |                13,205 (Â±1.02%) |               525,996 (Â±1.84%) |          39.83x |        3,883.2%\r\n                             buffercount |                 9,330 (Â±2.55%) |               204,174 (Â±2.12%) |          21.88x |        2,088.4%\r\n```\r\n\r\nThis improves performance on the `buffercount - immediate` script roughly from `23.24x` to `39.83x` and `buffercount` from `15.88x` to `21.88x`.\r\n\r\nPerformance of `bufferCount(5, 3)` remains the same. I could just remove one additional condition that wasn't necessary any more when we have two separate classes now.\r\n\r\nI also tried to make an implementations using only fixed size arrays for both use-cases but these always turned out to be less efficient than the current implementation. It required calculating indices on every `next()`, at least one additional `if` condition and calling `Array.split()` to clone the buffer when calling `destination.next(...)`. Using `Array.push()` without `Array.split()` was always faster.","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2359/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2076","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2076/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2076/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2076/events","html_url":"https://github.com/ReactiveX/rxjs/pull/2076","id":185189204,"node_id":"MDExOlB1bGxSZXF1ZXN0OTA4NTg4OTQ=","number":2076,"title":"fix(bufferCount): will behave as expected when `startBufferEvery` is â€¦","user":{"login":"benlesh","id":1540597,"node_id":"MDQ6VXNlcjE1NDA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1540597?v=4","gravatar_id":"","url":"https://api.github.com/users/benlesh","html_url":"https://github.com/benlesh","followers_url":"https://api.github.com/users/benlesh/followers","following_url":"https://api.github.com/users/benlesh/following{/other_user}","gists_url":"https://api.github.com/users/benlesh/gists{/gist_id}","starred_url":"https://api.github.com/users/benlesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benlesh/subscriptions","organizations_url":"https://api.github.com/users/benlesh/orgs","repos_url":"https://api.github.com/users/benlesh/repos","events_url":"https://api.github.com/users/benlesh/events{/privacy}","received_events_url":"https://api.github.com/users/benlesh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2016-10-25T17:56:41Z","updated_at":"2018-06-06T18:40:56Z","closed_at":"2016-10-26T22:33:33Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/2076","html_url":"https://github.com/ReactiveX/rxjs/pull/2076","diff_url":"https://github.com/ReactiveX/rxjs/pull/2076.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/2076.patch","merged_at":"2016-10-26T22:33:32Z"},"body":"â€¦greater than `bufferSize`\n- fixed issue where internal `buffers` store was keeping an additional buffer for no good reason\n- improved logic and performance around updating internal `buffers` list\n- adds a test to ensure proper behavior\n\nfixes #2062\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2076/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1077","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1077/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1077/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1077/events","html_url":"https://github.com/ReactiveX/rxjs/pull/1077","id":122374172,"node_id":"MDExOlB1bGxSZXF1ZXN0NTM3NjY5NDY=","number":1077,"title":"chore(typings): Enabled noImplictAny","user":{"login":"david-driscoll","id":1269157,"node_id":"MDQ6VXNlcjEyNjkxNTc=","avatar_url":"https://avatars.githubusercontent.com/u/1269157?v=4","gravatar_id":"","url":"https://api.github.com/users/david-driscoll","html_url":"https://github.com/david-driscoll","followers_url":"https://api.github.com/users/david-driscoll/followers","following_url":"https://api.github.com/users/david-driscoll/following{/other_user}","gists_url":"https://api.github.com/users/david-driscoll/gists{/gist_id}","starred_url":"https://api.github.com/users/david-driscoll/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/david-driscoll/subscriptions","organizations_url":"https://api.github.com/users/david-driscoll/orgs","repos_url":"https://api.github.com/users/david-driscoll/repos","events_url":"https://api.github.com/users/david-driscoll/events{/privacy}","received_events_url":"https://api.github.com/users/david-driscoll/received_events","type":"User","site_admin":false},"labels":[{"id":241316858,"node_id":"MDU6TGFiZWwyNDEzMTY4NTg=","url":"https://api.github.com/repos/ReactiveX/rxjs/labels/blocked","name":"blocked","color":"e11d21","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":41,"created_at":"2015-12-15T21:46:18Z","updated_at":"2018-06-07T14:02:31Z","closed_at":"2016-01-11T00:15:49Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/1077","html_url":"https://github.com/ReactiveX/rxjs/pull/1077","diff_url":"https://github.com/ReactiveX/rxjs/pull/1077.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/1077.patch","merged_at":"2016-01-11T00:15:49Z"},"body":"With this change compliation time and performance is improved\n\n---\n\n@kwonoj  This was the quick way, there might a few places where the formatting, or in some cases the variable names used in method signatures that have changed.  If I need to reverse those let me know and I'll make a pass at it shortly.\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1077/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1251","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1251/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1251/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1251/events","html_url":"https://github.com/ReactiveX/rxjs/pull/1251","id":128694433,"node_id":"MDExOlB1bGxSZXF1ZXN0NTcxNTkyNDU=","number":1251,"title":"Perf or no perf, there is no try...","user":{"login":"benlesh","id":1540597,"node_id":"MDQ6VXNlcjE1NDA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1540597?v=4","gravatar_id":"","url":"https://api.github.com/users/benlesh","html_url":"https://github.com/benlesh","followers_url":"https://api.github.com/users/benlesh/followers","following_url":"https://api.github.com/users/benlesh/following{/other_user}","gists_url":"https://api.github.com/users/benlesh/gists{/gist_id}","starred_url":"https://api.github.com/users/benlesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benlesh/subscriptions","organizations_url":"https://api.github.com/users/benlesh/orgs","repos_url":"https://api.github.com/users/benlesh/repos","events_url":"https://api.github.com/users/benlesh/events{/privacy}","received_events_url":"https://api.github.com/users/benlesh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2016-01-26T01:44:55Z","updated_at":"2018-06-07T01:41:32Z","closed_at":"2016-01-27T04:58:38Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/1251","html_url":"https://github.com/ReactiveX/rxjs/pull/1251","diff_url":"https://github.com/ReactiveX/rxjs/pull/1251.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/1251.patch","merged_at":"2016-01-27T04:58:38Z"},"body":"I discovered today that adding custom tryCatcher members to operators with try/catch optimization concerns actually improved performance quite a bit.\n\nSo far: `map` doubled in overall speed (from factor of 1.7x to 3.2x on my machine),\n`mergeMap` improved by a \"factor\" of a little more than 1x\n`zip` improved by a \"factor\" of a little more than 1x-2x.\n\n(\"factor\" coming from micro perf output).\n\nThis will be part of an effort to go through and examine improvements that can be made where `tryCatch`/`errorObject` is being used.\n\nSee commits for details.\n\nAll of these perf tests are of course in V8/Node, however I don't see any reason they wouldn't carry over to other JIT'ed runtimes.\n\ncc/ @trxcllnt \n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1251/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2316","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2316/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2316/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2316/events","html_url":"https://github.com/ReactiveX/rxjs/pull/2316","id":204014914,"node_id":"MDExOlB1bGxSZXF1ZXN0MTAzNzM4OTMx","number":2316,"title":"feat(skipLast): add skipLast operator ","user":{"login":"martinsik","id":238765,"node_id":"MDQ6VXNlcjIzODc2NQ==","avatar_url":"https://avatars.githubusercontent.com/u/238765?v=4","gravatar_id":"","url":"https://api.github.com/users/martinsik","html_url":"https://github.com/martinsik","followers_url":"https://api.github.com/users/martinsik/followers","following_url":"https://api.github.com/users/martinsik/following{/other_user}","gists_url":"https://api.github.com/users/martinsik/gists{/gist_id}","starred_url":"https://api.github.com/users/martinsik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinsik/subscriptions","organizations_url":"https://api.github.com/users/martinsik/orgs","repos_url":"https://api.github.com/users/martinsik/repos","events_url":"https://api.github.com/users/martinsik/events{/privacy}","received_events_url":"https://api.github.com/users/martinsik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2017-01-30T13:48:17Z","updated_at":"2018-06-06T09:41:44Z","closed_at":"2017-05-09T20:34:43Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/2316","html_url":"https://github.com/ReactiveX/rxjs/pull/2316","diff_url":"https://github.com/ReactiveX/rxjs/pull/2316.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/2316.patch","merged_at":"2017-05-09T20:34:43Z"},"body":"- [X] Add the operator to Rx\r\n- [X] It must have a `-spec.ts` tests file covering the canonical corner cases, with marble diagram tests\r\n- [X] If possible, write a `asDiagram` test case too, for PNG diagram generation purposes\r\n- [X] The operator must be documented in JSDoc style in the implementation file, including also the PNG marble diagram image\r\n- [X] The operator should be listed in `doc/operators.md` in a category of operators\r\n- [X] It should also be inserted in the operator decision tree file `doc/decision-tree-widget/tree.yml`\r\n- [X] You may need to update `MIGRATION.md` if the operator differs from the corresponding one in RxJS v4\r\n\r\n**Description:**\r\n\r\nAdds skipLast operator from RxJS 4. Its internals and tests are based on takeLast for better performance.\r\n\r\n**Related issue (if exists):**\r\n\r\nCloses #1404","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2316/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2316/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/3295","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/3295/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/3295/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/3295/events","html_url":"https://github.com/ReactiveX/rxjs/pull/3295","id":294104055,"node_id":"MDExOlB1bGxSZXF1ZXN0MTY2OTU4Mzgz","number":3295,"title":"refactor(retryWhen/repeatWhen): Refactor \"fooling\" the _unsubscribe method","user":{"login":"martinsik","id":238765,"node_id":"MDQ6VXNlcjIzODc2NQ==","avatar_url":"https://avatars.githubusercontent.com/u/238765?v=4","gravatar_id":"","url":"https://api.github.com/users/martinsik","html_url":"https://github.com/martinsik","followers_url":"https://api.github.com/users/martinsik/followers","following_url":"https://api.github.com/users/martinsik/following{/other_user}","gists_url":"https://api.github.com/users/martinsik/gists{/gist_id}","starred_url":"https://api.github.com/users/martinsik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/martinsik/subscriptions","organizations_url":"https://api.github.com/users/martinsik/orgs","repos_url":"https://api.github.com/users/martinsik/repos","events_url":"https://api.github.com/users/martinsik/events{/privacy}","received_events_url":"https://api.github.com/users/martinsik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-02-03T11:28:43Z","updated_at":"2018-06-05T22:35:47Z","closed_at":"2018-03-30T22:32:23Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/3295","html_url":"https://github.com/ReactiveX/rxjs/pull/3295","diff_url":"https://github.com/ReactiveX/rxjs/pull/3295.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/3295.patch","merged_at":"2018-03-30T22:32:23Z"},"body":"**Description:**\r\n\r\nI was going through the `retryWhen` operator code and I noticed that the `notifyNext` is kind of confusing because it was first assigning properties to `null` and then reassigning them back to their original values: https://github.com/ReactiveX/rxjs/blob/master/src/internal/operators/retryWhen.ts#L102-L116\r\n\r\n```\r\nconst { errors, retries, retriesSubscription } = this;\r\n\r\nthis.errors = null;\r\nthis.retries = null;\r\nthis.retriesSubscription = null;\r\n\r\nthis._unsubscribeAndRecycle();\r\n\r\nthis.errors = errors;\r\nthis.retries = retries;\r\nthis.retriesSubscription = retriesSubscription;\r\n```\r\n\r\nIt turned out that this is necessary to \"fool\" the [`_unsubscribe`](https://github.com/ReactiveX/rxjs/blob/master/src/internal/operators/retryWhen.ts#L89) method to do actually nothing (all conditions result to `false` because all properties are `null` and then just get reassigned back). Then I noticed the same code appears in `repeatWhen` as well.\r\n\r\nSo I thought it'll be easier to reassign only the `_unsubscribe` method itself instead of each property and thus make it a little simpler (the `_unsubscribe` method doesn't need to exist https://github.com/ReactiveX/rxjs/blob/master/src/internal/Subscription.ts#L92).\r\n\r\n```\r\nthis._unsubscribe = null;\r\nthis._unsubscribeAndRecycle();\r\nthis._unsubscribe = _unsubscribe;\r\n```\r\n\r\nAll tests are passing. This should also slightly increase performance but I guess it's not really important with this type of operators.\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/3295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/3295/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2851","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2851/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2851/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2851/events","html_url":"https://github.com/ReactiveX/rxjs/pull/2851","id":259985517,"node_id":"MDExOlB1bGxSZXF1ZXN0MTQyNzAxNjY0","number":2851,"title":"Simplify test script pipeline","user":{"login":"kwonoj","id":1210596,"node_id":"MDQ6VXNlcjEyMTA1OTY=","avatar_url":"https://avatars.githubusercontent.com/u/1210596?v=4","gravatar_id":"","url":"https://api.github.com/users/kwonoj","html_url":"https://github.com/kwonoj","followers_url":"https://api.github.com/users/kwonoj/followers","following_url":"https://api.github.com/users/kwonoj/following{/other_user}","gists_url":"https://api.github.com/users/kwonoj/gists{/gist_id}","starred_url":"https://api.github.com/users/kwonoj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kwonoj/subscriptions","organizations_url":"https://api.github.com/users/kwonoj/orgs","repos_url":"https://api.github.com/users/kwonoj/repos","events_url":"https://api.github.com/users/kwonoj/events{/privacy}","received_events_url":"https://api.github.com/users/kwonoj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":15,"created_at":"2017-09-23T05:42:12Z","updated_at":"2018-06-06T05:46:13Z","closed_at":"2017-10-27T03:21:03Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/2851","html_url":"https://github.com/ReactiveX/rxjs/pull/2851","diff_url":"https://github.com/ReactiveX/rxjs/pull/2851.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/2851.patch","merged_at":"2017-10-27T03:21:03Z"},"body":"<!--\r\nThank you very much for your pull request!\r\n\r\nIf your PR is the addition of a new operator, please make sure all these boxes are ticked with an x:\r\n\r\n- [ ] Add the operator to Rx\r\n- [ ] It must have a `-spec.ts` tests file covering the canonical corner cases, with marble diagram tests\r\n- [ ] If possible, write a `asDiagram` test case too, for PNG diagram generation purposes\r\n- [ ] The spec file should have a type definition test at the end of the spec to verify type definition for various use cases\r\n- [ ] The operator must be documented in JSDoc style in the implementation file, including also the PNG marble diagram image\r\n- [ ] The operator should be listed in `doc/operators.md` in a category of operators\r\n- [ ] It should also be inserted in the operator decision tree file `doc/decision-tree-widget/tree.yml`\r\n- [ ] You may need to update `MIGRATION.md` if the operator differs from the corresponding one in RxJS v4\r\n-->\r\n\r\n**Description:**\r\nThis PR fixes https://github.com/ReactiveX/rxjs/issues/2850, also revises current build pipeline around unit tests. Our test setup is quite complex, by using compiled output from src for importing modules, then build each (src, spec) separately to run test cases. This also causes coverage remapping tricky, as recent change caused.\r\n\r\nInstead, PR changes test cases to require sources directly - then run compile just once for specs and create coverage as well. It get rid of few npm scripts for testing purpose only, performance wise doesn't have much differences.\r\n\r\nFew caveat is it requires to update some other scripts like doc generation but it can be dealt with seperately.\r\n\r\n**Related issue (if exists):**\r\n- closes https://github.com/ReactiveX/rxjs/issues/2850.","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/2851/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1820","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1820/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1820/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1820/events","html_url":"https://github.com/ReactiveX/rxjs/pull/1820","id":164750568,"node_id":"MDExOlB1bGxSZXF1ZXN0NzY4OTM0NTU=","number":1820,"title":"fix(schedulers): fix asap and animationFrame schedulers to execute across their respective async boundaries","user":{"login":"trxcllnt","id":178183,"node_id":"MDQ6VXNlcjE3ODE4Mw==","avatar_url":"https://avatars.githubusercontent.com/u/178183?v=4","gravatar_id":"","url":"https://api.github.com/users/trxcllnt","html_url":"https://github.com/trxcllnt","followers_url":"https://api.github.com/users/trxcllnt/followers","following_url":"https://api.github.com/users/trxcllnt/following{/other_user}","gists_url":"https://api.github.com/users/trxcllnt/gists{/gist_id}","starred_url":"https://api.github.com/users/trxcllnt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trxcllnt/subscriptions","organizations_url":"https://api.github.com/users/trxcllnt/orgs","repos_url":"https://api.github.com/users/trxcllnt/repos","events_url":"https://api.github.com/users/trxcllnt/events{/privacy}","received_events_url":"https://api.github.com/users/trxcllnt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2016-07-11T02:46:26Z","updated_at":"2018-06-06T21:42:22Z","closed_at":"2016-07-16T01:57:38Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/1820","html_url":"https://github.com/ReactiveX/rxjs/pull/1820","diff_url":"https://github.com/ReactiveX/rxjs/pull/1820.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/1820.patch","merged_at":"2016-07-16T01:57:38Z"},"body":"<!--\nThank you very much for your pull request!\n\nIf your PR is the addition of a new operator, please make sure all these boxes are ticked with an x:\n\n- [ ] Add the operator to Rx\n- [ ] It must have a `-spec.ts` tests file covering the canonical corner cases, with marble diagram tests\n- [ ] If possible, write a `asDiagram` test case too, for PNG diagram generation purposes\n- [ ] The spec file should have a type definition test at the end of the spec to verify type definition for various use cases\n- [ ] The operator must be documented in JSDoc style in the implementation file, including also the PNG marble diagram image\n- [ ] The operator should be listed in `doc/operators.md` in a category of operators\n- [ ] It should also be inserted in the operator decision tree file `doc/decision-tree-widget/tree.yml`\n- [ ] You may need to update `MIGRATION.md` if the operator differs from the corresponding one in RxJS v4\n-->\n\n**Description:**\n\nThe AsapScheduler and AnimationFrameScheduler were totally busted. My bad. Now they execute their scheduled actions in batches. If actions reschedule while executing a batch, a new frame is requested for the rescheduled action to execute in.\n\nOther updates included in this PR:\n- simplifies the public `Scheduler` and `Action` APIs. Implementation details like the `actions` queue and `active` boolean are now on the concrete implementations, so it's easier for people to implement the Scheduler API.\n- renames `FutureAction` -> `AsyncAction` to conform to the same naming convention as the rest of the Action types.\n- Actions should be able to be recursively rescheduled with different delay times and switch between their delay = 0 and delay > 0 behaviors. For example, a delay=0 `QueueAction` should be able to reschedule with delay > 0 and fall back to its parent class's (`AsyncAction`) behavior.\n- If a scheduled action throws an error, the schedulers now dispose (and un-reference) the rest of the scheduled actions before re-throwing. I'm not sure how necessary this is, but it did seem like keeping the actions in the queue could was incorrect (they'd stick around until the Scheduler was flushed, at which time they'd be executed) or possibly leaky.\n\n**Related issue (if exists):**\n\nFixes #1814\n\n**Performance results:**\n\nRe-ran a few of the performance tests to check regressions when using the queue scheduler. No discernible perf hits.\n\nCurrent master:\n\n|  | RxJS 4.1.0 | RxJS 5.0.0-beta.10 | factor | % improved |\n| --- | --- | --- | --- | --- |\n| concat - immediate | 50,291 (Â±1.21%) | 357,051 (Â±2.00%) | 7.10x | 610.0% |\n| merge - immediate | 5,621 (Â±1.53%) | 56,834 (Â±1.00%) | 10.11x | 911.1% |\n| concat | 21,527 (Â±1.74%) | 153,550 (Â±4.04%) | 7.13x | 613.3% |\n| merge | 2,283 (Â±2.35%) | 21,295 (Â±2.45%) | 9.33x | 832.8% |\n| from-with-array - immediate | 127,203 (Â±1.81%) | 895,727 (Â±1.10%) | 7.04x | 604.2% |\n| from-with-iterable - immediate | 105,449 (Â±2.19%) | 357,870 (Â±3.85%) | 3.39x | 239.4% |\n| from-with-string - immediate | 60,665 (Â±4.35%) | 384,754 (Â±3.69%) | 6.34x | 534.2% |\n| of - immediate | 59,050 (Â±3.56%) | 829,434 (Â±3.29%) | 14.05x | 1,304.6% |\n| from-with-array | 54,174 (Â±3.47%) | 668,259 (Â±3.17%) | 12.34x | 1,133.6% |\n| from-with-iterable | 51,085 (Â±3.41%) | 366,127 (Â±2.51%) | 7.17x | 616.7% |\n| from-with-string | 33,901 (Â±2.78%) | 365,895 (Â±3.86%) | 10.79x | 979.3% |\n| of | 60,350 (Â±3.36%) | 443,226 (Â±2.38%) | 7.34x | 634.4% |\n\nThis PR:\n\n|  | RxJS 4.1.0 | RxJS 5.0.0-beta.10 | factor | % improved |\n| --- | --- | --- | --- | --- |\n| concat - immediate | 54,293 (Â±1.61%) | 386,044 (Â±1.16%) | 7.11x | 611.0% |\n| merge - immediate | 5,751 (Â±1.11%) | 57,951 (Â±0.86%) | 10.08x | 907.6% |\n| concat | 22,460 (Â±1.07%) | 169,922 (Â±1.51%) | 7.57x | 656.5% |\n| merge | 2,415 (Â±1.21%) | 22,674 (Â±1.01%) | 9.39x | 838.7% |\n| from-with-array - immediate | 128,302 (Â±1.54%) | 851,673 (Â±1.70%) | 6.64x | 563.8% |\n| from-with-iterable - immediate | 114,602 (Â±1.34%) | 364,576 (Â±1.75%) | 3.18x | 218.1% |\n| from-with-string - immediate | 60,711 (Â±4.18%) | 367,734 (Â±3.85%) | 6.06x | 505.7% |\n| of - immediate | 58,137 (Â±3.61%) | 853,370 (Â±3.29%) | 14.68x | 1,367.9% |\n| from-with-array | 51,498 (Â±3.14%) | 691,779 (Â±3.70%) | 13.43x | 1,243.3% |\n| from-with-iterable | 51,048 (Â±3.52%) | 372,203 (Â±3.40%) | 7.29x | 629.1% |\n| from-with-string | 33,374 (Â±3.06%) | 394,613 (Â±2.56%) | 11.82x | 1,082.4% |\n| of | 53,013 (Â±4.33%) | 395,391 (Â±2.94%) | 7.46x | 645.8% |\n\nSide-by-side:\n\n|  | RxJS 5.0.0-beta.10 (master) | RxJS 5.0.0-beta.10 (PR) |\n| --- | --- | --- |\n| concat - immediate | 357,051 (Â±2.00%) | 386,044 (Â±1.16%) |\n| merge - immediate | 56,834 (Â±1.00%) | 57,951 (Â±0.86%) |\n| concat | 153,550 (Â±4.04%) | 169,922 (Â±1.51%) |\n| merge | 21,295 (Â±2.45%) | 22,674 (Â±1.01%) |\n| from-with-array - immediate | 895,727 (Â±1.10%) | 851,673 (Â±1.70%) |\n| from-with-iterable - immediate | 357,870 (Â±3.85%) | 364,576 (Â±1.75%) |\n| from-with-string - immediate | 384,754 (Â±3.69%) | 367,734 (Â±3.85%) |\n| of - immediate | 829,434 (Â±3.29%) | 853,370 (Â±3.29%) |\n| from-with-array | 668,259 (Â±3.17%) | 691,779 (Â±3.70%) |\n| from-with-iterable | 366,127 (Â±2.51%) | 372,203 (Â±3.40%) |\n| from-with-string | 365,895 (Â±3.86%) | 394,613 (Â±2.56%) |\n| of | 443,226 (Â±2.38%) | 395,391 (Â±2.94%) |\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1820/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/1820/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/521","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/521/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/521/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/521/events","html_url":"https://github.com/ReactiveX/rxjs/pull/521","id":111295839,"node_id":"MDExOlB1bGxSZXF1ZXN0NDc2MDM5MTE=","number":521,"title":"Scalar perf","user":{"login":"benlesh","id":1540597,"node_id":"MDQ6VXNlcjE1NDA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1540597?v=4","gravatar_id":"","url":"https://api.github.com/users/benlesh","html_url":"https://github.com/benlesh","followers_url":"https://api.github.com/users/benlesh/followers","following_url":"https://api.github.com/users/benlesh/following{/other_user}","gists_url":"https://api.github.com/users/benlesh/gists{/gist_id}","starred_url":"https://api.github.com/users/benlesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benlesh/subscriptions","organizations_url":"https://api.github.com/users/benlesh/orgs","repos_url":"https://api.github.com/users/benlesh/repos","events_url":"https://api.github.com/users/benlesh/events{/privacy}","received_events_url":"https://api.github.com/users/benlesh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2015-10-13T23:59:24Z","updated_at":"2018-06-07T01:41:58Z","closed_at":"2015-10-14T17:06:54Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/521","html_url":"https://github.com/ReactiveX/rxjs/pull/521","diff_url":"https://github.com/ReactiveX/rxjs/pull/521.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/521.patch","merged_at":"2015-10-14T17:06:54Z"},"body":"Adding a bunch of overrides to ScalarObservable to optimize performance. This is an approach different than what we've done in the past, in that it puts an override directly on ScalarObservable, rather than doing type-checking in the functions themselves.\n\nHere is a list of results (Before and After):\n\n```\nBefore\n\n                                         |                     RxJS 4.0.1 |             RxJS 5.0.0-alpha.3 |          factor |      % improved\n---------------------------------------------------------------------------------------------------------------------------------------------------\n         filter-scalar-false - immediate |               717,228 (Â±1.17%) |             1,516,863 (Â±0.45%) |           2.11x |          111.5%\n          filter-scalar-true - immediate |               524,921 (Â±0.62%) |               966,993 (Â±0.65%) |           1.84x |           84.2%\n                  map-scalar - immediate |               641,470 (Â±0.87%) |             1,372,438 (Â±0.62%) |           2.14x |          114.0%\n        reduce-scalar-noseed - immediate |               687,545 (Â±1.95%) |             2,429,996 (Â±0.81%) |           3.53x |          253.4%\n               reduce-scalar - immediate |               483,549 (Â±0.72%) |             1,119,916 (Â±1.03%) |           2.32x |          131.6%\n          scan-scalar-noseed - immediate |               220,031 (Â±0.60%) |             2,422,950 (Â±0.67%) |          11.01x |        1,001.2%\n                 scan-scalar - immediate |               189,861 (Â±1.00%) |             1,161,650 (Â±0.51%) |           6.12x |          511.8%\n                count-scalar - immediate |               745,924 (Â±0.67%) |             2,462,605 (Â±0.58%) |           3.30x |          230.1%\n               skip-scalar-0 - immediate |               703,792 (Â±0.76%) |             2,545,683 (Â±0.52%) |           3.62x |          261.7%\n     skip-scalar-outofbounds - immediate |               635,857 (Â±0.61%) |             1,825,839 (Â±0.78%) |           2.87x |          187.1%\n                 take-scalar - immediate |               707,963 (Â±0.50%) |             2,576,310 (Â±0.68%) |           3.64x |          263.9%\n\n\n\n\n\n\n\n\nAfter\n\n                                         |                     RxJS 4.0.1 |             RxJS 5.0.0-alpha.3 |          factor |      % improved\n---------------------------------------------------------------------------------------------------------------------------------------------------\n         filter-scalar-false - immediate |               704,688 (Â±3.42%) |             6,231,688 (Â±0.79%) |           8.84x |          784.3%\n          filter-scalar-true - immediate |               520,997 (Â±0.97%) |             1,970,056 (Â±0.53%) |           3.78x |          278.1%\n                  map-scalar - immediate |               626,140 (Â±1.73%) |             4,051,141 (Â±0.76%) |           6.47x |          547.0%\n        reduce-scalar-noseed - immediate |               674,846 (Â±1.43%) |             4,074,599 (Â±0.88%) |           6.04x |          503.8%\n               reduce-scalar - immediate |               468,252 (Â±0.53%) |             2,007,994 (Â±0.71%) |           4.29x |          328.8%\n          scan-scalar-noseed - immediate |               217,599 (Â±2.10%) |             4,043,362 (Â±0.80%) |          18.58x |        1,758.2%\n                 scan-scalar - immediate |               192,236 (Â±0.52%) |             1,970,688 (Â±0.94%) |          10.25x |          925.1%\n                count-scalar - immediate |               691,734 (Â±2.01%) |             4,107,881 (Â±0.73%) |           5.94x |          493.9%\n               skip-scalar-0 - immediate |               704,049 (Â±1.31%) |             4,115,490 (Â±0.65%) |           5.85x |          484.5%\n     skip-scalar-outofbounds - immediate |               647,033 (Â±0.55%) |             2,456,657 (Â±0.85%) |           3.80x |          279.7%\n                 take-scalar - immediate |               688,545 (Â±1.71%) |             4,030,593 (Â±0.54%) |           5.85x |          485.4%\n```\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/521/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/263","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/263/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/263/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/263/events","html_url":"https://github.com/ReactiveX/rxjs/pull/263","id":104777473,"node_id":"MDExOlB1bGxSZXF1ZXN0NDQxNTQ3NTg=","number":263,"title":"chore(test): add macro performance tests for zip","user":{"login":"kwonoj","id":1210596,"node_id":"MDQ6VXNlcjEyMTA1OTY=","avatar_url":"https://avatars.githubusercontent.com/u/1210596?v=4","gravatar_id":"","url":"https://api.github.com/users/kwonoj","html_url":"https://github.com/kwonoj","followers_url":"https://api.github.com/users/kwonoj/followers","following_url":"https://api.github.com/users/kwonoj/following{/other_user}","gists_url":"https://api.github.com/users/kwonoj/gists{/gist_id}","starred_url":"https://api.github.com/users/kwonoj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kwonoj/subscriptions","organizations_url":"https://api.github.com/users/kwonoj/orgs","repos_url":"https://api.github.com/users/kwonoj/repos","events_url":"https://api.github.com/users/kwonoj/events{/privacy}","received_events_url":"https://api.github.com/users/kwonoj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2015-09-03T20:41:25Z","updated_at":"2019-01-19T04:27:27Z","closed_at":"2015-09-04T17:03:46Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/263","html_url":"https://github.com/ReactiveX/rxjs/pull/263","diff_url":"https://github.com/ReactiveX/rxjs/pull/263.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/263.patch","merged_at":"2015-09-04T17:03:46Z"},"body":"Attempt to create macro test to close https://github.com/ReactiveX/RxJS/issues/259\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/263/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/263/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/243","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/243/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/243/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/243/events","html_url":"https://github.com/ReactiveX/rxjs/pull/243","id":104176970,"node_id":"MDExOlB1bGxSZXF1ZXN0NDM4MzM4ODA=","number":243,"title":"chore(test): update micro-benchmark performance test for repeat operator","user":{"login":"kwonoj","id":1210596,"node_id":"MDQ6VXNlcjEyMTA1OTY=","avatar_url":"https://avatars.githubusercontent.com/u/1210596?v=4","gravatar_id":"","url":"https://api.github.com/users/kwonoj","html_url":"https://github.com/kwonoj","followers_url":"https://api.github.com/users/kwonoj/followers","following_url":"https://api.github.com/users/kwonoj/following{/other_user}","gists_url":"https://api.github.com/users/kwonoj/gists{/gist_id}","starred_url":"https://api.github.com/users/kwonoj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kwonoj/subscriptions","organizations_url":"https://api.github.com/users/kwonoj/orgs","repos_url":"https://api.github.com/users/kwonoj/repos","events_url":"https://api.github.com/users/kwonoj/events{/privacy}","received_events_url":"https://api.github.com/users/kwonoj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-09-01T03:25:37Z","updated_at":"2019-01-19T04:27:33Z","closed_at":"2015-09-01T18:05:58Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/243","html_url":"https://github.com/ReactiveX/rxjs/pull/243","diff_url":"https://github.com/ReactiveX/rxjs/pull/243.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/243.patch","merged_at":"2015-09-01T18:05:58Z"},"body":"minor alignment for micro-perf test cases followed by change https://github.com/ReactiveX/RxJS/pull/234\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/243/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/146","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/146/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/146/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/146/events","html_url":"https://github.com/ReactiveX/rxjs/pull/146","id":98069460,"node_id":"MDExOlB1bGxSZXF1ZXN0NDExOTE3MjA=","number":146,"title":"Adds micro-benchmark performance tests.","user":{"login":"trxcllnt","id":178183,"node_id":"MDQ6VXNlcjE3ODE4Mw==","avatar_url":"https://avatars.githubusercontent.com/u/178183?v=4","gravatar_id":"","url":"https://api.github.com/users/trxcllnt","html_url":"https://github.com/trxcllnt","followers_url":"https://api.github.com/users/trxcllnt/followers","following_url":"https://api.github.com/users/trxcllnt/following{/other_user}","gists_url":"https://api.github.com/users/trxcllnt/gists{/gist_id}","starred_url":"https://api.github.com/users/trxcllnt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trxcllnt/subscriptions","organizations_url":"https://api.github.com/users/trxcllnt/orgs","repos_url":"https://api.github.com/users/trxcllnt/repos","events_url":"https://api.github.com/users/trxcllnt/events{/privacy}","received_events_url":"https://api.github.com/users/trxcllnt/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-07-30T02:05:04Z","updated_at":"2019-01-19T07:37:49Z","closed_at":"2015-07-30T06:05:24Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/146","html_url":"https://github.com/ReactiveX/rxjs/pull/146","diff_url":"https://github.com/ReactiveX/rxjs/pull/146.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/146.patch","merged_at":"2015-07-30T06:05:24Z"},"body":"Addresses #126.\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/146/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/229","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/229/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/229/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/229/events","html_url":"https://github.com/ReactiveX/rxjs/pull/229","id":103802064,"node_id":"MDExOlB1bGxSZXF1ZXN0NDM2NzU5ODA=","number":229,"title":"chore(test): add micro-benchmark performance test for defaultIfEmpty â€¦","user":{"login":"kwonoj","id":1210596,"node_id":"MDQ6VXNlcjEyMTA1OTY=","avatar_url":"https://avatars.githubusercontent.com/u/1210596?v=4","gravatar_id":"","url":"https://api.github.com/users/kwonoj","html_url":"https://github.com/kwonoj","followers_url":"https://api.github.com/users/kwonoj/followers","following_url":"https://api.github.com/users/kwonoj/following{/other_user}","gists_url":"https://api.github.com/users/kwonoj/gists{/gist_id}","starred_url":"https://api.github.com/users/kwonoj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kwonoj/subscriptions","organizations_url":"https://api.github.com/users/kwonoj/orgs","repos_url":"https://api.github.com/users/kwonoj/repos","events_url":"https://api.github.com/users/kwonoj/events{/privacy}","received_events_url":"https://api.github.com/users/kwonoj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-08-28T21:53:34Z","updated_at":"2019-01-19T04:27:40Z","closed_at":"2015-08-28T22:19:57Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/229","html_url":"https://github.com/ReactiveX/rxjs/pull/229","diff_url":"https://github.com/ReactiveX/rxjs/pull/229.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/229.patch","merged_at":"2015-08-28T22:19:57Z"},"body":"â€¦operator.\n\nContinue effort to cover items in issue https://github.com/ReactiveX/RxJS/issues/100\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/229/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/229/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/211","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/211/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/211/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/211/events","html_url":"https://github.com/ReactiveX/rxjs/pull/211","id":103365544,"node_id":"MDExOlB1bGxSZXF1ZXN0NDM0NTI5ODk=","number":211,"title":"Add micro-benchmark performance test for skip operator.","user":{"login":"kwonoj","id":1210596,"node_id":"MDQ6VXNlcjEyMTA1OTY=","avatar_url":"https://avatars.githubusercontent.com/u/1210596?v=4","gravatar_id":"","url":"https://api.github.com/users/kwonoj","html_url":"https://github.com/kwonoj","followers_url":"https://api.github.com/users/kwonoj/followers","following_url":"https://api.github.com/users/kwonoj/following{/other_user}","gists_url":"https://api.github.com/users/kwonoj/gists{/gist_id}","starred_url":"https://api.github.com/users/kwonoj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kwonoj/subscriptions","organizations_url":"https://api.github.com/users/kwonoj/orgs","repos_url":"https://api.github.com/users/kwonoj/repos","events_url":"https://api.github.com/users/kwonoj/events{/privacy}","received_events_url":"https://api.github.com/users/kwonoj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-08-26T21:15:19Z","updated_at":"2019-01-19T07:37:24Z","closed_at":"2015-08-26T21:54:46Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/211","html_url":"https://github.com/ReactiveX/rxjs/pull/211","diff_url":"https://github.com/ReactiveX/rxjs/pull/211.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/211.patch","merged_at":"2015-08-26T21:54:46Z"},"body":"Adding additional micro test coverage for skip operator listed in issue https://github.com/ReactiveX/RxJS/issues/100 by following existing one.\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/211/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/393","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/393/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/393/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/393/events","html_url":"https://github.com/ReactiveX/rxjs/pull/393","id":108059486,"node_id":"MDExOlB1bGxSZXF1ZXN0NDU4NTk4NjU=","number":393,"title":"feat(operator): add find, findIndex operator","user":{"login":"kwonoj","id":1210596,"node_id":"MDQ6VXNlcjEyMTA1OTY=","avatar_url":"https://avatars.githubusercontent.com/u/1210596?v=4","gravatar_id":"","url":"https://api.github.com/users/kwonoj","html_url":"https://github.com/kwonoj","followers_url":"https://api.github.com/users/kwonoj/followers","following_url":"https://api.github.com/users/kwonoj/following{/other_user}","gists_url":"https://api.github.com/users/kwonoj/gists{/gist_id}","starred_url":"https://api.github.com/users/kwonoj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kwonoj/subscriptions","organizations_url":"https://api.github.com/users/kwonoj/orgs","repos_url":"https://api.github.com/users/kwonoj/repos","events_url":"https://api.github.com/users/kwonoj/events{/privacy}","received_events_url":"https://api.github.com/users/kwonoj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2015-09-24T05:10:30Z","updated_at":"2019-01-19T01:14:28Z","closed_at":"2015-09-29T19:55:47Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/393","html_url":"https://github.com/ReactiveX/rxjs/pull/393","diff_url":"https://github.com/ReactiveX/rxjs/pull/393.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/393.patch","merged_at":"2015-09-29T19:55:47Z"},"body":"- add find, findIndex operator\n- add SingleValueSubscriber for common behavior to notify and complete\n  immediately\n\nContinue effort to add operator exists in current RxJS.\n###### `find`, `findIndex` operator is added.\n\nIn document of [`findIndex`](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/findindex.md), return value is `undefined` if there isn't matching element\n\n> ... defined by the specified predicate, if found; otherwise, undefined.\n\nwhile example, and actual code returns `-1` instead. This PR follows existing code behaviors to return `-1`.\n###### add `SingleValueSubscriber` as base of `FindSubscriber` and others\n\nOne of common pattern of subscriber is let subscriber notify and complete immediately, usually related with operators using predicate like `find`, `findIndex`, `isEmpty`, `single`, `last`, and others not yet implemented. `SingleValueSubscriber` exposes `notifyComplete(value)` interface for those behavior to reduce duplication of code.\n1. Performance implication? : Micro perf test for operators having inherited subscriber does not shows noticeable performance hits.\n2. behavior of `notifyComplete` is quite short and small, is it really required? : Thinking about numbers of operators having similar behavior, I think it still makes sense to have common base. It still brings concern of inheritance depth usually want to avoid in general.\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/393/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/295","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/295/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/295/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/295/events","html_url":"https://github.com/ReactiveX/rxjs/pull/295","id":105921217,"node_id":"MDExOlB1bGxSZXF1ZXN0NDQ3MzM1NzY=","number":295,"title":"docs(CONTRIBUTION): add the beginnings of contribution guidelines","user":{"login":"benlesh","id":1540597,"node_id":"MDQ6VXNlcjE1NDA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1540597?v=4","gravatar_id":"","url":"https://api.github.com/users/benlesh","html_url":"https://github.com/benlesh","followers_url":"https://api.github.com/users/benlesh/followers","following_url":"https://api.github.com/users/benlesh/following{/other_user}","gists_url":"https://api.github.com/users/benlesh/gists{/gist_id}","starred_url":"https://api.github.com/users/benlesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benlesh/subscriptions","organizations_url":"https://api.github.com/users/benlesh/orgs","repos_url":"https://api.github.com/users/benlesh/repos","events_url":"https://api.github.com/users/benlesh/events{/privacy}","received_events_url":"https://api.github.com/users/benlesh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-09-10T23:56:50Z","updated_at":"2019-01-19T04:27:16Z","closed_at":"2015-09-11T00:04:37Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/295","html_url":"https://github.com/ReactiveX/rxjs/pull/295","diff_url":"https://github.com/ReactiveX/rxjs/pull/295.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/295.patch","merged_at":"2015-09-11T00:04:37Z"},"body":"- this is partially pulled from Angular's guidelines, and partially from guidelines\n  that are specific to this repository.\n- Adds performance testing guidelines\n- Adds commit message guidelines\n- this does NOT including anything we'd still like to pull over from current RxJS Contribution Guidelines\n\ncloses #135\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/295/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/160","repository_url":"https://api.github.com/repos/ReactiveX/rxjs","labels_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/160/labels{/name}","comments_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/160/comments","events_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/160/events","html_url":"https://github.com/ReactiveX/rxjs/pull/160","id":99371069,"node_id":"MDExOlB1bGxSZXF1ZXN0NDE3NTY5MTE=","number":160,"title":"feat(operator): add toPromise operator. closes #159","user":{"login":"benlesh","id":1540597,"node_id":"MDQ6VXNlcjE1NDA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1540597?v=4","gravatar_id":"","url":"https://api.github.com/users/benlesh","html_url":"https://github.com/benlesh","followers_url":"https://api.github.com/users/benlesh/followers","following_url":"https://api.github.com/users/benlesh/following{/other_user}","gists_url":"https://api.github.com/users/benlesh/gists{/gist_id}","starred_url":"https://api.github.com/users/benlesh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/benlesh/subscriptions","organizations_url":"https://api.github.com/users/benlesh/orgs","repos_url":"https://api.github.com/users/benlesh/repos","events_url":"https://api.github.com/users/benlesh/events{/privacy}","received_events_url":"https://api.github.com/users/benlesh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-08-06T06:52:30Z","updated_at":"2019-01-19T07:37:45Z","closed_at":"2015-08-13T16:20:06Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/ReactiveX/rxjs/pulls/160","html_url":"https://github.com/ReactiveX/rxjs/pull/160","diff_url":"https://github.com/ReactiveX/rxjs/pull/160.diff","patch_url":"https://github.com/ReactiveX/rxjs/pull/160.patch","merged_at":"2015-08-13T16:20:06Z"},"body":"I didn't add a configuration option yet, because I'm still unsure where we're going to put that. But for now, it's the basic implementation.\n\nIt _might_ be worth adding a custom `toPromise` method on `ScalarObservable` for performance reasons, but I have my doubts that will be game-changing for anyone.\n","reactions":{"url":"https://api.github.com/repos/ReactiveX/rxjs/issues/160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/ReactiveX/rxjs/issues/160/timeline","performed_via_github_app":null,"state_reason":null,"score":1}]