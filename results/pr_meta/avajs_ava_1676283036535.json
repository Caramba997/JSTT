[{"url":"https://api.github.com/repos/avajs/ava/issues/2785","repository_url":"https://api.github.com/repos/avajs/ava","labels_url":"https://api.github.com/repos/avajs/ava/issues/2785/labels{/name}","comments_url":"https://api.github.com/repos/avajs/ava/issues/2785/comments","events_url":"https://api.github.com/repos/avajs/ava/issues/2785/events","html_url":"https://github.com/avajs/ava/pull/2785","id":937175612,"node_id":"MDExOlB1bGxSZXF1ZXN0NjgzNzc0Mjg2","number":2785,"title":"Breaking changes to the test() interface","user":{"login":"novemberborn","id":33538,"node_id":"MDQ6VXNlcjMzNTM4","avatar_url":"https://avatars.githubusercontent.com/u/33538?v=4","gravatar_id":"","url":"https://api.github.com/users/novemberborn","html_url":"https://github.com/novemberborn","followers_url":"https://api.github.com/users/novemberborn/followers","following_url":"https://api.github.com/users/novemberborn/following{/other_user}","gists_url":"https://api.github.com/users/novemberborn/gists{/gist_id}","starred_url":"https://api.github.com/users/novemberborn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novemberborn/subscriptions","organizations_url":"https://api.github.com/users/novemberborn/orgs","repos_url":"https://api.github.com/users/novemberborn/repos","events_url":"https://api.github.com/users/novemberborn/events{/privacy}","received_events_url":"https://api.github.com/users/novemberborn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2021-07-05T15:03:11Z","updated_at":"2021-08-12T12:00:18Z","closed_at":"2021-07-10T13:41:20Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/avajs/ava/pulls/2785","html_url":"https://github.com/avajs/ava/pull/2785","diff_url":"https://github.com/avajs/ava/pull/2785.diff","patch_url":"https://github.com/avajs/ava/pull/2785.patch","merged_at":"2021-07-10T13:41:20Z"},"body":"Fixes #2716.\r\n\r\nRemove support for passing multiple test implementations. This affects test() and t.try().\r\n\r\nSupporting multiple implementations made both the implementation and the type definitions needlessly complex. Using for/of syntax it's easy enough to declare tests (or t.try() attempts) with the same arguments.\r\n\r\nChange constructor type for `instanceOf` expectation. It should result in an `Error` subclass.\r\n\r\nAdd `test.macro()`, change how macros are typed. Fixes #2189. `test.macro()` returns an object that can be used with\r\n`test()` and hooks. The `t.context` type is inherited from `test`.\r\n\r\nLike with AVA 3, regular functions that also have a `title` property that is a string-returning function are supported. However this is no longer in the type definition.\r\n\r\nInstead the recommended approach is to use `test.macro()` to declare macros. At a TypeScript level these are easier to discriminate from regular implementations.\r\n\r\nChange implementation argument type constraint to unknown. This mostly impacts macros, for which we'd want to encourage explicit types.\r\n\r\nAdd test for context covariance. Fixes #2253 which no longer seems reproducible.\r\n\r\nAdd test for implementation result types.\r\n\r\nRefactor type definition. Split across multiple files. Rename types, most noticeably `TestInterface` is now `TestFn`, but really anything that had the Interface suffix has been changed. Update some documentation.\r\n\r\nReturn null when throws() and throwsAsync() assertions fail.\r\n\r\nUpdate type definitions to disallow null throws expectations.","reactions":{"url":"https://api.github.com/repos/avajs/ava/issues/2785/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/avajs/ava/issues/2785/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/avajs/ava/issues/2685","repository_url":"https://api.github.com/repos/avajs/ava","labels_url":"https://api.github.com/repos/avajs/ava/issues/2685/labels{/name}","comments_url":"https://api.github.com/repos/avajs/ava/issues/2685/comments","events_url":"https://api.github.com/repos/avajs/ava/issues/2685/events","html_url":"https://github.com/avajs/ava/pull/2685","id":807933970,"node_id":"MDExOlB1bGxSZXF1ZXN0NTczMDcxMjM2","number":2685,"title":"Introducing AVA snapshots v3","user":{"login":"ninevra","id":7622339,"node_id":"MDQ6VXNlcjc2MjIzMzk=","avatar_url":"https://avatars.githubusercontent.com/u/7622339?v=4","gravatar_id":"","url":"https://api.github.com/users/ninevra","html_url":"https://github.com/ninevra","followers_url":"https://api.github.com/users/ninevra/followers","following_url":"https://api.github.com/users/ninevra/following{/other_user}","gists_url":"https://api.github.com/users/ninevra/gists{/gist_id}","starred_url":"https://api.github.com/users/ninevra/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ninevra/subscriptions","organizations_url":"https://api.github.com/users/ninevra/orgs","repos_url":"https://api.github.com/users/ninevra/repos","events_url":"https://api.github.com/users/ninevra/events{/privacy}","received_events_url":"https://api.github.com/users/ninevra/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":25,"created_at":"2021-02-14T10:40:47Z","updated_at":"2021-03-13T16:22:02Z","closed_at":"2021-03-13T16:21:54Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/avajs/ava/pulls/2685","html_url":"https://github.com/avajs/ava/pull/2685","diff_url":"https://github.com/avajs/ava/pull/2685.diff","patch_url":"https://github.com/avajs/ava/pull/2685.patch","merged_at":"2021-03-13T16:21:53Z"},"body":"Implements a new snapshot file format containing all information necessary to generate the snapshot report file.\r\n\r\nAllows the use of `test.skip()`, `test.only()`, `--match`, line number selection, and `t.snapshot.skip()` during `--update-snapshots` runs.\r\n\r\nCloses #2634 by removing the \"Could not update snapshots\" case entirely.\r\nCloses #2635 by allowing existing test & assertion selection mechanisms to be used with `--update-snapshots`.\r\nHopefully will assist with #1768 and #2099.\r\n\r\n## Current proposed snapshot file format:\r\n\r\n- Readable prefix: `AVA Snapshot v3\\n`\r\n- Snapshot version (UInt16LE): 3\r\n- sha256 checksum of the following\r\n- gzip compressed data:\r\n    - CBOR encoded data:\r\n        ```\r\n        {\r\n          blocks: [\r\n            {\r\n              title: \"A test title\",\r\n              snapshots: [\r\n                {\r\n                  label: \"A snapshot label\",\r\n                  buffer: /* Serialized concordance descriptor */\r\n                },\r\n                ...\r\n              ]\r\n            },\r\n            ...\r\n          ]\r\n        }\r\n        ```\r\n\r\nNotes:\r\n- The `label` field is absent unless the user supplied a label. This allows changing the default snapshot label if desired in the future.\r\n- The `buffer` field may be absent, if the snapshot has only ever been skipped. Such snapshots are currently rendered as `<No Data>`.\r\n- Currently, some data still exists only in the report file, namely the filenames of the test file and the snapshot file. This information can be derived from the name of the snapshot file, but theoretically that could change in the future.\r\n\r\n### Pros of the proposed format:\r\n- The snapshot report can now be regenerated from the snapshot file.\r\n    - Enables the use of test selection mechanisms during `--update-snapshots`\r\n    - Allows snapshot reports to be kept always in order, rather than the previous approach of appending changes at the end.\r\n    - Prerequisite for any feature that edits snapshots without overwriting them entirely.\r\n- AVA now maintains less byte-manipulation code\r\n- The snapshot format is easier (though not trivial, because of the gzipping and the header) for third-parties to read\r\n- Adding new properties either to snapshots, to blocks, or to the file overall should be easy and remain readable by older AVAs (though older AVAs may or may not preserve such unrecognized data when updating the .snap file)\r\n\r\n### Cons of the proposed format:\r\n- AVA can't totally guarantee that the snapshot file format is deterministic; some leeway is given to the CBOR encoder. .snap files might show spurious changes e.g. between minor versions of the CBOR encoder.\r\n- AVA's attack surface is changed. Attackers remain able to submit a malicious .snap file in a pull request, in hope of exploting potential bugs in AVA to exfiltrate repository secrets from CI runs or gain control of developers' machines. The total amount of code exposed to such an attack is significantly increased, and unless we carefully filter the result of CBOR decoding (not currently done), such an attacker can produce unexpected javascript types and values. On the other hand, the binary-parsing code now has rather more eyes on it.\r\n\r\n## Other changes:\r\n\r\n### Frontend:\r\n- Rather than append new tests to the old report, adding new tests without `--update-snaphots` now maintains declaration-order.\r\n- When the snapshot report is changed, tests not touched in that run (e.g. removed tests, tests which no longer use snapshots) are moved to the end of the report, maintaining their previous order among themselves.\r\n\r\n### Edge cases:\r\n- If `--update-snapshots` is passed and the only use of snapshots is in discarded `t.try()` attempts, then the snapshot file is removed. There's no snapshot data to record in this case, so I don't see any reason to keep the file.\r\n- If `t.snapshot.skip(); t.snapshot();` is added at the end of a test, `RangeError` is no longer thrown; instead a \"blank space\" is recorded for the skipped snapshot. This is currently rendered in the snapshot report as `<No Data>`.\r\n- `snapshot-manager` now assumes `Array.prototype.sort` is stable. This is the true in all supported Node versions afaik, and is required by the standard as of ecmascript 2019, but notably is false in node v10. If `Array.prototype.sort` is not stable, the snapshot report order may not be deterministic.\r\n\r\n### Backend:\r\n- The snapshot file is eagerly loaded in the `Runner` constructor, rather than lazily loaded.\r\n     - `Runner` always emits a dependency on its `.snap` file, even in `--update-snapshots` mode and even if no snapshot assertions are performed.\r\n     - In some very narrow edge cases where the snapshot file has a valid version and checksum but unreadable data, this could result in throwing an unhelpful error. AVA@3 only threw such errors if snapshots were actually used.\r\n- Introduces a dependency on `cbor`.\r\n- Removes a dependency on `md5-hex`.\r\n\r\n## TODO:\r\n- [x] Implement a placeholder snapshot format containing the necessary information\r\n- [x] Test that snapshot reports can be regenerated from `.snap` files \r\n- [x] Allow running `--update-snapshots` with `test.skip()`, `t.snapshot.skip()`, `test.only()`, `--match`, line number selection\r\n    - [x] Finish testing this\r\n    - [x] Document this\r\n- [x] Refactor & clean up code\r\n    - [x] Ordering data should be collected as-it-happens, like `skipBlock()` and `skipSnapshot()`, not once at load time \r\n    - [x] Now that the snapshot manager has all the information on skipping tests and snapshots, `cleanSnapshots()` fits more naturally as part of `Manager#save()`. But,\r\n    - [x] The above requires that the snapshot manager exist when not used, which conflicts with `Runner`'s lazy-loading behavior, which in turn is relied on by existing `Runner` unit-test suites.\r\n    - [x] Remove code for handling `cannotSave` events\r\n- [x] Debug the performance issues somehow. Are they caused by this PR or preexisting? Are they specific to CI, specific to temp dirs, or neither?\r\n    - Tests were just spawning too many processes in CI. Fixed.\r\n- [x] Finalize the snapshot file format","reactions":{"url":"https://api.github.com/repos/avajs/ava/issues/2685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/avajs/ava/issues/2685/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/avajs/ava/issues/1947","repository_url":"https://api.github.com/repos/avajs/ava","labels_url":"https://api.github.com/repos/avajs/ava/issues/1947/labels{/name}","comments_url":"https://api.github.com/repos/avajs/ava/issues/1947/comments","events_url":"https://api.github.com/repos/avajs/ava/issues/1947/events","html_url":"https://github.com/avajs/ava/pull/1947","id":367502273,"node_id":"MDExOlB1bGxSZXF1ZXN0MjIwOTE1NTk1","number":1947,"title":"Add try-commit to test assertions","user":{"login":"qlonik","id":1373271,"node_id":"MDQ6VXNlcjEzNzMyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/1373271?v=4","gravatar_id":"","url":"https://api.github.com/users/qlonik","html_url":"https://github.com/qlonik","followers_url":"https://api.github.com/users/qlonik/followers","following_url":"https://api.github.com/users/qlonik/following{/other_user}","gists_url":"https://api.github.com/users/qlonik/gists{/gist_id}","starred_url":"https://api.github.com/users/qlonik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/qlonik/subscriptions","organizations_url":"https://api.github.com/users/qlonik/orgs","repos_url":"https://api.github.com/users/qlonik/repos","events_url":"https://api.github.com/users/qlonik/events{/privacy}","received_events_url":"https://api.github.com/users/qlonik/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":41,"created_at":"2018-10-06T22:42:28Z","updated_at":"2019-09-15T18:08:02Z","closed_at":"2019-09-08T19:37:34Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/avajs/ava/pulls/1947","html_url":"https://github.com/avajs/ava/pull/1947","diff_url":"https://github.com/avajs/ava/pull/1947.diff","patch_url":"https://github.com/avajs/ava/pull/1947.patch","merged_at":"2019-09-08T19:37:34Z"},"body":"Hello. Some time ago there was a discussion in the #1692 issue. I tried to look around the code and see what could be done. I tried doing this but I'm not sure if it is the best solution.\r\n\r\nThis method creates new instance of `Test` class and runs the attempted assertion as part of that and then it updates main test if the attempted test passes or fails.\r\nThere were suggestions in the issue to create some `Host` class, which `Test` class will extend. Such `Host` class will only care about running assertions, while `Test` class will care about counting assertions and taking care of snapshots. I tried with `Host` class at first, however, I found that assertions are getting bound to the `Test`, and I was not sure which parts of `Test` need to be moved to `Host` and which can stay, without breaking assertions.\r\nAlso, creating new `Host` class, would require to re-implement the `run()` function and all of the edge cases, which are already figured out in the current implementation of `Test()`.\r\n\r\nThere were also mentions about taking care of `plan()` assertion and about recursiveness of `try()` assertion. Also, snapshots were excluded from discussion, but I think they should be talked about too.\r\nSince the current implementation of `Test` can handle all of these cases, it means reusing `Test` class as an instance for `try()` function should allow for those three things to work. There was also a comment about supporting the `.discard()` on promise returned from `.try()`, which is also added.\r\n\r\nWith the current implementation, each attempt has to be explicitly either accepted with `.commit()` or declined with `.discard()`. When the result is committed to, it increase assertion counter and copies the log of the attempt into main test. When the result is discarded, the assertion counter is not increased. It seems that it would be possible to remove explicit discard on the attempt result. However, in that case, there will be a requirement that user need to have at least one call to `.commit()` in order to pass the test.\r\n\r\nI'm open to some suggestions about current implementation and to guidance how to make `Host` class work, if this is more desirable way.\r\n\r\nExample usages with current implementation:\r\n```js\r\nconst twoRndInts = () => {\r\n  const rnd = Math.round(Math.random() * 100);\r\n  const x = rnd % 10;\r\n  const y = Math.floor(rnd / 10);\r\n  return [x, y];\r\n};\r\n\r\ntest('test', async t => {\r\n\r\n  const result = await t.try((t, a, b) => {\r\n    t.is(a, b);\r\n  }, ...twoRndInts());\r\n\r\n  if (result.passed) {\r\n    result.commit();\r\n  } else {\r\n    t.log(result.error);\r\n    result.discard();\r\n\r\n    const result1 = await t.try((t, a, b) => {\r\n      t.is(a, b);\r\n    }, ...twoRndInts());\r\n\r\n    result1.commit();\r\n  }\r\n});\r\n\r\n// EDIT: the following usage scenario with discarding incomplete attempt is not supported\r\ntest('test2', t => {\r\n  const result = t.try((t, a, b) => {  // <-- result here is a pending promise\r\n    return new Promise(res => setTimeout(res, 1000))\r\n      .then(() => t.is(a, b));\r\n  }, ...twoRndInts());\r\n\r\n  return new Promise(res => setTimeout(res, 100))\r\n    .then(() => {\r\n      result.discard();\r\n    });\r\n});\r\n```\r\n\r\n## TODO:\r\n\r\n(Updated from https://github.com/avajs/ava/pull/1947#issuecomment-462152014)\r\n\r\n- [x] Test the context (`t.context`)\r\n- [x] Update test assertCount with the number of assertions made within a committed attempt\r\n- [x] Add support of macros passed to try fn\r\n- [x] Type t.try() so it accepts macros\r\n- [x] Investigate refactor so attempts don't need to instantiate a new Test\r\n    - [x] If not possible, add metadata to indicate the test is \"inline\" and adjust handling of test.failing() and t.end() based on that\r\n- [x] Revisit how attempt titles are generated\r\n- [x] Ensure snapshots created in each attempt start at the correct invocation count\r\n- [x] Fail the test if concurrent attempts that created snapshots are committed\r\n- [x] Move try-commit tests into its own file\r\n- [ ] Determine documented properties of AssertionError and add to type definitions\r\n- [x] Update Flow definition\r\n- [ ] Update ESLint plugin to recognize the assertion\r\n- [ ] File issue to discuss suggested argument name (tt?) for inline functions, and update power-assert     \r\n   - [ ] rewrite rules to handle it\r\n- [x] Review test coverage\r\n- [ ] Update documentation\r\n\r\n<!--\r\n\r\nRead the [contributing guidelines](https://github.com/avajs/ava/blob/master/contributing.md). We are excited about pull requests, but please try to limit the scope, provide a general description of the changes, and remember, it's up to you to convince us to land it. If this fixes an open issue, link to it in the following way: `Fixes #321`. New features and bug fixes should come with tests.\r\n\r\n-->\r\n","reactions":{"url":"https://api.github.com/repos/avajs/ava/issues/1947/reactions","total_count":4,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":3,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/avajs/ava/issues/1947/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/avajs/ava/issues/1722","repository_url":"https://api.github.com/repos/avajs/ava","labels_url":"https://api.github.com/repos/avajs/ava/issues/1722/labels{/name}","comments_url":"https://api.github.com/repos/avajs/ava/issues/1722/comments","events_url":"https://api.github.com/repos/avajs/ava/issues/1722/events","html_url":"https://github.com/avajs/ava/pull/1722","id":298334635,"node_id":"MDExOlB1bGxSZXF1ZXN0MTcwMDA0MTcy","number":1722,"title":"Refactor IPC, status and reporters","user":{"login":"novemberborn","id":33538,"node_id":"MDQ6VXNlcjMzNTM4","avatar_url":"https://avatars.githubusercontent.com/u/33538?v=4","gravatar_id":"","url":"https://api.github.com/users/novemberborn","html_url":"https://github.com/novemberborn","followers_url":"https://api.github.com/users/novemberborn/followers","following_url":"https://api.github.com/users/novemberborn/following{/other_user}","gists_url":"https://api.github.com/users/novemberborn/gists{/gist_id}","starred_url":"https://api.github.com/users/novemberborn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novemberborn/subscriptions","organizations_url":"https://api.github.com/users/novemberborn/orgs","repos_url":"https://api.github.com/users/novemberborn/repos","events_url":"https://api.github.com/users/novemberborn/events{/privacy}","received_events_url":"https://api.github.com/users/novemberborn/received_events","type":"User","site_admin":false},"labels":[{"id":672695353,"node_id":"MDU6TGFiZWw2NzI2OTUzNTM=","url":"https://api.github.com/repos/avajs/ava/labels/scope:reporters","name":"scope:reporters","color":"d93f0b","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/avajs/ava/milestones/2","html_url":"https://github.com/avajs/ava/milestone/2","labels_url":"https://api.github.com/repos/avajs/ava/milestones/2/labels","id":3036701,"node_id":"MDk6TWlsZXN0b25lMzAzNjcwMQ==","number":2,"title":"1.0","description":"","creator":{"login":"novemberborn","id":33538,"node_id":"MDQ6VXNlcjMzNTM4","avatar_url":"https://avatars.githubusercontent.com/u/33538?v=4","gravatar_id":"","url":"https://api.github.com/users/novemberborn","html_url":"https://github.com/novemberborn","followers_url":"https://api.github.com/users/novemberborn/followers","following_url":"https://api.github.com/users/novemberborn/following{/other_user}","gists_url":"https://api.github.com/users/novemberborn/gists{/gist_id}","starred_url":"https://api.github.com/users/novemberborn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novemberborn/subscriptions","organizations_url":"https://api.github.com/users/novemberborn/orgs","repos_url":"https://api.github.com/users/novemberborn/repos","events_url":"https://api.github.com/users/novemberborn/events{/privacy}","received_events_url":"https://api.github.com/users/novemberborn/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":40,"state":"closed","created_at":"2018-01-15T16:32:53Z","updated_at":"2019-01-27T17:16:24Z","due_on":null,"closed_at":"2019-01-27T17:16:24Z"},"comments":8,"created_at":"2018-02-19T16:25:40Z","updated_at":"2018-04-22T16:54:50Z","closed_at":"2018-04-22T16:54:46Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/avajs/ava/pulls/1722","html_url":"https://github.com/avajs/ava/pull/1722","diff_url":"https://github.com/avajs/ava/pull/1722.diff","patch_url":"https://github.com/avajs/ava/pull/1722.patch","merged_at":"2018-04-22T16:54:46Z"},"body":"Simplify how test results flow from the worker processes to the API instance to the reporters by emitting \"state changes\" rather than specific events.\r\n\r\nWorkers report (most) state changes as they happen, they're collated for each run, and reporters receive each state change and can write to the console in turn. Stats are computed centrally in `lib/run-status.js` and are emitted whenever they change, thus simplifying reporters.\r\n\r\nBecause workers report state changes as they happen we can greatly simplify their coordination with the main process. We just need to make sure the last state change has been received before exiting. If the main process decides to exit a worker it can simplify do so, it'll already have received results from completed tests.\r\n\r\nError conditions are either explicit or can be inferred from the computed stats.\r\n\r\nThe API now emits its plan of the tests it'll run, which can then be sent to the reporters. This leads to better separation of concerns between the reporters, the run status, the API and the watch mode\r\nimplementation.\r\n\r\nUncaught exceptions and unhandled rejections are now shown with a code excerpt if possible. There are other minor variations in the reporter output, but I've tried to keep changes to a minimum.\r\n\r\nAll reporters now write to `process.stdout`. The `stdout` and `stderr` output from workers is written to `process.stderr`. AVA will insert line breaks in `process.stdout` after writing a chunk to `process.stderr` that does not end in a line break.\r\n\r\nIn watch mode, files being rerun are now excluded from the previous failure count.\r\n\r\n`profile.js` is now wired up to use the verbose reporter. It's still a terrible hack though.\r\n\r\nPorting the tests surfaced some integration-type tests that no longer made sense. They've been removed. Hopefully I haven't gone overboard with that. Ideally we'd rewrite the integration tests but that's a lot of work. Code coverage still looks good though.\r\n\r\n---\r\n\r\nAdditional changes:\r\n\r\n* `append-transform`, `nyc` and `require-precompiled` are now removed from error stacks\r\n* Reporters are now verified using integration tests. This replaces the previous reporter tests. Instead we run the reporter for varying test outputs and record the results. The environment is modified to ensure the highest fidelity colors and figures are used. Where necessary output is rewritten so the resulting logs can be compared across Node.js versions and operating systems.\r\n\r\n  `./test/helpers/replay.js` can be used to replay a log file.\r\n* Test implementations are now called so that `this ==== null`. Previously we were exposing the test instance through `this`, and we shouldn't have been\r\n* `time-require` has been removed. It was only used when `DEBUG=ava` but it's not super useful during development. Users can load it themselves if they want to measure how quickly their own code loads\r\n* We now instantiate our own copy of `chalk`. This will make it easier to inherit the color level from the main process (#1701)\r\n* When serializing errors, if the value is not an actual error object we'll format it using Concordance and display that instead\r\n* No more repeated timeouts for the same worker\r\n\r\n---\r\n\r\nTo do:\r\n\r\n* [x] Port mini and TAP reporters\r\n* [x] Ensure tests pass\r\n* [ ] Ensure good coverage for new reporter code\r\n\r\nFollow-up issues:\r\n\r\n* [ ] File issue so color level can be defined in AVA's `package.json` options\r\n* [ ] Unblock existing reporter issues","reactions":{"url":"https://api.github.com/repos/avajs/ava/issues/1722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/avajs/ava/issues/1722/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/avajs/ava/issues/1693","repository_url":"https://api.github.com/repos/avajs/ava","labels_url":"https://api.github.com/repos/avajs/ava/issues/1693/labels{/name}","comments_url":"https://api.github.com/repos/avajs/ava/issues/1693/comments","events_url":"https://api.github.com/repos/avajs/ava/issues/1693/events","html_url":"https://github.com/avajs/ava/pull/1693","id":294851336,"node_id":"MDExOlB1bGxSZXF1ZXN0MTY3NDgzNDA3","number":1693,"title":"Refactor how test files are told to run their tests, and more","user":{"login":"novemberborn","id":33538,"node_id":"MDQ6VXNlcjMzNTM4","avatar_url":"https://avatars.githubusercontent.com/u/33538?v=4","gravatar_id":"","url":"https://api.github.com/users/novemberborn","html_url":"https://github.com/novemberborn","followers_url":"https://api.github.com/users/novemberborn/followers","following_url":"https://api.github.com/users/novemberborn/following{/other_user}","gists_url":"https://api.github.com/users/novemberborn/gists{/gist_id}","starred_url":"https://api.github.com/users/novemberborn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novemberborn/subscriptions","organizations_url":"https://api.github.com/users/novemberborn/orgs","repos_url":"https://api.github.com/users/novemberborn/repos","events_url":"https://api.github.com/users/novemberborn/events{/privacy}","received_events_url":"https://api.github.com/users/novemberborn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-02-06T17:44:23Z","updated_at":"2018-02-11T18:55:30Z","closed_at":"2018-02-11T16:12:30Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/avajs/ava/pulls/1693","html_url":"https://github.com/avajs/ava/pull/1693","diff_url":"https://github.com/avajs/ava/pull/1693.diff","patch_url":"https://github.com/avajs/ava/pull/1693.patch","merged_at":"2018-02-11T16:12:29Z"},"body":"Apologies, this is a big one! See the commits for details, but the highlights are:\r\n\r\n* Remove cruft remaining from when we switched to *always* using the limited concurrency mode.\r\n* The cache directory is now always relative to the project directory. Previously another unnecessary path lookup was done, which I think may have resulted in different cache paths if there were `package.json` files at different levels of the project.\r\n* Compile all test and helpers files before running any test. This doesn't improve time-to-first-test but it does mean that test files can depend on each other. AVA will correctly load the precompiled file. No tests are run if any file fails to compile.\r\n* The real file path is passed to the precompiler.\r\n* `execArgv` is computed when running a test file, not all at once for all files.\r\n* `--fail-fast` now works with limited concurrency mode, preventing new test files from being run. It also fails fast after a timeout or if a test file crashed. This is part of the work needed for #1158.\r\n* The mini and verbose reporters print the number of untested files after `--fail-fast`.\r\n* Improved output for unhandled rejections / uncaught exceptions in the mini and verbose reporters.\r\n* Test runners will now run tests as soon as (in the next tick) they're declared. The main process no longer instructs the workers to startrunning tests. Fixes #1674.","reactions":{"url":"https://api.github.com/repos/avajs/ava/issues/1693/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/avajs/ava/issues/1693/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/avajs/ava/issues/1670","repository_url":"https://api.github.com/repos/avajs/ava","labels_url":"https://api.github.com/repos/avajs/ava/issues/1670/labels{/name}","comments_url":"https://api.github.com/repos/avajs/ava/issues/1670/comments","events_url":"https://api.github.com/repos/avajs/ava/issues/1670/events","html_url":"https://github.com/avajs/ava/pull/1670","id":292506397,"node_id":"MDExOlB1bGxSZXF1ZXN0MTY1Nzc3NjYx","number":1670,"title":"Restrict modifier chaining","user":{"login":"novemberborn","id":33538,"node_id":"MDQ6VXNlcjMzNTM4","avatar_url":"https://avatars.githubusercontent.com/u/33538?v=4","gravatar_id":"","url":"https://api.github.com/users/novemberborn","html_url":"https://github.com/novemberborn","followers_url":"https://api.github.com/users/novemberborn/followers","following_url":"https://api.github.com/users/novemberborn/following{/other_user}","gists_url":"https://api.github.com/users/novemberborn/gists{/gist_id}","starred_url":"https://api.github.com/users/novemberborn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novemberborn/subscriptions","organizations_url":"https://api.github.com/users/novemberborn/orgs","repos_url":"https://api.github.com/users/novemberborn/repos","events_url":"https://api.github.com/users/novemberborn/events{/privacy}","received_events_url":"https://api.github.com/users/novemberborn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/avajs/ava/milestones/2","html_url":"https://github.com/avajs/ava/milestone/2","labels_url":"https://api.github.com/repos/avajs/ava/milestones/2/labels","id":3036701,"node_id":"MDk6TWlsZXN0b25lMzAzNjcwMQ==","number":2,"title":"1.0","description":"","creator":{"login":"novemberborn","id":33538,"node_id":"MDQ6VXNlcjMzNTM4","avatar_url":"https://avatars.githubusercontent.com/u/33538?v=4","gravatar_id":"","url":"https://api.github.com/users/novemberborn","html_url":"https://github.com/novemberborn","followers_url":"https://api.github.com/users/novemberborn/followers","following_url":"https://api.github.com/users/novemberborn/following{/other_user}","gists_url":"https://api.github.com/users/novemberborn/gists{/gist_id}","starred_url":"https://api.github.com/users/novemberborn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novemberborn/subscriptions","organizations_url":"https://api.github.com/users/novemberborn/orgs","repos_url":"https://api.github.com/users/novemberborn/repos","events_url":"https://api.github.com/users/novemberborn/events{/privacy}","received_events_url":"https://api.github.com/users/novemberborn/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":40,"state":"closed","created_at":"2018-01-15T16:32:53Z","updated_at":"2019-01-27T17:16:24Z","due_on":null,"closed_at":"2019-01-27T17:16:24Z"},"comments":5,"created_at":"2018-01-29T18:08:57Z","updated_at":"2018-02-04T18:06:31Z","closed_at":"2018-02-04T17:57:21Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/avajs/ava/pulls/1670","html_url":"https://github.com/avajs/ava/pull/1670","diff_url":"https://github.com/avajs/ava/pull/1670.diff","patch_url":"https://github.com/avajs/ava/pull/1670.patch","merged_at":"2018-02-04T17:57:21Z"},"body":"Explicitly specify allowable chains, with some ground rules in mind:\r\n\r\nTest chaining rules:\r\n\r\n* `serial` must come at the start\r\n* `only` and `skip` must come at the end\r\n* `failing` must come at the end, but can be followed by `only` and `skip`\r\n* `only` and `skip` cannot be chained together\r\n* no repeating\r\n\r\nHook chaining rules:\r\n\r\n* `always` comes immediately after \"after hooks\"\r\n* `skip` must come at the end\r\n* no `only`\r\n* no repeating\r\n\r\nAdditionally:\r\n\r\n* `todo` cannot be chained, except after `serial`\r\n* hooks are not available on `serial`\r\n\r\nThis commit also removes now unnecessary assertions from TestCollection.\r\n\r\nFixes #1182.\r\n\r\n---\r\n\r\nThis allows the TypeScript definition to be simplified. I've done an initial refactor. Note that I've not included any JSDoc comments. I think we can do a lot better than we what we had before but I didn't want to sort that out just yet. Will open a follow-up ticket. I have fixed `throws` / `notThrows` taking observables. Would be nice to get a better type definition for `Observable` though. Will ask more explicitly in a follow-up ticket.\r\n\r\n* [x] Create issue for `Observable` typing in TS and Flow\r\n* [x] Create issue for embedding documentation in the TS and Flow definitions\r\n* [x] Create issue in `eslint-plugin-ava` to check chains when linting","reactions":{"url":"https://api.github.com/repos/avajs/ava/issues/1670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/avajs/ava/issues/1670/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/avajs/ava/issues/1353","repository_url":"https://api.github.com/repos/avajs/ava","labels_url":"https://api.github.com/repos/avajs/ava/issues/1353/labels{/name}","comments_url":"https://api.github.com/repos/avajs/ava/issues/1353/comments","events_url":"https://api.github.com/repos/avajs/ava/issues/1353/events","html_url":"https://github.com/avajs/ava/pull/1353","id":220603556,"node_id":"MDExOlB1bGxSZXF1ZXN0MTE1MDcxMzgy","number":1353,"title":"Make `t.is()` use `Object.is()`","user":{"login":"alexrussell","id":412784,"node_id":"MDQ6VXNlcjQxMjc4NA==","avatar_url":"https://avatars.githubusercontent.com/u/412784?v=4","gravatar_id":"","url":"https://api.github.com/users/alexrussell","html_url":"https://github.com/alexrussell","followers_url":"https://api.github.com/users/alexrussell/followers","following_url":"https://api.github.com/users/alexrussell/following{/other_user}","gists_url":"https://api.github.com/users/alexrussell/gists{/gist_id}","starred_url":"https://api.github.com/users/alexrussell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexrussell/subscriptions","organizations_url":"https://api.github.com/users/alexrussell/orgs","repos_url":"https://api.github.com/users/alexrussell/repos","events_url":"https://api.github.com/users/alexrussell/events{/privacy}","received_events_url":"https://api.github.com/users/alexrussell/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-04-10T10:36:27Z","updated_at":"2017-05-30T14:31:15Z","closed_at":"2017-04-16T14:23:49Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/avajs/ava/pulls/1353","html_url":"https://github.com/avajs/ava/pull/1353","diff_url":"https://github.com/avajs/ava/pull/1353.diff","patch_url":"https://github.com/avajs/ava/pull/1353.patch","merged_at":"2017-04-16T14:23:49Z"},"body":"Refactor `is` assertion to use `Object.is()` rather than `===`.\r\nAlso add a few more test cases in for `is` to make it clearer what it is expected to do.\r\n\r\nAs per discussion in #1339, this will make it more sensible to compare `NaN` against `NaN`.\r\n\r\nThe good:\r\n\r\n- `NaN` now compares to `NaN` in a way that people expect (truthily)\r\n\r\nThe odd:\r\n\r\n- `+0`/`0` and `-0` are now **not** equal. As we discussed in #1339, this actually feels fine - this being a testing framework, it's good to be strict on this math stuff, while sensible on the NaN stuff.\r\n\r\nFixes #1339 \r\n\r\n/cc @novemberborn, @sotojuan, @sindresorhus ","reactions":{"url":"https://api.github.com/repos/avajs/ava/issues/1353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/avajs/ava/issues/1353/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/avajs/ava/issues/1302","repository_url":"https://api.github.com/repos/avajs/ava","labels_url":"https://api.github.com/repos/avajs/ava/issues/1302/labels{/name}","comments_url":"https://api.github.com/repos/avajs/ava/issues/1302/comments","events_url":"https://api.github.com/repos/avajs/ava/issues/1302/events","html_url":"https://github.com/avajs/ava/pull/1302","id":213112853,"node_id":"MDExOlB1bGxSZXF1ZXN0MTA5OTY3ODc4","number":1302,"title":"Refactor assertions","user":{"login":"novemberborn","id":33538,"node_id":"MDQ6VXNlcjMzNTM4","avatar_url":"https://avatars.githubusercontent.com/u/33538?v=4","gravatar_id":"","url":"https://api.github.com/users/novemberborn","html_url":"https://github.com/novemberborn","followers_url":"https://api.github.com/users/novemberborn/followers","following_url":"https://api.github.com/users/novemberborn/following{/other_user}","gists_url":"https://api.github.com/users/novemberborn/gists{/gist_id}","starred_url":"https://api.github.com/users/novemberborn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/novemberborn/subscriptions","organizations_url":"https://api.github.com/users/novemberborn/orgs","repos_url":"https://api.github.com/users/novemberborn/repos","events_url":"https://api.github.com/users/novemberborn/events{/privacy}","received_events_url":"https://api.github.com/users/novemberborn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-03-09T17:41:59Z","updated_at":"2017-03-14T12:51:02Z","closed_at":"2017-03-14T12:50:36Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/avajs/ava/pulls/1302","html_url":"https://github.com/avajs/ava/pull/1302","diff_url":"https://github.com/avajs/ava/pull/1302.diff","patch_url":"https://github.com/avajs/ava/pull/1302.patch","merged_at":"2017-03-14T12:50:36Z"},"body":"See commits. Behavior should be the same, aside from these changes:\r\n\r\n* Fixes #1227 \r\n* Fixes #1150 \r\n* Assertions now return `undefined` rather than `null`\r\n* Removes the undocumented `t.assertCount` getter\r\n* All test failures (exception thrown, rejected promise returned, `t.end(error)`) are now wrapped in an assertion error, but we'll still print the actual error\r\n* Do the same for when `t.throws()` / `t.notThrows()` are called with an improper argument. We can now even print the actual argument passed!\r\n* In the TAP reporter, the error YAML block now has varying properties (e.g. do not assume it has `operator` or even `assertion`)\r\n* Test serialization no longer overwrites non-standard error properties","reactions":{"url":"https://api.github.com/repos/avajs/ava/issues/1302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/avajs/ava/issues/1302/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/avajs/ava/issues/713","repository_url":"https://api.github.com/repos/avajs/ava","labels_url":"https://api.github.com/repos/avajs/ava/issues/713/labels{/name}","comments_url":"https://api.github.com/repos/avajs/ava/issues/713/comments","events_url":"https://api.github.com/repos/avajs/ava/issues/713/events","html_url":"https://github.com/avajs/ava/pull/713","id":145911093,"node_id":"MDExOlB1bGxSZXF1ZXN0NjUyNjEwOTg=","number":713,"title":"Refactor API","user":{"login":"jamestalmage","id":4082216,"node_id":"MDQ6VXNlcjQwODIyMTY=","avatar_url":"https://avatars.githubusercontent.com/u/4082216?v=4","gravatar_id":"","url":"https://api.github.com/users/jamestalmage","html_url":"https://github.com/jamestalmage","followers_url":"https://api.github.com/users/jamestalmage/followers","following_url":"https://api.github.com/users/jamestalmage/following{/other_user}","gists_url":"https://api.github.com/users/jamestalmage/gists{/gist_id}","starred_url":"https://api.github.com/users/jamestalmage/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jamestalmage/subscriptions","organizations_url":"https://api.github.com/users/jamestalmage/orgs","repos_url":"https://api.github.com/users/jamestalmage/repos","events_url":"https://api.github.com/users/jamestalmage/events{/privacy}","received_events_url":"https://api.github.com/users/jamestalmage/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-04-05T07:18:05Z","updated_at":"2016-04-07T06:01:34Z","closed_at":"2016-04-07T06:01:34Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/avajs/ava/pulls/713","html_url":"https://github.com/avajs/ava/pull/713","diff_url":"https://github.com/avajs/ava/pull/713.diff","patch_url":"https://github.com/avajs/ava/pull/713.patch","merged_at":"2016-04-07T06:01:34Z"},"body":"This is preliminary work on simplifying the API. The major (breaking) change is a new `test-run` event that passes an emitter for that specific test run. Said emitter is an instance of the new TestData class (might be more appropriately named TestRun). This contains test results that we were storing directly on the API instance. That really doesn't make sense anymore given that the API instance is called multiple times by Watcher. I feel this way makes a little more sense. There is definitely room for further refactoring, but this represents a big diff, and I want to get it reviewed and merged before further refactoring.\n","reactions":{"url":"https://api.github.com/repos/avajs/ava/issues/713/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/avajs/ava/issues/713/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/avajs/ava/issues/363","repository_url":"https://api.github.com/repos/avajs/ava","labels_url":"https://api.github.com/repos/avajs/ava/issues/363/labels{/name}","comments_url":"https://api.github.com/repos/avajs/ava/issues/363/comments","events_url":"https://api.github.com/repos/avajs/ava/issues/363/events","html_url":"https://github.com/avajs/ava/pull/363","id":123790179,"node_id":"MDExOlB1bGxSZXF1ZXN0NTQ1NDM2NjA=","number":363,"title":"Internal reporters","user":{"login":"vadimdemedes","id":697676,"node_id":"MDQ6VXNlcjY5NzY3Ng==","avatar_url":"https://avatars.githubusercontent.com/u/697676?v=4","gravatar_id":"","url":"https://api.github.com/users/vadimdemedes","html_url":"https://github.com/vadimdemedes","followers_url":"https://api.github.com/users/vadimdemedes/followers","following_url":"https://api.github.com/users/vadimdemedes/following{/other_user}","gists_url":"https://api.github.com/users/vadimdemedes/gists{/gist_id}","starred_url":"https://api.github.com/users/vadimdemedes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vadimdemedes/subscriptions","organizations_url":"https://api.github.com/users/vadimdemedes/orgs","repos_url":"https://api.github.com/users/vadimdemedes/repos","events_url":"https://api.github.com/users/vadimdemedes/events{/privacy}","received_events_url":"https://api.github.com/users/vadimdemedes/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-12-24T10:50:07Z","updated_at":"2015-12-24T12:09:09Z","closed_at":"2015-12-24T12:09:07Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/avajs/ava/pulls/363","html_url":"https://github.com/avajs/ava/pull/363","diff_url":"https://github.com/avajs/ava/pull/363.diff","patch_url":"https://github.com/avajs/ava/pull/363.patch","merged_at":"2015-12-24T12:09:07Z"},"body":"This PR refactors and cleans up all our output, makes it easier to test and introduces the possibility to change reporters and write new ones.\n\n**Note**: it is not meant to be exposed to end users, this is only for internal usage. \n\nThis is a preparation for #359. After #359 we'll have 3 reporters:\n- verbose (current default reporter)\n- mini\n- tap\n","reactions":{"url":"https://api.github.com/repos/avajs/ava/issues/363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/avajs/ava/issues/363/timeline","performed_via_github_app":null,"state_reason":null,"score":1}]