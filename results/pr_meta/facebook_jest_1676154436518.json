[{"url":"https://api.github.com/repos/facebook/jest/issues/13859","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/13859/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/13859/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/13859/events","html_url":"https://github.com/facebook/jest/pull/13859","id":1570195277,"node_id":"PR_kwDOAOXXVc5JOLLJ","number":13859,"title":"feat(jest-core): Add performance markers around significant lifecycle events","user":{"login":"robhogan","id":2590098,"node_id":"MDQ6VXNlcjI1OTAwOTg=","avatar_url":"https://avatars.githubusercontent.com/u/2590098?v=4","gravatar_id":"","url":"https://api.github.com/users/robhogan","html_url":"https://github.com/robhogan","followers_url":"https://api.github.com/users/robhogan/followers","following_url":"https://api.github.com/users/robhogan/following{/other_user}","gists_url":"https://api.github.com/users/robhogan/gists{/gist_id}","starred_url":"https://api.github.com/users/robhogan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robhogan/subscriptions","organizations_url":"https://api.github.com/users/robhogan/orgs","repos_url":"https://api.github.com/users/robhogan/repos","events_url":"https://api.github.com/users/robhogan/events{/privacy}","received_events_url":"https://api.github.com/users/robhogan/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-02-03T17:24:29Z","updated_at":"2023-02-07T13:47:06Z","closed_at":"2023-02-05T20:15:34Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/13859","html_url":"https://github.com/facebook/jest/pull/13859","diff_url":"https://github.com/facebook/jest/pull/13859.diff","patch_url":"https://github.com/facebook/jest/pull/13859.patch","merged_at":"2023-02-05T20:15:34Z"},"body":"## Summary\r\n\r\nI'd like to upstream some of the work we've been doing over in Metro to improve startup times (particularly with an overhaul of `jest-haste-map` that started by [forking it](https://github.com/facebook/metro/pull/812)), and possibly carve out some time to optimise other areas of Jest startup. A first step (especially to get some buy-in at Meta!) is instrumentation - this PR is a stab at adding some key markers via the standard global `performance` API.\r\n\r\nI'm not wedded to this implementation - open to bikeshedding about labels, abstraction, or if there's a pre-existing Jest instrumentation pattern I'd missed, but I'm particularly looking for *some* way to time the startup independently of running tests.\r\n\r\n## Test plan\r\n\r\nRunning Jest programmatically in a thin wrapper allows performance data to be gathered:\r\n\r\n```js\r\n'use strict';\r\n\r\nconst {performance} = require('perf_hooks');\r\n\r\nif (process.env.NODE_ENV == null) {\r\n  process.env.NODE_ENV = 'test';\r\n}\r\n\r\nrequire('jest-cli')\r\n  .run()\r\n  .then(() => {\r\n    console.log(performance.getEntries());\r\n  });\r\n```\r\n\r\n```\r\n[\r\n  PerformanceMark {\r\n    name: 'jest/runCLI:start',\r\n    entryType: 'mark',\r\n    startTime: 179.9593139886856,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/buildContextsAndHasteMaps:start',\r\n    entryType: 'mark',\r\n    startTime: 269.55708903074265,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/buildContextsAndHasteMaps:end',\r\n    entryType: 'mark',\r\n    startTime: 1525.8082609772682,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/getTestRunData:start',\r\n    entryType: 'mark',\r\n    startTime: 1535.9708949923515,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/getTestRunData:end',\r\n    entryType: 'mark',\r\n    startTime: 2911.5280399918556,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/globalSetup:start',\r\n    entryType: 'mark',\r\n    startTime: 2928.4168980121613,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/globalSetup:end',\r\n    entryType: 'mark',\r\n    startTime: 2928.6306880116463,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/scheduleAndRun:start',\r\n    entryType: 'mark',\r\n    startTime: 2938.5601339936256,\r\n    duration: 0,\r\n    detail: { numTests: 1 }\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/scheduleAndRun:start',\r\n    entryType: 'mark',\r\n    startTime: 5480.210482001305,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/cacheResults:start',\r\n    entryType: 'mark',\r\n    startTime: 5480.292959034443,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/cacheResults:end',\r\n    entryType: 'mark',\r\n    startTime: 5480.848489999771,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/globalTeardown:start',\r\n    entryType: 'mark',\r\n    startTime: 5480.870894014835,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/globalTeardown:end',\r\n    entryType: 'mark',\r\n    startTime: 5480.897032022476,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/processResults:start',\r\n    entryType: 'mark',\r\n    startTime: 5480.90157699585,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/processResults:end',\r\n    entryType: 'mark',\r\n    startTime: 5481.04110699892,\r\n    duration: 0,\r\n    detail: null\r\n  },\r\n  PerformanceMark {\r\n    name: 'jest/runCLI:end',\r\n    entryType: 'mark',\r\n    startTime: 5481.130716025829,\r\n    duration: 0,\r\n    detail: null\r\n  }\r\n]\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/13859/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/13859/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/13735","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/13735/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/13735/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/13735/events","html_url":"https://github.com/facebook/jest/pull/13735","id":1521258571,"node_id":"PR_kwDOAOXXVc5Gv7Rf","number":13735,"title":"JestRuntime:-Using scriptTransformer cache in jest-runner","user":{"login":"Biki-das","id":72331432,"node_id":"MDQ6VXNlcjcyMzMxNDMy","avatar_url":"https://avatars.githubusercontent.com/u/72331432?v=4","gravatar_id":"","url":"https://api.github.com/users/Biki-das","html_url":"https://github.com/Biki-das","followers_url":"https://api.github.com/users/Biki-das/followers","following_url":"https://api.github.com/users/Biki-das/following{/other_user}","gists_url":"https://api.github.com/users/Biki-das/gists{/gist_id}","starred_url":"https://api.github.com/users/Biki-das/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Biki-das/subscriptions","organizations_url":"https://api.github.com/users/Biki-das/orgs","repos_url":"https://api.github.com/users/Biki-das/repos","events_url":"https://api.github.com/users/Biki-das/events{/privacy}","received_events_url":"https://api.github.com/users/Biki-das/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-01-05T19:19:43Z","updated_at":"2023-02-07T00:08:38Z","closed_at":"2023-01-07T12:54:02Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/13735","html_url":"https://github.com/facebook/jest/pull/13735","diff_url":"https://github.com/facebook/jest/pull/13735.diff","patch_url":"https://github.com/facebook/jest/pull/13735.patch","merged_at":"2023-01-07T12:54:02Z"},"body":"The `getCachekey` changes for a file depending on the particular file it is running, the jest run-time has the `_fileTransforms` cache that it checks to call  before  the _scriptTransformer.transform. I am suggesting to not doing the whole cache check and rather  use the  `_scriptTransformer.transform`'s cache.  this way we already have a cache using the `getCacheKey`, counting this, the performance wont be affected i think.\r\n\r\n\r\nQuite unsure how should i do a test for the same.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/13735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/13735/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/13467","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/13467/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/13467/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/13467/events","html_url":"https://github.com/facebook/jest/pull/13467","id":1413146256,"node_id":"PR_kwDOAOXXVc5BAzbT","number":13467,"title":"fix(jest-environment-node): make `performance` writable","user":{"login":"SimenB","id":1404810,"node_id":"MDQ6VXNlcjE0MDQ4MTA=","avatar_url":"https://avatars.githubusercontent.com/u/1404810?v=4","gravatar_id":"","url":"https://api.github.com/users/SimenB","html_url":"https://github.com/SimenB","followers_url":"https://api.github.com/users/SimenB/followers","following_url":"https://api.github.com/users/SimenB/following{/other_user}","gists_url":"https://api.github.com/users/SimenB/gists{/gist_id}","starred_url":"https://api.github.com/users/SimenB/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SimenB/subscriptions","organizations_url":"https://api.github.com/users/SimenB/orgs","repos_url":"https://api.github.com/users/SimenB/repos","events_url":"https://api.github.com/users/SimenB/events{/privacy}","received_events_url":"https://api.github.com/users/SimenB/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2022-10-18T12:32:20Z","updated_at":"2022-11-18T00:09:51Z","closed_at":"2022-10-18T12:52:07Z","author_association":"COLLABORATOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/13467","html_url":"https://github.com/facebook/jest/pull/13467","diff_url":"https://github.com/facebook/jest/pull/13467.diff","patch_url":"https://github.com/facebook/jest/pull/13467.patch","merged_at":"2022-10-18T12:52:07Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md at the root of the project if you have not done so. -->\r\n\r\n## Summary\r\n\r\nRef https://github.com/nodejs/node/pull/44626#issuecomment-1282191258\r\n\r\n---\r\n\r\nNote that there is a single failing test still: `Runtime requireModule › resolves platform extensions based on the default platform`\r\n\r\n<img width=\"736\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1404810/196429850-6b407d7e-6191-4f85-b13c-b886d94cec64.png\">\r\n\r\nIt's some weird `haste` thing - we should probably throw `haste` in a bin at some point 😅 There are cleaner ways of achieving custom resolution than polluting config with weird `haste` options.\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test plan \r\n\r\nRunning with nightly locally.\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/13467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/13467/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/13244","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/13244/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/13244/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/13244/events","html_url":"https://github.com/facebook/jest/pull/13244","id":1368657405,"node_id":"PR_kwDOAOXXVc4-uG8m","number":13244,"title":"(jest-fake-timers): Add `now()` API to get the fake clock time","user":{"login":"robhogan","id":2590098,"node_id":"MDQ6VXNlcjI1OTAwOTg=","avatar_url":"https://avatars.githubusercontent.com/u/2590098?v=4","gravatar_id":"","url":"https://api.github.com/users/robhogan","html_url":"https://github.com/robhogan","followers_url":"https://api.github.com/users/robhogan/followers","following_url":"https://api.github.com/users/robhogan/following{/other_user}","gists_url":"https://api.github.com/users/robhogan/gists{/gist_id}","starred_url":"https://api.github.com/users/robhogan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/robhogan/subscriptions","organizations_url":"https://api.github.com/users/robhogan/orgs","repos_url":"https://api.github.com/users/robhogan/repos","events_url":"https://api.github.com/users/robhogan/events{/privacy}","received_events_url":"https://api.github.com/users/robhogan/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2022-09-10T15:41:24Z","updated_at":"2022-12-19T20:20:49Z","closed_at":"2022-09-10T17:28:43Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/13244","html_url":"https://github.com/facebook/jest/pull/13244","diff_url":"https://github.com/facebook/jest/pull/13244.diff","patch_url":"https://github.com/facebook/jest/pull/13244.patch","merged_at":"2022-09-10T17:28:43Z"},"body":"## Summary\r\n\r\nCurrently, users of legacy fake timers have no way to mock other time-related APIs in a way that keeps a consistent clock with the Jest mocked APIs.\r\n\r\nExposing the fake time allows easy mocking of APIs like `Date.now()`, `performance.now()`, etc.\r\n\r\n## Use case\r\nFor example, React Native's [`TimingAnimation`](https://github.com/facebook/react-native/blob/main/Libraries/Animated/animations/TimingAnimation.js#L144-L165) uses a combination of time elapsed according to `Date.now()` to interpolate state within each update, and `requestAnimationFrame()` to set a timer for the next update. \r\n\r\nThe legacy timers API in Jest 27+ mocks `requestAnimationFrame` (taking ~16ms of fake clock time per frame), but `Date.now()` is not mocked, which means that `advanceTimersToTime` runs some number of animation frames, but doesn't advance `Date.now()` time by the corresponding amount. \r\n\r\n`jest.runAllTimers()` \"works\", but only because it actually ends up running for the real time of the animation, processing as many frames as the CPU allows.\r\n\r\nWhat would be useful is a way to mock APIs like `Date.now()` or `performance.now()` in a manner consistent with the internal fake clock, but Jest doesn't expose the internal clock, so we're left guessing about what `Date.now()` should return after an unknown number of timers/frames have run.\r\n\r\n*(`requestAnimationFrame` does actually pass the current high-res clock time to its callback, but for \"reasons\"(?) `TimingAnimation` doesn't use it - in any case that doesn't really help a test author, and we'd still need to mock a start time.)*\r\n\r\n### Before\r\nAbout the best we can do at the moment is to advance frame by frame:\r\n```js\r\nconst FRAME_TIME = 16;\r\nconst DURATION = 500;\r\nconst mockNow = jest.spyOn(Date, 'now');\r\nmockNow.mockReturnValueOnce(0);\r\n\r\n// Trigger an animation in product code under test\r\ntriggerAnimation({ duration: DURATION });\r\n\r\nfor (let elapsed = 0; elapsed <= DURATION; elapsed += FRAME_TIME) {\r\n  mockNow.mockReturnValueOnce(elapsed);\r\n  advanceTimersByTime(FRAME_TIME);\r\n}\r\n\r\nexpect(state).toBe(good);\r\n```\r\n\r\n(Alternatives include a mock implementation of `Date.now()` that \"knows about\" the number of frames processed, eg by assuming it's called once per frame, which is also not great!)\r\n\r\n### After\r\n```js\r\nconst DURATION = 500;\r\njest.spyOn(Date, 'now').mockImplementation(() => jest.now());\r\n\r\n// Trigger an animation in product code under test\r\ntriggerAnimation({ duration: DURATION });\r\njest.advanceTimersByTime(DURATION);\r\n\r\nexpect(state).toBe(good);\r\n```\r\n\r\n## Test Plan\r\nI've added tests for modern and legacy timers, and also tested the \"After\" above with React Native animation.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/13244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/13244/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/13125","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/13125/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/13125/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/13125/events","html_url":"https://github.com/facebook/jest/pull/13125","id":1337163662,"node_id":"PR_kwDOAOXXVc49FuKe","number":13125,"title":"refactor(jest-mock)!: change the default `jest.mocked` helper’s behaviour to deep mocked","user":{"login":"mrazauskas","id":72159681,"node_id":"MDQ6VXNlcjcyMTU5Njgx","avatar_url":"https://avatars.githubusercontent.com/u/72159681?v=4","gravatar_id":"","url":"https://api.github.com/users/mrazauskas","html_url":"https://github.com/mrazauskas","followers_url":"https://api.github.com/users/mrazauskas/followers","following_url":"https://api.github.com/users/mrazauskas/following{/other_user}","gists_url":"https://api.github.com/users/mrazauskas/gists{/gist_id}","starred_url":"https://api.github.com/users/mrazauskas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrazauskas/subscriptions","organizations_url":"https://api.github.com/users/mrazauskas/orgs","repos_url":"https://api.github.com/users/mrazauskas/repos","events_url":"https://api.github.com/users/mrazauskas/events{/privacy}","received_events_url":"https://api.github.com/users/mrazauskas/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2022-08-12T12:46:03Z","updated_at":"2022-09-25T00:12:17Z","closed_at":"2022-08-13T10:50:17Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/13125","html_url":"https://github.com/facebook/jest/pull/13125","diff_url":"https://github.com/facebook/jest/pull/13125.diff","patch_url":"https://github.com/facebook/jest/pull/13125.patch","merged_at":"2022-08-13T10:50:17Z"},"body":"Split from #12727\r\n\r\n## Summary\r\n\r\nIt seems to me that by default `jest.mocked()` should wrap the deep methods of passed object. Currently it requires and argument: `jest.mocked(someObject, true)`. Also note that without reading the docs it isn’t clear what `true` does.\r\n\r\n---\r\n\r\nConsider this example:\r\n\r\n```ts\r\nimport { expect, jest, test } from \"@jest/globals\";\r\nimport { someObject } from \"./someObject\";\r\n\r\njest.mock(\"./someObject\");\r\n\r\ntest(\"is mock function?\", () => {\r\n  expect(jest.isMockFunction(mockObject.one.more.time)).toBe(true);\r\n});\r\n```\r\n\r\nThe test will pass. Seems like `jest.mock()` is mocking deeply nested methods. So I think `jest.mocked()` should do the same by default (and `jest.Mocked<T>` as well).\r\n\r\nPossibly shallow mocked definitions were implemented to improve performance of TS compiler. Or to work around some limitation, i.e. handling of recursive types. If I got it right, `ts-jest` implemented `jest.mock()` in the early days of TypeScript v3. Performance and handling of recursive types improved a lot in TS v4.\r\n\r\nPerhaps it’s time to swap the defaults? I mean, to make the behaviour of `jest.mocked()` deep by default and to allow opting out with an option: `jest.mocked(someObject, {shallow: true})`.\r\n\r\n## Test plan\r\n\r\nType tests added.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/13125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/13125/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/13499","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/13499/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/13499/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/13499/events","html_url":"https://github.com/facebook/jest/pull/13499","id":1420043514,"node_id":"PR_kwDOAOXXVc5BX5fX","number":13499,"title":"chore(deps): bump jquery from 3.6.0 to 3.6.1","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null},{"id":2182452806,"node_id":"MDU6TGFiZWwyMTgyNDUyODA2","url":"https://api.github.com/repos/facebook/jest/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"},{"id":4704145156,"node_id":"LA_kwDOAOXXVc8AAAABGGOPBA","url":"https://api.github.com/repos/facebook/jest/labels/javascript","name":"javascript","color":"168700","default":false,"description":"Pull requests that update Javascript code"}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-10-24T01:29:30Z","updated_at":"2022-11-24T00:09:04Z","closed_at":"2022-10-24T07:10:07Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/13499","html_url":"https://github.com/facebook/jest/pull/13499","diff_url":"https://github.com/facebook/jest/pull/13499.diff","patch_url":"https://github.com/facebook/jest/pull/13499.patch","merged_at":"2022-10-24T07:10:07Z"},"body":"Bumps [jquery](https://github.com/jquery/jquery) from 3.6.0 to 3.6.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/jquery/jquery/releases\">jquery's releases</a>.</em></p>\n<blockquote>\n<h2>jQuery 3.6.1 Maintenance Release</h2>\n<p><a href=\"https://blog.jquery.com/2022/08/26/jquery-3-6-1-maintenance-release/\">https://blog.jquery.com/2022/08/26/jquery-3-6-1-maintenance-release/</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/jquery/jquery/commit/6ad26fc72ddbc9d3f3886f98164efabc112d6c78\"><code>6ad26fc</code></a> 3.6.1</li>\n<li><a href=\"https://github.com/jquery/jquery/commit/ba2665f3cdc01218898ada790da877c2e8153c70\"><code>ba2665f</code></a> Release: update AUTHORS.txt</li>\n<li><a href=\"https://github.com/jquery/jquery/commit/699401008fbc6cdfc5d6a1d531e1bc5013a94bec\"><code>6994010</code></a> Deprecated: Improve $.trim performance for strings with lots of whitespace</li>\n<li><a href=\"https://github.com/jquery/jquery/commit/410d5cf0c3d0d92b2e9abd7fe0b16eb79c9a2a51\"><code>410d5cf</code></a> Docs: Update webpack website in README</li>\n<li><a href=\"https://github.com/jquery/jquery/commit/bc16512879bd81de9874bffa690404e14e8f43ff\"><code>bc16512</code></a> Tests: Exclude tests based on compilation flags, not API presence (3.x version)</li>\n<li><a href=\"https://github.com/jquery/jquery/commit/0f6c3d9efc5f7e844bdcf8ef44f9327f414bea77\"><code>0f6c3d9</code></a> Build: Update GitHub Actions</li>\n<li><a href=\"https://github.com/jquery/jquery/commit/5a363017cf80c3329bace5b45812a9dc10fcde7c\"><code>5a36301</code></a> Build: Add dependabot.yml config (GitHub Actions)</li>\n<li><a href=\"https://github.com/jquery/jquery/commit/9bc0df70be9455128a26f2e726213f0d544c70d4\"><code>9bc0df7</code></a> Build: Test on Node 17, update Grunt &amp; <code>karma-*</code> packages</li>\n<li><a href=\"https://github.com/jquery/jquery/commit/be3bd560f47ba46e01dcf42c3f6833aaa8596a33\"><code>be3bd56</code></a> Tests: Workaround an XML parsing bug in Firefox</li>\n<li><a href=\"https://github.com/jquery/jquery/commit/b24e83bd9d7fceedadf1fe32a5982972500b772c\"><code>b24e83b</code></a> Docs: add link to preview the new CLAs</li>\n<li>Additional commits viewable in <a href=\"https://github.com/jquery/jquery/compare/3.6.0...3.6.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jquery&package-manager=npm_and_yarn&previous-version=3.6.0&new-version=3.6.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/13499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/13499/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/12834","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/12834/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/12834/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/12834/events","html_url":"https://github.com/facebook/jest/pull/12834","id":1232006115,"node_id":"PR_kwDOAOXXVc43nsQl","number":12834,"title":"chore(ci): refactor `ts-node` compatibility tests","user":{"login":"mrazauskas","id":72159681,"node_id":"MDQ6VXNlcjcyMTU5Njgx","avatar_url":"https://avatars.githubusercontent.com/u/72159681?v=4","gravatar_id":"","url":"https://api.github.com/users/mrazauskas","html_url":"https://github.com/mrazauskas","followers_url":"https://api.github.com/users/mrazauskas/followers","following_url":"https://api.github.com/users/mrazauskas/following{/other_user}","gists_url":"https://api.github.com/users/mrazauskas/gists{/gist_id}","starred_url":"https://api.github.com/users/mrazauskas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrazauskas/subscriptions","organizations_url":"https://api.github.com/users/mrazauskas/orgs","repos_url":"https://api.github.com/users/mrazauskas/repos","events_url":"https://api.github.com/users/mrazauskas/events{/privacy}","received_events_url":"https://api.github.com/users/mrazauskas/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-05-11T04:51:44Z","updated_at":"2022-06-11T00:07:48Z","closed_at":"2022-05-11T07:15:30Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/12834","html_url":"https://github.com/facebook/jest/pull/12834","diff_url":"https://github.com/facebook/jest/pull/12834.diff","patch_url":"https://github.com/facebook/jest/pull/12834.patch","merged_at":"2022-05-11T07:15:30Z"},"body":"Spilt from #12801\r\n\r\n44 changed files 🙈. Better to split, that’s too much for such a small change\r\n\r\n## Summary\r\n\r\nIn the mentioned PR I was trying to proof that TS configs work with `ts-node`. These compatibility tests needed types to be build, but that takes so long (because of `\"skipLibCheck\": false`). That’s too slow for CI.\r\n\r\nIn the other hand, types are build for type tests. Hm.. What if `ts-node` compatibility would be checked in the same job with type tests? Many tests can be run and there is no performance penalty.\r\n\r\n## Test plan\r\n\r\nMore compatibility tests added.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/12834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/12834/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/12754","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/12754/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/12754/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/12754/events","html_url":"https://github.com/facebook/jest/pull/12754","id":1216827583,"node_id":"PR_kwDOAOXXVc422Ome","number":12754,"title":"fix(*): Lower Node requirement to 16.10","user":{"login":"lukeapage","id":309321,"node_id":"MDQ6VXNlcjMwOTMyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/309321?v=4","gravatar_id":"","url":"https://api.github.com/users/lukeapage","html_url":"https://github.com/lukeapage","followers_url":"https://api.github.com/users/lukeapage/followers","following_url":"https://api.github.com/users/lukeapage/following{/other_user}","gists_url":"https://api.github.com/users/lukeapage/gists{/gist_id}","starred_url":"https://api.github.com/users/lukeapage/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lukeapage/subscriptions","organizations_url":"https://api.github.com/users/lukeapage/orgs","repos_url":"https://api.github.com/users/lukeapage/repos","events_url":"https://api.github.com/users/lukeapage/events{/privacy}","received_events_url":"https://api.github.com/users/lukeapage/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2022-04-27T05:45:05Z","updated_at":"2022-05-28T00:08:27Z","closed_at":"2022-04-27T06:32:36Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/12754","html_url":"https://github.com/facebook/jest/pull/12754","diff_url":"https://github.com/facebook/jest/pull/12754.diff","patch_url":"https://github.com/facebook/jest/pull/12754.patch","merged_at":"2022-04-27T06:32:36Z"},"body":"## Summary\r\n\r\nNode JS 16.11 brings in a change that has significant memory and performance issues with Jest - https://github.com/facebook/jest/issues/11956. It has been identified as a upstream bug, but it has not been fixed. Since people who use yarn get the engine enforced (or decide to opt out for all packages) this pushes people upgrading to Jest 28 on to the buggy node version, which for large projects makes jest unworkable and small projects slower. So, as agreed on the bug I am lowering the required node v16 minor version to allow this work-around to continue to work.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/12754/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/12754/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/12572","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/12572/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/12572/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/12572/events","html_url":"https://github.com/facebook/jest/pull/12572","id":1167293540,"node_id":"PR_kwDOAOXXVc40V-AG","number":12572,"title":"feat(fake-timers)!: allow `jest.useFakeTimers()` and `projectConfig.fakeTimers` to take an options bag","user":{"login":"mrazauskas","id":72159681,"node_id":"MDQ6VXNlcjcyMTU5Njgx","avatar_url":"https://avatars.githubusercontent.com/u/72159681?v=4","gravatar_id":"","url":"https://api.github.com/users/mrazauskas","html_url":"https://github.com/mrazauskas","followers_url":"https://api.github.com/users/mrazauskas/followers","following_url":"https://api.github.com/users/mrazauskas/following{/other_user}","gists_url":"https://api.github.com/users/mrazauskas/gists{/gist_id}","starred_url":"https://api.github.com/users/mrazauskas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrazauskas/subscriptions","organizations_url":"https://api.github.com/users/mrazauskas/orgs","repos_url":"https://api.github.com/users/mrazauskas/repos","events_url":"https://api.github.com/users/mrazauskas/events{/privacy}","received_events_url":"https://api.github.com/users/mrazauskas/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/facebook/jest/milestones/14","html_url":"https://github.com/facebook/jest/milestone/14","labels_url":"https://api.github.com/repos/facebook/jest/milestones/14/labels","id":7236324,"node_id":"MI_kwDOAOXXVc4Abmrk","number":14,"title":"Jest 28","description":"","creator":{"login":"SimenB","id":1404810,"node_id":"MDQ6VXNlcjE0MDQ4MTA=","avatar_url":"https://avatars.githubusercontent.com/u/1404810?v=4","gravatar_id":"","url":"https://api.github.com/users/SimenB","html_url":"https://github.com/SimenB","followers_url":"https://api.github.com/users/SimenB/followers","following_url":"https://api.github.com/users/SimenB/following{/other_user}","gists_url":"https://api.github.com/users/SimenB/gists{/gist_id}","starred_url":"https://api.github.com/users/SimenB/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SimenB/subscriptions","organizations_url":"https://api.github.com/users/SimenB/orgs","repos_url":"https://api.github.com/users/SimenB/repos","events_url":"https://api.github.com/users/SimenB/events{/privacy}","received_events_url":"https://api.github.com/users/SimenB/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":26,"state":"closed","created_at":"2021-10-09T11:07:27Z","updated_at":"2022-04-26T11:55:56Z","due_on":null,"closed_at":"2022-04-26T11:55:56Z"},"comments":19,"created_at":"2022-03-12T13:45:30Z","updated_at":"2022-05-08T00:08:59Z","closed_at":"2022-04-05T14:48:16Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/12572","html_url":"https://github.com/facebook/jest/pull/12572","diff_url":"https://github.com/facebook/jest/pull/12572.diff","patch_url":"https://github.com/facebook/jest/pull/12572.patch","merged_at":"2022-04-05T14:48:15Z"},"body":"Resolves #8257 (allows `jest.useFakeTimers({timerLimit: 10});`)\r\nResolves #10602 (allows `jest.useFakeTimers({advanceTimers: 30, now: new Date('2015-09-25')});`)\r\nResolves #12055 (allows workaround `jest.useFakeTimers({doNotFake: ['performance']});`)\r\nCloses #11661\r\nCloses #12362\r\nCloses #12452\r\n\r\n## Summary\r\n\r\nAs it is mentioned in the linked issues, it would be very useful to allow `jest.useFakeTimers()` and `projectConfig.fakeTimers` to take an options object, which would configure underling `@sinonjs/fake-timers`. E.g. `loopLimit`, `shouldAdvanceTime`, `toFake` and all [other options](https://github.com/sinonjs/fake-timers#var-clock--faketimersinstallconfig).\r\n\r\n## ToDo\r\n\r\n- [x] unit test for the implementation\r\n- [x] e2e tests for the new API\r\n- [x] documentation\r\n- [x] changelog entry\r\n\r\n## Test plan\r\n\r\nCurrent and new unit, e2e and type tests should pass.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/12572/reactions","total_count":5,"+1":0,"-1":0,"laugh":0,"hooray":5,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/12572/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/12002","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/12002/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/12002/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/12002/events","html_url":"https://github.com/facebook/jest/pull/12002","id":1037606633,"node_id":"PR_kwDOAOXXVc4twEVG","number":12002,"title":"add performance global to nodejs environment","user":{"login":"SimonSiefke","id":23744935,"node_id":"MDQ6VXNlcjIzNzQ0OTM1","avatar_url":"https://avatars.githubusercontent.com/u/23744935?v=4","gravatar_id":"","url":"https://api.github.com/users/SimonSiefke","html_url":"https://github.com/SimonSiefke","followers_url":"https://api.github.com/users/SimonSiefke/followers","following_url":"https://api.github.com/users/SimonSiefke/following{/other_user}","gists_url":"https://api.github.com/users/SimonSiefke/gists{/gist_id}","starred_url":"https://api.github.com/users/SimonSiefke/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SimonSiefke/subscriptions","organizations_url":"https://api.github.com/users/SimonSiefke/orgs","repos_url":"https://api.github.com/users/SimonSiefke/repos","events_url":"https://api.github.com/users/SimonSiefke/events{/privacy}","received_events_url":"https://api.github.com/users/SimonSiefke/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2021-10-27T16:12:25Z","updated_at":"2022-01-31T00:05:16Z","closed_at":"2021-12-31T09:58:43Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/12002","html_url":"https://github.com/facebook/jest/pull/12002","diff_url":"https://github.com/facebook/jest/pull/12002.diff","patch_url":"https://github.com/facebook/jest/pull/12002.patch","merged_at":"2021-12-31T09:58:42Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md at the root of the project if you have not done so. -->\r\n\r\n## Summary\r\n\r\nFixes https://github.com/facebook/jest/issues/11629\r\n\r\n## Test plan\r\n\r\nbefore:\r\n![before](https://user-images.githubusercontent.com/23744935/139104857-d45c8dee-867d-4f5c-b263-0b91a06a8755.png)\r\n\r\nafter:\r\n![after](https://user-images.githubusercontent.com/23744935/139104870-5a00e932-9d7d-4187-b2b3-8a830b109601.png)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/12002/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/12002/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/12122","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/12122/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/12122/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/12122/events","html_url":"https://github.com/facebook/jest/pull/12122","id":1071403544,"node_id":"PR_kwDOAOXXVc4vZpRz","number":12122,"title":"fix(babel-jest): add `process.version` chunk to the cache key","user":{"login":"mrazauskas","id":72159681,"node_id":"MDQ6VXNlcjcyMTU5Njgx","avatar_url":"https://avatars.githubusercontent.com/u/72159681?v=4","gravatar_id":"","url":"https://api.github.com/users/mrazauskas","html_url":"https://github.com/mrazauskas","followers_url":"https://api.github.com/users/mrazauskas/followers","following_url":"https://api.github.com/users/mrazauskas/following{/other_user}","gists_url":"https://api.github.com/users/mrazauskas/gists{/gist_id}","starred_url":"https://api.github.com/users/mrazauskas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrazauskas/subscriptions","organizations_url":"https://api.github.com/users/mrazauskas/orgs","repos_url":"https://api.github.com/users/mrazauskas/repos","events_url":"https://api.github.com/users/mrazauskas/events{/privacy}","received_events_url":"https://api.github.com/users/mrazauskas/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2021-12-05T08:40:57Z","updated_at":"2022-01-05T00:05:22Z","closed_at":"2021-12-05T10:06:52Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/12122","html_url":"https://github.com/facebook/jest/pull/12122","diff_url":"https://github.com/facebook/jest/pull/12122.diff","patch_url":"https://github.com/facebook/jest/pull/12122.patch","merged_at":"2021-12-05T10:06:51Z"},"body":"Fixes #12117\r\n\r\n## Summary\r\n\r\nAs it is pointed out in the issue, currently `babel-jest` does not invalided Jest’s cache in case if users downgrade (or upgrade) Node’s version. (`jest --clear-cache` should be used.)\r\n\r\nSeems like it may be a good idea to add `process.version` as one of cache key chunks. Should the string include only major / minor or full version? Looking at other chunks of the cache key, I went for full version. Not sure if this can be an issue for performance?\r\n\r\n## Test plan\r\n\r\nI added a simple unit for `getCacheKey` function.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/12122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/12122/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/11922","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/11922/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/11922/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/11922/events","html_url":"https://github.com/facebook/jest/pull/11922","id":1014038957,"node_id":"PR_kwDOAOXXVc4sl2Ct","number":11922,"title":"feat: warn when there are multiple configs","user":{"login":"JanKaifer","id":12820484,"node_id":"MDQ6VXNlcjEyODIwNDg0","avatar_url":"https://avatars.githubusercontent.com/u/12820484?v=4","gravatar_id":"","url":"https://api.github.com/users/JanKaifer","html_url":"https://github.com/JanKaifer","followers_url":"https://api.github.com/users/JanKaifer/followers","following_url":"https://api.github.com/users/JanKaifer/following{/other_user}","gists_url":"https://api.github.com/users/JanKaifer/gists{/gist_id}","starred_url":"https://api.github.com/users/JanKaifer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JanKaifer/subscriptions","organizations_url":"https://api.github.com/users/JanKaifer/orgs","repos_url":"https://api.github.com/users/JanKaifer/repos","events_url":"https://api.github.com/users/JanKaifer/events{/privacy}","received_events_url":"https://api.github.com/users/JanKaifer/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2021-10-02T12:43:03Z","updated_at":"2021-11-06T00:04:29Z","closed_at":"2021-10-06T11:08:53Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/11922","html_url":"https://github.com/facebook/jest/pull/11922","diff_url":"https://github.com/facebook/jest/pull/11922.diff","patch_url":"https://github.com/facebook/jest/pull/11922.patch","merged_at":"2021-10-06T11:08:52Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md at the root of the project if you have not done so. -->\r\n- [ ] - CHANGELOG.md is not updated yet, since this feature is not approved/finished and contains breaking changes.\r\n\r\n## Summary\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n`resolveConfigPath` throws when there are both `package.json`(with \"jest\") and `jest.config.ext` present in a single directory.\r\n\r\nFix https://github.com/facebook/jest/issues/10124\r\n\r\nThere are 2 stale PRs that I took inspiration from: https://github.com/facebook/jest/pull/10798 and https://github.com/facebook/jest/pull/10213\r\n\r\nIt is a breaking change (error, not a warning) as proposed by @SimenB here: https://github.com/facebook/jest/pull/10798#pullrequestreview-593655004\r\n\r\nCloses #10798\r\nCloses #10213\r\n\r\n## Test plan\r\n\r\nI wrote/updated unit tests that check the behavior.\r\n\r\n## Questions\r\n- Just wanted to make sure that I understood correctly that `package.json` needs to have `\"jest\"` key in order to be a valid jest config file.\r\n- I'm reading and parsing the whole `package.json` don't know if that could be a performance problem.\r\n- The `\"jest\"` is hardcoded in two places now: https://github.com/facebook/jest/blob/7109b8ccea2e0f70b6ad8eae02cd36b6c2841604/packages/jest-config/src/readConfigFileAndSetRootDir.ts#L58 . I'm not sure where to move it. \r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/11922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/11922/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/4008","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/4008/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/4008/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/4008/events","html_url":"https://github.com/facebook/jest/pull/4008","id":242029465,"node_id":"MDExOlB1bGxSZXF1ZXN0MTI5ODk0NzQ5","number":4008,"title":"Update Travis CI performance troubleshooting","user":{"login":"ntwb","id":1016458,"node_id":"MDQ6VXNlcjEwMTY0NTg=","avatar_url":"https://avatars.githubusercontent.com/u/1016458?v=4","gravatar_id":"","url":"https://api.github.com/users/ntwb","html_url":"https://github.com/ntwb","followers_url":"https://api.github.com/users/ntwb/followers","following_url":"https://api.github.com/users/ntwb/following{/other_user}","gists_url":"https://api.github.com/users/ntwb/gists{/gist_id}","starred_url":"https://api.github.com/users/ntwb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ntwb/subscriptions","organizations_url":"https://api.github.com/users/ntwb/orgs","repos_url":"https://api.github.com/users/ntwb/repos","events_url":"https://api.github.com/users/ntwb/events{/privacy}","received_events_url":"https://api.github.com/users/ntwb/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-07-11T12:27:05Z","updated_at":"2021-05-13T11:06:38Z","closed_at":"2017-07-11T12:27:35Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/4008","html_url":"https://github.com/facebook/jest/pull/4008","diff_url":"https://github.com/facebook/jest/pull/4008.diff","patch_url":"https://github.com/facebook/jest/pull/4008.patch","merged_at":"2017-07-11T12:27:35Z"},"body":"Fixes #4004\r\n\r\n<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n**Summary**\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\nAdds a note that Travis CI for open source projects only include 2 cores.\r\n\r\n**Test plan**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\nn/a","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/4008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/4008/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8183","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8183/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8183/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8183/events","html_url":"https://github.com/facebook/jest/pull/8183","id":423577753,"node_id":"MDExOlB1bGxSZXF1ZXN0MjYzMTIwNDg2","number":8183,"title":"jest-resolve 18% performance optimization","user":{"login":"scotthovestadt","id":1831484,"node_id":"MDQ6VXNlcjE4MzE0ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/1831484?v=4","gravatar_id":"","url":"https://api.github.com/users/scotthovestadt","html_url":"https://github.com/scotthovestadt","followers_url":"https://api.github.com/users/scotthovestadt/followers","following_url":"https://api.github.com/users/scotthovestadt/following{/other_user}","gists_url":"https://api.github.com/users/scotthovestadt/gists{/gist_id}","starred_url":"https://api.github.com/users/scotthovestadt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scotthovestadt/subscriptions","organizations_url":"https://api.github.com/users/scotthovestadt/orgs","repos_url":"https://api.github.com/users/scotthovestadt/repos","events_url":"https://api.github.com/users/scotthovestadt/events{/privacy}","received_events_url":"https://api.github.com/users/scotthovestadt/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-03-21T05:30:48Z","updated_at":"2021-05-11T21:07:15Z","closed_at":"2019-03-21T16:13:48Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8183","html_url":"https://github.com/facebook/jest/pull/8183","diff_url":"https://github.com/facebook/jest/pull/8183.diff","patch_url":"https://github.com/facebook/jest/pull/8183.patch","merged_at":"2019-03-21T16:13:48Z"},"body":"## Summary\r\n\r\n`jest-resolve` is called heavily by `jest-resolve-dependencies` when finding related tests. Benchmarking the simple change from `Object` to `Map` for the internal cache shows an 18% improvement in the total run time of `dependencyResolver.resolveInverse` for a test data set of 300k~ files, although obviously the performance characteristics are going to vary depending on the data set.\r\n\r\nAt Facebook, this PR means when I run just Jest to look at my changed files and run the appropriate tests, it boots up 2 seconds faster.\r\n\r\n## Test plan\r\n\r\n- All tests pass. New tests not appropriate for this simple change.\r\n- Tested manually.\r\n- Benchmarked to ensure performance improvement.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8183/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8201","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8201/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8201/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8201/events","html_url":"https://github.com/facebook/jest/pull/8201","id":424587889,"node_id":"MDExOlB1bGxSZXF1ZXN0MjYzODg5MDI2","number":8201,"title":"Dramatically improve watch mode performance.","user":{"login":"scotthovestadt","id":1831484,"node_id":"MDQ6VXNlcjE4MzE0ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/1831484?v=4","gravatar_id":"","url":"https://api.github.com/users/scotthovestadt","html_url":"https://github.com/scotthovestadt","followers_url":"https://api.github.com/users/scotthovestadt/followers","following_url":"https://api.github.com/users/scotthovestadt/following{/other_user}","gists_url":"https://api.github.com/users/scotthovestadt/gists{/gist_id}","starred_url":"https://api.github.com/users/scotthovestadt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scotthovestadt/subscriptions","organizations_url":"https://api.github.com/users/scotthovestadt/orgs","repos_url":"https://api.github.com/users/scotthovestadt/repos","events_url":"https://api.github.com/users/scotthovestadt/events{/privacy}","received_events_url":"https://api.github.com/users/scotthovestadt/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2019-03-24T08:24:56Z","updated_at":"2021-05-11T21:07:12Z","closed_at":"2019-03-24T21:57:03Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8201","html_url":"https://github.com/facebook/jest/pull/8201","diff_url":"https://github.com/facebook/jest/pull/8201.diff","patch_url":"https://github.com/facebook/jest/pull/8201.patch","merged_at":"2019-03-24T21:57:03Z"},"body":"## Summary\r\n\r\nResolves #7341 \r\n\r\nThis PR dramatically improves watch mode performance, bringing it in line with single run mode performance. It accomplishes that by:\r\n- Workers previously initialized a new `ModuleMap` and `Resolver` for every test in watch mode. Now, those objects are only initialized once when the worker is setup.\r\n- In the main thread, caching the conversion of `ModuleMap` to a JSON-friendly object.\r\n\r\n## Benchmarks\r\n\r\nI benchmarked against Jest's own test suite, excluding e2e tests which don't provide good signal because they individually take a long time (so startup time for the test is marginalized). The numbers show that running in Watch mode previously added an extra 35%~ of runtime to the tests but that has now been reduced to almost nothing.\r\n\r\nWatch mode should now just be paying a one-time initial cost for each worker when the haste map changes instead of paying that same cost for _every_ test run.\r\n\r\n### branch: master\r\n\r\n`yarn jest ./packages`\r\nRun time: 15.091s\r\n\r\n`yarn jest ./packages --watch`\r\nRun time: 23.234s\r\n\r\n### branch: watch-performance\r\n\r\n`yarn jest ./packages`\r\nRun time: 14.973s\r\n\r\n`yarn jest ./packages --watch`\r\nRun time: 15.196s\r\n\r\n\r\n## Test plan\r\n\r\n- All tests pass.\r\n- Benchmarked to verify the performance wins.\r\n- Verified that when the haste map is updated, the update is propagated out to all workers.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8201/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8201/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8184","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8184/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8184/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8184/events","html_url":"https://github.com/facebook/jest/pull/8184","id":423597150,"node_id":"MDExOlB1bGxSZXF1ZXN0MjYzMTM1MDY0","number":8184,"title":"Improve performance of SearchSource.findMatchingTests by 15%","user":{"login":"scotthovestadt","id":1831484,"node_id":"MDQ6VXNlcjE4MzE0ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/1831484?v=4","gravatar_id":"","url":"https://api.github.com/users/scotthovestadt","html_url":"https://github.com/scotthovestadt","followers_url":"https://api.github.com/users/scotthovestadt/followers","following_url":"https://api.github.com/users/scotthovestadt/following{/other_user}","gists_url":"https://api.github.com/users/scotthovestadt/gists{/gist_id}","starred_url":"https://api.github.com/users/scotthovestadt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scotthovestadt/subscriptions","organizations_url":"https://api.github.com/users/scotthovestadt/orgs","repos_url":"https://api.github.com/users/scotthovestadt/repos","events_url":"https://api.github.com/users/scotthovestadt/events{/privacy}","received_events_url":"https://api.github.com/users/scotthovestadt/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-21T07:17:55Z","updated_at":"2021-05-11T21:07:16Z","closed_at":"2019-03-21T16:17:54Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8184","html_url":"https://github.com/facebook/jest/pull/8184","diff_url":"https://github.com/facebook/jest/pull/8184.diff","patch_url":"https://github.com/facebook/jest/pull/8184.patch","merged_at":"2019-03-21T16:17:54Z"},"body":"## Summary\r\n\r\nThis PR is a 15% performance improvement for `SearchSource.findMatchingTests`. I benchmarked a test data set of 300k files at 975ms~ with the current code. The same search pattern now executes in 830ms~.\r\n\r\nAt Facebook, this means that for the common use case of triggering `jest MyFileName`, Jest will launch >100ms faster. Sometimes you have to take the small wins. :)\r\n\r\nI optimized this by looking for inefficiencies in code that is called for every file. In this case:\r\n- One of the inner functions triggered for each file called `Object.keys` for the `stats` object every time. Not efficient.\r\n- Dummy functions were being created that always returned true. It still costs CPU time to call a function, even an extremely fast one. Better to never call it.\r\n\r\nI refactored away the issues by adapting the data structures to better fit the way they are being used. Since our stat filters are optional and we want to iterate them, they make more sense as an array. I maintained full type safety.\r\n\r\n## Test plan\r\n\r\n- All existing tests path, which already cover this functionality.\r\n- Careful benchmarking of the performance.\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8184/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8184/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/7603","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/7603/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/7603/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/7603/events","html_url":"https://github.com/facebook/jest/pull/7603","id":397940623,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQzNzczMTU4","number":7603,"title":"chore: Add performance benchmark to `diff-sequences` package","user":{"login":"pedrottimark","id":11862657,"node_id":"MDQ6VXNlcjExODYyNjU3","avatar_url":"https://avatars.githubusercontent.com/u/11862657?v=4","gravatar_id":"","url":"https://api.github.com/users/pedrottimark","html_url":"https://github.com/pedrottimark","followers_url":"https://api.github.com/users/pedrottimark/followers","following_url":"https://api.github.com/users/pedrottimark/following{/other_user}","gists_url":"https://api.github.com/users/pedrottimark/gists{/gist_id}","starred_url":"https://api.github.com/users/pedrottimark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pedrottimark/subscriptions","organizations_url":"https://api.github.com/users/pedrottimark/orgs","repos_url":"https://api.github.com/users/pedrottimark/repos","events_url":"https://api.github.com/users/pedrottimark/events{/privacy}","received_events_url":"https://api.github.com/users/pedrottimark/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-01-10T17:38:57Z","updated_at":"2021-05-12T03:12:37Z","closed_at":"2019-01-20T20:27:32Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/7603","html_url":"https://github.com/facebook/jest/pull/7603","diff_url":"https://github.com/facebook/jest/pull/7603.diff","patch_url":"https://github.com/facebook/jest/pull/7603.patch","merged_at":"2019-01-20T20:27:32Z"},"body":"## Summary\r\n\r\nCompare improved `diff-sequences` package to baseline `diff` package.\r\n\r\n* Added `perf/index.js` file\r\n* Added `perf/example.md` file which contains copied result of a run\r\n* Added a command to `\"scripts\"` in `package.json` file\r\n* Added `benchmark` and `diff` as `devDependencies`\r\n\r\nBecause allocating and freeing of temporary objects is the root of the performance problem, the tests call `global.gc()` before every test cycle, so make sure to run node with `--expose-gc` option!\r\n\r\nAbove 2000 items, the `benchmark` package can’t keep the relative mean error below its target of 1%\r\n\r\nFor example, notice in next to last row of `example.md` that an outlier low `0.0083` ratio corresponds to outlier high `3.60%` baseline rme: an inaccurate high denominator causes low ratio.\r\n\r\nYour critique is always welcome and especially because perf benchmark is new for me :)\r\n\r\nP.S. I added `/* eslint import/no-extraneous-dependencies: \"off\" */` because the rule demanded that `benchmark` and `diff` become `dependencies` instead of `devDependencies`\r\n\r\n## Test plan\r\n\r\nTo achieve 1% relative mean error, run the benchmark:\r\n\r\n* immediately after restart\r\n* with 100% battery charge\r\n* not connected to network\r\n\r\nI ran it with node 10.15.0 not via `yarn` in subdirectory: `node --expose-gc perf/index.js`\r\n\r\nSee most values of ratio are between `0.05` and `0.15`\r\n\r\nThe most relevant test for catastrophic performance problems is `insert 80%` that is, after every 2 expected items, insert 8 unexpected items:\r\n\r\n* diff in report when test fails before implementation has been written #1772\r\n* diff in report when test fails because received object has unexpected properties #6976\r\n* diff of snapshot when test criterion changes #5392","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/7603/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/7603/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8232","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8232/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8232/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8232/events","html_url":"https://github.com/facebook/jest/pull/8232","id":426754435,"node_id":"MDExOlB1bGxSZXF1ZXN0MjY1NTQwOTQ4","number":8232,"title":"Performance: use Map for jest-runtime module registry.","user":{"login":"scotthovestadt","id":1831484,"node_id":"MDQ6VXNlcjE4MzE0ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/1831484?v=4","gravatar_id":"","url":"https://api.github.com/users/scotthovestadt","html_url":"https://github.com/scotthovestadt","followers_url":"https://api.github.com/users/scotthovestadt/followers","following_url":"https://api.github.com/users/scotthovestadt/following{/other_user}","gists_url":"https://api.github.com/users/scotthovestadt/gists{/gist_id}","starred_url":"https://api.github.com/users/scotthovestadt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scotthovestadt/subscriptions","organizations_url":"https://api.github.com/users/scotthovestadt/orgs","repos_url":"https://api.github.com/users/scotthovestadt/repos","events_url":"https://api.github.com/users/scotthovestadt/events{/privacy}","received_events_url":"https://api.github.com/users/scotthovestadt/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-03-28T23:50:20Z","updated_at":"2021-05-11T20:07:04Z","closed_at":"2019-03-29T15:44:10Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8232","html_url":"https://github.com/facebook/jest/pull/8232","diff_url":"https://github.com/facebook/jest/pull/8232.diff","patch_url":"https://github.com/facebook/jest/pull/8232.patch","merged_at":"2019-03-29T15:44:10Z"},"body":"## Summary\r\n\r\nQuick benchmark of getting `Map` vs `Object` for string keys of various lengths on Node v11:\r\n```\r\n  get object key x   278 ops/sec ±2.28% (85 runs sampled)\r\n  get map key    x 1,716 ops/sec ±1.35% (93 runs sampled)\r\n```\r\n\r\n## Test plan\r\n\r\n- All tests pass.\r\n- Tested against FB's test suite.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8232/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8232/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8235","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8235/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8235/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8235/events","html_url":"https://github.com/facebook/jest/pull/8235","id":426805644,"node_id":"MDExOlB1bGxSZXF1ZXN0MjY1NTc3MzMz","number":8235,"title":"Performance: Cache regular expression instead of creating anew for every file in ScriptTransformer.","user":{"login":"scotthovestadt","id":1831484,"node_id":"MDQ6VXNlcjE4MzE0ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/1831484?v=4","gravatar_id":"","url":"https://api.github.com/users/scotthovestadt","html_url":"https://github.com/scotthovestadt","followers_url":"https://api.github.com/users/scotthovestadt/followers","following_url":"https://api.github.com/users/scotthovestadt/following{/other_user}","gists_url":"https://api.github.com/users/scotthovestadt/gists{/gist_id}","starred_url":"https://api.github.com/users/scotthovestadt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scotthovestadt/subscriptions","organizations_url":"https://api.github.com/users/scotthovestadt/orgs","repos_url":"https://api.github.com/users/scotthovestadt/repos","events_url":"https://api.github.com/users/scotthovestadt/events{/privacy}","received_events_url":"https://api.github.com/users/scotthovestadt/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-29T03:57:50Z","updated_at":"2021-05-11T20:07:01Z","closed_at":"2019-03-29T16:17:07Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8235","html_url":"https://github.com/facebook/jest/pull/8235","diff_url":"https://github.com/facebook/jest/pull/8235.diff","patch_url":"https://github.com/facebook/jest/pull/8235.patch","merged_at":"2019-03-29T16:17:07Z"},"body":"## Summary\r\n\r\nThis PR improves performance by caching the regular expression string -> `RegExp` conversion.\r\n\r\nBenchmarks on cached regular expression vs. creating new each time:\r\n```\r\n  new regex x   596 ops/sec ±0.95% (97 runs sampled)\r\n  cached regex  x 1,668 ops/sec ±0.61% (97 runs sampled)\r\n```\r\n\r\nFor large projects, Jest may process a LOT of files. The more workers in use, the higher chance that the same file is processed multiple times. Additionally, each time it's hit multiple regular expressions may be tested against.\r\n\r\nThe benchmark I used:\r\n```js\r\nsuite.add('new regex', function() {\r\n  for (var i = 0; i < 10000; i++) {\r\n    new RegExp('^.+\\\\.[jt]sx?$').test(\r\n      'jest/packages/jest-haste-map/src/__tests__/haste_impl.js'\r\n    );\r\n  }\r\n});\r\n\r\nsuite.add('cached regex', function() {\r\n  const regex = new RegExp('^.+\\\\.[jt]sx?$');\r\n  for (var i = 0; i < 10000; i++) {\r\n    regex.test(\r\n      'jest/packages/jest-haste-map/src/__tests__/haste_impl.js'\r\n    );\r\n  }\r\n});\r\n```\r\n\r\n## Test plan\r\n\r\n- All tests pass.\r\n- Performance benefit verified.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8235/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8235/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/2619","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/2619/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/2619/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/2619/events","html_url":"https://github.com/facebook/jest/pull/2619","id":201363116,"node_id":"MDExOlB1bGxSZXF1ZXN0MTAxOTE2NzI2","number":2619,"title":"Fix broken link to Babel's plugin inline-requests in blog post 'JavaS…","user":{"login":"jonasmayer","id":6930700,"node_id":"MDQ6VXNlcjY5MzA3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/6930700?v=4","gravatar_id":"","url":"https://api.github.com/users/jonasmayer","html_url":"https://github.com/jonasmayer","followers_url":"https://api.github.com/users/jonasmayer/followers","following_url":"https://api.github.com/users/jonasmayer/following{/other_user}","gists_url":"https://api.github.com/users/jonasmayer/gists{/gist_id}","starred_url":"https://api.github.com/users/jonasmayer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonasmayer/subscriptions","organizations_url":"https://api.github.com/users/jonasmayer/orgs","repos_url":"https://api.github.com/users/jonasmayer/repos","events_url":"https://api.github.com/users/jonasmayer/events{/privacy}","received_events_url":"https://api.github.com/users/jonasmayer/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-01-17T18:08:11Z","updated_at":"2021-05-14T02:30:41Z","closed_at":"2017-01-17T18:09:13Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/2619","html_url":"https://github.com/facebook/jest/pull/2619","diff_url":"https://github.com/facebook/jest/pull/2619.diff","patch_url":"https://github.com/facebook/jest/pull/2619.patch","merged_at":"2017-01-17T18:09:13Z"},"body":"…cript Unit Testing Performance'\r\n\r\n**Summary**\r\n\r\nFixes the broken link in [JavaScript Unit Testing Performance](https://facebook.github.io/jest/blog/2016/03/11/javascript-unit-testing-performance.html) to the plugin inline-requires\r\n\r\n**Test plan**\r\n\r\n![screenshot - 17-01-2017 - 16 04 35](https://cloud.githubusercontent.com/assets/6930700/22033272/00d0a8b0-dccf-11e6-9e42-34d241395eab.png)\r\n![screenshot - 17-01-2017 - 16 05 39](https://cloud.githubusercontent.com/assets/6930700/22033282/09da7d32-dccf-11e6-93e9-c37627ea4995.png)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/2619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/2619/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8056","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8056/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8056/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8056/events","html_url":"https://github.com/facebook/jest/pull/8056","id":417578520,"node_id":"MDExOlB1bGxSZXF1ZXN0MjU4NTQ1NjY2","number":8056,"title":"Optimize haste map tracking of deleted files with Watchman.","user":{"login":"scotthovestadt","id":1831484,"node_id":"MDQ6VXNlcjE4MzE0ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/1831484?v=4","gravatar_id":"","url":"https://api.github.com/users/scotthovestadt","html_url":"https://github.com/scotthovestadt","followers_url":"https://api.github.com/users/scotthovestadt/followers","following_url":"https://api.github.com/users/scotthovestadt/following{/other_user}","gists_url":"https://api.github.com/users/scotthovestadt/gists{/gist_id}","starred_url":"https://api.github.com/users/scotthovestadt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scotthovestadt/subscriptions","organizations_url":"https://api.github.com/users/scotthovestadt/orgs","repos_url":"https://api.github.com/users/scotthovestadt/repos","events_url":"https://api.github.com/users/scotthovestadt/events{/privacy}","received_events_url":"https://api.github.com/users/scotthovestadt/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2019-03-06T01:23:45Z","updated_at":"2021-05-11T23:06:45Z","closed_at":"2019-03-06T18:48:27Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8056","html_url":"https://github.com/facebook/jest/pull/8056","diff_url":"https://github.com/facebook/jest/pull/8056.diff","patch_url":"https://github.com/facebook/jest/pull/8056.patch","merged_at":"2019-03-06T18:48:27Z"},"body":"## Summary\r\n\r\nThis is a minor PR to improve the performance of tracking deleted files by taking advantage of Watchman when available.\r\n\r\nCurrently, deleted files are tracked within jest-haste-map by:\r\n1. Making a shallow copy of the Haste Map files before building the file map.\r\n2. Filtering the shallow copy against the generated file map to remove all files that still exist.\r\n\r\nBenchmarking this operation against a large locally-generated test Haste Map of 300k~ files with one deletion, the operation currently takes about 150ms on my machine and grows linearly with more files tracked. Using Watchman makes it almost free and only grows with the number of files changed.\r\n\r\nI've updated the non-Watchman implementation to also track deleted files within the crawler to keep the interface consistent, although that update is neutral on performance.\r\n\r\n## Test plan\r\n\r\n- Benchmarked the performance to ensure what looked like a performance gain was one in practice.\r\n- Tested manually with and without Watchman to ensure deleted files were being picked up as expected.\r\n- Added tests for tracking deleted files with Watchman crawler when fresh and when not fresh.\r\n- Added tests for tracking deleted file with Node crawler.\r\n- Updated all related tests.\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8056/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8056/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8211","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8211/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8211/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8211/events","html_url":"https://github.com/facebook/jest/pull/8211","id":424977770,"node_id":"MDExOlB1bGxSZXF1ZXN0MjY0MTc5NTYy","number":8211,"title":"Watch mode number of CPUs & documentation.","user":{"login":"scotthovestadt","id":1831484,"node_id":"MDQ6VXNlcjE4MzE0ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/1831484?v=4","gravatar_id":"","url":"https://api.github.com/users/scotthovestadt","html_url":"https://github.com/scotthovestadt","followers_url":"https://api.github.com/users/scotthovestadt/followers","following_url":"https://api.github.com/users/scotthovestadt/following{/other_user}","gists_url":"https://api.github.com/users/scotthovestadt/gists{/gist_id}","starred_url":"https://api.github.com/users/scotthovestadt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scotthovestadt/subscriptions","organizations_url":"https://api.github.com/users/scotthovestadt/orgs","repos_url":"https://api.github.com/users/scotthovestadt/repos","events_url":"https://api.github.com/users/scotthovestadt/events{/privacy}","received_events_url":"https://api.github.com/users/scotthovestadt/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-25T15:49:24Z","updated_at":"2021-05-11T21:07:11Z","closed_at":"2019-03-25T16:54:02Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8211","html_url":"https://github.com/facebook/jest/pull/8211","diff_url":"https://github.com/facebook/jest/pull/8211.diff","patch_url":"https://github.com/facebook/jest/pull/8211.patch","merged_at":"2019-03-25T16:54:02Z"},"body":"## Summary\r\n\r\nRevert change to number of CPUs and add docs to resolve @cpojer comment:\r\nhttps://github.com/facebook/jest/pull/8201#issuecomment-476221537\r\n\r\nBenchmarked Jest non-e2e test performance for this branch from 14.973s to 16.504s, which is still a massive win over the original 23.234s and probably points to further optimizations being possible since I'd hope that giving it 5 extra CPUs would do more for the performance.\r\n\r\n## Test plan\r\n\r\n- All tests pass, including the test that specifically touches this number.\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8211/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8211/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8234","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8234/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8234/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8234/events","html_url":"https://github.com/facebook/jest/pull/8234","id":426777337,"node_id":"MDExOlB1bGxSZXF1ZXN0MjY1NTU3ODAx","number":8234,"title":"Memory leak fix: release source map info after processed and minor optimizations","user":{"login":"scotthovestadt","id":1831484,"node_id":"MDQ6VXNlcjE4MzE0ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/1831484?v=4","gravatar_id":"","url":"https://api.github.com/users/scotthovestadt","html_url":"https://github.com/scotthovestadt","followers_url":"https://api.github.com/users/scotthovestadt/followers","following_url":"https://api.github.com/users/scotthovestadt/following{/other_user}","gists_url":"https://api.github.com/users/scotthovestadt/gists{/gist_id}","starred_url":"https://api.github.com/users/scotthovestadt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scotthovestadt/subscriptions","organizations_url":"https://api.github.com/users/scotthovestadt/orgs","repos_url":"https://api.github.com/users/scotthovestadt/repos","events_url":"https://api.github.com/users/scotthovestadt/events{/privacy}","received_events_url":"https://api.github.com/users/scotthovestadt/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-29T01:42:46Z","updated_at":"2021-05-11T20:07:03Z","closed_at":"2019-03-29T16:14:56Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8234","html_url":"https://github.com/facebook/jest/pull/8234","diff_url":"https://github.com/facebook/jest/pull/8234.diff","patch_url":"https://github.com/facebook/jest/pull/8234.patch","merged_at":"2019-03-29T16:14:56Z"},"body":"## Summary\r\n\r\nPreviously, `sourceMaps`:\r\n- Was always populated with a call to `getSourceMapInfo` and set to an object, even when it was guaranteed to be empty.\r\n- Was never released from memory.\r\n\r\nIt's companion, `coverage`, was released from memory but unfortunately using the `delete` operator, which is significantly slower than `= undefined` even with modern V8 versions:\r\nhttps://jsperf.com/delete-vs-undefined-vs-null/87\r\n\r\nI've resolved the leak and minor performance issues along with a minor change to `formatTestResults` that is slightly more efficient for the same result.\r\n\r\n## Test plan\r\n\r\n- All tests pass.\r\n- Memory and performance characteristics verified.\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8234/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8234/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/6960","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/6960/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/6960/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/6960/events","html_url":"https://github.com/facebook/jest/pull/6960","id":359179558,"node_id":"MDExOlB1bGxSZXF1ZXN0MjE0NzMzNTUw","number":6960,"title":"HasteMap with native maps","user":{"login":"rubennorte","id":117921,"node_id":"MDQ6VXNlcjExNzkyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/117921?v=4","gravatar_id":"","url":"https://api.github.com/users/rubennorte","html_url":"https://github.com/rubennorte","followers_url":"https://api.github.com/users/rubennorte/followers","following_url":"https://api.github.com/users/rubennorte/following{/other_user}","gists_url":"https://api.github.com/users/rubennorte/gists{/gist_id}","starred_url":"https://api.github.com/users/rubennorte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rubennorte/subscriptions","organizations_url":"https://api.github.com/users/rubennorte/orgs","repos_url":"https://api.github.com/users/rubennorte/repos","events_url":"https://api.github.com/users/rubennorte/events{/privacy}","received_events_url":"https://api.github.com/users/rubennorte/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2018-09-11T19:02:35Z","updated_at":"2021-05-12T06:06:54Z","closed_at":"2018-09-12T13:42:52Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/6960","html_url":"https://github.com/facebook/jest/pull/6960","diff_url":"https://github.com/facebook/jest/pull/6960.diff","patch_url":"https://github.com/facebook/jest/pull/6960.patch","merged_at":"2018-09-12T13:42:52Z"},"body":"## Summary\r\n\r\nThis changes the data structure used to store the metadata for files, modules, mocks and duplicated modules in the Haste Map from `Object` (without prototypes) to `Map`.\r\n\r\nThe performance of `Map` is much better than `Object` to implement dictionaries when they contain a large amount of entries, which is usually what we have here. After testing this change in Facebook we've seen a ~20% reduction of the time to run all tests, which is a massive performance improvement for us.\r\n\r\nThis only modifies the internal data structures used by Jest and its end users will not be affected by it (other than performance). The change in the `jest-haste-map` package is breaking though, as it might affect other packages depending on it (including jest packages, which have been updated here).\r\n\r\n## Test plan\r\n\r\nI've updated all tests related to this change (including a change to make the data structures more encapsulated for the rest of packages). I've also tested this in the Facebook infrastructure (including running all tests, running a subset of the tests, watch mode and coverage reporting).","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/6960/reactions","total_count":46,"+1":26,"-1":0,"laugh":0,"hooray":6,"confused":0,"heart":14,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/6960/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/9695","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/9695/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/9695/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/9695/events","html_url":"https://github.com/facebook/jest/pull/9695","id":586543892,"node_id":"MDExOlB1bGxSZXF1ZXN0MzkyNjU5OTA1","number":9695,"title":"fix: fsync: false when writing cache files","user":{"login":"FauxFaux","id":328180,"node_id":"MDQ6VXNlcjMyODE4MA==","avatar_url":"https://avatars.githubusercontent.com/u/328180?v=4","gravatar_id":"","url":"https://api.github.com/users/FauxFaux","html_url":"https://github.com/FauxFaux","followers_url":"https://api.github.com/users/FauxFaux/followers","following_url":"https://api.github.com/users/FauxFaux/following{/other_user}","gists_url":"https://api.github.com/users/FauxFaux/gists{/gist_id}","starred_url":"https://api.github.com/users/FauxFaux/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FauxFaux/subscriptions","organizations_url":"https://api.github.com/users/FauxFaux/orgs","repos_url":"https://api.github.com/users/FauxFaux/repos","events_url":"https://api.github.com/users/FauxFaux/events{/privacy}","received_events_url":"https://api.github.com/users/FauxFaux/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2020-03-23T21:58:18Z","updated_at":"2021-05-11T10:06:36Z","closed_at":"2020-03-24T08:57:17Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/9695","html_url":"https://github.com/facebook/jest/pull/9695","diff_url":"https://github.com/facebook/jest/pull/9695.diff","patch_url":"https://github.com/facebook/jest/pull/9695.patch","merged_at":"2020-03-24T08:57:17Z"},"body":"##  Summary\r\n\r\n`writeFileAtomic` defaults to running `fsync` on the file after use.\r\n\r\n`fsync` is a nearly 3x slowdown for me, ts-jest'ing my whole codebase (~900 files in testcase).\r\n\r\n`ubuntu` defaults to `/tmp` as regular filesystem (i.e. not tmpfs), and some filesystems/devices have a large overhead for these repeated `fsync`s. I happen to be on nvme (sm961), and `btrfs`.\r\n\r\nWe're using `writeFileAtomic` here in order to get atomic rename, not to get full system power failure resilience. Most(tm) filesystems will guarantee either/or during a system power failure here, which is plenty enough for us.\r\n\r\n## Test plan\r\n\r\nThere should be no functional changes here (even during a system power failure), only a performance increase in all cases, and a drastic performance increase in some cases.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/9695/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/9695/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/406","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/406/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/406/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/406/events","html_url":"https://github.com/facebook/jest/pull/406","id":88947660,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzc4NzQ2MTA=","number":406,"title":"Replace Q with Bluebird","user":{"login":"DmitrySoshnikov","id":244010,"node_id":"MDQ6VXNlcjI0NDAxMA==","avatar_url":"https://avatars.githubusercontent.com/u/244010?v=4","gravatar_id":"","url":"https://api.github.com/users/DmitrySoshnikov","html_url":"https://github.com/DmitrySoshnikov","followers_url":"https://api.github.com/users/DmitrySoshnikov/followers","following_url":"https://api.github.com/users/DmitrySoshnikov/following{/other_user}","gists_url":"https://api.github.com/users/DmitrySoshnikov/gists{/gist_id}","starred_url":"https://api.github.com/users/DmitrySoshnikov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DmitrySoshnikov/subscriptions","organizations_url":"https://api.github.com/users/DmitrySoshnikov/orgs","repos_url":"https://api.github.com/users/DmitrySoshnikov/repos","events_url":"https://api.github.com/users/DmitrySoshnikov/events{/privacy}","received_events_url":"https://api.github.com/users/DmitrySoshnikov/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2015-06-17T08:01:05Z","updated_at":"2021-05-14T23:06:32Z","closed_at":"2015-06-19T05:45:35Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/406","html_url":"https://github.com/facebook/jest/pull/406","diff_url":"https://github.com/facebook/jest/pull/406.diff","patch_url":"https://github.com/facebook/jest/pull/406.patch","merged_at":"2015-06-19T05:45:35Z"},"body":"The [bluebird](https://github.com/petkaantonov/bluebird) seems to have better performance than [Q](https://github.com/kriskowal/q).\n\nAn [issue](https://github.com/petkaantonov/bluebird/issues/661) was noticed after the switch, which is solved locally, but probably Bluebird will fix it at library level.\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/406/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8237","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8237/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8237/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8237/events","html_url":"https://github.com/facebook/jest/pull/8237","id":426821093,"node_id":"MDExOlB1bGxSZXF1ZXN0MjY1NTg4Nzk5","number":8237,"title":"Unify worker module map transmission w/ small perf benefit.","user":{"login":"scotthovestadt","id":1831484,"node_id":"MDQ6VXNlcjE4MzE0ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/1831484?v=4","gravatar_id":"","url":"https://api.github.com/users/scotthovestadt","html_url":"https://github.com/scotthovestadt","followers_url":"https://api.github.com/users/scotthovestadt/followers","following_url":"https://api.github.com/users/scotthovestadt/following{/other_user}","gists_url":"https://api.github.com/users/scotthovestadt/gists{/gist_id}","starred_url":"https://api.github.com/users/scotthovestadt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scotthovestadt/subscriptions","organizations_url":"https://api.github.com/users/scotthovestadt/orgs","repos_url":"https://api.github.com/users/scotthovestadt/repos","events_url":"https://api.github.com/users/scotthovestadt/events{/privacy}","received_events_url":"https://api.github.com/users/scotthovestadt/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2019-03-29T05:17:59Z","updated_at":"2021-05-24T00:05:36Z","closed_at":"2019-03-29T21:41:28Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8237","html_url":"https://github.com/facebook/jest/pull/8237","diff_url":"https://github.com/facebook/jest/pull/8237.diff","patch_url":"https://github.com/facebook/jest/pull/8237.patch","merged_at":"2019-03-29T21:41:27Z"},"body":"## Summary\r\n\r\nThis PR unifies the way module maps are passed to the worker. Previously, we did it one way for watch mode and a different way for non-watch mode because our watch mode way was a lot slower.\r\n\r\nI fixed that slowness for watch mode and realized while doing some performance and memory profiling that the watch mode way is now actually faster on a few levels:\r\n1) It's straight-up faster to transmit it to the process because the module map is significantly smaller than the whole haste map you have to deserialize if you get at it via the file.\r\n2) If you load the whole haste map and want to discard half of it, suddenly there is a bunch of stuff that will need to be GC'd in the future. This happens in the worker because it only wants the module map but has to deserialize the whole file.\r\n3) Not requiring the haste map be written to disk at this point opens up further optimizations in the future.\r\n\r\nHere's a benchmark of running `yarn jest packages/expect`, meant to profile starting up some workers and running a couple tests. Each profile was run 10 times after 3 warm ups.\r\n\r\n### master\r\nTime (mean ± σ):      3.902 s ±  0.120 s    [User: 21.570 s, System: 5.105 s]\r\nRange (min … max):    3.682 s …  4.084 s    10 run\r\n\r\n### this branch\r\nTime (mean ± σ):      3.522 s ±  0.175 s    [User: 19.722 s, System: 4.777 s]\r\nRange (min … max):    3.356 s …  3.897 s    10 runs\r\n\r\nIt's faster. It's less code with a unified code path. It opens up more optimizations in the future.\r\n\r\n## Test plan\r\n\r\n1. All tests pass.\r\n2. Benchmarks show better performance in all situations.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8237/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8237/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/2148","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/2148/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/2148/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/2148/events","html_url":"https://github.com/facebook/jest/pull/2148","id":190852994,"node_id":"MDExOlB1bGxSZXF1ZXN0OTQ3MDkwODQ=","number":2148,"title":"reduce maxDepth for very large objects","user":{"login":"aaronabramov","id":940133,"node_id":"MDQ6VXNlcjk0MDEzMw==","avatar_url":"https://avatars.githubusercontent.com/u/940133?v=4","gravatar_id":"","url":"https://api.github.com/users/aaronabramov","html_url":"https://github.com/aaronabramov","followers_url":"https://api.github.com/users/aaronabramov/followers","following_url":"https://api.github.com/users/aaronabramov/following{/other_user}","gists_url":"https://api.github.com/users/aaronabramov/gists{/gist_id}","starred_url":"https://api.github.com/users/aaronabramov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aaronabramov/subscriptions","organizations_url":"https://api.github.com/users/aaronabramov/orgs","repos_url":"https://api.github.com/users/aaronabramov/repos","events_url":"https://api.github.com/users/aaronabramov/events{/privacy}","received_events_url":"https://api.github.com/users/aaronabramov/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2016-11-21T22:22:27Z","updated_at":"2021-05-14T05:11:06Z","closed_at":"2016-11-24T18:38:15Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/2148","html_url":"https://github.com/facebook/jest/pull/2148","diff_url":"https://github.com/facebook/jest/pull/2148.diff","patch_url":"https://github.com/facebook/jest/pull/2148.patch","merged_at":"2016-11-24T18:38:15Z"},"body":"reduce `maxDepth` when pretty formatting the object if the resulting string is too long.\r\nIt will reduce depth by 1 every time until it either fits the `MAX_LENGTH` or becomes 1 (just printing the top level keys). This should happen only on failures, so the performance hit from running `format` multiple times should not be that bad.\r\n\r\ncc @gaearon ","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/2148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/2148/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/4240","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/4240/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/4240/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/4240/events","html_url":"https://github.com/facebook/jest/pull/4240","id":249389032,"node_id":"MDExOlB1bGxSZXF1ZXN0MTM1MTU2OTA5","number":4240,"title":"Make Jest's Test Runner configurable.","user":{"login":"cpojer","id":13352,"node_id":"MDQ6VXNlcjEzMzUy","avatar_url":"https://avatars.githubusercontent.com/u/13352?v=4","gravatar_id":"","url":"https://api.github.com/users/cpojer","html_url":"https://github.com/cpojer","followers_url":"https://api.github.com/users/cpojer/followers","following_url":"https://api.github.com/users/cpojer/following{/other_user}","gists_url":"https://api.github.com/users/cpojer/gists{/gist_id}","starred_url":"https://api.github.com/users/cpojer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpojer/subscriptions","organizations_url":"https://api.github.com/users/cpojer/orgs","repos_url":"https://api.github.com/users/cpojer/repos","events_url":"https://api.github.com/users/cpojer/events{/privacy}","received_events_url":"https://api.github.com/users/cpojer/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-08-10T15:37:51Z","updated_at":"2021-05-13T08:07:21Z","closed_at":"2017-08-10T21:00:47Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/4240","html_url":"https://github.com/facebook/jest/pull/4240","diff_url":"https://github.com/facebook/jest/pull/4240.diff","patch_url":"https://github.com/facebook/jest/pull/4240.patch","merged_at":"2017-08-10T21:00:47Z"},"body":"**Summary**\r\n\r\nThis change adds a `runner` option to `ProjectConfig` that points to `jest-runner` but can be customized per project to any test runner. To ensure performance doesn't suffer with this new feature when using the MPR, multiple contexts that point to the same runner are merged and tests are run in the same runner instance, rather than creating a new instance per context. This means that there should be no performance penalty for existing MPR projects.\r\n\r\nThis is conflicting somewhat with the `testRunner` option that allows to pick `jest-jasmine2` or `jest-circus`, however in this new world ProjectConfigs will be entirely jest-runner specific and variadic, and out of Jest's immediate control, so I don't think this matters long term and there are pending changes to be made to configs to support that. I think it makes more sense to consider this option the `runner`, add an option `library` (for lack of a better name) which replaces `testRunner`. I think we can make this decision later and I expect there to be more `runner`s than `testRunner`s going forward, so we may even want to kill the setting entirely and make the `runner` as compose-able as possible.\r\n\r\n**Test plan**\r\n\r\njest + manual verification that it only creates one runner for the MPR right now.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/4240/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/4240/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/3166","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/3166/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/3166/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/3166/events","html_url":"https://github.com/facebook/jest/pull/3166","id":214884066,"node_id":"MDExOlB1bGxSZXF1ZXN0MTExMTk3OTUy","number":3166,"title":"Refactor runner","user":{"login":"cpojer","id":13352,"node_id":"MDQ6VXNlcjEzMzUy","avatar_url":"https://avatars.githubusercontent.com/u/13352?v=4","gravatar_id":"","url":"https://api.github.com/users/cpojer","html_url":"https://github.com/cpojer","followers_url":"https://api.github.com/users/cpojer/followers","following_url":"https://api.github.com/users/cpojer/following{/other_user}","gists_url":"https://api.github.com/users/cpojer/gists{/gist_id}","starred_url":"https://api.github.com/users/cpojer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpojer/subscriptions","organizations_url":"https://api.github.com/users/cpojer/orgs","repos_url":"https://api.github.com/users/cpojer/repos","events_url":"https://api.github.com/users/cpojer/events{/privacy}","received_events_url":"https://api.github.com/users/cpojer/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-03-17T01:28:34Z","updated_at":"2021-05-13T17:24:17Z","closed_at":"2017-03-17T06:26:14Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/3166","html_url":"https://github.com/facebook/jest/pull/3166","diff_url":"https://github.com/facebook/jest/pull/3166.diff","patch_url":"https://github.com/facebook/jest/pull/3166.patch","merged_at":"2017-03-17T06:26:14Z"},"body":"**Summary**\r\nThis is the preparatory work I did for the multi-config runner. It splits up the test performance cache into a TestSequencer class, uses async/await and moves a few things around. No behavior changes expected. Before merging, I will add a test for the TestSequencer.\r\n\r\nSee #3156\r\n\r\n**Test plan**\r\njest","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/3166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/3166/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/4497","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/4497/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/4497/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/4497/events","html_url":"https://github.com/facebook/jest/pull/4497","id":258314972,"node_id":"MDExOlB1bGxSZXF1ZXN0MTQxNDkyNjM3","number":4497,"title":"Initial version of jest-worker","user":{"login":"mjesun","id":829269,"node_id":"MDQ6VXNlcjgyOTI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/829269?v=4","gravatar_id":"","url":"https://api.github.com/users/mjesun","html_url":"https://github.com/mjesun","followers_url":"https://api.github.com/users/mjesun/followers","following_url":"https://api.github.com/users/mjesun/following{/other_user}","gists_url":"https://api.github.com/users/mjesun/gists{/gist_id}","starred_url":"https://api.github.com/users/mjesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjesun/subscriptions","organizations_url":"https://api.github.com/users/mjesun/orgs","repos_url":"https://api.github.com/users/mjesun/repos","events_url":"https://api.github.com/users/mjesun/events{/privacy}","received_events_url":"https://api.github.com/users/mjesun/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":32,"created_at":"2017-09-17T16:26:27Z","updated_at":"2021-05-13T01:32:27Z","closed_at":"2017-10-04T10:14:23Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/4497","html_url":"https://github.com/facebook/jest/pull/4497","diff_url":"https://github.com/facebook/jest/pull/4497.diff","patch_url":"https://github.com/facebook/jest/pull/4497.patch","merged_at":"2017-10-04T10:14:23Z"},"body":"This PR introduces a new module, `jest-worker`, intended to allow heavy task parallelization over multiple workers. \r\n\r\nThe module has a few advantages over the currently one used both in `jest` and `metro-bundler`:\r\n\r\n* 100% `flow`-ified.\r\n\r\n* 100% test coverage on it, all statements, methods and branches.\r\n\r\n* Slightly faster than the currenly used one.\r\n\r\n* Natively provides a `Promise` based interface, which allow us to avoid the extra wrapping layer in order to be used with `async`/`await.\r\n\r\n* It only has one single dependency (`merge-stream`), which we could also remove.\r\n\r\n* Lazily instantiated code in worker, meaning no code is loaded on child processes until the first call is done (lazy require). This allows to spawn a farm with minimal RAM consumption, and only load them when needed.\r\n\r\n* Sticky workers: tasks will be processed by the first available worker if no stickyness is needed, or by a particular one if the task is forced to do so. Specially useful for workers implementing caches.\r\n\r\n\r\n## Performance test\r\n\r\nIt can be run by doing `node --expose-gc test.js` under `__performance_tests__`. Note that the percentage improvement shown (~ 10%) applies to 10,000 calls, meaning the performance improvement per single call is negligible. The test implements a `Promise` wrapper over the current implementation, so we can equivalently test both implementations as we use them in real scenarios.\r\n\r\n```\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 738, processingTime: 707 }\r\nworker-farm: { globalTime: 885, processingTime: 866 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 738, processingTime: 718 }\r\nworker-farm: { globalTime: 865, processingTime: 849 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 708, processingTime: 685 }\r\nworker-farm: { globalTime: 769, processingTime: 753 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 682, processingTime: 656 }\r\nworker-farm: { globalTime: 780, processingTime: 764 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 704, processingTime: 684 }\r\nworker-farm: { globalTime: 775, processingTime: 757 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 705, processingTime: 677 }\r\nworker-farm: { globalTime: 767, processingTime: 748 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 700, processingTime: 675 }\r\nworker-farm: { globalTime: 766, processingTime: 751 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 728, processingTime: 702 }\r\nworker-farm: { globalTime: 770, processingTime: 755 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 721, processingTime: 695 }\r\nworker-farm: { globalTime: 769, processingTime: 756 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 702, processingTime: 675 }\r\nworker-farm: { globalTime: 801, processingTime: 784 }\r\n---------------------------------------------------------------------------\r\ntotal worker-farm: { wFGT: 7947, wFPT: 7783 }\r\ntotal jest-worker: { jWGT: 7126, jWPT: 6874 }\r\n---------------------------------------------------------------------------\r\n% improvement over 10000 calls (global time): 10.330942494022901\r\n% improvement over 10000 calls (processing time): 11.679301040729795\r\n```\r\n\r\n\r\n## Coverage\r\n\r\n![Coverage](https://user-images.githubusercontent.com/829269/31123180-badf2e92-a836-11e7-8460-1b5c88719517.png)\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/4497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/4497/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/3979","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/3979/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/3979/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/3979/events","html_url":"https://github.com/facebook/jest/pull/3979","id":241128698,"node_id":"MDExOlB1bGxSZXF1ZXN0MTI5MzExMDAx","number":3979,"title":"changed files eager loading","user":{"login":"aaronabramov","id":940133,"node_id":"MDQ6VXNlcjk0MDEzMw==","avatar_url":"https://avatars.githubusercontent.com/u/940133?v=4","gravatar_id":"","url":"https://api.github.com/users/aaronabramov","html_url":"https://github.com/aaronabramov","followers_url":"https://api.github.com/users/aaronabramov/followers","following_url":"https://api.github.com/users/aaronabramov/following{/other_user}","gists_url":"https://api.github.com/users/aaronabramov/gists{/gist_id}","starred_url":"https://api.github.com/users/aaronabramov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aaronabramov/subscriptions","organizations_url":"https://api.github.com/users/aaronabramov/orgs","repos_url":"https://api.github.com/users/aaronabramov/repos","events_url":"https://api.github.com/users/aaronabramov/events{/privacy}","received_events_url":"https://api.github.com/users/aaronabramov/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-07-07T01:05:16Z","updated_at":"2021-05-13T11:06:49Z","closed_at":"2017-07-07T21:14:37Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/3979","html_url":"https://github.com/facebook/jest/pull/3979","diff_url":"https://github.com/facebook/jest/pull/3979.diff","patch_url":"https://github.com/facebook/jest/pull/3979.patch","merged_at":"2017-07-07T21:14:37Z"},"body":"should solve the performance regression in www.\r\nI'm not a fan of passing this promise all the way down, but there isn't really a nice way of doing this yet\r\n\r\ncc @rogeliog can you look at the watch stuff? i wanna make sure i didn't break anything accidentally","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/3979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/3979/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/2976","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/2976/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/2976/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/2976/events","html_url":"https://github.com/facebook/jest/pull/2976","id":209487605,"node_id":"MDExOlB1bGxSZXF1ZXN0MTA3NDMxMjYz","number":2976,"title":"Skip node resolution only for non-relative requires.","user":{"login":"cpojer","id":13352,"node_id":"MDQ6VXNlcjEzMzUy","avatar_url":"https://avatars.githubusercontent.com/u/13352?v=4","gravatar_id":"","url":"https://api.github.com/users/cpojer","html_url":"https://github.com/cpojer","followers_url":"https://api.github.com/users/cpojer/followers","following_url":"https://api.github.com/users/cpojer/following{/other_user}","gists_url":"https://api.github.com/users/cpojer/gists{/gist_id}","starred_url":"https://api.github.com/users/cpojer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpojer/subscriptions","organizations_url":"https://api.github.com/users/cpojer/orgs","repos_url":"https://api.github.com/users/cpojer/repos","events_url":"https://api.github.com/users/cpojer/events{/privacy}","received_events_url":"https://api.github.com/users/cpojer/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-02-22T15:28:36Z","updated_at":"2021-05-13T17:24:11Z","closed_at":"2017-02-22T15:48:37Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/2976","html_url":"https://github.com/facebook/jest/pull/2976","diff_url":"https://github.com/facebook/jest/pull/2976.diff","patch_url":"https://github.com/facebook/jest/pull/2976.patch","merged_at":"2017-02-22T15:48:37Z"},"body":"**Summary**\r\n\r\n@voideanvalue and I talked about this about six months ago but I never got to it. Basically we have a lot of \"missing\" modules because of our PHP JS modules at FB and every resolution of \"MyModule\" is really slow (there are thousands). However, we can still resolve relative requires quickly. This change skips likely node modules but keeps resolving relative requires without a noticeable performance hit.\r\n\r\n**Test plan**\r\n\r\nAt FB, this now takes 5 seconds instead of 70.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/2976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/2976/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/599","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/599/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/599/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/599/events","html_url":"https://github.com/facebook/jest/pull/599","id":115637085,"node_id":"MDExOlB1bGxSZXF1ZXN0NTAwMjkxNjc=","number":599,"title":"Haste2","user":{"login":"cpojer","id":13352,"node_id":"MDQ6VXNlcjEzMzUy","avatar_url":"https://avatars.githubusercontent.com/u/13352?v=4","gravatar_id":"","url":"https://api.github.com/users/cpojer","html_url":"https://github.com/cpojer","followers_url":"https://api.github.com/users/cpojer/followers","following_url":"https://api.github.com/users/cpojer/following{/other_user}","gists_url":"https://api.github.com/users/cpojer/gists{/gist_id}","starred_url":"https://api.github.com/users/cpojer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpojer/subscriptions","organizations_url":"https://api.github.com/users/cpojer/orgs","repos_url":"https://api.github.com/users/cpojer/repos","events_url":"https://api.github.com/users/cpojer/events{/privacy}","received_events_url":"https://api.github.com/users/cpojer/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":48,"created_at":"2015-11-07T05:43:43Z","updated_at":"2021-05-14T16:09:05Z","closed_at":"2016-02-16T23:39:56Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/599","html_url":"https://github.com/facebook/jest/pull/599","diff_url":"https://github.com/facebook/jest/pull/599.diff","patch_url":"https://github.com/facebook/jest/pull/599.patch","merged_at":"2016-02-16T23:39:56Z"},"body":"This pull request is used to track the implementation of node-haste2.\n##### Summary\n- Implemented node-haste2, a re-implementation of Facebook's haste dependency system, based on Facebook's react-native packager. We now create the entire haste-map upfront and pass it to the worker threads instead of creating node-haste instances in each worker.\n- Changed the core architecture of Jest to abstract the HasteModuleLoader into a ModuleLoader and HasteResolver piece. Added a Test class so we aren't creating instances of a TestRunner in every worker. The new code should bring a lot of clarity but there is also a lot more to be done.\n- Performance improvements\n  - fixed startup time of Jest, both on cold and warm start. node_modules are now lazily analyzed.\n  - fixed require-resolution time for relative requires. Loading modules without haste is now much faster and uses more caching.\n- New implementation of `--onlyChanged` that should work much better and find the correct set of related tests to run.\n- Numerous bugfixes and cleanups all around Jest.\n##### Performance Improvements\n- The Relay test suite (GitHub) now takes 20s vs. 60-100s previously (on 13” MBP)\n- The react-native test suite now takes 8 seconds instead of ~70s (on 13” MBP)\n- Starting up Jest on react-native (fb internal) now takes 1 second vs. ~10-15 seconds from before.\n- FB's frontend codebase test run was already heavily optimized but there is ~10 % win down to ~97s from about 107s.\n\nThis diff/PR forms the basis for all the work on Jest that I'm planning to do in the near term and will set up Jest for further success. It should be much easier to iterate on Jest from now on given that we have replaced the biggest legacy system and I can finally focus on solving some of the community problems.\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/599/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/599/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/3835","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/3835/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/3835/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/3835/events","html_url":"https://github.com/facebook/jest/pull/3835","id":236331732,"node_id":"MDExOlB1bGxSZXF1ZXN0MTI1OTI1NDkz","number":3835,"title":"Add Airbnb logo to list of companies using Jest","user":{"login":"lencioni","id":195534,"node_id":"MDQ6VXNlcjE5NTUzNA==","avatar_url":"https://avatars.githubusercontent.com/u/195534?v=4","gravatar_id":"","url":"https://api.github.com/users/lencioni","html_url":"https://github.com/lencioni","followers_url":"https://api.github.com/users/lencioni/followers","following_url":"https://api.github.com/users/lencioni/following{/other_user}","gists_url":"https://api.github.com/users/lencioni/gists{/gist_id}","starred_url":"https://api.github.com/users/lencioni/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lencioni/subscriptions","organizations_url":"https://api.github.com/users/lencioni/orgs","repos_url":"https://api.github.com/users/lencioni/repos","events_url":"https://api.github.com/users/lencioni/events{/privacy}","received_events_url":"https://api.github.com/users/lencioni/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-06-15T22:28:47Z","updated_at":"2021-05-13T12:07:16Z","closed_at":"2017-06-15T22:29:52Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/3835","html_url":"https://github.com/facebook/jest/pull/3835","diff_url":"https://github.com/facebook/jest/pull/3835.diff","patch_url":"https://github.com/facebook/jest/pull/3835.patch","merged_at":"2017-06-15T22:29:52Z"},"body":"More info:\r\n\r\nhttps://medium.com/airbnb-engineering/unlocking-test-performance-migrating-from-mocha-to-jest-2796c508ec50\r\n\r\n<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n**Summary**\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\nAirbnb is now using Jest, and it seems like a nice idea to include the Airbnb logo in the list of companies using Jest.\r\n\r\n**Test plan**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\nI did not test this change in any way.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/3835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/3835/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/3797","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/3797/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/3797/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/3797/events","html_url":"https://github.com/facebook/jest/pull/3797","id":235274010,"node_id":"MDExOlB1bGxSZXF1ZXN0MTI1MTY2MDUz","number":3797,"title":"Escape double quotes in attribute values in HTMLElement plugin","user":{"login":"pedrottimark","id":11862657,"node_id":"MDQ6VXNlcjExODYyNjU3","avatar_url":"https://avatars.githubusercontent.com/u/11862657?v=4","gravatar_id":"","url":"https://api.github.com/users/pedrottimark","html_url":"https://github.com/pedrottimark","followers_url":"https://api.github.com/users/pedrottimark/followers","following_url":"https://api.github.com/users/pedrottimark/following{/other_user}","gists_url":"https://api.github.com/users/pedrottimark/gists{/gist_id}","starred_url":"https://api.github.com/users/pedrottimark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pedrottimark/subscriptions","organizations_url":"https://api.github.com/users/pedrottimark/orgs","repos_url":"https://api.github.com/users/pedrottimark/repos","events_url":"https://api.github.com/users/pedrottimark/events{/privacy}","received_events_url":"https://api.github.com/users/pedrottimark/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-06-12T15:36:09Z","updated_at":"2021-05-13T11:07:46Z","closed_at":"2017-06-27T09:14:20Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/3797","html_url":"https://github.com/facebook/jest/pull/3797","diff_url":"https://github.com/facebook/jest/pull/3797.diff","patch_url":"https://github.com/facebook/jest/pull/3797.patch","merged_at":"2017-06-27T09:14:20Z"},"body":"**Summary**\r\n\r\nAnother breaking change. A few more to come. Unlike `ReactElement` and `ReactTestComponent` plugins, which call `print` function to escape double quotes\r\n\r\n```html\r\n<div\r\n  title=\"\\\"escape\\\"\"\r\n/>\r\n```\r\n\r\na new test for `HTMLElement` plugin fails before I replace template literal with `print` function:\r\n\r\n```diff\r\n<div\r\n-  title=\"\\\"escape\\\"\"\r\n+  title=\"\"escape\"\"\r\n/>\r\n```\r\n\r\nProposed: To push correctness, consistency, and performance, let’s refactor common code from `HTMLElement`, `ReactElement`, and `ReactTestComponent` in 3 steps:\r\n\r\n1. `printProps`\r\n2. `printChildren`\r\n3. `printElement`\r\n\r\nWhat do you think of `pretty-format/src/plugins/lib/markup.js` as a file name?\r\n\r\n**Test plan**\r\n\r\nAdded a test","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/3797/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/3797/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/9351","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/9351/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/9351/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/9351/events","html_url":"https://github.com/facebook/jest/pull/9351","id":542620140,"node_id":"MDExOlB1bGxSZXF1ZXN0MzU3MDIzOTAz","number":9351,"title":"feat(jest-haste-map): Enable crawling for symlink test files","user":{"login":"mrmeku","id":8085051,"node_id":"MDQ6VXNlcjgwODUwNTE=","avatar_url":"https://avatars.githubusercontent.com/u/8085051?v=4","gravatar_id":"","url":"https://api.github.com/users/mrmeku","html_url":"https://github.com/mrmeku","followers_url":"https://api.github.com/users/mrmeku/followers","following_url":"https://api.github.com/users/mrmeku/following{/other_user}","gists_url":"https://api.github.com/users/mrmeku/gists{/gist_id}","starred_url":"https://api.github.com/users/mrmeku/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrmeku/subscriptions","organizations_url":"https://api.github.com/users/mrmeku/orgs","repos_url":"https://api.github.com/users/mrmeku/repos","events_url":"https://api.github.com/users/mrmeku/events{/privacy}","received_events_url":"https://api.github.com/users/mrmeku/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/facebook/jest/milestones/12","html_url":"https://github.com/facebook/jest/milestone/12","labels_url":"https://api.github.com/repos/facebook/jest/milestones/12/labels","id":5375234,"node_id":"MDk6TWlsZXN0b25lNTM3NTIzNA==","number":12,"title":"Jest 27","description":null,"creator":{"login":"jeysal","id":16069751,"node_id":"MDQ6VXNlcjE2MDY5NzUx","avatar_url":"https://avatars.githubusercontent.com/u/16069751?v=4","gravatar_id":"","url":"https://api.github.com/users/jeysal","html_url":"https://github.com/jeysal","followers_url":"https://api.github.com/users/jeysal/followers","following_url":"https://api.github.com/users/jeysal/following{/other_user}","gists_url":"https://api.github.com/users/jeysal/gists{/gist_id}","starred_url":"https://api.github.com/users/jeysal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeysal/subscriptions","organizations_url":"https://api.github.com/users/jeysal/orgs","repos_url":"https://api.github.com/users/jeysal/repos","events_url":"https://api.github.com/users/jeysal/events{/privacy}","received_events_url":"https://api.github.com/users/jeysal/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":61,"state":"closed","created_at":"2020-05-02T19:43:47Z","updated_at":"2021-05-25T11:03:50Z","due_on":null,"closed_at":"2021-05-25T11:03:50Z"},"comments":50,"created_at":"2019-12-26T17:51:04Z","updated_at":"2021-05-10T21:06:37Z","closed_at":"2021-04-02T12:42:31Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/9351","html_url":"https://github.com/facebook/jest/pull/9351","diff_url":"https://github.com/facebook/jest/pull/9351.diff","patch_url":"https://github.com/facebook/jest/pull/9351.patch","merged_at":"2021-04-02T12:42:31Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -->\r\n\r\n## Summary\r\n\r\nJest haste maps test file crawler (see packages/jest-haste-map/src/crawlers/node.ts) uses the unix find command by default to find files whose name matches the testMatch pattern defined in jest.config.js. This works great for most cases, but works poorly when executing jest under bazel.\r\n\r\nIn bazel's execution environment, all source/test files are symlinked into a sandboxed directory rather than copied over directly. Jest's crawler is currently set up to use find's type flag to filter only for files. This excludes symlinked files\r\n\r\nUnder bazel I would expect my symlinked test files to be able to be crawled. This merely involves tweaking the command line args to find to include both files and symlinks `--type f` ---> `(--type f -o --type=l)`\r\n\r\n## Test plan\r\n\r\nI have already tested my fix against multiple bazel environments to verify that the fix enables jest to work properly for that test runner. The only risk of this change is that my adding support for crawling symlinks hampers performance of file crawling. If that is the case this behavior might be better off to be enabled behind a flag. But I do not suspect that there will be a performance hit. If reviewers have a mechanism for running jest bench marks I'm happy to create a repo filled with both files and symlinks and benchmarking the change. \r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/9351/reactions","total_count":18,"+1":18,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/9351/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/4315","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/4315/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/4315/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/4315/events","html_url":"https://github.com/facebook/jest/pull/4315","id":251765222,"node_id":"MDExOlB1bGxSZXF1ZXN0MTM2ODM4OTIw","number":4315,"title":"Feature/internal resolve","user":{"login":"tvald","id":406656,"node_id":"MDQ6VXNlcjQwNjY1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/406656?v=4","gravatar_id":"","url":"https://api.github.com/users/tvald","html_url":"https://github.com/tvald","followers_url":"https://api.github.com/users/tvald/followers","following_url":"https://api.github.com/users/tvald/following{/other_user}","gists_url":"https://api.github.com/users/tvald/gists{/gist_id}","starred_url":"https://api.github.com/users/tvald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvald/subscriptions","organizations_url":"https://api.github.com/users/tvald/orgs","repos_url":"https://api.github.com/users/tvald/repos","events_url":"https://api.github.com/users/tvald/events{/privacy}","received_events_url":"https://api.github.com/users/tvald/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2017-08-21T20:41:42Z","updated_at":"2021-05-13T08:06:58Z","closed_at":"2017-08-22T08:15:27Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/4315","html_url":"https://github.com/facebook/jest/pull/4315","diff_url":"https://github.com/facebook/jest/pull/4315.diff","patch_url":"https://github.com/facebook/jest/pull/4315.patch","merged_at":"2017-08-22T08:15:27Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n**Summary**\r\nRemoves dependency on `resolve` package and pulls all necessary code into `default_resolver.js`, with minor cleanup and added type definitions.\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\nThis is a preparatory step for improving the performance of `resolve` (#2925).\r\n\r\n**Test plan**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\nPasses all existing tests of the legacy `resolve.sync()` behavior.\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/4315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/4315/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/7385","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/7385/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/7385/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/7385/events","html_url":"https://github.com/facebook/jest/pull/7385","id":382148149,"node_id":"MDExOlB1bGxSZXF1ZXN0MjMxOTIxMzcw","number":7385,"title":"Improve dependency extractor","user":{"login":"rubennorte","id":117921,"node_id":"MDQ6VXNlcjExNzkyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/117921?v=4","gravatar_id":"","url":"https://api.github.com/users/rubennorte","html_url":"https://github.com/rubennorte","followers_url":"https://api.github.com/users/rubennorte/followers","following_url":"https://api.github.com/users/rubennorte/following{/other_user}","gists_url":"https://api.github.com/users/rubennorte/gists{/gist_id}","starred_url":"https://api.github.com/users/rubennorte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rubennorte/subscriptions","organizations_url":"https://api.github.com/users/rubennorte/orgs","repos_url":"https://api.github.com/users/rubennorte/repos","events_url":"https://api.github.com/users/rubennorte/events{/privacy}","received_events_url":"https://api.github.com/users/rubennorte/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2018-11-19T10:26:53Z","updated_at":"2021-05-12T06:06:49Z","closed_at":"2018-11-19T12:28:31Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/7385","html_url":"https://github.com/facebook/jest/pull/7385","diff_url":"https://github.com/facebook/jest/pull/7385.diff","patch_url":"https://github.com/facebook/jest/pull/7385.patch","merged_at":"2018-11-19T12:28:31Z"},"body":"## Summary\r\n\r\nThis refactors the default dependency extractor to make regular expressions less error-prone (building them with a custom DSL) and fixes some bugs:\r\n\r\n1.  `require(\"foo\",)` (notice the trailing comma), which is completely valid, wasn't detected.\r\n2.  `import typeof {foo} from 'foo'` was detected as a dependency, when it should've been ignored like `import type {foo} from 'foo';`.\r\n\r\nIt also uses negative lookbehind when it's supported.\r\n\r\nPerformance-wise, it's faster than the previous version as it removes unnecessary capture groups (tested internally at Facebook).\r\n\r\n## Test plan\r\n\r\nUpdated unit tests.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/7385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/7385/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/7616","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/7616/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/7616/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/7616/events","html_url":"https://github.com/facebook/jest/pull/7616","id":398586422,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQ0MjM5MjM3","number":7616,"title":"Update docs re: `moduleFileExtensions` to add ordering note (left-to-right)","user":{"login":"jeffgore00","id":32626299,"node_id":"MDQ6VXNlcjMyNjI2Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/32626299?v=4","gravatar_id":"","url":"https://api.github.com/users/jeffgore00","html_url":"https://github.com/jeffgore00","followers_url":"https://api.github.com/users/jeffgore00/followers","following_url":"https://api.github.com/users/jeffgore00/following{/other_user}","gists_url":"https://api.github.com/users/jeffgore00/gists{/gist_id}","starred_url":"https://api.github.com/users/jeffgore00/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeffgore00/subscriptions","organizations_url":"https://api.github.com/users/jeffgore00/orgs","repos_url":"https://api.github.com/users/jeffgore00/repos","events_url":"https://api.github.com/users/jeffgore00/events{/privacy}","received_events_url":"https://api.github.com/users/jeffgore00/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2019-01-12T19:53:20Z","updated_at":"2021-05-12T03:12:48Z","closed_at":"2019-01-19T11:32:03Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/7616","html_url":"https://github.com/facebook/jest/pull/7616","diff_url":"https://github.com/facebook/jest/pull/7616.diff","patch_url":"https://github.com/facebook/jest/pull/7616.patch","merged_at":"2019-01-19T11:32:02Z"},"body":"Adds note that the `moduleFileExtensions` configuration evaluates the array of file extensions from left-to-right. This may seem self-evident, but personally after dealing with Webpack loaders which work in the opposite direction, I think it doesn't hurt to point out.\r\n\r\nSee issue #7563 for the original discussion on this matter. If someone is more knowledgable about performance, perhaps we could also add a note that in a TypeScript project, moving the `.ts` and `.tsx` extensions to the beginning could be advantageous (per @thymikee).","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/7616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/7616/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8402","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8402/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8402/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8402/events","html_url":"https://github.com/facebook/jest/pull/8402","id":439149441,"node_id":"MDExOlB1bGxSZXF1ZXN0Mjc1MDE4NjU0","number":8402,"title":"[jest-transform] use includes instead of some","user":{"login":"Connormiha","id":4091305,"node_id":"MDQ6VXNlcjQwOTEzMDU=","avatar_url":"https://avatars.githubusercontent.com/u/4091305?v=4","gravatar_id":"","url":"https://api.github.com/users/Connormiha","html_url":"https://github.com/Connormiha","followers_url":"https://api.github.com/users/Connormiha/followers","following_url":"https://api.github.com/users/Connormiha/following{/other_user}","gists_url":"https://api.github.com/users/Connormiha/gists{/gist_id}","starred_url":"https://api.github.com/users/Connormiha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Connormiha/subscriptions","organizations_url":"https://api.github.com/users/Connormiha/orgs","repos_url":"https://api.github.com/users/Connormiha/repos","events_url":"https://api.github.com/users/Connormiha/events{/privacy}","received_events_url":"https://api.github.com/users/Connormiha/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-05-01T12:30:59Z","updated_at":"2021-05-11T19:09:25Z","closed_at":"2019-05-01T16:39:44Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8402","html_url":"https://github.com/facebook/jest/pull/8402","diff_url":"https://github.com/facebook/jest/pull/8402.diff","patch_url":"https://github.com/facebook/jest/pull/8402.patch","merged_at":"2019-05-01T16:39:44Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -->\r\n\r\n## Summary\r\nJust used `includes` instead of `some` for performance reasons.\r\nhttps://jsperf.com/includes-vs-some-12333\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8402/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8402/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8416","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8416/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8416/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8416/events","html_url":"https://github.com/facebook/jest/pull/8416","id":440203004,"node_id":"MDExOlB1bGxSZXF1ZXN0Mjc1ODM0OTQx","number":8416,"title":"[jest-get-type] Simplify checking for primitive","user":{"login":"Connormiha","id":4091305,"node_id":"MDQ6VXNlcjQwOTEzMDU=","avatar_url":"https://avatars.githubusercontent.com/u/4091305?v=4","gravatar_id":"","url":"https://api.github.com/users/Connormiha","html_url":"https://github.com/Connormiha","followers_url":"https://api.github.com/users/Connormiha/followers","following_url":"https://api.github.com/users/Connormiha/following{/other_user}","gists_url":"https://api.github.com/users/Connormiha/gists{/gist_id}","starred_url":"https://api.github.com/users/Connormiha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Connormiha/subscriptions","organizations_url":"https://api.github.com/users/Connormiha/orgs","repos_url":"https://api.github.com/users/Connormiha/repos","events_url":"https://api.github.com/users/Connormiha/events{/privacy}","received_events_url":"https://api.github.com/users/Connormiha/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2019-05-03T20:11:02Z","updated_at":"2021-05-11T19:09:16Z","closed_at":"2019-05-04T18:31:03Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8416","html_url":"https://github.com/facebook/jest/pull/8416","diff_url":"https://github.com/facebook/jest/pull/8416.diff","patch_url":"https://github.com/facebook/jest/pull/8416.patch","merged_at":"2019-05-04T18:31:03Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -->\r\n\r\n## Summary\r\nI just simplified checking for primitive type and improve performance.\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test plan\r\nThere were already tests, but I added some more\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8416/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8852","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8852/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8852/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8852/events","html_url":"https://github.com/facebook/jest/pull/8852","id":482247854,"node_id":"MDExOlB1bGxSZXF1ZXN0MzA4NTU4NDY1","number":8852,"title":"chore: upgrade to micromatch v4","user":{"login":"SimenB","id":1404810,"node_id":"MDQ6VXNlcjE0MDQ4MTA=","avatar_url":"https://avatars.githubusercontent.com/u/1404810?v=4","gravatar_id":"","url":"https://api.github.com/users/SimenB","html_url":"https://github.com/SimenB","followers_url":"https://api.github.com/users/SimenB/followers","following_url":"https://api.github.com/users/SimenB/following{/other_user}","gists_url":"https://api.github.com/users/SimenB/gists{/gist_id}","starred_url":"https://api.github.com/users/SimenB/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/SimenB/subscriptions","organizations_url":"https://api.github.com/users/SimenB/orgs","repos_url":"https://api.github.com/users/SimenB/repos","events_url":"https://api.github.com/users/SimenB/events{/privacy}","received_events_url":"https://api.github.com/users/SimenB/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2019-08-19T11:07:26Z","updated_at":"2021-05-11T16:07:28Z","closed_at":"2019-08-19T19:43:00Z","author_association":"COLLABORATOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8852","html_url":"https://github.com/facebook/jest/pull/8852","diff_url":"https://github.com/facebook/jest/pull/8852.diff","patch_url":"https://github.com/facebook/jest/pull/8852.patch","merged_at":"2019-08-19T19:43:00Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -->\r\n\r\n## Summary\r\n\r\nHopefully this fixes some of out performance issues.\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test plan\r\n\r\nGreen CI\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8852/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8852/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/3969","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/3969/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/3969/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/3969/events","html_url":"https://github.com/facebook/jest/pull/3969","id":240828354,"node_id":"MDExOlB1bGxSZXF1ZXN0MTI5MDkyNTA0","number":3969,"title":"multiroot jest-change-files","user":{"login":"aaronabramov","id":940133,"node_id":"MDQ6VXNlcjk0MDEzMw==","avatar_url":"https://avatars.githubusercontent.com/u/940133?v=4","gravatar_id":"","url":"https://api.github.com/users/aaronabramov","html_url":"https://github.com/aaronabramov","followers_url":"https://api.github.com/users/aaronabramov/followers","following_url":"https://api.github.com/users/aaronabramov/following{/other_user}","gists_url":"https://api.github.com/users/aaronabramov/gists{/gist_id}","starred_url":"https://api.github.com/users/aaronabramov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aaronabramov/subscriptions","organizations_url":"https://api.github.com/users/aaronabramov/orgs","repos_url":"https://api.github.com/users/aaronabramov/repos","events_url":"https://api.github.com/users/aaronabramov/events{/privacy}","received_events_url":"https://api.github.com/users/aaronabramov/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-07-06T02:37:40Z","updated_at":"2021-05-13T11:06:59Z","closed_at":"2017-07-06T22:43:44Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/3969","html_url":"https://github.com/facebook/jest/pull/3969","diff_url":"https://github.com/facebook/jest/pull/3969.diff","patch_url":"https://github.com/facebook/jest/pull/3969.patch","merged_at":"2017-07-06T22:43:44Z"},"body":"first step towards optimizing performance of this module.\r\n\r\nthe problem we hit at fb is that we have too many roots specified for every project, and we had to get changed files for each root.\r\nNow all roots are first resolved to a SCM root and deduped, so we'll be querying SCM only once per context.\r\n\r\nincludes a shitload of tests and types.\r\n\r\ntodo (followup PRs):\r\n- [ ] Share results between context (`www`, `mobile` are in the same repo and will give different results, but with the current implementation it'll do one request for every context)\r\n- [ ] Start fetching the result as soon as possible, before any of the hastemap stuff is generated (might be happening already, haven't looked into it yet)","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/3969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/3969/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/4076","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/4076/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/4076/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/4076/events","html_url":"https://github.com/facebook/jest/pull/4076","id":244062128,"node_id":"MDExOlB1bGxSZXF1ZXN0MTMxMzM3MDUz","number":4076,"title":"Replace unchanging args with one config arg within pretty-format","user":{"login":"pedrottimark","id":11862657,"node_id":"MDQ6VXNlcjExODYyNjU3","avatar_url":"https://avatars.githubusercontent.com/u/11862657?v=4","gravatar_id":"","url":"https://api.github.com/users/pedrottimark","html_url":"https://github.com/pedrottimark","followers_url":"https://api.github.com/users/pedrottimark/followers","following_url":"https://api.github.com/users/pedrottimark/following{/other_user}","gists_url":"https://api.github.com/users/pedrottimark/gists{/gist_id}","starred_url":"https://api.github.com/users/pedrottimark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pedrottimark/subscriptions","organizations_url":"https://api.github.com/users/pedrottimark/orgs","repos_url":"https://api.github.com/users/pedrottimark/repos","events_url":"https://api.github.com/users/pedrottimark/events{/privacy}","received_events_url":"https://api.github.com/users/pedrottimark/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-07-19T14:33:02Z","updated_at":"2021-05-13T10:06:52Z","closed_at":"2017-07-19T15:34:40Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/4076","html_url":"https://github.com/facebook/jest/pull/4076","diff_url":"https://github.com/facebook/jest/pull/4076.diff","patch_url":"https://github.com/facebook/jest/pull/4076.patch","merged_at":"2017-07-19T15:34:40Z"},"body":"**Summary**\r\n\r\nBenefits of distinguishing config properties which **don’t change** (depend only on options and defaults) from arguments which **do change** during recursive descent through data structures:\r\n\r\n* **concise clear** signature for core functions\r\n* **correct complete consistent** API for plugins (but one step at a time :)\r\n\r\nConverting from options to config in an even more functional lazy evaluation pattern solves a recent accidental performance regression (always iterating theme colors, even for top-level basic values).\r\n\r\nRemoved a readbump in `printList`, `printMap`, `printObject`, `printSet`: logic for final comma had been combined with edge spacing and indent instead of in parallel with logic for non-final comma.\r\n\r\nMake yourself a cup of coffee or tea before you review this diff.\r\n\r\n**Test plan**\r\n\r\nJest, if the Continuous Irritation system allows","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/4076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/4076/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/5793","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/5793/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/5793/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/5793/events","html_url":"https://github.com/facebook/jest/pull/5793","id":305191958,"node_id":"MDExOlB1bGxSZXF1ZXN0MTc0OTgwMjcx","number":5793,"title":"Improve jest-worker (up to 4x)","user":{"login":"mjesun","id":829269,"node_id":"MDQ6VXNlcjgyOTI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/829269?v=4","gravatar_id":"","url":"https://api.github.com/users/mjesun","html_url":"https://github.com/mjesun","followers_url":"https://api.github.com/users/mjesun/followers","following_url":"https://api.github.com/users/mjesun/following{/other_user}","gists_url":"https://api.github.com/users/mjesun/gists{/gist_id}","starred_url":"https://api.github.com/users/mjesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjesun/subscriptions","organizations_url":"https://api.github.com/users/mjesun/orgs","repos_url":"https://api.github.com/users/mjesun/repos","events_url":"https://api.github.com/users/mjesun/events{/privacy}","received_events_url":"https://api.github.com/users/mjesun/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-03-14T14:50:56Z","updated_at":"2021-05-12T18:15:28Z","closed_at":"2018-03-14T15:16:17Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/5793","html_url":"https://github.com/facebook/jest/pull/5793","diff_url":"https://github.com/facebook/jest/pull/5793.diff","patch_url":"https://github.com/facebook/jest/pull/5793.patch","merged_at":"2018-03-14T15:16:17Z"},"body":"This PR modifies the way internal worker queues are managed, passing from an array to a linked-list, improving a 10% the current benchmark, and 400% over a new benchmark.\r\n\r\n## How come this wasn't noticed before?\r\n\r\nWhen `jest-worker` was initially benchmarked, it was done by using not so many jobs (~10k), but very heavy in time. While this is the usual approach (few jobs, lots of time per job), sometimes you have the opposite (i.e. lots of jobs, but each of them very fast). _This is actually what `jest-haste-map` does._\r\n\r\nSince the internal queue was an array, re-indexing the queue is a `O(n)` operation, which becomes especially relevant on the second scenario. Switching to a linked list means that all operations for advancing the queue become `O(1)`, no matter its length. This results in massive speed improvements on really long queues.\r\n\r\n## Some benchmarks\r\n\r\nUsing the extended performance test, the `empty` function, called 100,000 times results in:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 11102, processingTime: 11058 }\r\nworker-farm: { globalTime: 9713, processingTime: 9685 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 10790, processingTime: 10762 }\r\nworker-farm: { globalTime: 10453, processingTime: 10432 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 11111, processingTime: 11079 }\r\nworker-farm: { globalTime: 10133, processingTime: 10112 }\r\n---------------------------------------------------------------------------\r\n```\r\n\r\nNow, **with the change**, it results in:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 2634, processingTime: 2594 }\r\nworker-farm: { globalTime: 10165, processingTime: 10141 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 2780, processingTime: 2756 }\r\nworker-farm: { globalTime: 10132, processingTime: 10110 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 2608, processingTime: 2581 }\r\nworker-farm: { globalTime: 10295, processingTime: 10272 }\r\n---------------------------------------------------------------------------\r\n```\r\n## What about the existing metrics?\r\n\r\nThe previous metric (which we initially used for benchmarking, `loadTest` called 10,000 times), has also improved, but only slightly, since that one was already optimized:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 726, processingTime: 690 }\r\nworker-farm: { globalTime: 769, processingTime: 748 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 719, processingTime: 693 }\r\nworker-farm: { globalTime: 784, processingTime: 765 }\r\n---------------------------------------------------------------------------\r\njest-worker: { globalTime: 703, processingTime: 673 }\r\nworker-farm: { globalTime: 748, processingTime: 731 }\r\n---------------------------------------------------------------------------\r\n```\r\n\r\n## Tests\r\n\r\nI ensured all tests pass, but I also added some slight modifications into the `__performance__tests__` so that you can pass an arbitrary worker method as well as an arbitrary number of iterations. This allowed me to test the other scenario.\r\n\r\n_On a personal note: this is actually WHY algorithms and data structures knowledge IS important for a frontend developer!_ 🙂","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/5793/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/5793/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/4325","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/4325/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/4325/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/4325/events","html_url":"https://github.com/facebook/jest/pull/4325","id":252083880,"node_id":"MDExOlB1bGxSZXF1ZXN0MTM3MDc1NDcx","number":4325,"title":"optimize resolve","user":{"login":"tvald","id":406656,"node_id":"MDQ6VXNlcjQwNjY1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/406656?v=4","gravatar_id":"","url":"https://api.github.com/users/tvald","html_url":"https://github.com/tvald","followers_url":"https://api.github.com/users/tvald/followers","following_url":"https://api.github.com/users/tvald/following{/other_user}","gists_url":"https://api.github.com/users/tvald/gists{/gist_id}","starred_url":"https://api.github.com/users/tvald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tvald/subscriptions","organizations_url":"https://api.github.com/users/tvald/orgs","repos_url":"https://api.github.com/users/tvald/repos","events_url":"https://api.github.com/users/tvald/events{/privacy}","received_events_url":"https://api.github.com/users/tvald/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-08-22T20:44:58Z","updated_at":"2021-05-13T08:06:58Z","closed_at":"2017-08-22T21:10:48Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/4325","html_url":"https://github.com/facebook/jest/pull/4325","diff_url":"https://github.com/facebook/jest/pull/4325.diff","patch_url":"https://github.com/facebook/jest/pull/4325.patch","merged_at":"2017-08-22T21:10:48Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n**Summary**\r\n\r\nRelated to #2925. Clean up resolve() logic. Provide useful names for variables and functions. Test that a directory exists before attempting to resolve files within it.\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\nIntroduces slight performance improvements by testing whether a directory exists before attempting to resolve (potentially 10+) paths within the directory. Also tidies up code to meet style guidelines and usefully name variables + methods.\r\n\r\n**Test plan**\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\nPasses all tests.\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/4325/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/4325/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/4955","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/4955/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/4955/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/4955/events","html_url":"https://github.com/facebook/jest/pull/4955","id":276715862,"node_id":"MDExOlB1bGxSZXF1ZXN0MTU0NjE4ODE4","number":4955,"title":"Improve process object creation","user":{"login":"mjesun","id":829269,"node_id":"MDQ6VXNlcjgyOTI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/829269?v=4","gravatar_id":"","url":"https://api.github.com/users/mjesun","html_url":"https://github.com/mjesun","followers_url":"https://api.github.com/users/mjesun/followers","following_url":"https://api.github.com/users/mjesun/following{/other_user}","gists_url":"https://api.github.com/users/mjesun/gists{/gist_id}","starred_url":"https://api.github.com/users/mjesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjesun/subscriptions","organizations_url":"https://api.github.com/users/mjesun/orgs","repos_url":"https://api.github.com/users/mjesun/repos","events_url":"https://api.github.com/users/mjesun/events{/privacy}","received_events_url":"https://api.github.com/users/mjesun/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-11-25T01:10:43Z","updated_at":"2021-05-13T01:32:35Z","closed_at":"2017-11-25T08:47:44Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/4955","html_url":"https://github.com/facebook/jest/pull/4955","diff_url":"https://github.com/facebook/jest/pull/4955.diff","patch_url":"https://github.com/facebook/jest/pull/4955.patch","merged_at":"2017-11-25T08:47:44Z"},"body":"This PR improves the way the `process` object is created in two ways:\r\n\r\n1. It aims to rewrite the way deep cyclic cloning is done:\r\n    1. It uses a specialized method for `Array`s.\r\n    2. It copies properties by using `getOwnPropertyDescriptors` and `defineProperties`.\r\n    3. It gives a blacklist argument for the root level object.\r\n​\r\n2. Using the blacklist, it avoids copying `mainModule`, which contains a reference to the main module, plus all of the other modules loaded so far in memory.\r\n\r\nThe total improvement on a raw Node instance is approximately of 40%; but the improvement grows as the amount of previously loaded modules also grows. In my case, I've been able to observe up to 20x performance by artificially loading a bunch of modules before calling `createProcessObject`.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/4955/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/4955/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/7345","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/7345/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/7345/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/7345/events","html_url":"https://github.com/facebook/jest/pull/7345","id":378960738,"node_id":"MDExOlB1bGxSZXF1ZXN0MjI5NTQyMDc2","number":7345,"title":"Add computeSha1 option","user":{"login":"rubennorte","id":117921,"node_id":"MDQ6VXNlcjExNzkyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/117921?v=4","gravatar_id":"","url":"https://api.github.com/users/rubennorte","html_url":"https://github.com/rubennorte","followers_url":"https://api.github.com/users/rubennorte/followers","following_url":"https://api.github.com/users/rubennorte/following{/other_user}","gists_url":"https://api.github.com/users/rubennorte/gists{/gist_id}","starred_url":"https://api.github.com/users/rubennorte/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rubennorte/subscriptions","organizations_url":"https://api.github.com/users/rubennorte/orgs","repos_url":"https://api.github.com/users/rubennorte/repos","events_url":"https://api.github.com/users/rubennorte/events{/privacy}","received_events_url":"https://api.github.com/users/rubennorte/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-11-08T23:27:50Z","updated_at":"2021-05-12T05:14:22Z","closed_at":"2018-11-09T01:15:58Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/7345","html_url":"https://github.com/facebook/jest/pull/7345","diff_url":"https://github.com/facebook/jest/pull/7345.diff","patch_url":"https://github.com/facebook/jest/pull/7345.patch","merged_at":"2018-11-09T01:15:58Z"},"body":"## Summary\r\n\r\nThe HasteMap class has an option to compute the sha-1 of files and use it to determine if a file has changed if the modification times differ. This is used by external packages (e.g. Metro) but the option wasn't exposed in Jest. It's exposed as an option instead of enabling it by default because it has a performance impact that only pays off for some use cases (like remote caching, where mtimes differ).\r\n\r\n## Test plan\r\n\r\nThis is difficult to test e2e (as it'll mostly be used with watchman and remote caching where mtime is lost) and we don't test that options are forwarded in the different packages in unit tests, so I trust Flow typing and manual testing here.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/7345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/7345/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/10901","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/10901/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/10901/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/10901/events","html_url":"https://github.com/facebook/jest/pull/10901","id":755184163,"node_id":"MDExOlB1bGxSZXF1ZXN0NTMwOTQ1MDI5","number":10901,"title":"feat(jest-runtime): share cacheFS between runtime and transformer","user":{"login":"ahnpnl","id":27772165,"node_id":"MDQ6VXNlcjI3NzcyMTY1","avatar_url":"https://avatars.githubusercontent.com/u/27772165?v=4","gravatar_id":"","url":"https://api.github.com/users/ahnpnl","html_url":"https://github.com/ahnpnl","followers_url":"https://api.github.com/users/ahnpnl/followers","following_url":"https://api.github.com/users/ahnpnl/following{/other_user}","gists_url":"https://api.github.com/users/ahnpnl/gists{/gist_id}","starred_url":"https://api.github.com/users/ahnpnl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahnpnl/subscriptions","organizations_url":"https://api.github.com/users/ahnpnl/orgs","repos_url":"https://api.github.com/users/ahnpnl/repos","events_url":"https://api.github.com/users/ahnpnl/events{/privacy}","received_events_url":"https://api.github.com/users/ahnpnl/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2020-12-02T11:19:20Z","updated_at":"2021-05-10T23:07:08Z","closed_at":"2020-12-05T12:04:33Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/10901","html_url":"https://github.com/facebook/jest/pull/10901","diff_url":"https://github.com/facebook/jest/pull/10901.diff","patch_url":"https://github.com/facebook/jest/pull/10901.patch","merged_at":"2020-12-05T12:04:32Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md at the root of the project if you have not done so. -->\r\n\r\n## Summary\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\nPass `cacheFS` from `jest-runtime` to `ScriptTransformer`. When `getCacheKey` or `process` is invoked, this `cacheFS` is passed in through transform options\r\n\r\nIf a transformer does module resolution and reads files, it should populate `cacheFS` so that Jest avoids reading the same files again, improving performance. `cacheFS` stores entries of <file path, file contents>\r\n\r\nClose #10898 \r\n\r\n## Test plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\nAdded unit test for `jest-transform`","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/10901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/10901/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/7951","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/7951/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/7951/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/7951/events","html_url":"https://github.com/facebook/jest/pull/7951","id":413169020,"node_id":"MDExOlB1bGxSZXF1ZXN0MjU1MjE4MTE1","number":7951,"title":"fix jest-haste-map-types","user":{"login":"jeysal","id":16069751,"node_id":"MDQ6VXNlcjE2MDY5NzUx","avatar_url":"https://avatars.githubusercontent.com/u/16069751?v=4","gravatar_id":"","url":"https://api.github.com/users/jeysal","html_url":"https://github.com/jeysal","followers_url":"https://api.github.com/users/jeysal/followers","following_url":"https://api.github.com/users/jeysal/following{/other_user}","gists_url":"https://api.github.com/users/jeysal/gists{/gist_id}","starred_url":"https://api.github.com/users/jeysal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeysal/subscriptions","organizations_url":"https://api.github.com/users/jeysal/orgs","repos_url":"https://api.github.com/users/jeysal/repos","events_url":"https://api.github.com/users/jeysal/events{/privacy}","received_events_url":"https://api.github.com/users/jeysal/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-02-21T23:16:06Z","updated_at":"2021-05-12T00:07:16Z","closed_at":"2019-02-22T00:17:37Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/7951","html_url":"https://github.com/facebook/jest/pull/7951","diff_url":"https://github.com/facebook/jest/pull/7951.diff","patch_url":"https://github.com/facebook/jest/pull/7951.patch","merged_at":"2019-02-22T00:17:37Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -->\r\n\r\n## Summary\r\n\r\n`jest-haste-map` wants to do both `export = HasteMap` and multiple `export type SomeType`. Until we migrate it over to use a proper ESM default export, the way to do this in TypeScript is namespaces - see [this StackOverflow answer](https://stackoverflow.com/a/51238234). This fixes our `jest-haste-map/build/index.d.ts`:\r\n\r\n<details>\r\n<summary>Diff</summary>\r\n\r\n```diff\r\ndiff --git a/tmp/old/index.d.ts b/tmp/new/index.d.ts\r\nindex ff4589f52..d2fe5bd75 100644\r\n--- a/tmp/old/index.d.ts\r\n+++ b/tmp/new/index.d.ts\r\n@@ -4,9 +4,180 @@\r\n  * This source code is licensed under the MIT license found in the\r\n  * LICENSE file in the root directory of this source tree.\r\n  */\r\n+/// <reference types=\"node\" />\r\n+import EventEmitter from 'events';\r\n+import { Config } from '@jest/types';\r\n+import H from './constants';\r\n import HasteFS from './HasteFS';\r\n import HasteModuleMap, { SerializableModuleMap as HasteSerializableModuleMap } from './ModuleMap';\r\n-export declare type ModuleMap = HasteModuleMap;\r\n-export declare type SerializableModuleMap = HasteSerializableModuleMap;\r\n-export declare type FS = HasteFS;\r\n+import { HasteMap as HasteMapObject, HasteRegExp, InternalHasteMap, Mapper } from './types';\r\n+declare type HType = typeof H;\r\n+declare type Options = {\r\n+    cacheDirectory?: string;\r\n+    computeDependencies?: boolean;\r\n+    computeSha1?: boolean;\r\n+    console?: Console;\r\n+    dependencyExtractor?: string;\r\n+    extensions: Array<string>;\r\n+    forceNodeFilesystemAPI?: boolean;\r\n+    hasteImplModulePath?: string;\r\n+    ignorePattern?: HasteRegExp;\r\n+    mapper?: Mapper;\r\n+    maxWorkers: number;\r\n+    mocksPattern?: string;\r\n+    name: string;\r\n+    platforms: Array<string>;\r\n+    providesModuleNodeModules?: Array<string>;\r\n+    resetCache?: boolean;\r\n+    retainAllFiles: boolean;\r\n+    rootDir: string;\r\n+    roots: Array<string>;\r\n+    throwOnModuleCollision?: boolean;\r\n+    useWatchman?: boolean;\r\n+    watch?: boolean;\r\n+};\r\n+declare namespace HasteMap {\r\n+    type ModuleMap = HasteModuleMap;\r\n+    type SerializableModuleMap = HasteSerializableModuleMap;\r\n+    type FS = HasteFS;\r\n+}\r\n+/**\r\n+ * HasteMap is a JavaScript implementation of Facebook's haste module system.\r\n+ *\r\n+ * This implementation is inspired by https://github.com/facebook/node-haste\r\n+ * and was built with for high-performance in large code repositories with\r\n+ * hundreds of thousands of files. This implementation is scalable and provides\r\n+ * predictable performance.\r\n+ *\r\n+ * Because the haste map creation and synchronization is critical to startup\r\n+ * performance and most tasks are blocked by I/O this class makes heavy use of\r\n+ * synchronous operations. It uses worker processes for parallelizing file\r\n+ * access and metadata extraction.\r\n+ *\r\n+ * The data structures created by `jest-haste-map` can be used directly from the\r\n+ * cache without further processing. The metadata objects in the `files` and\r\n+ * `map` objects contain cross-references: a metadata object from one can look\r\n+ * up the corresponding metadata object in the other map. Note that in most\r\n+ * projects, the number of files will be greater than the number of haste\r\n+ * modules one module can refer to many files based on platform extensions.\r\n+ *\r\n+ * type HasteMap = {\r\n+ *   clocks: WatchmanClocks,\r\n+ *   files: {[filepath: string]: FileMetaData},\r\n+ *   map: {[id: string]: ModuleMapItem},\r\n+ *   mocks: {[id: string]: string},\r\n+ * }\r\n+ *\r\n+ * // Watchman clocks are used for query synchronization and file system deltas.\r\n+ * type WatchmanClocks = {[filepath: string]: string};\r\n+ *\r\n+ * type FileMetaData = {\r\n+ *   id: ?string, // used to look up module metadata objects in `map`.\r\n+ *   mtime: number, // check for outdated files.\r\n+ *   size: number, // size of the file in bytes.\r\n+ *   visited: boolean, // whether the file has been parsed or not.\r\n+ *   dependencies: Array<string>, // all relative dependencies of this file.\r\n+ *   sha1: ?string, // SHA-1 of the file, if requested via options.\r\n+ * };\r\n+ *\r\n+ * // Modules can be targeted to a specific platform based on the file name.\r\n+ * // Example: platform.ios.js and Platform.android.js will both map to the same\r\n+ * // `Platform` module. The platform should be specified during resolution.\r\n+ * type ModuleMapItem = {[platform: string]: ModuleMetaData};\r\n+ *\r\n+ * //\r\n+ * type ModuleMetaData = {\r\n+ *   path: string, // the path to look up the file object in `files`.\r\n+ *   type: string, // the module type (either `package` or `module`).\r\n+ * };\r\n+ *\r\n+ * Note that the data structures described above are conceptual only. The actual\r\n+ * implementation uses arrays and constant keys for metadata storage. Instead of\r\n+ * `{id: 'flatMap', mtime: 3421, size: 42, visited: true, dependencies: []}` the real\r\n+ * representation is similar to `['flatMap', 3421, 42, 1, []]` to save storage space\r\n+ * and reduce parse and write time of a big JSON blob.\r\n+ *\r\n+ * The HasteMap is created as follows:\r\n+ *  1. read data from the cache or create an empty structure.\r\n+ *\r\n+ *  2. crawl the file system.\r\n+ *     * empty cache: crawl the entire file system.\r\n+ *     * cache available:\r\n+ *       * if watchman is available: get file system delta changes.\r\n+ *       * if watchman is unavailable: crawl the entire file system.\r\n+ *     * build metadata objects for every file. This builds the `files` part of\r\n+ *       the `HasteMap`.\r\n+ *\r\n+ *  3. parse and extract metadata from changed files.\r\n+ *     * this is done in parallel over worker processes to improve performance.\r\n+ *     * the worst case is to parse all files.\r\n+ *     * the best case is no file system access and retrieving all data from\r\n+ *       the cache.\r\n+ *     * the average case is a small number of changed files.\r\n+ *\r\n+ *  4. serialize the new `HasteMap` in a cache file.\r\n+ *     Worker processes can directly access the cache through `HasteMap.read()`.\r\n+ *\r\n+ */\r\n+declare class HasteMap extends EventEmitter {\r\n+    private _buildPromise;\r\n+    private _cachePath;\r\n+    private _changeInterval?;\r\n+    private _console;\r\n+    private _options;\r\n+    private _watchers;\r\n+    private _whitelist;\r\n+    private _worker;\r\n+    constructor(options: Options);\r\n+    static getCacheFilePath(tmpdir: Config.Path, name: string, ...extra: Array<string>): string;\r\n+    getCacheFilePath(): string;\r\n+    build(): Promise<HasteMapObject>;\r\n+    /**\r\n+     * 1. read data from the cache or create an empty structure.\r\n+     */\r\n+    read(): InternalHasteMap;\r\n+    readModuleMap(): HasteModuleMap;\r\n+    /**\r\n+     * 2. crawl the file system.\r\n+     */\r\n+    private _buildFileMap;\r\n+    /**\r\n+     * 3. parse and extract metadata from changed files.\r\n+     */\r\n+    private _processFile;\r\n+    private _buildHasteMap;\r\n+    private _cleanup;\r\n+    /**\r\n+     * 4. serialize the new `HasteMap` in a cache file.\r\n+     */\r\n+    private _persist;\r\n+    /**\r\n+     * Creates workers or parses files and extracts metadata in-process.\r\n+     */\r\n+    private _getWorker;\r\n+    private _crawl;\r\n+    /**\r\n+     * Watch mode\r\n+     */\r\n+    private _watch;\r\n+    /**\r\n+     * This function should be called when the file under `filePath` is removed\r\n+     * or changed. When that happens, we want to figure out if that file was\r\n+     * part of a group of files that had the same ID. If it was, we want to\r\n+     * remove it from the group. Furthermore, if there is only one file\r\n+     * remaining in the group, then we want to restore that single file as the\r\n+     * correct resolution for its ID, and cleanup the duplicates index.\r\n+     */\r\n+    private _recoverDuplicates;\r\n+    end(): Promise<void>;\r\n+    /**\r\n+     * Helpers\r\n+     */\r\n+    private _ignore;\r\n+    private _isNodeModulesDir;\r\n+    private _createEmptyMap;\r\n+    static H: HType;\r\n+    static ModuleMap: typeof HasteModuleMap;\r\n+}\r\n+export = HasteMap;\r\n //# sourceMappingURL=index.d.ts.map\r\n\\ No newline at end of file\r\n```\r\n</details>\r\n\r\n---\r\n\r\n`@babel/plugin-transform-typescript` does not support namespaces (because it's not possible to really support them), but we only want to put a few types in them, so I wrote a [Babel plugin](https://github.com/jeysal/babel-plugin-typescript-strip-namespaces) that strips them away in those simple cases. This way, `yarn build` works and `jest-haste-map/build/index.js` is unchanged.\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n## Test plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\nManual inspection of `jest-haste-map/build/index.{js,d.ts}`","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/7951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/7951/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/1427","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/1427/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/1427/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/1427/events","html_url":"https://github.com/facebook/jest/pull/1427","id":171103867,"node_id":"MDExOlB1bGxSZXF1ZXN0ODEyNjc0OTc=","number":1427,"title":"Refactor jest-haste-map (1/n)","user":{"login":"cpojer","id":13352,"node_id":"MDQ6VXNlcjEzMzUy","avatar_url":"https://avatars.githubusercontent.com/u/13352?v=4","gravatar_id":"","url":"https://api.github.com/users/cpojer","html_url":"https://github.com/cpojer","followers_url":"https://api.github.com/users/cpojer/followers","following_url":"https://api.github.com/users/cpojer/following{/other_user}","gists_url":"https://api.github.com/users/cpojer/gists{/gist_id}","starred_url":"https://api.github.com/users/cpojer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpojer/subscriptions","organizations_url":"https://api.github.com/users/cpojer/orgs","repos_url":"https://api.github.com/users/cpojer/repos","events_url":"https://api.github.com/users/cpojer/events{/privacy}","received_events_url":"https://api.github.com/users/cpojer/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-08-15T03:50:19Z","updated_at":"2021-05-14T12:08:25Z","closed_at":"2016-08-15T18:53:46Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/1427","html_url":"https://github.com/facebook/jest/pull/1427","diff_url":"https://github.com/facebook/jest/pull/1427.diff","patch_url":"https://github.com/facebook/jest/pull/1427.patch","merged_at":"2016-08-15T18:53:46Z"},"body":"This is the first diff in a series to make `jest-haste-map` more performant. This diff doesn't impact performance but rather improves APIs so I can do further work:\n- Instead of a POJO, a `HasteMap` object now consists of `HasteFS` and `ModuleMap` instances. These classes are intended to be immutable (for now) and have accessors for all data that you might want to read from it. In a follow-up, this will enable us to split up the data for both into separate cache files. Jest workers only need the module map and most of the time only either the file or the module maps are written. By splitting them in half and only writing or reading one, we can cut write time by 50 % and then read time in the worker by another 50 %. On www that's about 300-500ms per invocation of Jest (yes, really!)\n- Cleaned up CoverageReporter's glob matching and moved it into HasteFS.\n- Cleaned up snapshot cleanup to not require the entire HasteMap.\n- Cleaned up all the crap we are passing around.\n- Fixed a bug in stack trace cleanup. During debugging the first line was consistently jasmine, which we should always filter, so that the stack trace with user code and be shown (cc @dmitriiabramov).\n\nPlease expect some of the uglier parts of this diff to be cleaned up soon.\n\ncc @davidaurelio @matryoshcow\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/1427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/1427/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/3027","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/3027/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/3027/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/3027/events","html_url":"https://github.com/facebook/jest/pull/3027","id":210907663,"node_id":"MDExOlB1bGxSZXF1ZXN0MTA4NDE2NDk0","number":3027,"title":"Throw errors with descriptive message about theme option of pretty-fo…","user":{"login":"pedrottimark","id":11862657,"node_id":"MDQ6VXNlcjExODYyNjU3","avatar_url":"https://avatars.githubusercontent.com/u/11862657?v=4","gravatar_id":"","url":"https://api.github.com/users/pedrottimark","html_url":"https://github.com/pedrottimark","followers_url":"https://api.github.com/users/pedrottimark/followers","following_url":"https://api.github.com/users/pedrottimark/following{/other_user}","gists_url":"https://api.github.com/users/pedrottimark/gists{/gist_id}","starred_url":"https://api.github.com/users/pedrottimark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pedrottimark/subscriptions","organizations_url":"https://api.github.com/users/pedrottimark/orgs","repos_url":"https://api.github.com/users/pedrottimark/repos","events_url":"https://api.github.com/users/pedrottimark/events{/privacy}","received_events_url":"https://api.github.com/users/pedrottimark/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-02-28T21:31:56Z","updated_at":"2021-05-13T20:07:15Z","closed_at":"2017-03-02T13:47:30Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/3027","html_url":"https://github.com/facebook/jest/pull/3027","diff_url":"https://github.com/facebook/jest/pull/3027.diff","patch_url":"https://github.com/facebook/jest/pull/3027.patch","merged_at":"2017-03-02T13:47:30Z"},"body":"**Summary**\r\n\r\nOne more thing: make the code support the Flow type. This `theme` has 3 variations.\r\n\r\n* If the `theme` option isn’t an **object**:\r\n\r\n  ```js\r\n  pretty(element, {\r\n    highlight: true,\r\n    plugins: [ReactElement],\r\n    theme: null,\r\n  }); // TypeError: Cannot convert undefined or null to object at Function.keys\r\n\r\n  pretty(element, {\r\n    highlight: true,\r\n    plugins: [ReactElement],\r\n    theme: 'beautiful',\r\n  }); // TypeError: Cannot read property 'open' of undefined\r\n  ```\r\n\r\n* If the `theme` option doesn’t specify **all properties**:\r\n\r\n  ```js\r\n  pretty(element, {\r\n    highlight: true,\r\n    plugins: [ReactElement],\r\n    theme: {\r\n      value: 'red',\r\n    },\r\n  }); // TypeError: Cannot read property 'open' of undefined\r\n  ```\r\n\r\n* If the `theme` option specifies a value that’s **undefined in ansi-styles**:\r\n\r\n  ```js\r\n  pretty(element, {\r\n    highlight: true,\r\n    plugins: [ReactElement],\r\n    theme: {\r\n      content: 'unknown',\r\n      prop: 'yellow',\r\n      tag: 'cyan',\r\n      value: 'green',\r\n    },\r\n  }); // TypeError: Cannot read property 'open' of undefined\r\n  ```\r\n\r\nSolutions:\r\n\r\n* descriptive message if the `theme` option is `null` or isn’t of type `\"object\"`\r\n* instead of replace defaults, **override** them with properties from `theme` option\r\n* descriptive message if a value is undefined in `ansi-styles`\r\n\r\nAs we batch up several minor breaking changes, revise existing messages:\r\n\r\n* Imitate wording from `jest-validate`\r\n* Replace prettyFormat with **pretty-format** to maximize chance to find the dependency\r\n\r\nGave an argument `mixed` type for practice, but 2 `$FlowFixMe` really :(\r\n\r\n**Test plan**\r\n\r\n5 new tests including 2 new snapshots\r\n\r\nJest never uses `theme` option, so this change doesn’t affect its performance.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/3027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/3027/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/3187","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/3187/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/3187/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/3187/events","html_url":"https://github.com/facebook/jest/pull/3187","id":216118616,"node_id":"MDExOlB1bGxSZXF1ZXN0MTEyMDQ3Mjkx","number":3187,"title":"[jest-jasmine2] Rewrite `QueueRunner`.","user":{"login":"wtgtybhertgeghgtwtg","id":18507762,"node_id":"MDQ6VXNlcjE4NTA3NzYy","avatar_url":"https://avatars.githubusercontent.com/u/18507762?v=4","gravatar_id":"","url":"https://api.github.com/users/wtgtybhertgeghgtwtg","html_url":"https://github.com/wtgtybhertgeghgtwtg","followers_url":"https://api.github.com/users/wtgtybhertgeghgtwtg/followers","following_url":"https://api.github.com/users/wtgtybhertgeghgtwtg/following{/other_user}","gists_url":"https://api.github.com/users/wtgtybhertgeghgtwtg/gists{/gist_id}","starred_url":"https://api.github.com/users/wtgtybhertgeghgtwtg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wtgtybhertgeghgtwtg/subscriptions","organizations_url":"https://api.github.com/users/wtgtybhertgeghgtwtg/orgs","repos_url":"https://api.github.com/users/wtgtybhertgeghgtwtg/repos","events_url":"https://api.github.com/users/wtgtybhertgeghgtwtg/events{/privacy}","received_events_url":"https://api.github.com/users/wtgtybhertgeghgtwtg/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-03-22T16:04:42Z","updated_at":"2021-05-13T19:13:29Z","closed_at":"2017-03-23T22:37:00Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/3187","html_url":"https://github.com/facebook/jest/pull/3187","diff_url":"https://github.com/facebook/jest/pull/3187.diff","patch_url":"https://github.com/facebook/jest/pull/3187.patch","merged_at":"2017-03-23T22:37:00Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n**Summary**\r\nRewrites `QueueRunner` (now `queueRunner`) and pulls it out of `jasmine`.\r\nOne of the problems with the current implementation of `QueueRunner` is that it creates \r\n[very deep recursive stacks](https://cloud.githubusercontent.com/assets/18507762/24206916/e5d9e0ae-0edc-11e7-8df0-d2a436eca54b.png) very quickly.  It tries to mitigate that by [spinning off into a timeout every 20 iterations or so](https://github.com/facebook/jest/blob/1a61f3fb52a83c560214c4f8d49a48454d663818/packages/jest-jasmine2/src/jasmine/Env.js#L138-L149), but that's an ugly and suboptimal solution.  With this rewrite, `queueRunner` maps `queueableFns` to promises and resolves them sequentially, so the stack never gets very deep.  Performance is not noticeably affected.\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\n\r\n**Test plan**\r\nTests have been written for `queueRunner.`  A test in `jest-util` has been changed, as it required the stack to be a certain way.\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/3187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/3187/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/3962","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/3962/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/3962/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/3962/events","html_url":"https://github.com/facebook/jest/pull/3962","id":240259181,"node_id":"MDExOlB1bGxSZXF1ZXN0MTI4NjkwMTc5","number":3962,"title":"Avoid unnecessary function declarations and call in pretty-format","user":{"login":"pedrottimark","id":11862657,"node_id":"MDQ6VXNlcjExODYyNjU3","avatar_url":"https://avatars.githubusercontent.com/u/11862657?v=4","gravatar_id":"","url":"https://api.github.com/users/pedrottimark","html_url":"https://github.com/pedrottimark","followers_url":"https://api.github.com/users/pedrottimark/followers","following_url":"https://api.github.com/users/pedrottimark/following{/other_user}","gists_url":"https://api.github.com/users/pedrottimark/gists{/gist_id}","starred_url":"https://api.github.com/users/pedrottimark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pedrottimark/subscriptions","organizations_url":"https://api.github.com/users/pedrottimark/orgs","repos_url":"https://api.github.com/users/pedrottimark/repos","events_url":"https://api.github.com/users/pedrottimark/events{/privacy}","received_events_url":"https://api.github.com/users/pedrottimark/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-07-03T20:28:34Z","updated_at":"2021-05-13T11:07:09Z","closed_at":"2017-07-04T21:07:28Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/3962","html_url":"https://github.com/facebook/jest/pull/3962","diff_url":"https://github.com/facebook/jest/pull/3962.diff","patch_url":"https://github.com/facebook/jest/pull/3962.patch","merged_at":"2017-07-04T21:07:28Z"},"body":"**Summary**\r\n\r\nProblem:\r\n\r\n* `printPlugin` “hoists” the `boundPrint` and `boundIndent` declarations and therefore initializes the functions **whether or not** a plugin matches the value.\r\n* `prettyFormat` calls `createIndent` if any plugins exist **instead of** if some plugin **matches** the value. Because plugins always exist in Jest, the conditional logic to avoid creating indentation for basic values doesn’t save any time.\r\n\r\nSolution:\r\n\r\n* Factor out a `findPlugin` function.\r\n* Factor out `if` statement to call `printPlugin` only if a plugin matches the value.\r\n* Call `createIndent` for arg in `printPlugin` and `printComplexValue` function calls.\r\n\r\nYour review is especially wanted about the decision to throw an error if a plugin returns a non-string value. Am happy to revert that change if it’s a step in a wrong direction. Current logic quietly falls through to print the value as either basic or complex.\r\n\r\nInterpretation of the following performance measurements:\r\n\r\n* Big improvement for massive object with no plugins outside Jest.\r\n* Almost as big improvement with default plugins (not called) inside Jest.\r\n* Only slight change for small elements with default plugins (called) inside Jest.\r\n\r\n| scenario | plugins | proposed | baseline | ratio |\r\n| :--- | ---: | ---: | ---: | ---: |\r\n| geo.json | 0 | 30693309 | 72540558 | 0.423 |\r\n| geo.json | 10 | 70169013 | 127109022 | 0.552 |\r\n| React elements | 10 | 1283359 | 1287893 | 0.996 |\r\n\r\nP.S. The calls to `printPlugin` are nice example of not ignoring indentation in a diff, heh :)\r\n\r\n**Test plan**\r\n\r\nJest","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/3962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/3962/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/3986","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/3986/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/3986/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/3986/events","html_url":"https://github.com/facebook/jest/pull/3986","id":241373929,"node_id":"MDExOlB1bGxSZXF1ZXN0MTI5NDgzMzYx","number":3986,"title":"Refactor names and delimiters of complex values in pretty-format","user":{"login":"pedrottimark","id":11862657,"node_id":"MDQ6VXNlcjExODYyNjU3","avatar_url":"https://avatars.githubusercontent.com/u/11862657?v=4","gravatar_id":"","url":"https://api.github.com/users/pedrottimark","html_url":"https://github.com/pedrottimark","followers_url":"https://api.github.com/users/pedrottimark/followers","following_url":"https://api.github.com/users/pedrottimark/following{/other_user}","gists_url":"https://api.github.com/users/pedrottimark/gists{/gist_id}","starred_url":"https://api.github.com/users/pedrottimark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pedrottimark/subscriptions","organizations_url":"https://api.github.com/users/pedrottimark/orgs","repos_url":"https://api.github.com/users/pedrottimark/repos","events_url":"https://api.github.com/users/pedrottimark/events{/privacy}","received_events_url":"https://api.github.com/users/pedrottimark/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-07-07T20:37:36Z","updated_at":"2021-05-13T10:07:17Z","closed_at":"2017-07-08T17:05:13Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/3986","html_url":"https://github.com/facebook/jest/pull/3986","diff_url":"https://github.com/facebook/jest/pull/3986.diff","patch_url":"https://github.com/facebook/jest/pull/3986.patch","merged_at":"2017-07-08T17:05:13Z"},"body":"**Summary**\r\n\r\nThere are some inconsistencies in names of complex types for various options:\r\n\r\n* specific case for empty list is `Arguments []` but general case with `min: true` is `[]`\r\n* specific case for empty array is `Array []` and so on, but general case with `min: true` is `[]`\r\n* when `hitMaxDepth` for typed array is `[Array]` instead of `[Uint32Array]` and so on\r\n* when `hitMaxDepth` for constructed object is `[Object]` instead of `'[' + (val.constructor ? val.constructor.name : 'Object') + ']'` and I’m not sure tests cover this case\r\n\r\nIf y’all are willing to approve breaking changes to edge cases, I can submit an additional PR.\r\n\r\nWhether or not, this PR applies advice from Kent Beck: move similar elements closer together.\r\n\r\n* Move empty arguments and array from `printBasicValue` to `printComplexValue`\r\n* Move complex value name and delimiters from helpers to `printComplexValue`\r\n* Therefore delete redundant helpers `printArguments` and `printArray`\r\n\r\nEffect of refactoring on performance:\r\n\r\n* Time to print empty arguments or array increases similar to empty object. I think the reason for the original logic is to avoid computing `indent` when it isn’t used for those values. It has been confusing to me that the special cases in `printBasicValue` (where I don’t expect to find arguments or arrays) are inconsistent with the general cases in `printCompexValue` :(\r\n* Time saving from evaluating `isToStringedArrayType` only 1 time instead of 2 and calling `printList` directly for arguments and array is subtle, within the precision of measurement.\r\n\r\n**Test plan**\r\n\r\nJest","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/3986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/3986/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/4088","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/4088/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/4088/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/4088/events","html_url":"https://github.com/facebook/jest/pull/4088","id":244317358,"node_id":"MDExOlB1bGxSZXF1ZXN0MTMxNTIxNzA0","number":4088,"title":"jest-runtime: atomic cache write, and check validity of data","user":{"login":"jeanlauliac","id":1733570,"node_id":"MDQ6VXNlcjE3MzM1NzA=","avatar_url":"https://avatars.githubusercontent.com/u/1733570?v=4","gravatar_id":"","url":"https://api.github.com/users/jeanlauliac","html_url":"https://github.com/jeanlauliac","followers_url":"https://api.github.com/users/jeanlauliac/followers","following_url":"https://api.github.com/users/jeanlauliac/following{/other_user}","gists_url":"https://api.github.com/users/jeanlauliac/gists{/gist_id}","starred_url":"https://api.github.com/users/jeanlauliac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeanlauliac/subscriptions","organizations_url":"https://api.github.com/users/jeanlauliac/orgs","repos_url":"https://api.github.com/users/jeanlauliac/repos","events_url":"https://api.github.com/users/jeanlauliac/events{/privacy}","received_events_url":"https://api.github.com/users/jeanlauliac/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":20,"created_at":"2017-07-20T10:34:34Z","updated_at":"2021-05-13T03:14:22Z","closed_at":"2017-07-25T21:33:25Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/4088","html_url":"https://github.com/facebook/jest/pull/4088","diff_url":"https://github.com/facebook/jest/pull/4088.diff","patch_url":"https://github.com/facebook/jest/pull/4088.patch","merged_at":"2017-07-25T21:33:25Z"},"body":"This change tries to address what may be a cause for #1874, where I posted some details on the approach. By doing atomic writes we ensure there's no cache file ending up being a mix of two transformed code files, and we limit the concurrency issues of having a file read and written at the same time. A prior PR #3561 tries to address the problem using a lock, but locks bring additional complexity that this change tries to avoid (ex. deadlocks).\r\n\r\nThis change also adds a checksum, because there can be other processes still writing non-atomically to cache files. Additional, not all filesystems may support atomic renames (what `atomic-write-file` relies on).\r\n\r\nThis change incurs a slight performance cost that is the additional I/O call to rename the files. However I believe it is less costly than a lock solution. I don't think this should have much effect even on processing several thousands of files.\r\n\r\n**Test plan**\r\n\r\nIt is quite challenging to test for concurrency issues, so this change relies on the knowledge that `writeFileSync` is not atomic and that corruption could have the observed effects. I rely on the existing automated testing to ensure that the caching behaviour and `jest-runtime` in general is working as expected.\r\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/4088/reactions","total_count":3,"+1":1,"-1":0,"laugh":0,"hooray":2,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/4088/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/9259","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/9259/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/9259/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/9259/events","html_url":"https://github.com/facebook/jest/pull/9259","id":532192465,"node_id":"MDExOlB1bGxSZXF1ZXN0MzQ4NDkzNjc3","number":9259,"title":"fix: limit number of workers when creating haste maps in projects","user":{"login":"thymikee","id":5106466,"node_id":"MDQ6VXNlcjUxMDY0NjY=","avatar_url":"https://avatars.githubusercontent.com/u/5106466?v=4","gravatar_id":"","url":"https://api.github.com/users/thymikee","html_url":"https://github.com/thymikee","followers_url":"https://api.github.com/users/thymikee/followers","following_url":"https://api.github.com/users/thymikee/following{/other_user}","gists_url":"https://api.github.com/users/thymikee/gists{/gist_id}","starred_url":"https://api.github.com/users/thymikee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/thymikee/subscriptions","organizations_url":"https://api.github.com/users/thymikee/orgs","repos_url":"https://api.github.com/users/thymikee/repos","events_url":"https://api.github.com/users/thymikee/events{/privacy}","received_events_url":"https://api.github.com/users/thymikee/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-12-03T18:53:24Z","updated_at":"2021-05-11T12:07:13Z","closed_at":"2019-12-03T22:25:43Z","author_association":"COLLABORATOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/9259","html_url":"https://github.com/facebook/jest/pull/9259","diff_url":"https://github.com/facebook/jest/pull/9259.diff","patch_url":"https://github.com/facebook/jest/pull/9259.patch","merged_at":"2019-12-03T22:25:43Z"},"body":"## Summary\r\n\r\nPartially addresses https://github.com/facebook/jest/issues/9236.\r\n\r\nWhen creating haste contexts and maps, Jest currently spawns `maxWorkers` per \"project\". While it doesn't make a difference in a single-project workspace, it's a big deal for those using multiple projects. \r\n\r\nA quick-and-dirty-but-works solution is to limit the number of workers based on the projects number. It's sub-optimal, because we may have smaller and larger projects which we assign the same number of workers. However a proper solution would require more work. E.g. we could delegate `createHasteMap` of each project to a worker pool created in `jest-core`, instead of deferring parallelization to `createHasteMap` itself. Feel free to implement this solution. However, I'm not pursuing this, as @scotthovestadt has likely far more meaningful changes to haste map performance.\r\n\r\nIn Jest own test suite, this diff result in haste map creation time drop from 3.1s to 0.8s on my machine, which is noticeable.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/9259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/9259/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/1289","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/1289/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/1289/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/1289/events","html_url":"https://github.com/facebook/jest/pull/1289","id":165296936,"node_id":"MDExOlB1bGxSZXF1ZXN0NzcyNzE1ODU=","number":1289,"title":"Haste map optimizations","user":{"login":"cpojer","id":13352,"node_id":"MDQ6VXNlcjEzMzUy","avatar_url":"https://avatars.githubusercontent.com/u/13352?v=4","gravatar_id":"","url":"https://api.github.com/users/cpojer","html_url":"https://github.com/cpojer","followers_url":"https://api.github.com/users/cpojer/followers","following_url":"https://api.github.com/users/cpojer/following{/other_user}","gists_url":"https://api.github.com/users/cpojer/gists{/gist_id}","starred_url":"https://api.github.com/users/cpojer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpojer/subscriptions","organizations_url":"https://api.github.com/users/cpojer/orgs","repos_url":"https://api.github.com/users/cpojer/repos","events_url":"https://api.github.com/users/cpojer/events{/privacy}","received_events_url":"https://api.github.com/users/cpojer/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2016-07-13T11:18:17Z","updated_at":"2021-05-14T14:13:23Z","closed_at":"2016-07-15T01:29:14Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/1289","html_url":"https://github.com/facebook/jest/pull/1289","diff_url":"https://github.com/facebook/jest/pull/1289.diff","patch_url":"https://github.com/facebook/jest/pull/1289.patch","merged_at":"2016-07-15T01:29:14Z"},"body":"I'm beginning to work on some rewrites of jest-haste-map and I'm streamlining the projects around it a little bit. The `HasteResolverContext` was misnamed and wrongly wrapped in Promises, so I unwrapped it and fixed everything up.\n\nThe overall goal is to improve performance of jest-haste-map and to split up work into smaller chunks. I will send subsequent pull requests with a new implementation of the HasteContext type and new types for the FileMap and ModuleMap objects. I'm planning to experiment with a trie to store the file map to reduce data storage. It should not significantly increase access times for file metadata, so this should be fine. Second, I am working on persisting the file map and module map separately, as test workers only require the module map. Third, I can persist the two different maps at different times and delay some of this work until later and after tests have finished running. Finally, I have a few more optimizations, like for example reducing the path lengths in the module map.\n\nI refactored `jest-resolve` into `jest-resolve-dependencies`. The parent thread will need an instance of both (see SearchSource) but child workers will only need an instance of `jest-resolve`. This should cut the time it takes to read the haste map in a worker by half, which should improve starting up a worker from 300ms to 150ms on a really really large codebase.\n\nI created `jest-file-exists`. For the longest time I had the goal of improving the best case time to a lookup in the file map, which is always up-to-date. This should work great as we expand on things like snapshot cleanups, where we are testing whether the associated file exists – most of the time it does and we can short-circuit it.\n\ncc @dmitriiabramov \n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/1289/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/1289/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/4195","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/4195/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/4195/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/4195/events","html_url":"https://github.com/facebook/jest/pull/4195","id":248020166,"node_id":"MDExOlB1bGxSZXF1ZXN0MTM0MTc3OTMx","number":4195,"title":"Improve Jest phabricator plugin","user":{"login":"mjesun","id":829269,"node_id":"MDQ6VXNlcjgyOTI2OQ==","avatar_url":"https://avatars.githubusercontent.com/u/829269?v=4","gravatar_id":"","url":"https://api.github.com/users/mjesun","html_url":"https://github.com/mjesun","followers_url":"https://api.github.com/users/mjesun/followers","following_url":"https://api.github.com/users/mjesun/following{/other_user}","gists_url":"https://api.github.com/users/mjesun/gists{/gist_id}","starred_url":"https://api.github.com/users/mjesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjesun/subscriptions","organizations_url":"https://api.github.com/users/mjesun/orgs","repos_url":"https://api.github.com/users/mjesun/repos","events_url":"https://api.github.com/users/mjesun/events{/privacy}","received_events_url":"https://api.github.com/users/mjesun/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-08-04T14:18:54Z","updated_at":"2021-05-13T01:32:25Z","closed_at":"2017-08-04T17:01:17Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/4195","html_url":"https://github.com/facebook/jest/pull/4195","diff_url":"https://github.com/facebook/jest/pull/4195.diff","patch_url":"https://github.com/facebook/jest/pull/4195.patch","merged_at":"2017-08-04T17:01:17Z"},"body":"Some changes were done to the `jest-phabricator` result processor; both for optimizing the size of the resulting JSON and for making the results shape more consistent. This is a summary on how the changes affect the current way of working of the plugin:\r\n\r\n1. The additional level of indirection where all the results were copied inside `aggregatedResult` is gone. This way, the resulting data format is the same whether you use `jest-phabricator` or not.\r\n\r\n2. Now we override `coverageMap` to place the coverage there. The standard coverage format is huge, and although the code said [we will not include it in the final result for performance reasons](https://github.com/facebook/jest/blob/dec54a3/packages/jest-phabricator/src/index.js#L56-L57), it was getting preserved inside `aggregatedResult.coverageMap`.\r\n\r\n3. Coverage is not copied in each of the test results anymore, **saving a lot of space**. Together with the previous point, this means a decrease from 4.57 MiB to 763.75 KiB for the resulting JSON size on a ~800 tests run. **That's 6x smaller!**\r\n\r\n4. One might argue that overriding `coverageMap` is bad, because we lose the original coverage information; however:\r\n    * It was intentionally `null`-ified before on the main object to save space (which was not, because it was still in the `aggregatedResult` sublevel), but still, its value was `null` at the root.\r\n    * Being at a non-standard place, no one complained for a lot of time, so probably it was not getting used.\r\n    * If a custom reporter is being used for coverage purposes, probably you're not looking for the default way of reporting coverage either, so putting it where the usual coverage is, sounds reasonable to me.\r\n\r\n5. Code is simpler. Yay!","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/4195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/4195/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/5317","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/5317/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/5317/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/5317/events","html_url":"https://github.com/facebook/jest/pull/5317","id":288648006,"node_id":"MDExOlB1bGxSZXF1ZXN0MTYyOTkxNzk4","number":5317,"title":"Verify passed test path is a file before resolving","user":{"login":"LINKIWI","id":8386642,"node_id":"MDQ6VXNlcjgzODY2NDI=","avatar_url":"https://avatars.githubusercontent.com/u/8386642?v=4","gravatar_id":"","url":"https://api.github.com/users/LINKIWI","html_url":"https://github.com/LINKIWI","followers_url":"https://api.github.com/users/LINKIWI/followers","following_url":"https://api.github.com/users/LINKIWI/following{/other_user}","gists_url":"https://api.github.com/users/LINKIWI/gists{/gist_id}","starred_url":"https://api.github.com/users/LINKIWI/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/LINKIWI/subscriptions","organizations_url":"https://api.github.com/users/LINKIWI/orgs","repos_url":"https://api.github.com/users/LINKIWI/repos","events_url":"https://api.github.com/users/LINKIWI/events{/privacy}","received_events_url":"https://api.github.com/users/LINKIWI/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2018-01-15T16:17:56Z","updated_at":"2021-05-12T23:07:03Z","closed_at":"2018-01-15T17:21:12Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/5317","html_url":"https://github.com/facebook/jest/pull/5317","diff_url":"https://github.com/facebook/jest/pull/5317.diff","patch_url":"https://github.com/facebook/jest/pull/5317.patch","merged_at":"2018-01-15T17:21:12Z"},"body":"**Summary**\r\n\r\nThis PR fixes #5272 by fixing the regression introduced in #3882.\r\n\r\n#3882 allows directly specifying file names as arguments to the `jest` CLI but this unintentionally breaks existing behavior when a test directory is passed as the sole argument to `jest`.\r\n\r\n**Fix details**\r\n\r\n*Symptom*: When `*.test.js` files are stored in a directory e.g. `test`, invoking `jest test` on v22.0.5+ results in the following:\r\n\r\n```\r\n FAIL  ./test\r\n  ● Test suite failed to run\r\n\r\n    EISDIR: illegal operation on a directory, read\r\n      \r\n      at Object.readSync (node_modules/graceful-fs/polyfills.js:138:28)\r\n\r\nTest Suites: 1 failed, 1 total\r\nTests:       0 total\r\nSnapshots:   0 total\r\nTime:        0.03s\r\nRan all test suites matching /test/i.\r\n```\r\n\r\n*Root cause*: The change allowing directly running tests by file name does not ensure that the passed argument is not a directory (or, more generally, that the passed argument *is* a file).\r\n\r\n*Remediation*: Filter out all valid test paths that aren't files before continuing existing logic.\r\n\r\n**Test plan**\r\n\r\nThe test added by #3882 was updated to also pass a directory as an argument to the CLI. We observe that no errors are thrown; without this change, the test would fatally throw with `EISDIR` as shown in the example symptom above.\r\n\r\n**Discussion**\r\n\r\n1. Unclear if the performance impact by invoking `fs.lstatSync` on each valid test path is significant enough to explore alternatives.\r\n\r\n2. After poking around with this for a bit, I actually believe this regression creates a desired interface change. If the client wants to recursively search a directory for tests to run, he/she *should* explicitly pass option `--testPathPattern` as stated [here](https://github.com/facebook/jest/issues/5272#issuecomment-357664584) as a workaround for the bug. Based on the [changeset](https://github.com/facebook/jest/pull/3882/files#diff-c53e4529a552a817e1fa7c27419db19bL210) in #3882 it seems like the fact that invoking the CLI as `jest dir-with-tests` works seems to be a coincidental side effect.\r\n\r\nBut anyway, that is a breaking interface change, so this PR just tries to fix the regression as-is.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/5317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/5317/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/5565","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/5565/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/5565/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/5565/events","html_url":"https://github.com/facebook/jest/pull/5565","id":297102256,"node_id":"MDExOlB1bGxSZXF1ZXN0MTY5MTE0NzEy","number":5565,"title":"Use v8.serialize when available.","user":{"login":"cpojer","id":13352,"node_id":"MDQ6VXNlcjEzMzUy","avatar_url":"https://avatars.githubusercontent.com/u/13352?v=4","gravatar_id":"","url":"https://api.github.com/users/cpojer","html_url":"https://github.com/cpojer","followers_url":"https://api.github.com/users/cpojer/followers","following_url":"https://api.github.com/users/cpojer/following{/other_user}","gists_url":"https://api.github.com/users/cpojer/gists{/gist_id}","starred_url":"https://api.github.com/users/cpojer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpojer/subscriptions","organizations_url":"https://api.github.com/users/cpojer/orgs","repos_url":"https://api.github.com/users/cpojer/repos","events_url":"https://api.github.com/users/cpojer/events{/privacy}","received_events_url":"https://api.github.com/users/cpojer/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-02-14T13:50:37Z","updated_at":"2021-05-12T20:07:18Z","closed_at":"2018-02-14T23:52:09Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/5565","html_url":"https://github.com/facebook/jest/pull/5565","diff_url":"https://github.com/facebook/jest/pull/5565.diff","patch_url":"https://github.com/facebook/jest/pull/5565.patch","merged_at":"2018-02-14T23:52:09Z"},"body":"## Summary\r\n\r\nv8 (in Node 8+) has a new function called [`v8.serialize`](https://nodejs.org/api/v8.html#v8_v8_serialize_value) which can be used to encode/decode JavaScript data structures faster than JSON. This diff changes `jest-haste-map` to use the new function in newer versions of Node and falls back to JSON if the serializer/deserializer aren't available. It also does a v8 version check to ensure we aren't trying to read a possible outdated binary blob. Making the cache work across node versions is a non goal and will be broken by this feature. If a user upgrades node, the function will throw and recreate the haste map.\r\n\r\nI benchmarked this on a 73mb haste map and got the following results averaged over 10 runs:\r\n* v8.deserialize: 1621.34\r\n* JSON.parse: 1810.15\r\n* v8.serialize: 608.28\r\n* JSON.stringify: 1177.84\r\n\r\nReading is ~200ms faster and writing is 500ms faster. I suspect this is because of less validation work and less GC (*edit: it's not GC*). Since during startup we read the haste map once, write updates and then read it once per worker, this means that on a gigantic repo, this saves 500+200+(200*workers) time, or close to a second of actual time. On most repos out there in the world, there is likely no visible performance difference.\r\n\r\nNext steps (up for grabs):\r\n* Create a `jest-serialize` package that uses either v8 serialize or JSON.\r\n* Use `jest-serialize` across Jest (`jest-worker`, `jest-haste-map`) and Metro.\r\n* Use more efficient data structures for Jest's haste map to save space and time (this is a large project).\r\n\r\n## Test plan\r\n\r\nI updated some of the tests to pass on either node 8+ or node versions below that.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/5565/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/5565/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/7408","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/7408/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/7408/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/7408/events","html_url":"https://github.com/facebook/jest/pull/7408","id":384128628,"node_id":"MDExOlB1bGxSZXF1ZXN0MjMzNDA3MDA3","number":7408,"title":"Add node worker-thread support to jest-worker","user":{"login":"rickhanlonii","id":2440089,"node_id":"MDQ6VXNlcjI0NDAwODk=","avatar_url":"https://avatars.githubusercontent.com/u/2440089?v=4","gravatar_id":"","url":"https://api.github.com/users/rickhanlonii","html_url":"https://github.com/rickhanlonii","followers_url":"https://api.github.com/users/rickhanlonii/followers","following_url":"https://api.github.com/users/rickhanlonii/following{/other_user}","gists_url":"https://api.github.com/users/rickhanlonii/gists{/gist_id}","starred_url":"https://api.github.com/users/rickhanlonii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rickhanlonii/subscriptions","organizations_url":"https://api.github.com/users/rickhanlonii/orgs","repos_url":"https://api.github.com/users/rickhanlonii/repos","events_url":"https://api.github.com/users/rickhanlonii/events{/privacy}","received_events_url":"https://api.github.com/users/rickhanlonii/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-11-25T22:58:13Z","updated_at":"2021-05-12T05:14:21Z","closed_at":"2018-12-05T17:16:28Z","author_association":"MEMBER","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/7408","html_url":"https://github.com/facebook/jest/pull/7408","diff_url":"https://github.com/facebook/jest/pull/7408.diff","patch_url":"https://github.com/facebook/jest/pull/7408.patch","merged_at":"2018-12-05T17:16:28Z"},"body":"<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -->\r\n\r\n## Summary\r\n\r\n**This PR is a continuation of https://github.com/facebook/jest/pull/6676**\r\n\r\nNode 10 shipped with a \"threading API\" that uses SharedBuffers to communicate between the main process and its child threads. Being jest-worker a parallelization library, we can take advantage of this API when available. At the same time, we'll decouple our scheduling logic from our communication logic for better re-usability.\r\n\r\nHere are some key things:\r\n\r\n- Decouple the scheduling logic (i.e. everything that's not specifically to send and receive jobs)\r\n- Add the option to use \"threads\" into the library. If they are present, we'll favor them.\r\n\r\n## Test plan\r\nAdd unit and integration tests, near 100% coverage\r\n\r\nI also tried as much as possible to _move_ existing tests rather than writing new ones. In a few places where the refactoring broke the test irrecoverably I wrote new tests\r\n\r\n<img width=\"1677\" alt=\"screenshot 2018-11-25 22 29 33\" src=\"https://user-images.githubusercontent.com/2440089/48985771-62d32200-f103-11e8-91de-fab07991a7fd.png\">\r\n\r\n## Performance\r\n### Without experimental worker\r\n```bash\r\ntotal worker-farm: { wFGT: 3110, wFPT: 2947 }\r\ntotal jest-worker: { jWGT: 2958, jWPT: 2577 }\r\n---------------------------------------------------------------------------\r\n% improvement over 10000 calls (global time): 4.887459807073955\r\n% improvement over 10000 calls (processing time): 12.555140821174076\r\n```\r\n### With experimental worker\r\n\r\n```bash\r\n❯ node --experimental-worker --expose-gc test.js empty 10000\r\ntotal worker-farm: { wFGT: 3084, wFPT: 2913 }\r\ntotal jest-worker: { jWGT: 2070, jWPT: 1504 }\r\n---------------------------------------------------------------------------\r\n% improvement over 10000 calls (global time): 32.87937743190661\r\n% improvement over 10000 calls (processing time): 48.3693786474425\r\n```","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/7408/reactions","total_count":8,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":4,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/7408/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8153","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8153/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8153/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8153/events","html_url":"https://github.com/facebook/jest/pull/8153","id":422468581,"node_id":"MDExOlB1bGxSZXF1ZXN0MjYyMjUzNzE1","number":8153,"title":"Perf improvements - avoid persisting haste map / processing files when not changed.","user":{"login":"scotthovestadt","id":1831484,"node_id":"MDQ6VXNlcjE4MzE0ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/1831484?v=4","gravatar_id":"","url":"https://api.github.com/users/scotthovestadt","html_url":"https://github.com/scotthovestadt","followers_url":"https://api.github.com/users/scotthovestadt/followers","following_url":"https://api.github.com/users/scotthovestadt/following{/other_user}","gists_url":"https://api.github.com/users/scotthovestadt/gists{/gist_id}","starred_url":"https://api.github.com/users/scotthovestadt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scotthovestadt/subscriptions","organizations_url":"https://api.github.com/users/scotthovestadt/orgs","repos_url":"https://api.github.com/users/scotthovestadt/repos","events_url":"https://api.github.com/users/scotthovestadt/events{/privacy}","received_events_url":"https://api.github.com/users/scotthovestadt/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-03-18T22:48:17Z","updated_at":"2021-05-11T21:07:26Z","closed_at":"2019-03-19T16:47:58Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8153","html_url":"https://github.com/facebook/jest/pull/8153","diff_url":"https://github.com/facebook/jest/pull/8153.diff","patch_url":"https://github.com/facebook/jest/pull/8153.patch","merged_at":"2019-03-19T16:47:58Z"},"body":"## Summary\r\n\r\nAt Facebook, in a common situation where you've changed a couple of files in the largest haste map, this PR cuts off 25%~ of the startup time. In other less common situations where you've working on a smaller haste map, the improvement is 60%~.\r\n\r\nThe improvement is gained by:\r\n- Not re-serializing and writing the haste map to disk if it was loaded off of disk and then not changed.\r\n- Not re-creating from scratch the `map` and `mocks` part of the haste map on startup when we know what specific files were changed. Instead, just re-process only the specific changed files.\r\n\r\nI've benchmarked the startup time by:\r\n1. Setting up a single test\r\n2. Running once to prime the cache\r\n3. Changing a test file\r\n4. Running the test again with `--skipFilter` (measuring at this point via `time`)\r\n\r\nI've been a bit conservative and I'm just doing a full re-process when files were deleted (same as current behavior) but I may improve that. It's much less common to delete a file than to edit a file and I wanted to keep the code as simple as possible initially.\r\n\r\nIn cases where Watchman isn't being used or is freshly started, there is no difference.\r\n\r\nI'm always a little suspicious when something relatively simple yields such a large performance improvement, so please help by casting a very critical eye on this PR and all assumptions that I made.\r\n\r\n## Test plan\r\n\r\n- All tests pass.\r\n- Tested manually in multiple situations.\r\n- No change in behavior without watchman.\r\n- Manually verified the cache file is updated appropriately in a variety of situations.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8153/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/8448","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/8448/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/8448/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/8448/events","html_url":"https://github.com/facebook/jest/pull/8448","id":442411795,"node_id":"MDExOlB1bGxSZXF1ZXN0Mjc3NTMxMzI0","number":8448,"title":"expect: Highlight substring differences when matcher fails, part 1","user":{"login":"pedrottimark","id":11862657,"node_id":"MDQ6VXNlcjExODYyNjU3","avatar_url":"https://avatars.githubusercontent.com/u/11862657?v=4","gravatar_id":"","url":"https://api.github.com/users/pedrottimark","html_url":"https://github.com/pedrottimark","followers_url":"https://api.github.com/users/pedrottimark/followers","following_url":"https://api.github.com/users/pedrottimark/following{/other_user}","gists_url":"https://api.github.com/users/pedrottimark/gists{/gist_id}","starred_url":"https://api.github.com/users/pedrottimark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pedrottimark/subscriptions","organizations_url":"https://api.github.com/users/pedrottimark/orgs","repos_url":"https://api.github.com/users/pedrottimark/repos","events_url":"https://api.github.com/users/pedrottimark/events{/privacy}","received_events_url":"https://api.github.com/users/pedrottimark/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":18,"created_at":"2019-05-09T20:11:15Z","updated_at":"2021-05-11T18:13:25Z","closed_at":"2019-05-27T11:50:00Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/8448","html_url":"https://github.com/facebook/jest/pull/8448","diff_url":"https://github.com/facebook/jest/pull/8448.diff","patch_url":"https://github.com/facebook/jest/pull/8448.patch","merged_at":"2019-05-27T11:50:00Z"},"body":"## Summary\r\n\r\nFixes #6881 although space and no-break space still look the same\r\n\r\nIf positive assertion fails with **one-line** strings for both expected and received:\r\n\r\nThen if character difference with “semantic cleanup” has **any common** substring:\r\n\r\nDisplay changes similar to Changed Files on GitHub:\r\n\r\n* Expected: inverse green for deleted characters\r\n* Received: inverse red for inserted characters\r\n\r\nElse if **no common** substring, display without any inverse colors\r\n\r\n**Build**:\r\n\r\nEDIT: The following list is generally but not specifically true, because `printDiffOrStringify` moved to `jest-matcher-utils` package\r\n\r\n* `packages/expect/build-es5/index.js` is about 1M bytes, increased < 40K bytes\r\n* although I added `diff-sequences` dependency, it was already in `build-es5` bundle\r\n* added to `expect/tsconfig.json` see https://github.com/facebook/jest/pull/8448#issuecomment-491610188\r\n* ~~review of `packages/expect/src/cleanupSemantic.d.ts` is especially welcome~~\r\n* ~~see https://github.com/facebook/jest/pull/8448#issuecomment-491050415 about `packages/expect/build/cleanupSemantic.d.js`~~\r\n\r\n**License**:\r\n\r\nDoes anyone know if I have correctly handled code with Apache License, Version 2.0?\r\n\r\n* added comment describing changes to `cleanupSemantic.js`\r\n* added file to `.eslintignore` and `.prettierignore`\r\n* added file path as exception to `scripts/checkCopyrightHeaders.js`\r\n\r\n**Residue**:\r\n\r\n* Decide how to display results for **multi-line** strings (especially deleted or inserted newlines)\r\n* Discover whether long strings cause **performance** risk as had been for many lines\r\n* Apply to more changed strings (for example, property values) in future data-driven diff\r\n* Adapt for `toThrow(object)` which does not call the same helper function\r\n* Explore how to display results of failed **substring match** for `toContain`, `toMatch`, or `toThrow` [EDIT: and found its effectiveness to be disappointingly hit or miss]\r\n\r\n## Test plan\r\n\r\nEDIT: Updated a distantly related snapshot test, see see https://github.com/facebook/jest/pull/8448#issuecomment-495775132\r\n\r\nExisting tests pass, because they have no common substring with “semantic cleanup”\r\n\r\nAdded 1 snapshot each:\r\n\r\n* `toBe` and then added a second test for empty string, see https://github.com/facebook/jest/pull/8448#issuecomment-491844721\r\n* `toEqual`\r\n* `toHaveProperty(path, value)`\r\n* `toStrictEqual`\r\n\r\nSee also pictures in following comment","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/8448/reactions","total_count":3,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":2,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/8448/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/10902","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/10902/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/10902/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/10902/events","html_url":"https://github.com/facebook/jest/pull/10902","id":755397244,"node_id":"MDExOlB1bGxSZXF1ZXN0NTMxMTE0ODc0","number":10902,"title":"Add in-order scheduling policy","user":{"login":"MichaReiser","id":1203881,"node_id":"MDQ6VXNlcjEyMDM4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/1203881?v=4","gravatar_id":"","url":"https://api.github.com/users/MichaReiser","html_url":"https://github.com/MichaReiser","followers_url":"https://api.github.com/users/MichaReiser/followers","following_url":"https://api.github.com/users/MichaReiser/following{/other_user}","gists_url":"https://api.github.com/users/MichaReiser/gists{/gist_id}","starred_url":"https://api.github.com/users/MichaReiser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MichaReiser/subscriptions","organizations_url":"https://api.github.com/users/MichaReiser/orgs","repos_url":"https://api.github.com/users/MichaReiser/repos","events_url":"https://api.github.com/users/MichaReiser/events{/privacy}","received_events_url":"https://api.github.com/users/MichaReiser/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":{"login":"cpojer","id":13352,"node_id":"MDQ6VXNlcjEzMzUy","avatar_url":"https://avatars.githubusercontent.com/u/13352?v=4","gravatar_id":"","url":"https://api.github.com/users/cpojer","html_url":"https://github.com/cpojer","followers_url":"https://api.github.com/users/cpojer/followers","following_url":"https://api.github.com/users/cpojer/following{/other_user}","gists_url":"https://api.github.com/users/cpojer/gists{/gist_id}","starred_url":"https://api.github.com/users/cpojer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpojer/subscriptions","organizations_url":"https://api.github.com/users/cpojer/orgs","repos_url":"https://api.github.com/users/cpojer/repos","events_url":"https://api.github.com/users/cpojer/events{/privacy}","received_events_url":"https://api.github.com/users/cpojer/received_events","type":"User","site_admin":false},"assignees":[{"login":"cpojer","id":13352,"node_id":"MDQ6VXNlcjEzMzUy","avatar_url":"https://avatars.githubusercontent.com/u/13352?v=4","gravatar_id":"","url":"https://api.github.com/users/cpojer","html_url":"https://github.com/cpojer","followers_url":"https://api.github.com/users/cpojer/followers","following_url":"https://api.github.com/users/cpojer/following{/other_user}","gists_url":"https://api.github.com/users/cpojer/gists{/gist_id}","starred_url":"https://api.github.com/users/cpojer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cpojer/subscriptions","organizations_url":"https://api.github.com/users/cpojer/orgs","repos_url":"https://api.github.com/users/cpojer/repos","events_url":"https://api.github.com/users/cpojer/events{/privacy}","received_events_url":"https://api.github.com/users/cpojer/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2020-12-02T15:56:13Z","updated_at":"2021-05-10T22:07:11Z","closed_at":"2021-01-11T16:21:35Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/10902","html_url":"https://github.com/facebook/jest/pull/10902","diff_url":"https://github.com/facebook/jest/pull/10902.diff","patch_url":"https://github.com/facebook/jest/pull/10902.patch","merged_at":"2021-01-11T16:21:35Z"},"body":"## Summary\r\n\r\nThe jest worker implementation today uses round robin to load balance the work across workers if sticky workers aren't used.   \r\n\r\nThis is problematic if the result from the worker is in the critical path to create more work that can be scheduled on the threadpool. Metro, for example, uses the workers to transform the JavaScript files and extract its dependencies and then schedules the transformation of the dependencies. It's, therefore, critical that the first few  files are transformed as quick as possible to build up a queue with enough work to use all workers.\r\n\r\nThe problem with the use of round robin is that jest assigns each task to a new worker of which each pays the cost of requiring modules (if inline-requires are used) and JITing the hot paths which, in the case of Metro, is a serious overhead\r\nof a couple of seconds.\r\n\r\nThis diff adds the `in-order` scheduling policy and makes it configurable for clients (keeping round robin as the default). The first come policy assigns the task to the first free worker (starting with worker 0) or puts it in the queue of each worker to be picked up by the first available worker. \r\n\r\nWhy call it `workerSchedulingPolicy` and not just `schedulingPolicy`. My motivation is to make it clear that it does not affect the order in which tasks are scheduled, e.g. fifo vs lifo or a priority queue. A `taskSchedulingPolicy` might be something we want to add in the future. \r\n\r\nI tested this new scheduling with Metro:\r\n\r\n- transforming 2 changed files (B is a dependency of A):\r\n  Performance improved from 12.7s to 10.8s which is almost 2 seconds.\r\n  Main reason: Only one worker had to pay for the initialization cost\r\n- Full rebuild: No significant difference either way\r\n\r\n**Outdated**\r\nThe round robin implementation was added in #4921 by @mjesun but unfortunately without an in-detail explanation why it's superior. My understanding is that jest-worker is different from e.g. cluster that jest-worker knows how busy each worker is. A worker is either busy or idle. However, it then doesn't make a difference if all the work is performed by one worker or by different workers (assuming all are hot) as long as it uses the highest possible concurrency. This isn't true if sticky workers are used because they can then make use of  caches but sticky workers aren't affected by this change\r\n\r\n## Test plan\r\n\r\n### Empty\r\n\r\n**Round Robin**\r\n\r\n```\r\n---------------------------------------------------------------------------\r\ntotal worker-farm: { wFGT: 83718, wFPT: 83229 }\r\ntotal jest-worker: { jWGT: 29023, jWPT: 27983 }\r\n---------------------------------------------------------------------------\r\n% improvement over 100000 calls (global time): 65.33242552378222\r\n% improvement over 100000 calls (processing time): 66.3783056386596\r\n```\r\n\r\n**In Order**\r\n\r\n```\r\ntotal worker-farm: { wFGT: 83830, wFPT: 83278 }\r\ntotal jest-worker: { jWGT: 29008, jWPT: 27962 }\r\n---------------------------------------------------------------------------\r\n% improvement over 100000 calls (global time): 65.39663604914708\r\n% improvement over 100000 calls (processing time): 66.42330507456951\r\n```\r\n\r\n\r\n### Load\r\n\r\n**Round Robin**\r\n\r\n```\r\n\r\n---------------------------------------------------------------------------\r\ntotal worker-farm: { wFGT: 97859, wFPT: 97345 }\r\ntotal jest-worker: { jWGT: 57297, jWPT: 56187 }\r\n---------------------------------------------------------------------------\r\n% improvement over 100000 calls (global time): 41.44943234653941\r\n% improvement over 100000 calls (processing time): 42.280548564384404\r\n```\r\n\r\n**In Order**\r\n\r\n```\r\ntotal worker-farm: { wFGT: 97806, wFPT: 97286 }\r\ntotal jest-worker: { jWGT: 56403, jWPT: 55332 }\r\n---------------------------------------------------------------------------\r\n% improvement over 100000 calls (global time): 42.33175878780443\r\n% improvement over 100000 calls (processing time): 43.12439611043727\r\n```","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/10902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/10902/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/10131","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/10131/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/10131/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/10131/events","html_url":"https://github.com/facebook/jest/pull/10131","id":631605634,"node_id":"MDExOlB1bGxSZXF1ZXN0NDI4NDYwODM4","number":10131,"title":"Improve Jest startup time and test runtime, particularly when running with coverage, by caching micromatch and avoiding recreating RegExp instances","user":{"login":"lencioni","id":195534,"node_id":"MDQ6VXNlcjE5NTUzNA==","avatar_url":"https://avatars.githubusercontent.com/u/195534?v=4","gravatar_id":"","url":"https://api.github.com/users/lencioni","html_url":"https://github.com/lencioni","followers_url":"https://api.github.com/users/lencioni/followers","following_url":"https://api.github.com/users/lencioni/following{/other_user}","gists_url":"https://api.github.com/users/lencioni/gists{/gist_id}","starred_url":"https://api.github.com/users/lencioni/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lencioni/subscriptions","organizations_url":"https://api.github.com/users/lencioni/orgs","repos_url":"https://api.github.com/users/lencioni/repos","events_url":"https://api.github.com/users/lencioni/events{/privacy}","received_events_url":"https://api.github.com/users/lencioni/received_events","type":"User","site_admin":false},"labels":[{"id":847426897,"node_id":"MDU6TGFiZWw4NDc0MjY4OTc=","url":"https://api.github.com/repos/facebook/jest/labels/cla%20signed","name":"cla signed","color":"ededed","default":false,"description":null}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2020-06-05T13:48:01Z","updated_at":"2021-05-11T06:06:31Z","closed_at":"2020-06-23T11:10:13Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/10131","html_url":"https://github.com/facebook/jest/pull/10131","diff_url":"https://github.com/facebook/jest/pull/10131.diff","patch_url":"https://github.com/facebook/jest/pull/10131.patch","merged_at":"2020-06-23T11:10:12Z"},"body":"I was profiling some Jest runs at Airbnb and noticed that on my\r\nMacBook Pro, we can spend over 2 seconds at Jest startup time in\r\nSearchSource getTestPaths. I believe that this will grow as the size\r\nof the codebase increases.\r\n\r\nLooking at the call stacks, it appears to be calling micromatch\r\nrepeatedly, which calls picomatch, which builds a regex out of the\r\nglobs. It seems that the parsing and regex building also triggers the\r\ngarbage collector frequently.\r\n\r\nUpon testing, I noticed that the globs don't actually change between\r\nthese calls, so we can save a bunch of work by making a micromatch\r\nmatcher and reusing that function for all of the paths.\r\n\r\nmicromatch has some logic internally to handle lists of globs that\r\nmay include negated globs. A naive approach of just checking if it\r\nmatched any of the globs won't capture that, so I copied and\r\nsimplified the logic from within micromatch.\r\n\r\nhttps://github.com/micromatch/micromatch/blob/fe4858b0/index.js#L27-L77\r\n\r\nIn my profiling of this change locally, this brings down the time of\r\nstartRun from about 2000ms to about 200ms.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/195534/83883496-26757e80-a709-11ea-8521-2a71d27ca709.png)\r\n\r\nBefore, zoomed in:\r\n![image](https://user-images.githubusercontent.com/195534/83971126-26a78280-a89f-11ea-889e-80e925878e43.png)\r\n\r\n\r\nAfter:\r\n\r\n![image](https://user-images.githubusercontent.com/195534/83883541-37be8b00-a709-11ea-9ee6-f6fdccced6fd.png)\r\n\r\n---\r\n\r\n**Avoid recreating RegExp instances in regexToMatcher**\r\n\r\nAfter optimizing globsToMatcher, I noticed that there was still a\r\nlot of unnecessary overhead at Jest startup time spent recreating\r\nthe same RegExp instances repeatedly. Thankfully, we can be a little\r\nsmarter about this and create them all ahead of time and just reuse\r\nthem.\r\n\r\nOn top of my globsToMatcher optimization, this brings the speed of\r\nthe ArrayMap in startRun down from about 160ms to about 7ms.\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/195534/84039093-5ff6f580-a966-11ea-8eab-282994c45dd5.png)\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/195534/84039144-72712f00-a966-11ea-9f1f-b4d5e6a97acd.png)\r\n\r\n---\r\n\r\n**Optimize micromatch and RegExps in shouldInstrument**\r\n\r\nI've been profiling running Jest with code coverage at Airbnb, and\r\nnoticed that shouldInstrument is called often and is fairly\r\nexpensive. It also seems to call micromatch and `new RegExp`\r\nrepeatedly, both of which can be optimized by caching the work to\r\nconvert globs and strings into matchers and regexes.\r\n\r\nI profiled this change by running a set of 27 fairly simple tests.\r\nBefore this change, about 6-7 seconds was spent in shouldInstrument.\r\nAfter this change, only 400-500 ms is spent there. I would expect\r\nthis delta to increase along with the number of tests and size of\r\ntheir dependency graphs.\r\n\r\nA typical shouldInstrument call before this change:\r\n![image](https://user-images.githubusercontent.com/195534/84052508-48276d80-a976-11ea-8d6b-a8930d5a9e45.png)\r\n\r\nA typical shouldInstrument call after this change (most are actually too fast to even show up in the profiler now):\r\n![image](https://user-images.githubusercontent.com/195534/84052571-60978800-a976-11ea-800d-caf7d58d76fe.png)\r\n\r\n---\r\n\r\nI was profiling some Jest runs at Airbnb and noticed that on my\r\nMacBook Pro, we can spend over 30 seconds after running Jest with code\r\ncoverage as the coverage reporter adds all of the untested files. I\r\nbelieve that this will grow as the size of the codebase increases.\r\n\r\nLooking at the call stacks, it appears to be calling micromatch\r\nrepeatedly, which calls picomatch, which builds a regex out of the\r\nglobs. It seems that the parsing and regex building also triggers the\r\ngarbage collector frequently.\r\n\r\nSince this is in a tight loop and the globs won't change between\r\nchecks, we can greatly improve the performance here by using\r\nmicromatch.matcher.\r\n\r\nThis optimization reduces the block of time here from about 30s to\r\nabout 10s. The aggregated total time of coverage reporter's\r\nonRunComplete goes from 23s to 600ms.\r\n\r\nBefore:\r\n\r\n![image](https://user-images.githubusercontent.com/195534/83884747-fc24c080-a70a-11ea-8440-2c658b3dcce4.png)\r\n\r\nBefore, zoomed in:\r\n![image](https://user-images.githubusercontent.com/195534/84053653-d819e700-a977-11ea-9597-4b650f4c26cb.png)\r\n\r\n\r\n\r\nAfter:\r\n\r\n![image](https://user-images.githubusercontent.com/195534/83884781-08108280-a70b-11ea-9d63-5329fe726d31.png)\r\n\r\nAfter, zoomed in:\r\n![image](https://user-images.githubusercontent.com/195534/84053716-f08a0180-a977-11ea-8dee-167ddef18ff0.png)\r\n\r\n\r\n<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. The two fields below are mandatory. -->\r\n\r\n<!-- Please remember to update CHANGELOG.md in the root of the project if you have not done so. -->\r\n\r\n## Summary\r\n\r\n<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->\r\nMotivation: Improve slow Jest startup and runtime speed, particularly when running with coverage\r\n\r\n## Test plan\r\n\r\n<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes UI. -->\r\n\r\nI ran jest in the Airbnb frontend monorepo with and without coverage options, with a path argument.","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/10131/reactions","total_count":29,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":14,"rocket":15,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/10131/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/facebook/jest/issues/1944","repository_url":"https://api.github.com/repos/facebook/jest","labels_url":"https://api.github.com/repos/facebook/jest/issues/1944/labels{/name}","comments_url":"https://api.github.com/repos/facebook/jest/issues/1944/comments","events_url":"https://api.github.com/repos/facebook/jest/issues/1944/events","html_url":"https://github.com/facebook/jest/pull/1944","id":183606863,"node_id":"MDExOlB1bGxSZXF1ZXN0ODk3NTgyMjI=","number":1944,"title":"Update jsdom dependency","user":{"login":"acusti","id":517889,"node_id":"MDQ6VXNlcjUxNzg4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/517889?v=4","gravatar_id":"","url":"https://api.github.com/users/acusti","html_url":"https://github.com/acusti","followers_url":"https://api.github.com/users/acusti/followers","following_url":"https://api.github.com/users/acusti/following{/other_user}","gists_url":"https://api.github.com/users/acusti/gists{/gist_id}","starred_url":"https://api.github.com/users/acusti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acusti/subscriptions","organizations_url":"https://api.github.com/users/acusti/orgs","repos_url":"https://api.github.com/users/acusti/repos","events_url":"https://api.github.com/users/acusti/events{/privacy}","received_events_url":"https://api.github.com/users/acusti/received_events","type":"User","site_admin":false},"labels":[{"id":196857093,"node_id":"MDU6TGFiZWwxOTY4NTcwOTM=","url":"https://api.github.com/repos/facebook/jest/labels/CLA%20Signed%20:heavy_check_mark:","name":"CLA Signed :heavy_check_mark:","color":"009900","default":false,"description":""}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-10-18T07:11:48Z","updated_at":"2021-05-14T08:15:11Z","closed_at":"2016-10-18T07:49:25Z","author_association":"CONTRIBUTOR","active_lock_reason":"resolved","draft":false,"pull_request":{"url":"https://api.github.com/repos/facebook/jest/pulls/1944","html_url":"https://github.com/facebook/jest/pull/1944","diff_url":"https://github.com/facebook/jest/pull/1944.diff","patch_url":"https://github.com/facebook/jest/pull/1944.patch","merged_at":"2016-10-18T07:49:25Z"},"body":"**Summary**\n\nThe [releases](https://github.com/tmpvar/jsdom/blob/master/Changelog.md#980) since jsdom v9.5.0 include a fix for:\n\n> a performance regression introduced in 9.5.0 for modifying the DOM. It was particularly noticable during initial parsing of a document with many elements; for example, one test showed parsing ten thousand elements taking 36.4 seconds, whereas after this fix it is back to a more reasonable 0.4 seconds.\n\nIt also includes implementations for the `document.hasFocus()` API, proper `activeElement` focus behavior for iframes, some `file` interface fixes, plus a few other odds and ends. The iframe focus behavior fixes would avoid hacks in tests like [these ones](https://github.com/facebook/react/pull/7936#pullrequestreview-4373554), while the utility of the performance fix is obvious.\n\n**Test plan**\n\nRan the existing tests with the updated version of jsdom installed and all passed.\n\n![tests results](https://cloud.githubusercontent.com/assets/517889/19467478/4a43e0e4-94c6-11e6-8cb4-45bcbf1559de.png)\n\nAll the tests in `examples/` passed also:\n\n```\n> @ test-examples /Users/brandcast/Documents/Developing/jest\n> node scripts/test_examples.js\n\nTesting example: /Users/brandcast/Documents/Developing/jest/examples/async\n-> running: npm update cwd: /Users/brandcast/Documents/Developing/jest/examples/async\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nnpm WARN prefer global marked@0.3.6 should be installed with -g\n/Users/brandcast/Documents/Developing/jest/examples/async\n├── babel-jest@9.0.3\n├── babel-plugin-transform-async-to-generator@6.16.0\n├── babel-polyfill@6.16.0\n├── babel-preset-es2015@6.16.0\n└── jest-cli@16.0.1\n\nnpm WARN async No description\nnpm WARN async No repository field.\nnpm WARN async No license field.\n-> running: ln -sf /Users/brandcast/Documents/Developing/jest/packages/jest-cli/bin/jest.js ./node_modules/.bin/jest cwd: /Users/brandcast/Documents/Developing/jest/examples/async\n-> running: npm test cwd: /Users/brandcast/Documents/Developing/jest/examples/async\n\n> @ test /Users/brandcast/Documents/Developing/jest/examples/async\n> jest\n\n PASS  __tests__/user-test.js\n  ✓ works with promises (11ms)\n  ✓ works with async/await (2ms)\n  ✓ tests error with promises\n  ✓ tests error with async/await (1ms)\n\nTest Suites: 1 passed, 1 total\nTests:       4 passed, 4 total\nSnapshots:   0 total\nTime:        8.051s\nRan all test suites.\nTesting example: /Users/brandcast/Documents/Developing/jest/examples/enzyme\n-> running: npm update cwd: /Users/brandcast/Documents/Developing/jest/examples/enzyme\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nnpm WARN prefer global marked@0.3.6 should be installed with -g\n/Users/brandcast/Documents/Developing/jest/examples/enzyme\n├── babel-jest@16.0.0\n├── babel-polyfill@6.16.0\n├── babel-preset-es2015@6.16.0\n├── babel-preset-react@6.16.0\n├── enzyme@2.4.1\n├── jest-cli@16.0.1\n├── react@15.3.2\n├── react-addons-test-utils@15.3.2\n└── react-dom@15.3.2\n\nnpm WARN enzyme No description\nnpm WARN enzyme No repository field.\nnpm WARN enzyme No license field.\n-> running: ln -sf /Users/brandcast/Documents/Developing/jest/packages/jest-cli/bin/jest.js ./node_modules/.bin/jest cwd: /Users/brandcast/Documents/Developing/jest/examples/enzyme\n-> running: npm test cwd: /Users/brandcast/Documents/Developing/jest/examples/enzyme\n\n> @ test /Users/brandcast/Documents/Developing/jest/examples/enzyme\n> jest\n\n PASS  __tests__/CheckboxWithLabel-test.js (7.251s)\n  ✓ CheckboxWithLabel changes the text after click (36ms)\n\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        11.309s\nRan all test suites.\nTesting example: /Users/brandcast/Documents/Developing/jest/examples/getting_started\n-> running: npm update cwd: /Users/brandcast/Documents/Developing/jest/examples/getting_started\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nnpm WARN prefer global marked@0.3.6 should be installed with -g\n/Users/brandcast/Documents/Developing/jest/examples/getting_started\n└── jest-cli@16.0.1\n\nnpm WARN getting_started No description\nnpm WARN getting_started No repository field.\nnpm WARN getting_started No license field.\n-> running: ln -sf /Users/brandcast/Documents/Developing/jest/packages/jest-cli/bin/jest.js ./node_modules/.bin/jest cwd: /Users/brandcast/Documents/Developing/jest/examples/getting_started\n-> running: npm test cwd: /Users/brandcast/Documents/Developing/jest/examples/getting_started\n\n> @ test /Users/brandcast/Documents/Developing/jest/examples/getting_started\n> jest\n\n PASS  __tests__/sum-test.js\n  ✓ adds 1 + 2 to equal 3 (19ms)\n\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        6.24s\nRan all test suites.\nTesting example: /Users/brandcast/Documents/Developing/jest/examples/jquery\n-> running: npm update cwd: /Users/brandcast/Documents/Developing/jest/examples/jquery\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nnpm WARN prefer global marked@0.3.6 should be installed with -g\n/Users/brandcast/Documents/Developing/jest/examples/jquery\n├── jest-cli@16.0.1\n└── jquery@3.1.1\n\nnpm WARN jquery No description\nnpm WARN jquery No repository field.\nnpm WARN jquery No license field.\n-> running: ln -sf /Users/brandcast/Documents/Developing/jest/packages/jest-cli/bin/jest.js ./node_modules/.bin/jest cwd: /Users/brandcast/Documents/Developing/jest/examples/jquery\n-> running: npm test cwd: /Users/brandcast/Documents/Developing/jest/examples/jquery\n\n> @ test /Users/brandcast/Documents/Developing/jest/examples/jquery\n> jest\n\n PASS  __tests__/fetchCurrentUser-test.js\n PASS  __tests__/displayUser-test.js\n\nTest Suites: 2 passed, 2 total\nTests:       3 passed, 3 total\nSnapshots:   0 total\nTime:        6.207s\nRan all test suites.\nTesting example: /Users/brandcast/Documents/Developing/jest/examples/manual_mocks\n-> running: npm update cwd: /Users/brandcast/Documents/Developing/jest/examples/manual_mocks\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nnpm WARN prefer global marked@0.3.6 should be installed with -g\n/Users/brandcast/Documents/Developing/jest/examples/manual_mocks\n└── jest-cli@16.0.1\n\nnpm WARN manual_mocks No description\nnpm WARN manual_mocks No repository field.\nnpm WARN manual_mocks No license field.\n-> running: ln -sf /Users/brandcast/Documents/Developing/jest/packages/jest-cli/bin/jest.js ./node_modules/.bin/jest cwd: /Users/brandcast/Documents/Developing/jest/examples/manual_mocks\n-> running: npm test cwd: /Users/brandcast/Documents/Developing/jest/examples/manual_mocks\n\n> @ test /Users/brandcast/Documents/Developing/jest/examples/manual_mocks\n> jest\n\n PASS  __tests__/FileSummarizer-test.js\n  listFilesInDirectorySync\n    ✓ includes all files in the directory in the summary (95ms)\n\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        5.78s\nRan all test suites.\nTesting example: /Users/brandcast/Documents/Developing/jest/examples/react\n-> running: npm update cwd: /Users/brandcast/Documents/Developing/jest/examples/react\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nnpm WARN prefer global marked@0.3.6 should be installed with -g\n/Users/brandcast/Documents/Developing/jest/examples/react\n├── babel-jest@16.0.0\n├── babel-polyfill@6.16.0\n├── babel-preset-es2015@6.16.0\n├── babel-preset-react@6.16.0\n├── jest-cli@16.0.1\n├── react@15.3.2\n├── react-addons-test-utils@15.3.2\n└── react-dom@15.3.2\n\nnpm WARN react No description\nnpm WARN react No repository field.\nnpm WARN react No license field.\n-> running: ln -sf /Users/brandcast/Documents/Developing/jest/packages/jest-cli/bin/jest.js ./node_modules/.bin/jest cwd: /Users/brandcast/Documents/Developing/jest/examples/react\n-> running: npm test cwd: /Users/brandcast/Documents/Developing/jest/examples/react\n\n> @ test /Users/brandcast/Documents/Developing/jest/examples/react\n> jest\n\n PASS  __tests__/CheckboxWithLabel-test.js\n  ✓ CheckboxWithLabel changes the text after click (50ms)\n\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        8.465s\nRan all test suites.\nTesting example: /Users/brandcast/Documents/Developing/jest/examples/react-native\n-> running: npm update cwd: /Users/brandcast/Documents/Developing/jest/examples/react-native\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nnpm WARN deprecated cross-spawn-async@2.2.4: cross-spawn no longer requires a build toolchain, use it instead!\nnpm WARN prefer global marked@0.3.6 should be installed with -g\n\n> spawn-sync@1.0.15 postinstall /Users/brandcast/Documents/Developing/jest/examples/react-native/node_modules/spawn-sync\n> node postinstall\n\njest-rn@1.0.0 /Users/brandcast/Documents/Developing/jest/examples/react-native\n├── babel-jest@16.0.0\n├── babel-preset-react-native@1.9.0\n├── jest-cli@16.0.1\n├── jest-react-native@16.0.0\n├── UNMET PEER DEPENDENCY react@15.3.0\n├── react-native@0.32.0\n└── react-test-renderer@15.3.2\n\nnpm WARN react-test-renderer@15.3.2 requires a peer of react@^15.3.2 but none was installed.\nnpm WARN jest-rn@1.0.0 No description\nnpm WARN jest-rn@1.0.0 No repository field.\nnpm WARN jest-rn@1.0.0 No license field.\n-> running: ln -s /Users/brandcast/Documents/Developing/jest/packages/jest-react-native ./node_modules/ cwd: /Users/brandcast/Documents/Developing/jest/examples/react-native\n-> running: ln -sf /Users/brandcast/Documents/Developing/jest/packages/jest-cli/bin/jest.js ./node_modules/.bin/jest cwd: /Users/brandcast/Documents/Developing/jest/examples/react-native\n-> running: npm test cwd: /Users/brandcast/Documents/Developing/jest/examples/react-native\n\n> jest-rn@1.0.0 test /Users/brandcast/Documents/Developing/jest/examples/react-native\n> jest\n\n PASS  __tests__/Intro-test.js (5.662s)\n  ✓ renders correctly (1023ms)\n  ✓ renders the ActivityIndicator component (30ms)\n  ✓ renders the Image component (53ms)\n  ✓ renders the TextInput component (466ms)\n  ✓ renders the ListView component (610ms)\n\nTest Suites: 1 passed, 1 total\nTests:       5 passed, 5 total\nSnapshots:   5 passed, 5 total\nTime:        10.42s\nRan all test suites.\nTesting example: /Users/brandcast/Documents/Developing/jest/examples/snapshot\n-> running: npm update cwd: /Users/brandcast/Documents/Developing/jest/examples/snapshot\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nnpm WARN prefer global marked@0.3.6 should be installed with -g\n/Users/brandcast/Documents/Developing/jest/examples/snapshot\n├── babel-jest@16.0.0\n├── babel-polyfill@6.16.0\n├── babel-preset-es2015@6.16.0\n├── babel-preset-react@6.16.0\n├── jest-cli@16.0.1\n├── UNMET PEER DEPENDENCY react@15.3.0\n└── react-test-renderer@15.3.2\n\nnpm WARN react-test-renderer@15.3.2 requires a peer of react@^15.3.2 but none was installed.\nnpm WARN snapshot No description\nnpm WARN snapshot No repository field.\nnpm WARN snapshot No license field.\n-> running: ln -sf /Users/brandcast/Documents/Developing/jest/packages/jest-cli/bin/jest.js ./node_modules/.bin/jest cwd: /Users/brandcast/Documents/Developing/jest/examples/snapshot\n-> running: npm test cwd: /Users/brandcast/Documents/Developing/jest/examples/snapshot\n\n> @ test /Users/brandcast/Documents/Developing/jest/examples/snapshot\n> jest\n\n PASS  __tests__/Link.react-test.js\n  ✓ renders correctly (27ms)\n  ✓ renders as an anchor when no page is set (7ms)\n  ✓ properly escapes quotes (2ms)\n  ✓ changes the class when hovered (9ms)\n\nTest Suites: 1 passed, 1 total\nTests:       4 passed, 4 total\nSnapshots:   6 passed, 6 total\nTime:        5.4s\nRan all test suites.\nTesting example: /Users/brandcast/Documents/Developing/jest/examples/timer\n-> running: npm update cwd: /Users/brandcast/Documents/Developing/jest/examples/timer\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nnpm WARN prefer global marked@0.3.6 should be installed with -g\n/Users/brandcast/Documents/Developing/jest/examples/timer\n└── jest-cli@16.0.1\n\nnpm WARN timer No description\nnpm WARN timer No repository field.\nnpm WARN timer No license field.\n-> running: ln -sf /Users/brandcast/Documents/Developing/jest/packages/jest-cli/bin/jest.js ./node_modules/.bin/jest cwd: /Users/brandcast/Documents/Developing/jest/examples/timer\n-> running: npm test cwd: /Users/brandcast/Documents/Developing/jest/examples/timer\n\n> @ test /Users/brandcast/Documents/Developing/jest/examples/timer\n> jest\n\n PASS  __tests__/timerGame-test.js\n  ● Console\n\n    console.log timerGame.js:6\n      Ready....go!\n    console.log timerGame.js:6\n      Ready....go!\n    console.log timerGame.js:8\n      Times up -- stop!\n    console.log timerGame.js:8\n      Times up -- stop!\n    console.log timerGame.js:6\n      Ready....go!\n    console.log timerGame.js:8\n      Times up -- stop!\n\n PASS  __tests__/infiniteTimerGame-test.js\n  ● Console\n\n    console.log infiniteTimerGame.js:6\n      Ready....go!\n    console.log infiniteTimerGame.js:9\n      Times up! 10 seconds before the next game starts...\n\n\nTest Suites: 2 passed, 2 total\nTests:       4 passed, 4 total\nSnapshots:   0 total\nTime:        5.954s\nRan all test suites.\nTesting example: /Users/brandcast/Documents/Developing/jest/examples/typescript\n-> running: npm update cwd: /Users/brandcast/Documents/Developing/jest/examples/typescript\nnpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue\nnpm WARN prefer global marked@0.3.6 should be installed with -g\n/Users/brandcast/Documents/Developing/jest/examples/typescript\n├── jest-cli@16.0.1\n├── react@15.3.2\n├── react-addons-test-utils@15.3.2\n├── react-dom@15.3.2\n└── typescript@2.0.3\n\nnpm WARN typescript No description\nnpm WARN typescript No repository field.\nnpm WARN typescript No license field.\n-> running: ln -sf /Users/brandcast/Documents/Developing/jest/packages/jest-cli/bin/jest.js ./node_modules/.bin/jest cwd: /Users/brandcast/Documents/Developing/jest/examples/typescript\n-> running: npm test cwd: /Users/brandcast/Documents/Developing/jest/examples/typescript\n\n> @ test /Users/brandcast/Documents/Developing/jest/examples/typescript\n> jest\n\n PASS  __tests__/CheckboxWithLabel-test.tsx\n PASS  __tests__/sum-test.js\n PASS  __tests__/sum-test.ts\n PASS  __tests__/sub-test.ts\n\nTest Suites: 4 passed, 4 total\nTests:       6 passed, 6 total\nSnapshots:   0 total\nTime:        1.872s\nRan all test suites.\n```\n","reactions":{"url":"https://api.github.com/repos/facebook/jest/issues/1944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/facebook/jest/issues/1944/timeline","performed_via_github_app":null,"state_reason":null,"score":1}]