[{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/52523","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/52523/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/52523/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/52523/events","html_url":"https://github.com/microsoft/TypeScript/pull/52523","id":1563315426,"node_id":"PR_kwDOAT9aAc5I3I9n","number":52523,"title":"Restore global `onProfilerEvent` hook for ts-perf","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"assignees":[{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2023-01-30T22:32:22Z","updated_at":"2023-01-31T03:23:31Z","closed_at":"2023-01-31T03:23:29Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/52523","html_url":"https://github.com/microsoft/TypeScript/pull/52523","diff_url":"https://github.com/microsoft/TypeScript/pull/52523.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/52523.patch","merged_at":"2023-01-31T03:23:29Z"},"body":"This was previously used by our perf tooling to generate point-in-time heap snapshots, but was lost during one of the many refactors of the `ts.performance` API.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/52523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/52523/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/51387","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/51387/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/51387/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/51387/events","html_url":"https://github.com/microsoft/TypeScript/pull/51387","id":1433500309,"node_id":"PR_kwDOAT9aAc5CE3d7","number":51387,"title":"Convert the codebase to modules","user":{"login":"jakebailey","id":5341706,"node_id":"MDQ6VXNlcjUzNDE3MDY=","avatar_url":"https://avatars.githubusercontent.com/u/5341706?v=4","gravatar_id":"","url":"https://api.github.com/users/jakebailey","html_url":"https://github.com/jakebailey","followers_url":"https://api.github.com/users/jakebailey/followers","following_url":"https://api.github.com/users/jakebailey/following{/other_user}","gists_url":"https://api.github.com/users/jakebailey/gists{/gist_id}","starred_url":"https://api.github.com/users/jakebailey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakebailey/subscriptions","organizations_url":"https://api.github.com/users/jakebailey/orgs","repos_url":"https://api.github.com/users/jakebailey/repos","events_url":"https://api.github.com/users/jakebailey/events{/privacy}","received_events_url":"https://api.github.com/users/jakebailey/received_events","type":"User","site_admin":false},"labels":[{"id":114834677,"node_id":"MDU6TGFiZWwxMTQ4MzQ2Nzc=","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Breaking%20Change","name":"Breaking Change","color":"eb6420","default":false,"description":"Would introduce errors in existing code"},{"id":172956911,"node_id":"MDU6TGFiZWwxNzI5NTY5MTE=","url":"https://api.github.com/repos/microsoft/TypeScript/labels/API","name":"API","color":"bfe5bf","default":false,"description":"Relates to the public API for TypeScript"},{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"jakebailey","id":5341706,"node_id":"MDQ6VXNlcjUzNDE3MDY=","avatar_url":"https://avatars.githubusercontent.com/u/5341706?v=4","gravatar_id":"","url":"https://api.github.com/users/jakebailey","html_url":"https://github.com/jakebailey","followers_url":"https://api.github.com/users/jakebailey/followers","following_url":"https://api.github.com/users/jakebailey/following{/other_user}","gists_url":"https://api.github.com/users/jakebailey/gists{/gist_id}","starred_url":"https://api.github.com/users/jakebailey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakebailey/subscriptions","organizations_url":"https://api.github.com/users/jakebailey/orgs","repos_url":"https://api.github.com/users/jakebailey/repos","events_url":"https://api.github.com/users/jakebailey/events{/privacy}","received_events_url":"https://api.github.com/users/jakebailey/received_events","type":"User","site_admin":false},"assignees":[{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},{"login":"jakebailey","id":5341706,"node_id":"MDQ6VXNlcjUzNDE3MDY=","avatar_url":"https://avatars.githubusercontent.com/u/5341706?v=4","gravatar_id":"","url":"https://api.github.com/users/jakebailey","html_url":"https://github.com/jakebailey","followers_url":"https://api.github.com/users/jakebailey/followers","following_url":"https://api.github.com/users/jakebailey/following{/other_user}","gists_url":"https://api.github.com/users/jakebailey/gists{/gist_id}","starred_url":"https://api.github.com/users/jakebailey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakebailey/subscriptions","organizations_url":"https://api.github.com/users/jakebailey/orgs","repos_url":"https://api.github.com/users/jakebailey/repos","events_url":"https://api.github.com/users/jakebailey/events{/privacy}","received_events_url":"https://api.github.com/users/jakebailey/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/microsoft/TypeScript/milestones/175","html_url":"https://github.com/microsoft/TypeScript/milestone/175","labels_url":"https://api.github.com/repos/microsoft/TypeScript/milestones/175/labels","id":8543366,"node_id":"MI_kwDOAT9aAc4AglyG","number":175,"title":"TypeScript 5.0.0","description":"","creator":{"login":"RyanCavanaugh","id":6685088,"node_id":"MDQ6VXNlcjY2ODUwODg=","avatar_url":"https://avatars.githubusercontent.com/u/6685088?v=4","gravatar_id":"","url":"https://api.github.com/users/RyanCavanaugh","html_url":"https://github.com/RyanCavanaugh","followers_url":"https://api.github.com/users/RyanCavanaugh/followers","following_url":"https://api.github.com/users/RyanCavanaugh/following{/other_user}","gists_url":"https://api.github.com/users/RyanCavanaugh/gists{/gist_id}","starred_url":"https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RyanCavanaugh/subscriptions","organizations_url":"https://api.github.com/users/RyanCavanaugh/orgs","repos_url":"https://api.github.com/users/RyanCavanaugh/repos","events_url":"https://api.github.com/users/RyanCavanaugh/events{/privacy}","received_events_url":"https://api.github.com/users/RyanCavanaugh/received_events","type":"User","site_admin":false},"open_issues":9,"closed_issues":73,"state":"open","created_at":"2022-10-14T20:06:08Z","updated_at":"2023-02-06T18:39:04Z","due_on":null,"closed_at":null},"comments":53,"created_at":"2022-11-02T17:09:33Z","updated_at":"2023-01-26T17:41:57Z","closed_at":"2022-11-07T21:57:46Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/51387","html_url":"https://github.com/microsoft/TypeScript/pull/51387","diff_url":"https://github.com/microsoft/TypeScript/pull/51387.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/51387.patch","merged_at":"2022-11-07T21:57:46Z"},"body":"This is it; the PR that converts the TypeScript repo from namespaces to modules.\r\n\r\n## TL;DR: The TypeScript compiler is now implemented internally with modules, not namespaces. The compiler is now _10-25% faster_. `tsc` is now _30% faster_ to start. Our npm package is now _43% smaller_. More improvements are in the works.\r\n\r\n## If you're reading this and the 5.0 beta is out, now that the above results were as of this PR; the final performance change of TS 5.0 is different!\r\n\r\n<!-- dprint-ignore-start -->\r\n\r\nCloses #35210\r\nCloses #39247\r\nCloses #49037\r\nCloses #49332\r\nCloses #50758\r\nFor #27891\r\nFor #32949\r\nFor #34617\r\n\r\n<!-- dprint-ignore-end -->\r\n\r\nFor those who are looking at the diff and wondering how they can see what this PR _actually does_, consider looking at each commit, or look at my silly stacked PR gerrit-clone thing at https://github.com/jakebailey/TypeScript/pull/1 (which I will try to keep up to date).\r\n\r\nWant to try this out now? Set this in your `package.json`:\r\n\r\n```\r\n\"typescript\": \"npm:@typescript-deploys/pr-build@5.0.0-pr-51387-49\"\r\n```\r\n\r\n(Or, wait until the next nightly after this is merged.)\r\n\r\n# How?\r\n\r\nThe bulk of the work to convert the repo to modules is done via automation, followed by a load of changes by hand to completely restructure our build system. To see the conversion process, take a look at the commits in this PR, each of which come with their own descriptive commit message.\r\n\r\nIn short, the [typeformer](https://github.com/jakebailey/typeformer) project recreates our old namespaces as \"barrel\" modules, reexporting each file from the barrel module corresponding to its original namespace. Symbols which previously were available \"globally\" via namespaces are now imported in big import blocks at the top of each file, in such a way that the final code looks nearly identical to the input (but unindented one level).\r\n\r\nThis, with a little hand modification, gets us to a place where we can emit CJS and have everything working.\r\n\r\nHowever, this turns out to incur a big performance penalty; our old TS namespaces were just objects, but CJS imports/exports are more expensive than plain objects. Additionally, many consumers currently expect to be able to load TS as a single file, and that same file must be usable in Node and the browser. Unless we wanted to change that expectation and break the world, we needed to bundle.\r\n\r\nAs an experiment while working on this conversion, I tried simply running [esbuild](https://github.com/evanw/esbuild) on our source files directly; with a little more tweaking, I was able to produce a working output for our codebase. Unexpectedly, this also brought major performance wins in our benchmarks (see the next section). Those performance benefits (and speedy build times) were too good to pass up, and so, our main JS outputs are now produced by esbuild.\r\n\r\nTo mitigate the risk of not using `tsc`'s output, I have created a `--bundle=false` mode for our build. This mode uses `tsc` to emit CJS, producing modules matching `src` 1:1. This is tested in CI so we can reliably switch back to `tsc`'s CJS emit if needed. The new build is also constructed such that it'd be easy to transition to running a bundler on `tsc`'s ESM emit (rather than directly on `src`).\r\n\r\nSince our outputs are bundled, we needed a way to \"bundle\" our d.ts files too. To handle this, I wrote a small-ish (400 line) d.ts bundler that can serve our needs. This bundler is \"dumb\" and cannot handle cases that a more widely-usable bundler (like api-extractor) should, e.g. properly renaming types with the same name but declared in separate files or avoiding aliasing globals, which are cases that we can avoid or ignore, respectively.\r\n\r\n# Benefits for users of TypeScript\r\n\r\nFirstly, the performance of the compiler has increased by [anywhere from _10 to 25%_](https://github.com/microsoft/TypeScript/issues/49332#issuecomment-1247413421). This largely thanks to scope lifting. TypeScript namespaces are emitted as a series of IIFEs which push properties onto a single object. Non-local accesses to exports of that namespace are implicitly fully qualified, incurring the overhead of an object access. With modules, all of our internal helpers have been lifted to the top and are available for direct calls.\r\n\r\n<!-- TODO(jakebailey): Update this number before posting -->\r\n\r\nSecondly, our package is now _~43% smaller_ (from 63.6 MB down to 35.6 MB). This is due in part to dropping some redundant files from our package, including `typescriptServices.js`, which was identical to `typescript.js` (see the breaking changes section below), a change in the indentation used in our bundle files (4 spaces -> 2 spaces), plus a large amount of tree shaking in `tsc.js` and `typingsInstaller.js`. TypeScript 4.9 was made smaller by 2 MB already (thanks to #50421), so this is excellent progress.\r\n\r\nFinally, as a result of both of the previous performance improvements (faster code and less of it), `tsc.js` is _30% faster_ to start and `typescript.js` (our public API) is _10% faster_ to import. As we improve performance and code size, these numbers are likely to improve. We now include these metrics in our benchmarks to track over time and in relevant PRs.\r\n\r\n# Benefits for the TypeScript team (and contributors)\r\n\r\nFor those who work on TypeScript itself, this change comes with a number of important benefits.\r\n\r\nNow that we are modules, we are dogfooding the module experience. Effectively everyone is using modules and has been for a long time, but we've been using namespaces. This left us unable to experience things like auto-imports, giant import blocks, etc, ourselves. (During testing of this PR, we found multiple interesting auto-import and quick fix bugs; win!)\r\n\r\nBeing modules also provides us the ability to start integrating excellent external tooling into our build process. As previously mentioned, our JS outputs are now produced by esbuild. This lets us start running tests in seconds (or less), representing a significant shortening of the develop/test/debug loop.[^build-time] Of course, this is potentially limiting; if we need new syntax features that aren't yet implemented in esbuild, we can switch to bundling the ESM output of `tsc` instead, restoring the status quo.\r\n\r\n[^build-time]: Specifically, the time it takes to to run the \"local\" build task (everything but tests) has been reduced from ~30s to ~20s on my machine. When changing the checker, the build time has been reduced from ~18s to ~14 seconds. When changing nothing, the build time has been reduced from 1.3s to 0.7s.\r\n\r\nAdditionally, since I had to change the entire build process to support this conversion, it's a great time to make build changes that would normally be difficult during our typical dev cycle. This includes replacing our task runner with a lightweight alternative (we don't need too much fanciness anymore), rewriting/deleting a number of scripts, and removing/replacing outdated dependencies. After this change, our `npm audit` is clean and our dev dependency count has been halved.\r\n\r\n# No, we're not yet shipping ESM\r\n\r\nThis PR _**does not**_ convert the TypeScript package to ESM (#32949). The package still consists of a handful of un-tree-shakeable large files (though there are now fewer of them, and they are smaller). Allowing TypeScript to be packaged as ESM is a further challenge that will build on this change, but for this PR, the goal is to convert the repo's _source_ files to modules without causing major breaks for downstream users. (For the future, see the \"future\" section below.)\r\n\r\n# Breaking changes\r\n\r\nThis conversion introduces a number of breaking changes for consumers of the TypeScript package; those using `tsc` or the language service in their editor should see no changes (besides improved performance and smaller install sizes).\r\n\r\n- `typescriptServices.js` has been removed; this file was identical to `typescript.js`, the entrypoint for our npm package.\r\n- `protocol.d.ts` is no longer included in the package; use `tsserverlibrary.d.ts`'s `ts.server.protocol` namespace instead.\r\n  - Some elements of the protocol are not actually exported by the `ts.server.protocol` namespace, but were emitted in the old `protocol.d.ts` file, and may need to be accessed off of the `ts` namespace instead. See https://github.com/microsoft/vscode/pull/163365 for an potential way to minimize changes to protocol-using codebases.\r\n- The output files have changed significantly; if you are patching TypeScript, you will definitely need to change your patches.\r\n  - Since I know prettier post-processes our package to extract _just enough_ of the codebase to parse code, I have created a [proof-of-concept](https://github.com/jakebailey/prettier-style-ts-tree-shaking) that can be expanded on to achieve a similar result with the new 5.0 output by using a tool like terser or rollup to tree-shake inside of the library itself. In the future, we may be able to improve this situation by restructuring our codebase in a way that allows us to export just the parser (#34617). cc @fisker\r\n- The TypeScript package now targets ES2018. Prior to 5.0, our package targeted ES5 syntax and the ES2015 library, however, esbuild has a hard minimum syntax target of ES2015 (aka ES6). ES2018 was chosen as a balance between compatibility with older environments and access to more modern syntax and library features.[^es2018]\r\n  - If you are looking to run the TypeScript compiler itself in an environment older than ES2018, you will need to downlevel our package's syntax and potentially polyfill the environment. (This may have already been the case; we don't test the TypeScript compiler on EOL versions of Node in CI and we're aware of a handful of cases where we were already using helpers outside our target range unconditionally.)\r\n\r\n[^es2018]: ES2018 is the ECMAScript version implemented by Node 10. We could have bumped to ES2019 (Node 12), but this would only give us optional catch binding; we already conditionally use newer library features like `trimStart` / `trimEnd`. We could have also bumped up to ES2020 (Node 14, though, see #46325), which would give us native nullish coalescing and optional chaining, but it seemed like too big of a jump to drop Node 12, even if it is end-of-life and untested in our CI.\r\n\r\n# The future?\r\n\r\nThe module conversion opens the door to many future improvements.\r\n\r\nOur codebase is massively circular thanks to how easy it was to introduce cycles with namespaces. Namespace emit ordering was controlled by `tsconfig.json`, which allowed us to structure things \"just right\" and not crash, but things aren't so straightforward in modules. The modules themselves define their execution order, and the current state is one that works (even if the use of \"namespace barrels\" is suboptimal). But, this shouldn't be permanent; now that we are modules and it's not costly to introduce new files into the mix, we can start restructuring the codebase and unraveling our import cycles. In an ESM future, breaking these cycles may lead to improved tree shaking for those who bundle TypeScript into their codebases.\r\n\r\nIn terms of performance, a small number of namespaces remain in the codebase (`Debug`, `Parser`, others) which would benefit from being converted to modules to allow for direct calls. We also lost some performance in our parser due to `let`/`const` (disproportionally so; the other parts of the compiler were only slightly affected but had much larger net wins). We may be able to restructure the parser to avoid the temporal dead zone performance cost.[^letconst]\r\n\r\n[^letconst]: In an earlier revision of this stack, I used babel to downlevel `let`/`const` to `var` after bundling. This increased performance as expected, but we decided to not add this step; in the ESM future, we wouldn't want to end up with all of our `export const` declarations turning into `export var`, and avoiding the transformation simplifies the build and improves the debugging experience when loops are involved. If we change our minds, this is easy to reimplement, albeit slow.\r\n\r\nIn terms of code size, may even be able to do some amount of ESM emit _now_. A few of our bundles are not for import, only for execution (`tsc`, `tsserver`, `typingsInstaller`). If we are willing to drop versions of Node before ESM (Node <12), we can drop another 7 MB from our package by using esbuild's ESM code splitting for those bundles.\r\n\r\nIn the process of making bundling work, I fixed `monaco` to [no longer depend](https://github.com/microsoft/monaco-editor/pull/3356) on the source-level structure of our package. This means that we could potentially start minifying our codebase, reducing the package size significantly. This is not without gotchas, of course; we know that there are downstream users who patch our package post-install, which is much more difficult when the output isn't predictably formatted (or effectively impossible using \"patch\" when minified).\r\n\r\n# On the shoulders of giants\r\n\r\nI have many people to thank:\r\n\r\n- @weswigham and @elibarzilay, who authored the previous versions of the typeformer project. They did most of the hard work in conceptualizing how this could be possible and providing a base set of transforms to get it done.\r\n- @dsherret, for the excellent [ts-morph](https://github.com/dsherret/ts-morph), with which I rewrote the typeformer project for excellent TS-to-TS source modification fidelity.\r\n- @evanw, for the excellent [esbuild](https://github.com/evanw/esbuild), which gives us speedy build times and an output that is faster for our users.\r\n- Everyone on the team who tested this PR out early and helped iron out the bugs. This PR touches effectively every line of code in the project; testing is key!\r\n\r\n---\r\n\r\nPR notes:\r\n\r\n- This PR _**MUST**_ be merged via a merge commit. Squashing will break `.git-blame-ignore-revs` as it references specific commits in the PR that `git blame` should ignore; I want to ignore only the automated steps in this PR. I have attempted to make this PR as few commits as possible while still making sense.\r\n- The breaking changes listed above need to be added to the wiki (without all of my exposition).\r\n- Until the point at which we are ready to merge this, expect this PR to either have conflicts. The nature of this transformation means that any change to `src` in `main` will cause this PR to have conflicts, and the only way to fix that is to rerun the entire transformation from scratch and force push.\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/51387/reactions","total_count":1245,"+1":430,"-1":0,"laugh":22,"hooray":284,"confused":0,"heart":227,"rocket":245,"eyes":37},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/51387/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/51682","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/51682/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/51682/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/51682/events","html_url":"https://github.com/microsoft/TypeScript/pull/51682","id":1468433878,"node_id":"PR_kwDOAT9aAc5D6Fwd","number":51682,"title":"Reduce polymorphism resulting from unstable Node shapes","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"assignees":[{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false}],"milestone":null,"comments":19,"created_at":"2022-11-29T17:18:48Z","updated_at":"2022-12-13T20:11:11Z","closed_at":"2022-12-13T20:11:10Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/51682","html_url":"https://github.com/microsoft/TypeScript/pull/51682","diff_url":"https://github.com/microsoft/TypeScript/pull/51682.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/51682.patch","merged_at":"2022-12-13T20:11:10Z"},"body":"We have a number of places in our codebase where we optionally attach properties to a `Node`. While a common practice in JS, this can sometimes have negative consequences with regards to runtime performance. Most modern JavaScript engines use Inline Caches (ICs) to optimize code paths, primarily when reading or writing to properties on objects, or to global variables.\r\n\r\nIdeally, we want property ICs to be \"monomorphic\", such that they only ever see a single object shape (or \"map\" in V8 parlance) as \"monomorphic\" property ICs provide the fastest lookups. A \"polymorphic\" IC has slightly worse performance since it shifts from a one-to-one lookup to a short list of \"map\"-> property entries. If a new \"map\" is encountered once a polymorphic IC has around four entries, V8 will shift to a \"megamporphic\" IC. \"Megamorphic\" property ICs are the worst in terms of performance, as V8 essentially gives up on fast property access and relies on slow property lookups (there is still a cache, but it is cyclical: repeated property lookups for the same \"map\" will be fast but will age out as new \"maps\" are encountered).\r\n\r\nMonomorphism isn't always possible, especially when accessing properties like `.kind`. However, in cases where we have branched on `.kind`, we should endeavor to ensure that further property accesses within that branch remain monomorphic, or at least polymorphic.\r\n\r\nOne way to achieve this is to ensure the shape of every `Node` is stable relative to its `kind`. This has the following implications:\r\n\r\n- Properties of `Node` and its subtypes really shouldn't be \"optional\" and should be fully initialized when a `Node` is produced (even if only with `undefined`).\r\n- Avoid casting nodes to things they aren't (there were several cases of `node as any as JSDocContainer` and `node as TypeNode & { <optional properties> }`).\r\n- Move properties off of supertypes that belong on subtypes (such as `symbol`, `localSymbol`, `locals`, `nextContainer`, `flowNode`, etc.), as that results in unchecked `node.symbol` accesses which often result in \"wrong map\" deoptimizations.\r\n- Avoid using \"cover types\" with a lot of optional properties in favor of union types where you must discriminate before access.\r\n- Avoid accessing properties other than `kind` when the node is a supertype or union, unless the function is only accessing one or two properties (like `pos`/`end`) since a megamorphic lookup on \"pos\" will have the same cost as a megamorpic lookup on \"kind\".\r\n- Where possible, a function or code path should try to target a single `Node` subtype, especially if it accesses multiple properties.\r\n\r\nThere is a trade-off for these changes, however. Pre-defining potentially unused properties on a `Node` increases the memory footprint. As such, if the memory cost becomes too severe, we may want to investigate removing properties from some `Node` subtypes where the value can be trivially recomputed from source or moved into a cache like `NodeLinks` or `EmitNode`.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/51682/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/51682/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43993","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43993/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43993/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43993/events","html_url":"https://github.com/microsoft/TypeScript/pull/43993","id":879273032,"node_id":"MDExOlB1bGxSZXF1ZXN0NjMzMDA0MzI1","number":43993,"title":"Revert #35877 - fix receiver on calls of imported and exported functions","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"assignees":[{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false}],"milestone":null,"comments":10,"created_at":"2021-05-07T16:03:08Z","updated_at":"2022-11-07T17:38:35Z","closed_at":"2021-05-07T20:42:12Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/43993","html_url":"https://github.com/microsoft/TypeScript/pull/43993","diff_url":"https://github.com/microsoft/TypeScript/pull/43993.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/43993.patch","merged_at":"2021-05-07T20:42:12Z"},"body":"This reverts #35877 due to the severe negative performance impact caused by the change. We may attempt to reland this in TS 4.4 either without a flag (if we can mitigate the performance cost), or with a flag (so that you can opt in to the more expensive behavior).\r\n\r\nFixes #43486\r\n\r\n/cc @DanielRosenwasser \r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43993/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/36576","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36576/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36576/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36576/events","html_url":"https://github.com/microsoft/TypeScript/pull/36576","id":558758753,"node_id":"MDExOlB1bGxSZXF1ZXN0MzcwMDU2NTY1","number":36576,"title":"Use objects instead of closures for type mappers","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/microsoft/TypeScript/milestones/109","html_url":"https://github.com/microsoft/TypeScript/milestone/109","labels_url":"https://api.github.com/repos/microsoft/TypeScript/milestones/109/labels","id":4925946,"node_id":"MDk6TWlsZXN0b25lNDkyNTk0Ng==","number":109,"title":"TypeScript 3.9.0","description":"","creator":{"login":"RyanCavanaugh","id":6685088,"node_id":"MDQ6VXNlcjY2ODUwODg=","avatar_url":"https://avatars.githubusercontent.com/u/6685088?v=4","gravatar_id":"","url":"https://api.github.com/users/RyanCavanaugh","html_url":"https://github.com/RyanCavanaugh","followers_url":"https://api.github.com/users/RyanCavanaugh/followers","following_url":"https://api.github.com/users/RyanCavanaugh/following{/other_user}","gists_url":"https://api.github.com/users/RyanCavanaugh/gists{/gist_id}","starred_url":"https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RyanCavanaugh/subscriptions","organizations_url":"https://api.github.com/users/RyanCavanaugh/orgs","repos_url":"https://api.github.com/users/RyanCavanaugh/repos","events_url":"https://api.github.com/users/RyanCavanaugh/events{/privacy}","received_events_url":"https://api.github.com/users/RyanCavanaugh/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":102,"state":"closed","created_at":"2019-12-12T17:47:34Z","updated_at":"2020-05-12T19:17:07Z","due_on":null,"closed_at":"2020-05-01T15:44:46Z"},"comments":26,"created_at":"2020-02-02T21:12:51Z","updated_at":"2022-11-07T17:35:43Z","closed_at":"2020-03-11T20:28:50Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/36576","html_url":"https://github.com/microsoft/TypeScript/pull/36576","diff_url":"https://github.com/microsoft/TypeScript/pull/36576.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/36576.patch","merged_at":"2020-03-11T20:28:49Z"},"body":"This PR switches our representation of type mappers from functions (that close over state) to objects. This brings greater transparency to the actual mappings performed by type mappers and enables more efficient construction of composite mappers.\r\n\r\nThe PR improves performance by up to 1% (with a 9% outlier on older versions of Node.js) and memory usage by up to 8%.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/36576/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36576/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/35332","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/35332/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/35332/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/35332/events","html_url":"https://github.com/microsoft/TypeScript/pull/35332","id":528231289,"node_id":"MDExOlB1bGxSZXF1ZXN0MzQ1MzMzNjEx","number":35332,"title":"Improve control flow type caching","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2019-11-25T17:28:33Z","updated_at":"2022-11-07T17:34:36Z","closed_at":"2019-11-25T23:10:10Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/35332","html_url":"https://github.com/microsoft/TypeScript/pull/35332","diff_url":"https://github.com/microsoft/TypeScript/pull/35332.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/35332.patch","merged_at":"2019-11-25T23:10:10Z"},"body":"This PR improves performance of `getTypeOfExpression` by caching results whenever control flow analysis was required to compute them. Unlike our existing caching schemes, this implementation works even during control flow analysis of loops: The cache is saved and cleared before starting analysis of a loop back edge (which may produce incomplete types), and then restored when analysis completes.\r\n\r\nFixes #35205.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/35332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/35332/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/46429","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/46429/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/46429/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/46429/events","html_url":"https://github.com/microsoft/TypeScript/pull/46429","id":1030530088,"node_id":"PR_kwDOAT9aAc4tZVAh","number":46429,"title":"Simplify relationship check for conditional type on target side","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"assignees":[{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":49,"created_at":"2021-10-19T16:44:13Z","updated_at":"2022-11-11T16:45:53Z","closed_at":"2021-10-22T00:35:23Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/46429","html_url":"https://github.com/microsoft/TypeScript/pull/46429","diff_url":"https://github.com/microsoft/TypeScript/pull/46429.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/46429.patch","merged_at":"2021-10-22T00:35:23Z"},"body":"This PR simplifies our relationship checking logic for conditional types on the target side. With this PR, a source type `S` is assignable to a target type `A extends B ? C : D` when\r\n\r\n* The conditional type is not distributive, or is distributive but `A` is never referenced in `C` or `D`, and\r\n* `B` has no `infer` positions, and\r\n* `S` is assignable to `C` (except if `A` never assignable to `B` for any instantiation), and\r\n* `S` is assignable to `D` (except if `A` is always assignable to `B` for any instantiation).\r\n\r\nThe PR revises some of the logic that was added in #30639, specifically the logic that determines if `A` is referenced in `C` or `D` in a distributive conditional type. There are no baseline changes as a result of this PR, but it fixes the performance degradation reported in #44851.\r\n\r\nFixes #44851.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/46429/reactions","total_count":12,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":3,"rocket":2,"eyes":2},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/46429/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/42149","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42149/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42149/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42149/events","html_url":"https://github.com/microsoft/TypeScript/pull/42149","id":776090693,"node_id":"MDExOlB1bGxSZXF1ZXN0NTQ2NjM5MjUz","number":42149,"title":"Preserve type aliases for union and intersection types","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"assignees":[{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":62,"created_at":"2020-12-29T21:15:20Z","updated_at":"2022-11-30T14:48:12Z","closed_at":"2021-01-09T01:19:59Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/42149","html_url":"https://github.com/microsoft/TypeScript/pull/42149","diff_url":"https://github.com/microsoft/TypeScript/pull/42149.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/42149.patch","merged_at":"2021-01-09T01:19:58Z"},"body":"With this PR we improve preservation of type aliases for union and intersection types. Previously, an alias associated with a union type was lost when that type was made part of another union. For example:\r\n\r\n```ts\r\ntype Shape =\r\n    | { kind: \"circle\", radius: number }\r\n    | { kind: \"square\", size: number }\r\n    | { kind: \"rectangle\", width: number, height: number };\r\n\r\ntype Named = { name: string };\r\n\r\ndeclare let shape: Shape;  // Shape\r\ndeclare let optionalShape: Shape | undefined;  // Shape | undefined\r\ndeclare let namedShape: Shape & Named;  // Shape & Named\r\ndeclare let optionalNamedShape: Shape & Named | undefined;  // (Shape & Named) | undefined\r\n```\r\n\r\nPreviously, the types of all but the `shape` variable would be displayed as fully expanded unions (see in [playground](https://www.typescriptlang.org/play?#code/C4TwDgpgBAygFgQ0lAvAKCpqAfKBvKAawEsA7AEwC4oAiAY2ICc6AbCGgGikYXOIFcAztVL8AtgCMIjKAF8MWXARIVqNQQEd+CRuy6DiALwgjxUmfKw58RMlVq66wBKQDmbTlADuxcsDimktJccBDErnDAgeZyANxoaKDIAHIIYhDkqDakaSZQgsCMZK5xCeQQrDrQbMD5iJDU8EgQsZgA9G2w9RBo5ZW6UDVQAPZgwMTDOSxNDV3N1vwUEABmZBmtUB1zyLiL5aukGb0VLFWDELU56eQzebdQAGRQqdcbW-dPL0d9pwNDo+NJggWF8bt1Gt1Hs9cpldksDut2p0ABQfaHXACUC3ha3IaCAA)). Now, the types are displayed as they were written. This makes diagnostics involving these types significantly easier to comprehend.\r\n\r\nThis PR also makes it possible to have distinct aliases for the same union or intersection types. For example:\r\n\r\n```ts\r\ntype StrOrNum1 = string | number;\r\ntype StrOrNum2 = string | number;\r\n\r\ndeclare let sn1: StrOrNum1;  // StrOrNum1\r\ndeclare let sn2: StrOrNum2;  // StrOrNum2\r\n```\r\n\r\nPreviously we'd show the alias `StrOrNum1` for both `sn1` and `sn2`.\r\n\r\nThe key implementation change in the PR is that we now include alias symbols in the key used to intern union, intersection, and indexed access types. Thus, aliased forms of these types get a separate type identity. We additionally include an \"origin\" description in union types when the originating declaration has fewer constituents than the fully expanded and normalized union. This origin may actually be an intersection, as is the case in the type `(A | B | C) & (D | E | F)`. A slight performance impact is expected because we now create more type identities for equivalent unions.\r\n\r\nFixes #35654.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/42149/reactions","total_count":32,"+1":0,"-1":0,"laugh":0,"hooray":5,"confused":0,"heart":19,"rocket":8,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42149/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/49487","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49487/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49487/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49487/events","html_url":"https://github.com/microsoft/TypeScript/pull/49487","id":1268082557,"node_id":"PR_kwDOAT9aAc45fsAQ","number":49487,"title":"Improve performance of Debug.format functions","user":{"login":"jakebailey","id":5341706,"node_id":"MDQ6VXNlcjUzNDE3MDY=","avatar_url":"https://avatars.githubusercontent.com/u/5341706?v=4","gravatar_id":"","url":"https://api.github.com/users/jakebailey","html_url":"https://github.com/jakebailey","followers_url":"https://api.github.com/users/jakebailey/followers","following_url":"https://api.github.com/users/jakebailey/following{/other_user}","gists_url":"https://api.github.com/users/jakebailey/gists{/gist_id}","starred_url":"https://api.github.com/users/jakebailey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakebailey/subscriptions","organizations_url":"https://api.github.com/users/jakebailey/orgs","repos_url":"https://api.github.com/users/jakebailey/repos","events_url":"https://api.github.com/users/jakebailey/events{/privacy}","received_events_url":"https://api.github.com/users/jakebailey/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"jakebailey","id":5341706,"node_id":"MDQ6VXNlcjUzNDE3MDY=","avatar_url":"https://avatars.githubusercontent.com/u/5341706?v=4","gravatar_id":"","url":"https://api.github.com/users/jakebailey","html_url":"https://github.com/jakebailey","followers_url":"https://api.github.com/users/jakebailey/followers","following_url":"https://api.github.com/users/jakebailey/following{/other_user}","gists_url":"https://api.github.com/users/jakebailey/gists{/gist_id}","starred_url":"https://api.github.com/users/jakebailey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakebailey/subscriptions","organizations_url":"https://api.github.com/users/jakebailey/orgs","repos_url":"https://api.github.com/users/jakebailey/repos","events_url":"https://api.github.com/users/jakebailey/events{/privacy}","received_events_url":"https://api.github.com/users/jakebailey/received_events","type":"User","site_admin":false},"assignees":[{"login":"jakebailey","id":5341706,"node_id":"MDQ6VXNlcjUzNDE3MDY=","avatar_url":"https://avatars.githubusercontent.com/u/5341706?v=4","gravatar_id":"","url":"https://api.github.com/users/jakebailey","html_url":"https://github.com/jakebailey","followers_url":"https://api.github.com/users/jakebailey/followers","following_url":"https://api.github.com/users/jakebailey/following{/other_user}","gists_url":"https://api.github.com/users/jakebailey/gists{/gist_id}","starred_url":"https://api.github.com/users/jakebailey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakebailey/subscriptions","organizations_url":"https://api.github.com/users/jakebailey/orgs","repos_url":"https://api.github.com/users/jakebailey/repos","events_url":"https://api.github.com/users/jakebailey/events{/privacy}","received_events_url":"https://api.github.com/users/jakebailey/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2022-06-10T22:54:54Z","updated_at":"2022-06-14T01:13:48Z","closed_at":"2022-06-10T23:15:00Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/49487","html_url":"https://github.com/microsoft/TypeScript/pull/49487","diff_url":"https://github.com/microsoft/TypeScript/pull/49487.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/49487.patch","merged_at":"2022-06-10T23:15:00Z"},"body":"These functions are not normally performance critical, however, the cleanup in #49485 removes the test harness' duplicate `SyntaxKind` formatter in favor of `Debug`'s (which is more accurate, but slower), and this recovers the perf loss this causes.\r\n\r\nThis technically speeds up tests by 25%, but that is only there because #49485 slows down the tests by 25%. Sigh.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/49487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49487/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/49881","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49881/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49881/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49881/events","html_url":"https://github.com/microsoft/TypeScript/pull/49881","id":1302335949,"node_id":"PR_kwDOAT9aAc47R2FY","number":49881,"title":"Reuse computed type of condition expressions","user":{"login":"JoostK","id":123679,"node_id":"MDQ6VXNlcjEyMzY3OQ==","avatar_url":"https://avatars.githubusercontent.com/u/123679?v=4","gravatar_id":"","url":"https://api.github.com/users/JoostK","html_url":"https://github.com/JoostK","followers_url":"https://api.github.com/users/JoostK/followers","following_url":"https://api.github.com/users/JoostK/following{/other_user}","gists_url":"https://api.github.com/users/JoostK/gists{/gist_id}","starred_url":"https://api.github.com/users/JoostK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JoostK/subscriptions","organizations_url":"https://api.github.com/users/JoostK/orgs","repos_url":"https://api.github.com/users/JoostK/repos","events_url":"https://api.github.com/users/JoostK/events{/privacy}","received_events_url":"https://api.github.com/users/JoostK/received_events","type":"User","site_admin":false},"labels":[{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"gabritto","id":19519347,"node_id":"MDQ6VXNlcjE5NTE5MzQ3","avatar_url":"https://avatars.githubusercontent.com/u/19519347?v=4","gravatar_id":"","url":"https://api.github.com/users/gabritto","html_url":"https://github.com/gabritto","followers_url":"https://api.github.com/users/gabritto/followers","following_url":"https://api.github.com/users/gabritto/following{/other_user}","gists_url":"https://api.github.com/users/gabritto/gists{/gist_id}","starred_url":"https://api.github.com/users/gabritto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gabritto/subscriptions","organizations_url":"https://api.github.com/users/gabritto/orgs","repos_url":"https://api.github.com/users/gabritto/repos","events_url":"https://api.github.com/users/gabritto/events{/privacy}","received_events_url":"https://api.github.com/users/gabritto/received_events","type":"User","site_admin":false},"assignees":[{"login":"gabritto","id":19519347,"node_id":"MDQ6VXNlcjE5NTE5MzQ3","avatar_url":"https://avatars.githubusercontent.com/u/19519347?v=4","gravatar_id":"","url":"https://api.github.com/users/gabritto","html_url":"https://github.com/gabritto","followers_url":"https://api.github.com/users/gabritto/followers","following_url":"https://api.github.com/users/gabritto/following{/other_user}","gists_url":"https://api.github.com/users/gabritto/gists{/gist_id}","starred_url":"https://api.github.com/users/gabritto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gabritto/subscriptions","organizations_url":"https://api.github.com/users/gabritto/orgs","repos_url":"https://api.github.com/users/gabritto/repos","events_url":"https://api.github.com/users/gabritto/events{/privacy}","received_events_url":"https://api.github.com/users/gabritto/received_events","type":"User","site_admin":false}],"milestone":null,"comments":13,"created_at":"2022-07-12T16:32:15Z","updated_at":"2022-08-28T12:41:16Z","closed_at":"2022-08-27T08:40:13Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/49881","html_url":"https://github.com/microsoft/TypeScript/pull/49881","diff_url":"https://github.com/microsoft/TypeScript/pull/49881.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/49881.patch","merged_at":"2022-08-27T08:40:13Z"},"body":"Fixes #49845\r\n\r\nThis change threads the computed type of conditional expressions into `checkTestingKnownTruthyCallableOrAwaitableType` to avoid recursively revisiting expression subtrees, resulting in an exponential performance drop. The changed code is similar to how it was before #42835.\r\n\r\nThe test case used to run in ~13s on my laptop before the fix, and now completes instantly again (check time reported as `0.00s`)","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/49881/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49881/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/50151","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/50151/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/50151/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/50151/events","html_url":"https://github.com/microsoft/TypeScript/pull/50151","id":1326480393,"node_id":"PR_kwDOAT9aAc48ieZo","number":50151,"title":"Fix up code so we don't crash when TS itself is emitted with let/const","user":{"login":"jakebailey","id":5341706,"node_id":"MDQ6VXNlcjUzNDE3MDY=","avatar_url":"https://avatars.githubusercontent.com/u/5341706?v=4","gravatar_id":"","url":"https://api.github.com/users/jakebailey","html_url":"https://github.com/jakebailey","followers_url":"https://api.github.com/users/jakebailey/followers","following_url":"https://api.github.com/users/jakebailey/following{/other_user}","gists_url":"https://api.github.com/users/jakebailey/gists{/gist_id}","starred_url":"https://api.github.com/users/jakebailey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakebailey/subscriptions","organizations_url":"https://api.github.com/users/jakebailey/orgs","repos_url":"https://api.github.com/users/jakebailey/repos","events_url":"https://api.github.com/users/jakebailey/events{/privacy}","received_events_url":"https://api.github.com/users/jakebailey/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"jakebailey","id":5341706,"node_id":"MDQ6VXNlcjUzNDE3MDY=","avatar_url":"https://avatars.githubusercontent.com/u/5341706?v=4","gravatar_id":"","url":"https://api.github.com/users/jakebailey","html_url":"https://github.com/jakebailey","followers_url":"https://api.github.com/users/jakebailey/followers","following_url":"https://api.github.com/users/jakebailey/following{/other_user}","gists_url":"https://api.github.com/users/jakebailey/gists{/gist_id}","starred_url":"https://api.github.com/users/jakebailey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakebailey/subscriptions","organizations_url":"https://api.github.com/users/jakebailey/orgs","repos_url":"https://api.github.com/users/jakebailey/repos","events_url":"https://api.github.com/users/jakebailey/events{/privacy}","received_events_url":"https://api.github.com/users/jakebailey/received_events","type":"User","site_admin":false},"assignees":[{"login":"jakebailey","id":5341706,"node_id":"MDQ6VXNlcjUzNDE3MDY=","avatar_url":"https://avatars.githubusercontent.com/u/5341706?v=4","gravatar_id":"","url":"https://api.github.com/users/jakebailey","html_url":"https://github.com/jakebailey","followers_url":"https://api.github.com/users/jakebailey/followers","following_url":"https://api.github.com/users/jakebailey/following{/other_user}","gists_url":"https://api.github.com/users/jakebailey/gists{/gist_id}","starred_url":"https://api.github.com/users/jakebailey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakebailey/subscriptions","organizations_url":"https://api.github.com/users/jakebailey/orgs","repos_url":"https://api.github.com/users/jakebailey/repos","events_url":"https://api.github.com/users/jakebailey/events{/privacy}","received_events_url":"https://api.github.com/users/jakebailey/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-08-02T22:51:25Z","updated_at":"2022-08-10T20:38:44Z","closed_at":"2022-08-10T20:38:38Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/50151","html_url":"https://github.com/microsoft/TypeScript/pull/50151","diff_url":"https://github.com/microsoft/TypeScript/pull/50151.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/50151.patch","merged_at":"2022-08-10T20:38:38Z"},"body":"Alternative to #50141 split out from #50022 where I was performance testing the cost of let/const.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/50151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/50151/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/49623","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49623/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49623/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49623/events","html_url":"https://github.com/microsoft/TypeScript/pull/49623","id":1279250014,"node_id":"PR_kwDOAT9aAc46Ep-f","number":49623,"title":"Add a simple queue implementation with better performance than `Array.shift`","user":{"login":"amcasey","id":10508071,"node_id":"MDQ6VXNlcjEwNTA4MDcx","avatar_url":"https://avatars.githubusercontent.com/u/10508071?v=4","gravatar_id":"","url":"https://api.github.com/users/amcasey","html_url":"https://github.com/amcasey","followers_url":"https://api.github.com/users/amcasey/followers","following_url":"https://api.github.com/users/amcasey/following{/other_user}","gists_url":"https://api.github.com/users/amcasey/gists{/gist_id}","starred_url":"https://api.github.com/users/amcasey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amcasey/subscriptions","organizations_url":"https://api.github.com/users/amcasey/orgs","repos_url":"https://api.github.com/users/amcasey/repos","events_url":"https://api.github.com/users/amcasey/events{/privacy}","received_events_url":"https://api.github.com/users/amcasey/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"amcasey","id":10508071,"node_id":"MDQ6VXNlcjEwNTA4MDcx","avatar_url":"https://avatars.githubusercontent.com/u/10508071?v=4","gravatar_id":"","url":"https://api.github.com/users/amcasey","html_url":"https://github.com/amcasey","followers_url":"https://api.github.com/users/amcasey/followers","following_url":"https://api.github.com/users/amcasey/following{/other_user}","gists_url":"https://api.github.com/users/amcasey/gists{/gist_id}","starred_url":"https://api.github.com/users/amcasey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amcasey/subscriptions","organizations_url":"https://api.github.com/users/amcasey/orgs","repos_url":"https://api.github.com/users/amcasey/repos","events_url":"https://api.github.com/users/amcasey/events{/privacy}","received_events_url":"https://api.github.com/users/amcasey/received_events","type":"User","site_admin":false},"assignees":[{"login":"amcasey","id":10508071,"node_id":"MDQ6VXNlcjEwNTA4MDcx","avatar_url":"https://avatars.githubusercontent.com/u/10508071?v=4","gravatar_id":"","url":"https://api.github.com/users/amcasey","html_url":"https://github.com/amcasey","followers_url":"https://api.github.com/users/amcasey/followers","following_url":"https://api.github.com/users/amcasey/following{/other_user}","gists_url":"https://api.github.com/users/amcasey/gists{/gist_id}","starred_url":"https://api.github.com/users/amcasey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amcasey/subscriptions","organizations_url":"https://api.github.com/users/amcasey/orgs","repos_url":"https://api.github.com/users/amcasey/repos","events_url":"https://api.github.com/users/amcasey/events{/privacy}","received_events_url":"https://api.github.com/users/amcasey/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2022-06-21T23:51:06Z","updated_at":"2022-07-13T19:58:27Z","closed_at":"2022-06-24T17:07:29Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/49623","html_url":"https://github.com/microsoft/TypeScript/pull/49623","diff_url":"https://github.com/microsoft/TypeScript/pull/49623.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/49623.patch","merged_at":"2022-06-24T17:07:29Z"},"body":"This lets us clean up the hack introduced in #49581","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/49623/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49623/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/50116","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/50116/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/50116/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/50116/events","html_url":"https://github.com/microsoft/TypeScript/pull/50116","id":1323575090,"node_id":"PR_kwDOAT9aAc48YvFt","number":50116,"title":"Restore ordering of operations involving type parameters and unions","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"assignees":[{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":10,"created_at":"2022-07-31T21:00:04Z","updated_at":"2022-08-03T04:32:42Z","closed_at":"2022-08-03T04:32:41Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/50116","html_url":"https://github.com/microsoft/TypeScript/pull/50116","diff_url":"https://github.com/microsoft/TypeScript/pull/50116.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/50116.patch","merged_at":"2022-08-03T04:32:41Z"},"body":"Fixes #49982.\r\n\r\nI didn't add a regression test as the repro is quite large and involves external NPM packages. I have however manually verified that performance of the repro is back to 4.5 level and that no OOM occurs.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/50116/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/50116/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/35282","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/35282/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/35282/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/35282/events","html_url":"https://github.com/microsoft/TypeScript/pull/35282","id":526924223,"node_id":"MDExOlB1bGxSZXF1ZXN0MzQ0MzAxOTM1","number":35282,"title":"Refactor node factory API, use node factory in parser","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"sheetalkamat","id":8052792,"node_id":"MDQ6VXNlcjgwNTI3OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8052792?v=4","gravatar_id":"","url":"https://api.github.com/users/sheetalkamat","html_url":"https://github.com/sheetalkamat","followers_url":"https://api.github.com/users/sheetalkamat/followers","following_url":"https://api.github.com/users/sheetalkamat/following{/other_user}","gists_url":"https://api.github.com/users/sheetalkamat/gists{/gist_id}","starred_url":"https://api.github.com/users/sheetalkamat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sheetalkamat/subscriptions","organizations_url":"https://api.github.com/users/sheetalkamat/orgs","repos_url":"https://api.github.com/users/sheetalkamat/repos","events_url":"https://api.github.com/users/sheetalkamat/events{/privacy}","received_events_url":"https://api.github.com/users/sheetalkamat/received_events","type":"User","site_admin":false},"assignees":[{"login":"sheetalkamat","id":8052792,"node_id":"MDQ6VXNlcjgwNTI3OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8052792?v=4","gravatar_id":"","url":"https://api.github.com/users/sheetalkamat","html_url":"https://github.com/sheetalkamat","followers_url":"https://api.github.com/users/sheetalkamat/followers","following_url":"https://api.github.com/users/sheetalkamat/following{/other_user}","gists_url":"https://api.github.com/users/sheetalkamat/gists{/gist_id}","starred_url":"https://api.github.com/users/sheetalkamat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sheetalkamat/subscriptions","organizations_url":"https://api.github.com/users/sheetalkamat/orgs","repos_url":"https://api.github.com/users/sheetalkamat/repos","events_url":"https://api.github.com/users/sheetalkamat/events{/privacy}","received_events_url":"https://api.github.com/users/sheetalkamat/received_events","type":"User","site_admin":false}],"milestone":null,"comments":29,"created_at":"2019-11-22T00:54:33Z","updated_at":"2022-11-07T17:37:03Z","closed_at":"2020-06-16T23:55:04Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/35282","html_url":"https://github.com/microsoft/TypeScript/pull/35282","diff_url":"https://github.com/microsoft/TypeScript/pull/35282.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/35282.patch","merged_at":"2020-06-16T23:55:03Z"},"body":"This overhauls our node factory API to provide the following benefits:\r\n\r\n* Allows us to leverage the factory API from within the parser.\r\n    * This is intended to help us ensure that the property layout of each kind of `Node` is stable between the parser, checker, and transformers to reduce polymorphism, as well as to provide a \"single source of truth\" with respect to how nodes are created.\r\n* Allows us to streamline transform flag aggregation into node creation.\r\n    * This allows us to remove transform flag logic from `binder.ts` and `transformer.ts` and ensures that transform flags will *always* be correctly aggregated during transformations.\r\n* Extracts our auto-parenthesization logic out of the node factories.\r\n    * This allows us to use the new node factories in the parser without the undue overhead incurred by the parenthesizer rules.\r\n* Allows us to deprecate older node factory APIs and reduce node factory overloads.\r\n\r\nIn the future, this will also allow us to better isolate which transformer was responsible for creating nodes, as well as to possibly leverage transformers outside of the emit pipeline.\r\n\r\nAs part of these changes, all of the existing `create*` and `update*` factory functions in the `ts` namespace are being moved to a `NodeFactory` object that can be created via the internal `createNodeFactory` function. Authors of transformers can access the `NodeFactory` associated with their transformation via the `TransformationContext` provided to their transformer:\r\n\r\n```ts\r\nimport * as ts from \"typescript\";\r\nfunction myTransformer(context: ts.TransformationContext) {\r\n  // old: createIdentifier(\"foo\");\r\n\r\n  // new (option 1):\r\n  const { factory } = context;\r\n  factory.createIdentifier(\"foo\");\r\n\r\n  // new (option 2):\r\n  const { factory: { createIdentifier } } = context;\r\n  createIdentifier(\"foo\"); // same as old\r\n}\r\n```\r\n\r\nIn addition, the `ts.factory` object is a singleton `NodeFactory` instance, which can be used to create synthetic nodes *outside* of a transformer.\r\n\r\nSo as not to break compatibility with older API consumers, the existing `create*` and `update*` factory functions will also be available to consumers of the TypeScript language service and the TS Server API. However, these functions are considered deprecated, and will be phased out using the following (tentative) plan:\r\n\r\n- 4.0 - Existing factory functions are marked with a `@deprecated` JSDoc comment and are no longer used by TypeScript internals.\r\n- 4.1 (?) - The first time a deprecated factory function is called, the Language Service will attempt to write a deprecation warning message (depending on the host and whether a suitable `console.log`-like logger is available).\r\n- 4.2 (?) - Whenever a deprecated factory function is called, an exception will be thrown.\r\n- 4.3 (?) - Deprecated factory functions will be removed.\r\n\r\nRemaining TODO items:\r\n- [x] Consider renaming concise functions like `createParen` to a more expressive (and less ambiguous) name such as `createParenthesizedExpression`.\r\n- [x] Consider making most properties of nodes `readonly`, as one goal is to treat a TypeScript AST as immutable (and should be \"changed\" via visitors).\r\n- [x] Verify performance of parser use of new API.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/35282/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/35282/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/50419","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/50419/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/50419/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/50419/events","html_url":"https://github.com/microsoft/TypeScript/pull/50419","id":1348400051,"node_id":"PR_kwDOAT9aAc49qnKI","number":50419,"title":"Fix auto import crash due to difference in `paths` handling","user":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"assignees":[{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true}],"milestone":null,"comments":0,"created_at":"2022-08-23T18:48:01Z","updated_at":"2022-08-25T20:02:52Z","closed_at":"2022-08-25T20:02:48Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/50419","html_url":"https://github.com/microsoft/TypeScript/pull/50419","diff_url":"https://github.com/microsoft/TypeScript/pull/50419.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/50419.patch","merged_at":"2022-08-25T20:02:48Z"},"body":"<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #50392\r\n\r\nAuto-imports in completions does some work when you start typing for each item in the list (doing as little as possible for performance), and then does the rest of the work to compute the code change for an individual completion in a separate request when that item is highlighted. Synchronizing this two work streams to come up with the same answer has long been a source of bugs and crashes; #50392 is of this kind. This PR migrates the latter code path away from some very old code with some bad assumptions in favor of reusing the same `ExportInfoMap` cache structure that the former code path uses.\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/50419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/50419/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/49864","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49864/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49864/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49864/events","html_url":"https://github.com/microsoft/TypeScript/pull/49864","id":1301115453,"node_id":"PR_kwDOAT9aAc47NwNS","number":49864,"title":"Move DebugTypeMapper to debug.ts","user":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"assignees":[{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true}],"milestone":null,"comments":0,"created_at":"2022-07-11T19:15:21Z","updated_at":"2022-07-11T20:25:37Z","closed_at":"2022-07-11T20:25:33Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/49864","html_url":"https://github.com/microsoft/TypeScript/pull/49864","diff_url":"https://github.com/microsoft/TypeScript/pull/49864.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/49864.patch","merged_at":"2022-07-11T20:25:33Z"},"body":"<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nThe template literals occurring early in checker.ts wreck the TmGrammar performance 😞. See https://github.com/microsoft/vscode/issues/154568.\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/49864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49864/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/49205","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49205/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49205/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49205/events","html_url":"https://github.com/microsoft/TypeScript/pull/49205","id":1244287154,"node_id":"PR_kwDOAT9aAc44P2vS","number":49205,"title":"Instantiate original target type in substituteIndexedMappedType","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"assignees":[{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2022-05-22T15:20:05Z","updated_at":"2022-05-24T20:27:12Z","closed_at":"2022-05-23T18:07:34Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/49205","html_url":"https://github.com/microsoft/TypeScript/pull/49205","diff_url":"https://github.com/microsoft/TypeScript/pull/49205.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/49205.patch","merged_at":"2022-05-23T18:07:34Z"},"body":"No tests in this PR as it only affects performance. Have manually verified that issue in #49136 is gone (we go from >4M instantiations to just 172 when compiling the original example).\r\n\r\nFixes #49136.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/49205/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/49205/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/39560","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/39560/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/39560/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/39560/events","html_url":"https://github.com/microsoft/TypeScript/pull/39560","id":655132941,"node_id":"MDExOlB1bGxSZXF1ZXN0NDQ3NzE3OTgz","number":39560,"title":"--noUncheckedIndexedAccess","user":{"login":"RyanCavanaugh","id":6685088,"node_id":"MDQ6VXNlcjY2ODUwODg=","avatar_url":"https://avatars.githubusercontent.com/u/6685088?v=4","gravatar_id":"","url":"https://api.github.com/users/RyanCavanaugh","html_url":"https://github.com/RyanCavanaugh","followers_url":"https://api.github.com/users/RyanCavanaugh/followers","following_url":"https://api.github.com/users/RyanCavanaugh/following{/other_user}","gists_url":"https://api.github.com/users/RyanCavanaugh/gists{/gist_id}","starred_url":"https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RyanCavanaugh/subscriptions","organizations_url":"https://api.github.com/users/RyanCavanaugh/orgs","repos_url":"https://api.github.com/users/RyanCavanaugh/repos","events_url":"https://api.github.com/users/RyanCavanaugh/events{/privacy}","received_events_url":"https://api.github.com/users/RyanCavanaugh/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"assignees":[{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},{"login":"RyanCavanaugh","id":6685088,"node_id":"MDQ6VXNlcjY2ODUwODg=","avatar_url":"https://avatars.githubusercontent.com/u/6685088?v=4","gravatar_id":"","url":"https://api.github.com/users/RyanCavanaugh","html_url":"https://github.com/RyanCavanaugh","followers_url":"https://api.github.com/users/RyanCavanaugh/followers","following_url":"https://api.github.com/users/RyanCavanaugh/following{/other_user}","gists_url":"https://api.github.com/users/RyanCavanaugh/gists{/gist_id}","starred_url":"https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RyanCavanaugh/subscriptions","organizations_url":"https://api.github.com/users/RyanCavanaugh/orgs","repos_url":"https://api.github.com/users/RyanCavanaugh/repos","events_url":"https://api.github.com/users/RyanCavanaugh/events{/privacy}","received_events_url":"https://api.github.com/users/RyanCavanaugh/received_events","type":"User","site_admin":false}],"milestone":null,"comments":108,"created_at":"2020-07-11T04:37:04Z","updated_at":"2022-09-12T19:58:30Z","closed_at":"2020-09-11T21:43:11Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/39560","html_url":"https://github.com/microsoft/TypeScript/pull/39560","diff_url":"https://github.com/microsoft/TypeScript/pull/39560.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/39560.patch","merged_at":"2020-09-11T21:43:11Z"},"body":"# ~~Pedantic Index Signatures~~ noUncheckedIndexedAccess\r\n\r\nImplements #13778\r\n\r\nThis is a draft PR for the purpose of soliciting concrete feedback and discussion based on people trying this out in their code. An npm-installable version will be available soon (watch for the bot).\r\n\r\n*Given current limitations in CFA we don't have any good ideas on how to fix*, we remain guardedly skeptical this feature will be usable in practice. We're quite open to feedback to the contrary and that's why this PR is up - so that people can try out some bits and see how usable it is. This flag is not scheduled for any current TS release and please don't bet your entire coding strategy on it being shipped in a release! Anyway, here's the PR text.\r\n\r\n## Introduction\r\n\r\nUnder the flag `--pedanticIndexSignatures`, the following changes occur:\r\n\r\n * Any *indexed access expression* `obj[index]` used in a *read* position will include `undefined` in its type, *unless* `index` is a string literal or numeric literal with a previous narrowing in effect\r\n * Any *property access expression* `obj.prop` where no matching declared property named `prop` exists, but a string index signature does exist, will include `undefined` in its type, unless a previous narrowing on `obj.prop` is in effect\r\n\r\nOther related behaviors are left unchanged:\r\n\r\n * Indexed access *types*, e.g. `type A = SomeType[number]`, retain their current meaning (`undefined` is not added to this type)\r\n * *Writes* to `obj[index]` and `obj.prop` forms retain their normal behavior\r\n\r\nIn practice, it looks like this:\r\n```ts\r\n// Get a random-length array, perhaps\r\nconst arr = [1, 2, 3, 4, 5].slice(Math.random() * 5);\r\n// Error, can't assign number | undefined to number\r\nconst n: number = arr[2];\r\nif (arr[3]) {\r\n    // OK, previous narrowing based on literal index is in effect\r\n    arr[3].toFixed();\r\n}\r\n\r\n// Writes of 'undefined' are disallowed\r\narr[6] = undefined;\r\n```\r\n\r\nAnd like this:\r\n```ts\r\nconst obj: { [s: string]: string } = { [(new Date().toString().substr(0, 3))]: \"today\" };\r\n// Error, maybe it's not Tuesday\r\nconsole.log(obj.Tue.toLowerCase());\r\nif (obj.Fri) {\r\n    // OK, previous narrowing on 'obj.Fri' in effect\r\n   console.log(`${obj.Fri.toUpperCase()} IS FRIDAY`);\r\n}\r\n```\r\n\r\nRestrictions on narrowing on non-literal indices (see below) mean this feature is not as ergonomic as some other TypeScript behavior, so many common patterns may require extra work:\r\n```ts\r\nlet arr = [1, 2, 3, 4];\r\nfor (let i = 0; i < arr.length; i++) {\r\n    // Error; 'i' might be out of bounds\r\n    const n: number = arr[i];\r\n    if (arr[i] !== undefined) {\r\n        // Still an error; dynamic indices do not cause narrowing\r\n        const m1: number = arr[i];\r\n        i++;\r\n        // This is sometimes a good thing, though!\r\n        const m2: number = arr[i];\r\n    }\r\n}\r\n```\r\n\r\nBetter patterns include `for/of`:\r\n```ts\r\nfor (const el of arr) {\r\n    // OK; for/of assumes no out-of-bounds problems\r\n    const n: number = el;\r\n}\r\n```\r\n`forEach`:\r\n```ts\r\narr.forEach(el => {\r\n    // OK; forEach won't exceed bounds\r\n    const n: number = el;\r\n});\r\n```\r\nOr stashing in a constant:\r\n```ts\r\nfor (let i = 0; i < arr.length; i++) {\r\n    const el = arr[i];\r\n    if (el !== undefined) {\r\n        // OK; constants may be narrowed\r\n        console.log(el.toFixed());\r\n    }\r\n}\r\n```\r\n\r\nIf you're targeting a newer environment or have an appropriate polyfill, you can also use `Object.entries`:\r\n```ts\r\nfor (const [el, i] of Object.entries(arr)) {\r\n    console.log(`Element at index ${i} had value ${el.toFixed()}`);\r\n}\r\n```\r\n\r\n## Other Caveats & Discussion\r\n\r\n### Naming\r\n\r\nName is up for bikeshedding, subject to the following caveats:\r\n\r\n * We do *not* intend to make this part of the `--strict` family with its current behavorial limitations, so anything starting with `strict` is a no-go\r\n   * If, in the future, we find a way to make this palatable (i.e. can be turned on with *nearly zero* false positives), we can make it be an alias for a new `--strictIndexSignatures` setting\r\n * We don't really think this is a great mode to be in by default, so the name should connote \"Here be dragons\" in terms of ergonomics\r\n * The behavior changes both string and numeric index behavior, so we'd prefer to avoid `Array` as part of the name\r\n\r\n### More on Narrowing (or \"Why doesn't my `for` loop just work?\")\r\n\r\nA predicted FAQ is why a \"normal\" C-style `for` loop is not allowed:\r\n```ts\r\nlet arr = [1, 2, 3, 4];\r\nfor (let i = 0; i < arr.length; i++) {\r\n    // Error; 'i' might be out of bounds... but it isn't, right?\r\n    const n: number = arr[i];\r\n}\r\n```\r\n\r\nFirst, TS's control flow system doesn't track side effects in a sufficiently rich way to account for cases like:\r\n```ts\r\n    if (arr[i] !== undefined) {\r\n        arr.length = 0; // Side effect of clearing the array\r\n        let x: number = arr[i]; // Unsound if allowed\r\n    }\r\n```\r\nso it would be incorrectly optimistic to assume this kind of mutation (either to `i` or `arr`) hasn't occurred. In practice, in JS there's not much reason to use `for` instead of `for/of` unless you're doing something with the index, and that \"something\" is usually math that could potentially result in an out-of-bounds index.\r\n\r\nSecond, every narrowing is based on syntactic patterns, and adding the form `e[i]` to the list of things we narrow on incurred a 5-10% performance penalty. That doesn't sound like much in isolation, but if you and your ten best friends each got a new feature that came with a 5% performance penalty, you probably wouldn't like the fact that the next release of TypeScript was 70% slower than the last one.\r\n\r\n### Design Point: Sparse Arrays\r\n\r\nA *sparse array* is created in JavaScript whenever you write to an index that is not already in-bounds or one past the current end of the array:\r\n```js\r\nlet arr = [0];\r\narr[4] = 4;\r\n// arr is \"[0, empty × 3, 4]\"\r\n```\r\n\r\nJS behavior around sparse arrays is not the most predictable thing. \r\n\r\n`for / of`\r\n```js\r\nfor(const el of arr) console.log(el)\r\n// Prints 0, undefined, undefined, undefined, 4\r\n```\r\n👉 `for/of` treats a sparse array like an array with filled-in `undefined`s\r\n\r\n`forEach`\r\n```js\r\narr.forEach(e => console.log(e))\r\n// Prints 0, 4\r\n```\r\n👉 `forEach` skips the sparse elements\r\n\r\n`...` (spread)\r\n```js\r\nconst arr2 = [...arr];\r\narr2.forEach(e => console.log(e))\r\n// Prints 0, undefined, undefined, undefined, 4\r\n```\r\n👉 When you spread a sparse array, you get a non-sparse version of it.\r\n\r\nGiven these behaviors, we have decided to just assume that sparse arrays don't exist in well-formed programs. They are extremely rare to encounter in practice, and handling them \"correctly\" will have some extremely negative side effects. In particular, TS doesn't have a way to change function signatures based on compiler settings, so `forEach` is always to be passing its element type `T` (not `T | undefined`) to the callback. If sparse arrays are assumed to exist, then we need `[...arr].forEach(x => x.toFixed())` to issue an error, and the only way to do that is to say that `[...arr]` produces `(number | undefined)[]`. This is going to be annoying as heck, because you can't use `!` to convert a `(T | undefined)[]` to a `T[]`. Given how common patterns like `const copy = [...someArr]` are for working with arrays, this does not seem palatable even for the most strict-enthusiast programmers.\r\n\r\n### Design Point: What's the type of `T[number]` / `T[string]` ?\r\n\r\nA question when implementing this feature is given this type:\r\n```ts\r\ntype Q = (boolean[])[number];\r\n```\r\nShould `Q` be `boolean` (the type that's legal to write to the array) or `boolean | undefined` (the type you'd get if you read from the array)?\r\n\r\nInspecting this code:\r\n```ts\r\n// N.B. not a good function signature; don't do this in real code\r\nfunction zzz<T extends unknown[]>(arr: T, i: number): T[number] {\r\n    return arr[i];\r\n}\r\n```\r\nIt feels like the job of the checker in this mode is to say \"`zzz` does a possibly out-of-bounds read and needs clarification\". You could then write either of these instead:\r\n\r\n```ts\r\n// Allows out-of-bounds access to silently occur\r\nfunction zzz1<T extends unknown[]>(arr: T, i: number): T[number] | undefined {\r\n    return arr[i];\r\n}\r\n// - or - \r\n// Bounds checks for you\r\nfunction zzz2<T extends unknown[]>(arr: T, i: number): T[number] {\r\n    // TODO: Validate that 'i' is in bounds\r\n    return arr[i]!; // ! - safety not guaranteed but we tried\r\n}\r\n```\r\n\r\nThis has the *very* positive side effect that it means `T[number]` in a declaration file doesn't change meaning based on whether the flag is set, and maintains the identity that\r\n```ts\r\ntype A = { [n: number]: B }[number]\r\n// A === B\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/39560/reactions","total_count":137,"+1":61,"-1":0,"laugh":4,"hooray":25,"confused":0,"heart":23,"rocket":18,"eyes":6},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/39560/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/48619","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/48619/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/48619/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/48619/events","html_url":"https://github.com/microsoft/TypeScript/pull/48619","id":1197955875,"node_id":"PR_kwDOAT9aAc415sEu","number":48619,"title":"Clean up FAR aggregation","user":{"login":"amcasey","id":10508071,"node_id":"MDQ6VXNlcjEwNTA4MDcx","avatar_url":"https://avatars.githubusercontent.com/u/10508071?v=4","gravatar_id":"","url":"https://api.github.com/users/amcasey","html_url":"https://github.com/amcasey","followers_url":"https://api.github.com/users/amcasey/followers","following_url":"https://api.github.com/users/amcasey/following{/other_user}","gists_url":"https://api.github.com/users/amcasey/gists{/gist_id}","starred_url":"https://api.github.com/users/amcasey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amcasey/subscriptions","organizations_url":"https://api.github.com/users/amcasey/orgs","repos_url":"https://api.github.com/users/amcasey/repos","events_url":"https://api.github.com/users/amcasey/events{/privacy}","received_events_url":"https://api.github.com/users/amcasey/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"amcasey","id":10508071,"node_id":"MDQ6VXNlcjEwNTA4MDcx","avatar_url":"https://avatars.githubusercontent.com/u/10508071?v=4","gravatar_id":"","url":"https://api.github.com/users/amcasey","html_url":"https://github.com/amcasey","followers_url":"https://api.github.com/users/amcasey/followers","following_url":"https://api.github.com/users/amcasey/following{/other_user}","gists_url":"https://api.github.com/users/amcasey/gists{/gist_id}","starred_url":"https://api.github.com/users/amcasey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amcasey/subscriptions","organizations_url":"https://api.github.com/users/amcasey/orgs","repos_url":"https://api.github.com/users/amcasey/repos","events_url":"https://api.github.com/users/amcasey/events{/privacy}","received_events_url":"https://api.github.com/users/amcasey/received_events","type":"User","site_admin":false},"assignees":[{"login":"amcasey","id":10508071,"node_id":"MDQ6VXNlcjEwNTA4MDcx","avatar_url":"https://avatars.githubusercontent.com/u/10508071?v=4","gravatar_id":"","url":"https://api.github.com/users/amcasey","html_url":"https://github.com/amcasey","followers_url":"https://api.github.com/users/amcasey/followers","following_url":"https://api.github.com/users/amcasey/following{/other_user}","gists_url":"https://api.github.com/users/amcasey/gists{/gist_id}","starred_url":"https://api.github.com/users/amcasey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amcasey/subscriptions","organizations_url":"https://api.github.com/users/amcasey/orgs","repos_url":"https://api.github.com/users/amcasey/repos","events_url":"https://api.github.com/users/amcasey/events{/privacy}","received_events_url":"https://api.github.com/users/amcasey/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2022-04-09T00:15:34Z","updated_at":"2022-05-19T00:26:20Z","closed_at":"2022-05-19T00:26:17Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/48619","html_url":"https://github.com/microsoft/TypeScript/pull/48619","diff_url":"https://github.com/microsoft/TypeScript/pull/48619.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/48619.patch","merged_at":"2022-05-19T00:26:17Z"},"body":"We have library functions for searching within a project for symbols, references, rename locations, etc. All of that code is exactly as before - this change is about the layer that sits on top of that and aggregates the results across multiple projects. In the course of some performance investigations, I discovered that user-FAR was invoking per-project-FAR more times than I expected and that the code wasn't readable enough for me to confidently determine why or how to prevent it. This change attempts to address both issues.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/48619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/48619/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/47738","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/47738/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/47738/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/47738/events","html_url":"https://github.com/microsoft/TypeScript/pull/47738","id":1124345840,"node_id":"PR_kwDOAT9aAc4yFzTI","number":47738,"title":"Eliminate redundant or meaningless elaborations in type relations","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"assignees":[{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":41,"created_at":"2022-02-04T15:46:46Z","updated_at":"2022-04-29T06:33:27Z","closed_at":"2022-02-15T18:30:31Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/47738","html_url":"https://github.com/microsoft/TypeScript/pull/47738","diff_url":"https://github.com/microsoft/TypeScript/pull/47738.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/47738.patch","merged_at":"2022-02-15T18:30:29Z"},"body":"This PR removes a several pointless error elaborations, making diagnostics more concise. For example, when there is no relation between some source type and a target union type, we now only elaborate when we can identify a best match on the target side. Previously we'd default to elaborating on the last target constituent, which generally just adds noise and depends on a unstable sort order.\r\n\r\nThe PR also optimizies the `isRelatedTo` function by moving more work to the cached side on relationship checking. This improves checker performance by up to 3% and fixes an issue related to infinite constraints involving intersections.\r\n\r\nFixes #46900.\r\nFixes #47668.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/47738/reactions","total_count":8,"+1":0,"-1":0,"laugh":0,"hooray":8,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/47738/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/48752","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/48752/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/48752/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/48752/events","html_url":"https://github.com/microsoft/TypeScript/pull/48752","id":1207494764,"node_id":"PR_kwDOAT9aAc42YoaJ","number":48752,"title":"Eagerly resolve module specifiers for auto-import completions in `--moduleResolution node12+`","user":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"assignees":[{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true}],"milestone":null,"comments":2,"created_at":"2022-04-18T22:01:30Z","updated_at":"2022-04-27T23:07:20Z","closed_at":"2022-04-27T23:07:16Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/48752","html_url":"https://github.com/microsoft/TypeScript/pull/48752","diff_url":"https://github.com/microsoft/TypeScript/pull/48752.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/48752.patch","merged_at":"2022-04-27T23:07:16Z"},"body":"<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFor auto-import completions, we used to not resolve the module specifier until the subsequent completion details request, triggered for one completion entry at a time when you focus it in the list. Later, we added a cache for module specifiers and started resolving up to 100 module specifiers per completions request, and pulling up to an additional 1000 from the cache.\r\n\r\nUnder `--moduleResolution node12` or `nodenext`, we have to resolve module specifiers for auto-import completions right away, in excess of 100 if needed, because respecting package.json `exports` means that there may be exported symbols for which we cannot generate a module specifier without writing a relative path into `\"../node_modules/\"`. We would prefer to treat such exports as unreachable and filter them from the list, which means we need to know the module specifier when generating the list. This is unfortunate for performance reasons if the list is very big, but we have no choice if we want to avoid showing completions for unreachable exports.\r\n\r\nThe introduction of the PackageJsonInfoCache in module resolution (added in the initial support for node12 and nodenext), and sharing that cache with the auto-imports logic (#47388) should mitigate some of this cost. I currently have no realistic project to measure this change with, as real-world projects using these yet-experimental resolution modes are rare or possibly nonexistent. I’ve added some bit flags to `CompletionInfo` that indicate a number of perf-impacting things that happened while computing the response, including the scenario that wasn’t possible before this PR, resolving >100 module specifiers in a single request.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/48752/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/48752/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/46599","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/46599/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/46599/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/46599/events","html_url":"https://github.com/microsoft/TypeScript/pull/46599","id":1039992003,"node_id":"PR_kwDOAT9aAc4t3zcP","number":46599,"title":"Improve recursion depth checks","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"assignees":[{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/microsoft/TypeScript/milestones/154","html_url":"https://github.com/microsoft/TypeScript/milestone/154","labels_url":"https://api.github.com/repos/microsoft/TypeScript/milestones/154/labels","id":7467431,"node_id":"MI_kwDOAT9aAc4AcfGn","number":154,"title":"TypeScript 4.5.3","description":null,"creator":{"login":"DanielRosenwasser","id":972891,"node_id":"MDQ6VXNlcjk3Mjg5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/972891?v=4","gravatar_id":"","url":"https://api.github.com/users/DanielRosenwasser","html_url":"https://github.com/DanielRosenwasser","followers_url":"https://api.github.com/users/DanielRosenwasser/followers","following_url":"https://api.github.com/users/DanielRosenwasser/following{/other_user}","gists_url":"https://api.github.com/users/DanielRosenwasser/gists{/gist_id}","starred_url":"https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DanielRosenwasser/subscriptions","organizations_url":"https://api.github.com/users/DanielRosenwasser/orgs","repos_url":"https://api.github.com/users/DanielRosenwasser/repos","events_url":"https://api.github.com/users/DanielRosenwasser/events{/privacy}","received_events_url":"https://api.github.com/users/DanielRosenwasser/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":4,"state":"closed","created_at":"2021-12-07T23:20:30Z","updated_at":"2021-12-14T17:30:03Z","due_on":null,"closed_at":"2021-12-14T17:30:03Z"},"comments":31,"created_at":"2021-10-29T23:44:03Z","updated_at":"2022-02-14T14:26:32Z","closed_at":"2021-11-02T21:05:17Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/46599","html_url":"https://github.com/microsoft/TypeScript/pull/46599","diff_url":"https://github.com/microsoft/TypeScript/pull/46599.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/46599.patch","merged_at":"2021-11-02T21:05:17Z"},"body":"This PR improves relationship checking for recursive types in a number of ways:\r\n\r\n* When checking for potentially recursive instantiations of the same type, we now only consider types with higher type IDs. Because type IDs are monotonically increasing, newer type instantiations have higher type IDs than older type instantiations--and in a recursive type that generates an infinite series of type instantiations in some pattern, we therefore continue to see increasing type IDs. One particular advantage of this change is that manually nested type instantiations of the form `Foo<Foo<Foo<Foo<Foo<T>>>>>` are _not_ counted as recursive instantiations (because we instantiate from innermost to outermost).\r\n* We now consider a type to be \"deeply nested\" when we have seen three distinct instantiations of the type with increasing type IDs. Previously the limit was five, but without the increasing type ID requirement. This change means we'll do less work to detect and stop _infinitely generated_ types, but will check _manually nested_ types to any depth. Previously we couldn't distinguish between the two.\r\n* We improve our method of computing and checking \"broadest equivalent IDs\" that was introduced in #42727.\r\n\r\nThe change to computing equivalent IDs improves type checking performance by 2-5%. Our performance test suites don't contain examples of infinitely generated types, so the depth check changes show no effect there. However, several Definitely Typed packages see dramatic improvement. For example, `redux-immutable`, `react-lazylog`, and `yup` all see at least a 50% reduction in check time.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/46599/reactions","total_count":10,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":10,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/46599/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/36747","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36747/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36747/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36747/events","html_url":"https://github.com/microsoft/TypeScript/pull/36747","id":563726541,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzc0MDg2MTMz","number":36747,"title":"Merge diagnosticsProducing and nonDiagnosticsProducing checkers into a single checker supporting lazy diagnostics","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"sheetalkamat","id":8052792,"node_id":"MDQ6VXNlcjgwNTI3OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8052792?v=4","gravatar_id":"","url":"https://api.github.com/users/sheetalkamat","html_url":"https://github.com/sheetalkamat","followers_url":"https://api.github.com/users/sheetalkamat/followers","following_url":"https://api.github.com/users/sheetalkamat/following{/other_user}","gists_url":"https://api.github.com/users/sheetalkamat/gists{/gist_id}","starred_url":"https://api.github.com/users/sheetalkamat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sheetalkamat/subscriptions","organizations_url":"https://api.github.com/users/sheetalkamat/orgs","repos_url":"https://api.github.com/users/sheetalkamat/repos","events_url":"https://api.github.com/users/sheetalkamat/events{/privacy}","received_events_url":"https://api.github.com/users/sheetalkamat/received_events","type":"User","site_admin":false},"assignees":[{"login":"sheetalkamat","id":8052792,"node_id":"MDQ6VXNlcjgwNTI3OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8052792?v=4","gravatar_id":"","url":"https://api.github.com/users/sheetalkamat","html_url":"https://github.com/sheetalkamat","followers_url":"https://api.github.com/users/sheetalkamat/followers","following_url":"https://api.github.com/users/sheetalkamat/following{/other_user}","gists_url":"https://api.github.com/users/sheetalkamat/gists{/gist_id}","starred_url":"https://api.github.com/users/sheetalkamat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sheetalkamat/subscriptions","organizations_url":"https://api.github.com/users/sheetalkamat/orgs","repos_url":"https://api.github.com/users/sheetalkamat/repos","events_url":"https://api.github.com/users/sheetalkamat/events{/privacy}","received_events_url":"https://api.github.com/users/sheetalkamat/received_events","type":"User","site_admin":false}],"milestone":null,"comments":19,"created_at":"2020-02-12T03:31:08Z","updated_at":"2022-03-25T01:54:25Z","closed_at":"2022-03-23T23:21:06Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/36747","html_url":"https://github.com/microsoft/TypeScript/pull/36747","diff_url":"https://github.com/microsoft/TypeScript/pull/36747.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/36747.patch","merged_at":"2022-03-23T23:21:06Z"},"body":"A more complete alternative to #28584 based on the discussions there.\r\n\r\nRather than optimistically using an existing checker, we choose to only ever produce a single checker. That checker is responsible for both collecting diagnostics, and responding to LS queries. It does this (hopefully efficiently) by deferring calculating diagnostics for any nodes it visited during LS operations until they are later requested. This allows results from a \"full typecheck\" (or `getErr` request) to then inform a following completions or quickinfo request, without needing to recalculate anything that's already been calculated. Plus, we no longer need to hold onto 2 checkers in services, which should commensurately lower services memory usage.\r\n\r\nTo be as minimally breaky as possible, in situations where we know we're about to fetch diagnostics, we produce the diagnostics as they're registered, in order to preserve existing union ordering (as union order is based upon order of discovery, which may change if diagnostic production is fully unconditionally deferred until after checking is complete). This means command-line compiler runs before and after this PR should be identical (as nothing has changed when it executes). What _is_ deferred is any diagnostics we produce while doing LS operations in the checker before we request diagnostics. These lazy diagnostic requests are backlogged until a diagnostic (or suggestion) request is made, at which point they are executed and produced. This means that errors made via the IDE _might_ have different union ordering in their types than errors made on the command line (if you have prior LS results executed that caused a partial load of other types in a different order). But that's likely a fine tradeoff to make; especially since the order already differed depending on how files were included/checked in the IDE, anyway.\r\n\r\nDo note: Only diagnostics which depended upon the old `produceDiagnostics` checker flag become lazy in this PR - further work should probably be applied to make more diagnostics lazy, as there are undoubtedly heaps of other diagnostic code that was unconditionally done, which could probably be made lazy to improve LS performance slightly.\r\n\r\nTl;DR: With this change, there can be only one checker. Use `addLazyDiagnostic` to register diagnostic-specific work in the checker.\r\n\r\nFixes #27997","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/36747/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36747/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/48240","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/48240/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/48240/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/48240/events","html_url":"https://github.com/microsoft/TypeScript/pull/48240","id":1167705799,"node_id":"PR_kwDOAT9aAc40XJab","number":48240,"title":"Optional variance annotations","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"assignees":[{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/microsoft/TypeScript/milestones/156","html_url":"https://github.com/microsoft/TypeScript/milestone/156","labels_url":"https://api.github.com/repos/microsoft/TypeScript/milestones/156/labels","id":7487417,"node_id":"MI_kwDOAT9aAc4Acj-5","number":156,"title":"TypeScript 4.7.0","description":"","creator":{"login":"RyanCavanaugh","id":6685088,"node_id":"MDQ6VXNlcjY2ODUwODg=","avatar_url":"https://avatars.githubusercontent.com/u/6685088?v=4","gravatar_id":"","url":"https://api.github.com/users/RyanCavanaugh","html_url":"https://github.com/RyanCavanaugh","followers_url":"https://api.github.com/users/RyanCavanaugh/followers","following_url":"https://api.github.com/users/RyanCavanaugh/following{/other_user}","gists_url":"https://api.github.com/users/RyanCavanaugh/gists{/gist_id}","starred_url":"https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RyanCavanaugh/subscriptions","organizations_url":"https://api.github.com/users/RyanCavanaugh/orgs","repos_url":"https://api.github.com/users/RyanCavanaugh/repos","events_url":"https://api.github.com/users/RyanCavanaugh/events{/privacy}","received_events_url":"https://api.github.com/users/RyanCavanaugh/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":58,"state":"closed","created_at":"2021-12-14T17:30:14Z","updated_at":"2022-06-21T08:21:45Z","due_on":null,"closed_at":"2022-05-13T19:52:20Z"},"comments":47,"created_at":"2022-03-13T22:01:04Z","updated_at":"2022-04-22T01:14:51Z","closed_at":"2022-03-22T18:31:09Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/48240","html_url":"https://github.com/microsoft/TypeScript/pull/48240","diff_url":"https://github.com/microsoft/TypeScript/pull/48240.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/48240.patch","merged_at":"2022-03-22T18:31:08Z"},"body":"With this PR we introduce optional declaration site _variance annotations_ for type parameters of classes, interfaces and type aliases. Annotations take the form of an `in` and/or `out` keyword immediately preceding the type parameter name in a type parameter declaration.\r\n\r\n* An `out` annotation indicates that a type parameter is covariant.\r\n* An `in` annotation indicates that a type parameter is contravariant.\r\n* An `in out` annotation indicates that a type parameter is invariant.\r\n\r\nGenerally, type parameter variance is simply a function of how a type parameter is used in its generic subject type. Indeed, when generic type instantiations are related _structurally_, variance annotations serve no purpose. This is why TypeScript strictly doesn't need variance annotations. However, variance annotations are useful to assert desired type relations of their subject generic types. Specifically, given a generic type `G<T>` and any two type arguments `Super` and `Sub` for which `Sub` is a subtype of `Super`,\r\n\r\n* if `T` is covariant (declared as `out T`), `G<Sub>` is a subtype of `G<Super>`,\r\n* if `T` is contravariant (declared as `in T`), `G<Super>` is a subtype of `G<Sub>`, and\r\n* if `T` is invariant (declared as `in out T`), neither `G<Super>` nor `G<Sub>` is a subtype of the other.\r\n\r\nIntuitively, covariance restricts a type parameter to output (read) positions and contravariance restricts a type parameter to input (write) positions--hence the `in` and `out` modifiers. For example:\r\n\r\n```ts\r\ntype Provider<out T> = () => T;\r\ntype Consumer<in T> = (x: T) => void;\r\ntype Mapper<in T, out U> = (x: T) => U;\r\ntype Processor<in out T> = (x: T) => T;\r\n```\r\n\r\nCovariance and contravariance annotations are checked by structurally relating representative instantiations of their subject generic types. For example, in the following generic type, the type parameter `T` is used in both input and output positions and `T` is thus invariant. Attempting to mark `T` covariant\r\n\r\n```ts\r\ntype Foo<out T> = {\r\n    x: T;\r\n    f: (x: T) => void;\r\n}\r\n```\r\n\r\nreports the following error on `out T`:\r\n\r\n```\r\nType 'Foo<sub-T>' is not assignable to type 'Foo<super-T>' as implied by variance annotation.\r\n  Types of property 'f' are incompatible.\r\n    Type '(x: sub-T) => void' is not assignable to type '(x: super-T) => void'.\r\n      Types of parameters 'x' and 'x' are incompatible.\r\n        Type 'super-T' is not assignable to type 'sub-T'.\r\n```\r\n\r\nLikewise, attempting to mark `T` contravariant\r\n\r\n```ts\r\ntype Foo<in T> = {\r\n    x: T;\r\n    f: (x: T) => void;\r\n}\r\n```\r\n\r\nreports the following error on `in T`:\r\n\r\n```\r\nType 'Foo<super-T>' is not assignable to type 'Foo<sub-T>' as implied by variance annotation.\r\n  Types of property 'x' are incompatible.\r\n    Type 'super-T' is not assignable to type 'sub-T'.\r\n```\r\n\r\nNotice how the error elaborations reveal where and how variance is breached.\r\n\r\nInvariance annotations (`in out T`) are never checked but simply assumed to hold. Thus, it is possible to assert invariance even when the actual usage of a type parameter is co- or contravariant.\r\n\r\nWhen multiple interface declarations are merged, or when a class declaration and one or more interface declarations are merged, variance annotations are aggregated. In the example\r\n\r\n```ts\r\ninterface Bar<T> {\r\n    // ...\r\n}\r\n\r\ninterface Bar<out T> {\r\n    // ...\r\n}\r\n\r\ninterface Bar<in T> {\r\n    // ...\r\n}\r\n```\r\n\r\nthe aggregate variance of `T` is `in out`, and `T` is thus assumed to be invariant.\r\n\r\nWhen variance annotations are present, the type checker doesn't need to measure variance. Thus, variance annotations can help improve the performance of checking complex and interdependent types. In particular, marking a type parameter invariant means that no measurement or checking is necessary for that type parameter.\r\n\r\nIn addition, variance annotation can help establish correct variance for multiple circularly dependent generic types. Specifically, when measuring variance, TypeScript limits the structural search space in order to avoid runaway recursion. In the example\r\n\r\n```ts\r\ntype Foo<T> = {\r\n    x: T;\r\n    f: Bar<T>;\r\n}\r\n\r\ntype Bar<U> = (x: Baz<U[]>) => void;\r\n\r\ntype Baz<V> = {\r\n    value: Foo<V[]>;\r\n}\r\n\r\ndeclare let foo1: Foo<unknown>;\r\ndeclare let foo2: Foo<string>;\r\n\r\nfoo1 = foo2;  // Should be an error but isn't\r\nfoo2 = foo1;  // Error\r\n```\r\n\r\nthe compiler measures `T` to be covariant even though it is actually invariant due to variance reversal in `Bar` and the circular reference in `Baz`. The compiler could establish that by continuing to structurally relating nested circular references until some fixed point, but this gets exponentially expensive and isn't feasible in complex scenarios. Adding an `in out` annotation to `T` establishes the correct variance and produces the expected errors.\r\n\r\nWe're marking #1394 and #10717 fixed by this PR, although the feature implemented isn't exactly what is suggested in those issues.\r\n\r\nFixes #1394.\r\nFixes #10717.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/48240/reactions","total_count":146,"+1":58,"-1":0,"laugh":2,"hooray":18,"confused":0,"heart":32,"rocket":20,"eyes":16},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/48240/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/46523","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/46523/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/46523/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/46523/events","html_url":"https://github.com/microsoft/TypeScript/pull/46523","id":1035621565,"node_id":"PR_kwDOAT9aAc4tpn3Q","number":46523,"title":"Always cache relations involving intersection types","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"assignees":[{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":15,"created_at":"2021-10-25T22:14:41Z","updated_at":"2021-11-08T21:59:20Z","closed_at":"2021-10-26T16:36:20Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/46523","html_url":"https://github.com/microsoft/TypeScript/pull/46523","diff_url":"https://github.com/microsoft/TypeScript/pull/46523.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/46523.patch","merged_at":"2021-10-26T16:36:19Z"},"body":"An alternative fix for #46500, hopefully with less impact on the `material-ui` performance test.\r\n\r\nFixes #46500.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/46523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/46523/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/38923","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/38923/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/38923/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/38923/events","html_url":"https://github.com/microsoft/TypeScript/pull/38923","id":630386348,"node_id":"MDExOlB1bGxSZXF1ZXN0NDI3NDk2MTQ2","number":38923,"title":"Expand auto-import to all package.json dependencies","user":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"assignees":[{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true}],"milestone":null,"comments":23,"created_at":"2020-06-03T22:57:15Z","updated_at":"2021-11-16T21:47:03Z","closed_at":"2020-06-22T23:34:29Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/38923","html_url":"https://github.com/microsoft/TypeScript/pull/38923","diff_url":"https://github.com/microsoft/TypeScript/pull/38923.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/38923.patch","merged_at":"2020-06-22T23:34:28Z"},"body":"This PR creates an auxiliary program in the language service layer that contains node_modules packages that are specified as a direct dependency (including ~~devDependencies~~ peerDependencies) in a package.json file visible to the project’s root directory and not already present in the main program. This program is then supplied to the auto-imports machinery as a provider of additional modules that can be used for auto-import. Effectively, this means that packages that ship their own types should be available for auto-import immediately after `npm install`ing them, lifting a long-despised limitation of “you have to write out the import manually once in your project before auto-imports will work, unless it’s in `@types`, because `@types` is special.”\r\n\r\n## Performance\r\n\r\nI compared a few operations against master on the output of @angular/cli (with routing). (I chose this as a test because it’s a realistic scenario where a user’s package.json will contain more dependencies with self-shipped types than are actually used in the program. For example, `@angular/forms` is a listed dependency but isn’t used in the boilerplate.) Measurements are an average of three trials run in VS Code 1.46.0-insider (b1ef2bf) with extensions disabled.\r\n\r\n|                                | master | PR      | Diff                  |\r\n|-------------------|--------|-------|---------------|\r\n| Startup time (ms) | 2729    | 2636  | -92 ms (-3%) |\r\n|                                                                                      |\r\n| __Type “P”*__                                                               |\r\n| updateGraph        | 18         | 15        | -4 ms (-20%) |\r\n| completionInfo     | 102       | 115      | +13 ms (+13%) |\r\n|                                                                                      |\r\n| __Backspace, Type “P”**__                                         |\r\n| completionInfo     | 44        | 38        | -6 ms (-13%) |\r\n|                                                                                      |\r\n| __Comment out import***__                                        |\r\n| getApplicableRefactors | 44 | 62   | +18 ms (+42%) |\r\n\r\n<sup>* This triggers completions, including import suggestions for `PatternValidator` from `@angular/forms` in the PR trials, a suggestion that is not included in the master trials.</sup>\r\n\r\n<sup>** This triggers completions again without disrupting the auto-import cache populated in the previous action.</sup>\r\n\r\n<sup>*** This changes the structure of the primary program, which triggers an update of the auto-import provider program. The time it takes to do so is included in the subsequent `getApplicableRefactors` measurement.</sup>\r\n\r\nObservations:\r\n\r\n- Editing operations that don’t change the structure of the program are unaffected (looking at `updateGraph` time)\r\n- When generating completions, there’s an added cost associated with looking through more modules and generating auto-import suggestions for them. The penalty isn’t huge, though, and seems to be worth it for the added utility.\r\n- When something happens that triggers an update of the auto-import provider, there’s an associated cost that scales with the number of typed dependencies in package.json files that are not already in the main program (i.e., the size of the auto-import provider program). Because the Angular CLI generates boilerplate that has more unused typed dependencies than most real codebases (normally when you install a dependency, you import it shortly thereafter), I suspect that it will be rare for users to see much more delay than the 18 ms measured here.\r\n\r\n## Limitations\r\n\r\n- Only package.jsons found in the project’s `currentDirectory` and upward are considered. So in an unusual project structure like\r\n\r\n   ```\r\n   tsconfig.json\r\n   project/\r\n     node_modules/\r\n     package.json\r\n     index.ts\r\n   ```\r\n\r\n  the `project/package.json` file won’t be found.\r\n\r\n- This doesn’t currently resolve to JavaScript files—that is, to get auto imports, the package has to have `.d.ts` files. Processing plain JS for auto-imports could be explored if demand were high, but when I tried it, most of the added packages were CLI tools and plugins, not things people want to import from, so it was a performance hit for little (or even negative) utility.\r\n\r\n## Memory considerations\r\n\r\nThe auxiliary program is configured to be as light as possible, but in a project references editing scenario, it’s possible to have many projects open at once. Each project has its own language service, so each open project will typically have one of these auxiliary programs. Some possibilities for mitigating high memory usage in these scenarios: _(**updated**: decided to [exclude devDependencies](https://github.com/microsoft/TypeScript/pull/38923#issuecomment-639659024) for UX reasons)_\r\n\r\n- The auxiliary program won’t be created if there are no packages listed that aren’t already in the main program, ~~but an analysis of around 500 popular open source TypeScript repos shows that this rarely happens, largely due to devDependencies that ship their own types but are never used in the program (prominent example: typescript). Excluding devDependencies significantly increases the chances that creation an auxiliary program can be skipped, at the cost of those devDependencies being unavailable for auto-import (which can be useful when writing build scripts and tests).~~\r\n- The auxiliary program isn’t created until there’s an open file that belongs&sup1; to the project. This prevents us from creating these programs as we do a cross-project find-all-references.\r\n- If we detect that memory usage is a problem, we could dispose or stop creating these programs. I think @sheetalkamat has looked into this in the past.\r\n- ~~We could either hard-code into TypeScript or indicate in third-party projects that a package should opt out of being eagerly auto-importable. In one real-world project I tested, the contents of the auxiliary programs were limited to typescript, typescript-eslint, ts-jest, jest, and prettier, none of which are commonly imported.~~\r\n\r\nHowever, at this point I’m not convinced that any of these mitigations are necessary. The size of these programs is usually in the ballpark of a browser tab (around 50 MB from one early test). But we have avenues to explore if needed.\r\n\r\nFixes #37812 \r\nFixes #36042\r\n\r\n---\r\n\r\n&sup1; “file that belongs to the project” here means “file whose default project is the project in question,” in contrast to “file that is contained by the project”","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/38923/reactions","total_count":3,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":3,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/38923/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/45983","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/45983/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/45983/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/45983/events","html_url":"https://github.com/microsoft/TypeScript/pull/45983","id":1001939351,"node_id":"PR_kwDOAT9aAc4sAxh5","number":45983,"title":"fix(sourcemap): accept a sourceMappingURL that ends with a newline","user":{"login":"JoelEinbinder","id":4624233,"node_id":"MDQ6VXNlcjQ2MjQyMzM=","avatar_url":"https://avatars.githubusercontent.com/u/4624233?v=4","gravatar_id":"","url":"https://api.github.com/users/JoelEinbinder","html_url":"https://github.com/JoelEinbinder","followers_url":"https://api.github.com/users/JoelEinbinder/followers","following_url":"https://api.github.com/users/JoelEinbinder/following{/other_user}","gists_url":"https://api.github.com/users/JoelEinbinder/gists{/gist_id}","starred_url":"https://api.github.com/users/JoelEinbinder/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JoelEinbinder/subscriptions","organizations_url":"https://api.github.com/users/JoelEinbinder/orgs","repos_url":"https://api.github.com/users/JoelEinbinder/repos","events_url":"https://api.github.com/users/JoelEinbinder/events{/privacy}","received_events_url":"https://api.github.com/users/JoelEinbinder/received_events","type":"User","site_admin":false},"labels":[{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"assignees":[{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-09-21T06:29:00Z","updated_at":"2021-10-01T12:16:06Z","closed_at":"2021-10-01T12:16:06Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/45983","html_url":"https://github.com/microsoft/TypeScript/pull/45983","diff_url":"https://github.com/microsoft/TypeScript/pull/45983.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/45983.patch","merged_at":"2021-10-01T12:16:06Z"},"body":"Fixes #45982\r\n\r\nAfter I upgraded my TypeScript I noticed my sourcemaps broke. I bisected down to #44197, which\r\nseem to subtly change the regex matching the sourceMappingURL so that it will not match\r\nif the line ends with '\\n'.\r\n\r\nThe old regex ended with `\\s*` to match and trim all whitespace.\r\nThe new regex doesn't have that I guess for performance? But because `.` does not match `\\n`, and\r\ngetLineText preserves the ending `\\n`, this does not match any line that isn't the last one in the\r\nfile.\r\n\r\nI am happy to add a test if someone points me to the correct place for it. I tried to add\r\na fourslash test but I couldn't seem to create a file where the last line was a newline.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/45983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/45983/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43149","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43149/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43149/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43149/events","html_url":"https://github.com/microsoft/TypeScript/pull/43149","id":824970649,"node_id":"MDExOlB1bGxSZXF1ZXN0NTg3MTE4ODIw","number":43149,"title":"Import statement completions","user":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"assignees":[{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true}],"milestone":null,"comments":9,"created_at":"2021-03-08T21:28:46Z","updated_at":"2021-07-05T19:31:41Z","closed_at":"2021-03-26T21:47:07Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/43149","html_url":"https://github.com/microsoft/TypeScript/pull/43149","diff_url":"https://github.com/microsoft/TypeScript/pull/43149.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/43149.patch","merged_at":"2021-03-26T21:47:07Z"},"body":"<details>\r\n<summary><strong>Screen capture demo</strong></summary>\r\n\r\n![Kapture 2021-03-12 at 16 21 03](https://user-images.githubusercontent.com/3277153/111011663-f53c7580-834e-11eb-9a2a-3dc3ea24d079.gif)\r\n</details>\r\n\r\nEnables auto-import-style completions on import statements themselves, e.g.\r\n\r\n```ts\r\nimport useS|\r\n```\r\n\r\ncan offer a completion to\r\n\r\n```ts\r\nimport { useState| } from \"react\";\r\n```\r\n\r\n(The `|` indicates the position of the cursor both before and after the completion.)\r\n\r\nThis PR is large because, although the feature appears very similar to existing auto imports, it requires us to resolve module specifiers immediately instead of in a subsequent completion details request. Being able to do that with any reasonable amount of code reuse required quite a bit of untangling. The implementation is explained in some detail in code review comments, but note that a large amount of the PR diff is just functions being shuffled around.\r\n\r\nNote also this feature is opt-in via a user preference (`includeCompletionsForImportStatements`) because it requires corresponding editor changes. So, you won’t be able to test this yourself without building my VS Code PR as well.\r\n\r\n\r\n### Design\r\n\r\n- When these completions are offered, they are generally the same as the auto-imports you’d get elsewhere in the file:\r\n  - Same list of modules and exports are considered, but we require the first character of what you’ve typed so far to match the first character of the export name, instead of just the “contains characters in order” check. This significantly reduces the number of matches we see after you type a single character, which lets us return results way faster.\r\n  - Quote preference is respected and semicolon usage is inferred\r\n  - Inference of preferred import style is same as normal auto-import rules (i.e., when `esModuleInterop` introduces ambiguity we try to give you what you want)\r\n- Does not work on `const foo = require(\"mod\")`; only works on imports (though `import foo = require(\"mod\")` is supported in TS)\r\n- Does not work on imports where there’s already a module specifier, for I think obvious reasons\r\n- Does not work on imports where there’s already another identifier in the declaration, like `import foo, { bar|` or `import { foo, bar|`. This could be relaxed a bit later, but it was complicated and seemed fairly low value.\r\n- Inserts a snippet, so your cursor snaps to the end of the identifier you were completing, then you can tab to the end of the statement.\r\n- Due to client limitations (`replacementRange` must be a single line), does not work on imports that already span multiple lines, e.g.\r\n   ```ts\r\n   import {\r\n     foo|\r\n   }\r\n   ```\r\n\r\n### Performance\r\n\r\n<details>\r\n<summary>Following measurements assume these dependencies</summary>\r\n\r\n```json\r\n\"dependencies\": {\r\n    \"@angular/core\": \"^10.0.7\",\r\n    \"@types/eslint\": \"^7.2.5\",\r\n    \"@types/lodash\": \"^4.14.165\"\r\n    \"@angular/material\": \"^11.2.5\",\r\n    \"@reduxjs/toolkit\": \"^1.5.0\",\r\n    \"@types/node\": \"^14.14.17\",\r\n    \"@types/puppeteer\": \"^5.4.2\",\r\n    \"@types/react\": \"^17.0.3\",\r\n    \"@types/serverless\": \"^1.78.17\",\r\n    \"aggregate-error\": \"^3.1.0\",\r\n    \"antd\": \"^4.5.1\",\r\n    \"aws-sdk\": \"*\",\r\n    \"eslint\": \"^7.14.0\",\r\n    \"lodash\": \"4.17.15\",\r\n    \"mobx\": \"^5.15.4\",\r\n    \"moment\": \"2.24.0\",\r\n    \"puppeteer\": \"^6.0.0\",\r\n    \"react\": \"16.12.0\",\r\n    \"typescript\": \"^4.3.0-dev.20210322\",\r\n  }\r\n```\r\n</details>\r\n\r\n#### Import statement completions\r\n\r\nStress-tested with `aws-sdk` installed, which has just a ridiculous number of exports. First draft took several seconds without caches, which was too much, so I decided to require the first character of the identifier to match the first character of the export name before continuing the fuzzy match. So whereas regular auto imports will offer `useState` when you have just typed `state`, import statement completions require you to start with `u`.\r\n\r\n* `import a|`: 865 ms (3604 entries)\r\n* `import b|`: 456 ms(1279 entries) (some cache benefit from previous request)\r\n* `import a|`: 625 ms (max cache benefit)\r\n\r\nAfter `npm rm aws-sdk`:\r\n\r\n* `import a|`: 116 ms (197 entries)\r\n* `import b|`: 44 ms (105 entries)\r\n* `import a|`: 70 ms\r\n\r\n#### Normal auto imports\r\n\r\nThe first draft of this PR incurred about a 15% performance penalty on all auto-imports; that has now been reduced to zero or has improved performance in some scenarios. The auto import cache has been split into two pieces that are independently more durable and more reusable than they were combined.\r\n\r\nPreviously, the process went something like this:\r\n\r\n1. For each module in the program:\r\n2. Can we come up with a module specifier from the importing file to that module without crossing someone else’s node_modules?\r\n3. If that module specifier is a bare specifier (e.g. `\"lodash\"`), do the package.json files visible to the importing file list that package?\r\n4. If the answer to both of those are yes, proceed with adding info about that module's exports to a big array, deduplicating re-exports along the way.\r\n5. Save all that info in a cache.\r\n6. Iterate the big map of info and pull out the exports whose names match the partial identifier typed so far.\r\n\r\nThe main problem with this process is that steps (2) and (3) are pretty expensive, and that work might go to waste after the filter in step (6) is applied. The other problem is that they are dependent on the location of the importing file and the contents of any package.jsons visible to that file, which makes us have to invalidate the cache a lot. Too many inputs combined into a single cache means that when we invalidate the cache, a lot of work that isn’t actually invalid has to be thrown away. Now, we cache “what are the exports and re-exports of every module” and “is file A importable from file B, and by what module specifier” separately. So the process becomes more like:\r\n\r\n1. For each module in the program:\r\n2. Add info about that module’s exports to a big map (_not_ throwing away info about re-exports)\r\n3. Cache that big map\r\n4. Iterate the big map of info and pull out the exports whose names match the partial identifier typed so far.\r\n5. For each name match, see if the module is importable by the importing file (both by module specifier validity and package.json filtering)\r\n6. Add that module specifier / importability info to a cache.\r\n\r\nThis means for subsequent auto imports, we have better chances of getting cache hits, _and_ we do less expensive work up front, even with the caches are totally empty.\r\n\r\nTriggering auto import completions in a project with\r\n\r\n| | dev.20210322 (ms) | This PR (ms) |\r\n|-|------------------:|--------------:|\r\n| `completionInfo` (cold) | 259 | 264 |\r\n| `completionEntryDetails` | 102 | 74 |\r\n| `completionInfo` (cached) | 68 | 63 |\r\n| `completionEntryDetails` | 44 | 35 |\r\n\r\n### To-do\r\n\r\n- [x] Do we need a separate user preference for enabling snippet-formatted completions? **Yes, done**.\r\n- [x] Do some profiling to make sure normal completions / auto imports are not slower\r\n- [x] Check performance when there are huge numbers of possible modules to import from (e.g. with `aws-sdk` installed) and probably implement some limits/mitigations there. **Increased strictness of filter to make list smaller.**\r\n- [x] Get approval on corresponding [VS Code PR](https://github.com/microsoft/vscode/pull/119009)\r\n- [ ] Finish and merge corresponding TypeScript-VS PR (need help from @uniqueiniquity on this one 🙏)\r\n\r\nFixes #31658 ","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43149/reactions","total_count":47,"+1":17,"-1":0,"laugh":0,"hooray":7,"confused":0,"heart":16,"rocket":7,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43149/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/44308","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44308/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44308/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44308/events","html_url":"https://github.com/microsoft/TypeScript/pull/44308","id":904184755,"node_id":"MDExOlB1bGxSZXF1ZXN0NjU1MzUzMTMz","number":44308,"title":"Move string trim methods from utilities to core","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"assignees":[{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-05-27T21:00:17Z","updated_at":"2021-05-27T21:20:27Z","closed_at":"2021-05-27T21:20:24Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/44308","html_url":"https://github.com/microsoft/TypeScript/pull/44308","diff_url":"https://github.com/microsoft/TypeScript/pull/44308.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/44308.patch","merged_at":"2021-05-27T21:20:24Z"},"body":"Fixes a build ordering issue on some versions of `node` (`performance` implicitly relies on `semver` which implicitly relies on these `trim` methods).\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/44308/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44308/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/45152","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/45152/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/45152/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/45152/events","html_url":"https://github.com/microsoft/TypeScript/pull/45152","id":950952402,"node_id":"MDExOlB1bGxSZXF1ZXN0Njk1NDE4Mjk0","number":45152,"title":"Allow narrowing for any left-hand in operand","user":{"login":"gabritto","id":19519347,"node_id":"MDQ6VXNlcjE5NTE5MzQ3","avatar_url":"https://avatars.githubusercontent.com/u/19519347?v=4","gravatar_id":"","url":"https://api.github.com/users/gabritto","html_url":"https://github.com/gabritto","followers_url":"https://api.github.com/users/gabritto/followers","following_url":"https://api.github.com/users/gabritto/following{/other_user}","gists_url":"https://api.github.com/users/gabritto/gists{/gist_id}","starred_url":"https://api.github.com/users/gabritto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gabritto/subscriptions","organizations_url":"https://api.github.com/users/gabritto/orgs","repos_url":"https://api.github.com/users/gabritto/repos","events_url":"https://api.github.com/users/gabritto/events{/privacy}","received_events_url":"https://api.github.com/users/gabritto/received_events","type":"User","site_admin":false},"labels":[{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"gabritto","id":19519347,"node_id":"MDQ6VXNlcjE5NTE5MzQ3","avatar_url":"https://avatars.githubusercontent.com/u/19519347?v=4","gravatar_id":"","url":"https://api.github.com/users/gabritto","html_url":"https://github.com/gabritto","followers_url":"https://api.github.com/users/gabritto/followers","following_url":"https://api.github.com/users/gabritto/following{/other_user}","gists_url":"https://api.github.com/users/gabritto/gists{/gist_id}","starred_url":"https://api.github.com/users/gabritto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gabritto/subscriptions","organizations_url":"https://api.github.com/users/gabritto/orgs","repos_url":"https://api.github.com/users/gabritto/repos","events_url":"https://api.github.com/users/gabritto/events{/privacy}","received_events_url":"https://api.github.com/users/gabritto/received_events","type":"User","site_admin":false},"assignees":[{"login":"gabritto","id":19519347,"node_id":"MDQ6VXNlcjE5NTE5MzQ3","avatar_url":"https://avatars.githubusercontent.com/u/19519347?v=4","gravatar_id":"","url":"https://api.github.com/users/gabritto","html_url":"https://github.com/gabritto","followers_url":"https://api.github.com/users/gabritto/followers","following_url":"https://api.github.com/users/gabritto/following{/other_user}","gists_url":"https://api.github.com/users/gabritto/gists{/gist_id}","starred_url":"https://api.github.com/users/gabritto/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gabritto/subscriptions","organizations_url":"https://api.github.com/users/gabritto/orgs","repos_url":"https://api.github.com/users/gabritto/repos","events_url":"https://api.github.com/users/gabritto/events{/privacy}","received_events_url":"https://api.github.com/users/gabritto/received_events","type":"User","site_admin":false}],"milestone":null,"comments":12,"created_at":"2021-07-22T18:48:39Z","updated_at":"2021-07-29T21:06:47Z","closed_at":"2021-07-29T21:06:47Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/45152","html_url":"https://github.com/microsoft/TypeScript/pull/45152","diff_url":"https://github.com/microsoft/TypeScript/pull/45152.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/45152.patch","merged_at":"2021-07-29T21:06:45Z"},"body":"Extends a more restrictive fix already in place for #42639.\r\n\r\nPreviously, narrowing of an `in` expression happens if the expression satisfy two constraints:\r\n* In the binder: `isNarrowableInOperands` is a syntactic constraint that allows narrowing of an expression if the right `in` operand is a narrowing expression, and the left `in` operand is a string literal (e.g. `if ('prop' in c) { ... }`).\r\n* In the checker: `narrowBinaryExpression` only calls `narrowByInKeyword` if the left `in` operand's type is a string literal type.\r\n\r\nAn already merged PR (#44893) relaxed the binder constraint to allow narrowing in cases the left `in` operand is an identifier, to address scenarios such as:\r\n```ts\r\ntype A = { a: number };\r\ntype B = { b: string };\r\ndeclare c: A | B;\r\n\r\nif (\"a\" in c) {\r\n    c; // c has type `A` here\r\n}\r\n\r\nconst a = \"a\";\r\nif (a in c) {\r\n    c; // c should also have type `A` here; previously it had type `A | B`\r\n}\r\n```\r\n\r\nThis PR further relaxes the constraint in the binder for narrowing `in` expressions, by no longer placing any syntactic constraint on the left `in` operand expression. This means that an `in` expression is considered narrowable by the binder if the right expression is narrowing:\r\n\r\n```ts\r\ntype A = { a: number };\r\ntype B = { b: string };\r\ndeclare c: A | B;\r\n\r\nif (\"a\" in c) {\r\n    c; // c has type `A` here\r\n}\r\n\r\nconst a = \"a\";\r\nif (a in c) {\r\n    c; // c has type `A` here\r\n}\r\n\r\nlet stringA: string = \"a\";\r\nif ((stringA as \"a\") in c) {\r\n    c; // c now has type `A` here too\r\n}\r\n\r\nif ((stringA as (\"a\" | \"b\")) in c) {\r\n    c; // c has type `A | B`; not narrowed because the left expression has type `\"a\" | \"b\"`, i.e. not a string literal type\r\n}\r\n```\r\n\r\nConcerns:\r\nFrom what I can tell, a possible concern would be performance, since this PR makes it so the checker attempts to narrow more types of `in` expressions, but the impact may be negligible.\r\nA caveat here (brought up by @andrewbranch) regarding perf tests is that, since the checker currently doesn't narrow those kinds of expressions, real world code is unlikely to have those kinds of expressions.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/45152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/45152/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/44197","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44197/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44197/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44197/events","html_url":"https://github.com/microsoft/TypeScript/pull/44197","id":897812274,"node_id":"MDExOlB1bGxSZXF1ZXN0NjQ5NzY4ODM5","number":44197,"title":"Simplify or optimize regexes with polynomial time worst cases","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"assignees":[{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2021-05-21T08:23:26Z","updated_at":"2021-05-24T22:28:52Z","closed_at":"2021-05-24T22:28:52Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/44197","html_url":"https://github.com/microsoft/TypeScript/pull/44197","diff_url":"https://github.com/microsoft/TypeScript/pull/44197.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/44197.patch","merged_at":"2021-05-24T22:28:52Z"},"body":"A friend of mine, @robmcl4, is a PhD student as UCSB and is doing some security research involving regex performance. In the course of that, he's developed a kind of fuzzer for v8's regex engine that's _pretty good_ at identifying regexes that have polynomial or worse worst-case time in specifically v8's regex implementation. In doing said research, he happened to run it over the regexes in our codebase (along with many other codebases).\r\n\r\nIn this PR, I fix all the regexes said fuzzer indicates may be problematic so they are more performant. (I checked any replacements don't also do very poorly using said fuzzer).\r\n\r\nMost of the time, fixing the perf just means using less regexes, however one _particular_ example stands out! A regex we use a ton in multiple places, `/\\s+$/g`, actually has _terrible_ performance when used to trim whitespace from a string with a lot of _leading_ whitespace ([check the benchmark here](https://jsbench.me/gjkoxld4au/1)). Lines having leading whitespace is pretty common, so I'm hoping these fixes might actually have some small but measurable real-world perf gains.\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/44197/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44197/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/44090","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44090/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44090/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44090/events","html_url":"https://github.com/microsoft/TypeScript/pull/44090","id":892054719,"node_id":"MDExOlB1bGxSZXF1ZXN0NjQ0ODI0NjQz","number":44090,"title":"avoid computing a full shape for indirectly invalidated files","user":{"login":"sokra","id":1365881,"node_id":"MDQ6VXNlcjEzNjU4ODE=","avatar_url":"https://avatars.githubusercontent.com/u/1365881?v=4","gravatar_id":"","url":"https://api.github.com/users/sokra","html_url":"https://github.com/sokra","followers_url":"https://api.github.com/users/sokra/followers","following_url":"https://api.github.com/users/sokra/following{/other_user}","gists_url":"https://api.github.com/users/sokra/gists{/gist_id}","starred_url":"https://api.github.com/users/sokra/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sokra/subscriptions","organizations_url":"https://api.github.com/users/sokra/orgs","repos_url":"https://api.github.com/users/sokra/repos","events_url":"https://api.github.com/users/sokra/events{/privacy}","received_events_url":"https://api.github.com/users/sokra/received_events","type":"User","site_admin":false},"labels":[{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"sheetalkamat","id":8052792,"node_id":"MDQ6VXNlcjgwNTI3OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8052792?v=4","gravatar_id":"","url":"https://api.github.com/users/sheetalkamat","html_url":"https://github.com/sheetalkamat","followers_url":"https://api.github.com/users/sheetalkamat/followers","following_url":"https://api.github.com/users/sheetalkamat/following{/other_user}","gists_url":"https://api.github.com/users/sheetalkamat/gists{/gist_id}","starred_url":"https://api.github.com/users/sheetalkamat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sheetalkamat/subscriptions","organizations_url":"https://api.github.com/users/sheetalkamat/orgs","repos_url":"https://api.github.com/users/sheetalkamat/repos","events_url":"https://api.github.com/users/sheetalkamat/events{/privacy}","received_events_url":"https://api.github.com/users/sheetalkamat/received_events","type":"User","site_admin":false},"assignees":[{"login":"sheetalkamat","id":8052792,"node_id":"MDQ6VXNlcjgwNTI3OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8052792?v=4","gravatar_id":"","url":"https://api.github.com/users/sheetalkamat","html_url":"https://github.com/sheetalkamat","followers_url":"https://api.github.com/users/sheetalkamat/followers","following_url":"https://api.github.com/users/sheetalkamat/following{/other_user}","gists_url":"https://api.github.com/users/sheetalkamat/gists{/gist_id}","starred_url":"https://api.github.com/users/sheetalkamat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sheetalkamat/subscriptions","organizations_url":"https://api.github.com/users/sheetalkamat/orgs","repos_url":"https://api.github.com/users/sheetalkamat/repos","events_url":"https://api.github.com/users/sheetalkamat/events{/privacy}","received_events_url":"https://api.github.com/users/sheetalkamat/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2021-05-14T16:10:17Z","updated_at":"2021-06-23T08:45:07Z","closed_at":"2021-06-22T17:33:55Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/44090","html_url":"https://github.com/microsoft/TypeScript/pull/44090","diff_url":"https://github.com/microsoft/TypeScript/pull/44090.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/44090.patch","merged_at":"2021-06-22T17:33:55Z"},"body":"This fixes a worse case performance scenarios when a file has been changed that indirectly affects a lot of other files.\r\n\r\nIn such cases `handleDtsMayChangeOf` will be called for all indirectly affected files and will call `updateShapeSignature` to keep the build info valid. This means a lot files will have their shape computed and we already know that this is expensive.\r\n\r\nThis PR will switch all indirectly affected files to `useFileVersionAsSignature` mode, which is cheaper and the signature doesn't affect this update anyway. It will indeed affect future updates to these files, as not having a up-to-date signature will always invalidate referencing files.\r\n\r\nTo test this I added a list of files that have their shape computed (and in which way) to the baselines (first commit). Please make sure to review each commit on its own to avoid a lot of noise.\r\n\r\n### Open Questions\r\n\r\n* Should we delay computing the shapes by `handleDtsMayChangeOf` to a point after all affected files have been processed?\r\n  This would make sure that these files would use full signature instead of signature as file version\r\n  We could keep a list of these files and process them when `getNextAffectedFile` is `Done`\r\n* Should we honor `disableUseFileVersionAsSignature` for this too?\r\n\r\ncc @sheetalkamat","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/44090/reactions","total_count":3,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":3,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44090/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43973","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43973/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43973/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43973/events","html_url":"https://github.com/microsoft/TypeScript/pull/43973","id":876923740,"node_id":"MDExOlB1bGxSZXF1ZXN0NjMwOTc4ODg1","number":43973,"title":"Cache accessibe symbol chains and serialized type parameter name generation","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"assignees":[{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false}],"milestone":null,"comments":11,"created_at":"2021-05-05T23:00:19Z","updated_at":"2021-05-12T19:11:21Z","closed_at":"2021-05-12T19:11:21Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/43973","html_url":"https://github.com/microsoft/TypeScript/pull/43973","diff_url":"https://github.com/microsoft/TypeScript/pull/43973.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/43973.patch","merged_at":"2021-05-12T19:11:21Z"},"body":"Which can improve declaration emit performance significantly in some edge cases. Together, these caches bring the example in the linked issue down from 20s to 5.5s on my machine, which is a pretty marked improvement.\r\n\r\nFixes #42937\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43973/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43973/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43624","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43624/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43624/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43624/events","html_url":"https://github.com/microsoft/TypeScript/pull/43624","id":854890507,"node_id":"MDExOlB1bGxSZXF1ZXN0NjEyNzU5MzY2","number":43624,"title":"Relate non-augmenting subtypes without resorting to structural comparison","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"assignees":[{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false}],"milestone":null,"comments":32,"created_at":"2021-04-09T22:25:22Z","updated_at":"2021-05-31T22:11:23Z","closed_at":"2021-04-28T05:52:13Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/43624","html_url":"https://github.com/microsoft/TypeScript/pull/43624","diff_url":"https://github.com/microsoft/TypeScript/pull/43624.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/43624.patch","merged_at":"2021-04-28T05:52:12Z"},"body":"Fixes #43422 (this improves the perf of the example given to better-than-4.1-or-3.6 performance on my machine)\r\n\r\nMuch like the inspiration for #43435, this PR is about introducing a fast path for comparing trivial subtypes of `Array<T>` with `Array<T>` itself, without resorting to a full, slow, structural comparison (which is _especially_ useful in cases where the comparison succeeds, as it avoids an exhaustive traversal of the `Array` type structure). This is useful, since non-augmenting array subtypes turn out to be pretty commonly used in the wild for describing recursive type structures in versions of TS that predate recursive type alias support.\r\n\r\nThen, that's been generalized to normalize any empty subtype to it's single base type, if applicable, sharing these savings to empty subtypes of `Map` and other types, should they be present.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43624/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43934","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43934/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43934/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43934/events","html_url":"https://github.com/microsoft/TypeScript/pull/43934","id":874858581,"node_id":"MDExOlB1bGxSZXF1ZXN0NjI5MzI1MzYz","number":43934,"title":"Add single-element fastpath to getSupertypeOrUnion","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2021-05-03T19:50:31Z","updated_at":"2021-05-05T20:32:24Z","closed_at":"2021-05-05T20:32:24Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/43934","html_url":"https://github.com/microsoft/TypeScript/pull/43934","diff_url":"https://github.com/microsoft/TypeScript/pull/43934.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/43934.patch","merged_at":"2021-05-05T20:32:23Z"},"body":"Thus avoiding the expensive calculations in `literalTypesWithSameBaseType` when it isn't actually needed.\r\nFixes #43899, from what I can tell. Since it's a perf optimization, I don't really have a test, per-sey, other than my observed performance, since I couldn't scale the example in the issue to the point it'd crash even with tens of thousands of elements.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43934/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/42586","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42586/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42586/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42586/events","html_url":"https://github.com/microsoft/TypeScript/pull/42586","id":798762559,"node_id":"MDExOlB1bGxSZXF1ZXN0NTY1NTIzMTA2","number":42586,"title":"Switched 'ts.performance' to a mixed mode only uses native performance APIs when necessary","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"assignees":[{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2021-02-01T22:31:20Z","updated_at":"2021-02-02T00:10:57Z","closed_at":"2021-02-01T23:33:35Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/42586","html_url":"https://github.com/microsoft/TypeScript/pull/42586","diff_url":"https://github.com/microsoft/TypeScript/pull/42586.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/42586.patch","merged_at":"2021-02-01T23:33:35Z"},"body":"@amcasey recently discovered that the Web Performance API in NodeJS adds quite a bit more overhead to the total compile time than what we were doing before. This changes our use of native performance APIs in the following ways:\r\n\r\n- Revert back to calculating our own `mark` times and `measure` durations in `ts.performance` rather than using `PerformanceObserver`.\r\n- Conditionally call the native `mark` and `measure` when _any_ of the following are true:\r\n  - We are running in the browser (since a debugger can start a cpu profile at any time)\r\n  - We are running in NodeJS with Node's `--cpu-prof` option specified (to capture user timing events in the profile)\r\n  - We are running in NodeJS with V8's `--prof` option specified (to capture user timing events in the profile)\r\n  - We are running in NodeJS with our own `--generateCpuProfile` option specified (to capture user timing events in the profile)\r\n  - We are running in NodeJS and `sys.debugMode` is true (since a debugger can start a cpu profile at any time)\r\n\r\nIf none of those cases are true, we will not call the native `mark` and `measure` methods. I've filed https://github.com/nodejs/diagnostics/issues/464 to track the performance issue we encountered in NodeJS, and it sounds like they plan to have a patch available in the near future that improves their implementation.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/42586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42586/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/44713","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44713/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44713/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44713/events","html_url":"https://github.com/microsoft/TypeScript/pull/44713","id":928712039,"node_id":"MDExOlB1bGxSZXF1ZXN0Njc2Njc3ODM0","number":44713,"title":"Resolve module specifiers for auto imports in completion list (in incomplete chunks)","user":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"assignees":[{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true}],"milestone":null,"comments":1,"created_at":"2021-06-23T23:11:57Z","updated_at":"2021-06-28T22:53:14Z","closed_at":"2021-06-25T22:26:53Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/44713","html_url":"https://github.com/microsoft/TypeScript/pull/44713","diff_url":"https://github.com/microsoft/TypeScript/pull/44713.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/44713.patch","merged_at":"2021-06-25T22:26:53Z"},"body":"Fixes #42005\r\n\r\n## Summary\r\n\r\n- Before May 2020: auto imports showed no secondary label in completion lists. They had a different icon, but you had to focus them to really see that they were auto imports at all, much less where they were going to come from.\r\n- May 2020–present: auto imports showed a workspace-relative path to _a_ module that exports the symbol. If the symbol was re-exported from multiple places, the path shown may not be the path actually imported from. Also, path mappings, node_modules paths, index file paths, etc. were not taken into account—it was literally just a relative path, not a module specifier.\r\n- This PR: it's too slow to resolve module specifiers unconditionally for every auto import in an arbitrarily long completion list, so when you first trigger completions, we compute up to 100 module specifiers, and try the module specifier cache up to an additional 1000 times, and fill them into the completion list. Entries beyond what we can get module specifiers for will continue to show up with the old module path (though I’m open to tweaking their display in a way that doesn’t impact perf in another PR). Then, as you continue to type characters, if any entries were left with unresolved module specifiers VS Code will re-request completions. We pull the previous response from a cache and fill in another 100/1000 module specifiers, but only for entries that still match the identifier you’re typing—a large chunk will get filtered out with every request. These continuation requests are very fast—58 ms max in my tests—and they usually fully complete the list within one or two requests.\r\n\r\n## Screen capture 🎥 \r\n\r\nYou can see a smattering of fully resolved module specifiers in the initial list here, but some, like `changeDepenciesStateTo0` still say `node_modules`. But once I’ve type enough characters to find it without scrolling, its label has updated to be its full module specifier.\r\n\r\nhttps://user-images.githubusercontent.com/3277153/123308652-86dc8700-d4e9-11eb-862a-34429879fb41.mp4\r\n\r\nIt occurred to me while making this recording that it would probably be better to try resolving module specifiers in alphabetical order (instead of module traversal order), so all the resolved ones would be more toward the top of the list. However, this may not matter as much as it feels like it would since VS Code by default snaps you to names you recently completed elsewhere. So in the real world, you might be snapped to an essentially random spot in the list instead of near the top, depending on your settings. But I’ll think about whether the order can be smarter in some way as a future optimization.\r\n\r\n## Significant related changes\r\n\r\n- Ambient modules don’t count against the resolution limit—they always get fully resolved in the first go now, because they’re very cheap to resolve and we notice that they’re ambient while putting them in the export map cache. This applies even to older clients who otherwise can’t use this feature because they don’t signal that they can support incomplete responses/retriggerings.\r\n\r\n- As part of the way we can keep the performance cost of this down, the fuzzy matching logic for auto imports has changed from “the symbol name contains the typed characters, in order, anywhere in it” to a slightly more restrictive version, akin to what was used for import statement completions in #43149. I can’t do better to explain it than I did in the doc comment:\r\n\r\n   > True if the first character of `lowercaseCharacters` is the first character of some \"word\" in `identiferString` (where the string is split into \"words\" by camelCase and snake_case segments), then if the remaining characters of `lowercaseCharacters` appear, in order, in the rest of `identifierString`.\r\n   >\r\n   > True:\r\n   > 'state' in 'useState'\r\n   > 'sae' in 'useState'\r\n   > 'viable' in 'ENVIRONMENT_VARIABLE'\r\n   >\r\n   > False:\r\n   > 'staet' in 'useState'\r\n   > 'tate' in 'useState'\r\n   > 'ment' in 'ENVIRONMENT_VARIABLE'\r\n\r\n## Performance measurements\r\n\r\nIn a test project containing lots of expensive dependencies (especially `aws-sdk`):\r\n\r\n|           | type 'c' | type 'o' | delete word | type 'c' | type 'r' |\r\n|-------|-------:|--------:|-------------:|-------:|--------:|\r\n| 4.3.2 | 405 ms | -           | -                    | 136 ms | -           |\r\n| PR     | 415 ms | 58 ms  | -                     | 220 ms | 20 ms |\r\n\r\nI’m not thrilled with 136 → 220 for the cached scenario, but that number is only so low in the first place because of cache improvements that have been made over the last year or two, and it’s still low in absolute terms for a completion list that large. I plan to continue optimizations here as needed, but I’m ok with these numbers considering the value added.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/44713/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44713/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43659","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43659/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43659/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43659/events","html_url":"https://github.com/microsoft/TypeScript/pull/43659","id":857237905,"node_id":"MDExOlB1bGxSZXF1ZXN0NjE0NjkxMTg0","number":43659,"title":"Add jsdoc to all js statements","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"assignees":[{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2021-04-13T18:59:06Z","updated_at":"2021-04-13T22:30:26Z","closed_at":"2021-04-13T22:30:22Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/43659","html_url":"https://github.com/microsoft/TypeScript/pull/43659","diff_url":"https://github.com/microsoft/TypeScript/pull/43659.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/43659.patch","merged_at":"2021-04-13T22:30:22Z"},"body":"Fixes #39516\r\n\r\nThis is the simplest solution -- just add jsdoc to all statements if it's there, but it doesn't seems to cause a performance problem, so I think it's fine.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43659/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43732","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43732/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43732/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43732/events","html_url":"https://github.com/microsoft/TypeScript/pull/43732","id":861349872,"node_id":"MDExOlB1bGxSZXF1ZXN0NjE4MDI3NTQy","number":43732,"title":"Clean up ObjectFlags enum","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"assignees":[{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2021-04-19T14:07:56Z","updated_at":"2021-04-19T22:33:38Z","closed_at":"2021-04-19T22:33:36Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/43732","html_url":"https://github.com/microsoft/TypeScript/pull/43732","diff_url":"https://github.com/microsoft/TypeScript/pull/43732.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/43732.patch","merged_at":"2021-04-19T22:33:36Z"},"body":"This PR cleans up the `ObjectFlags` enum. Specifically, it organizes the flags such that bit positions are reused to have different meanings in different types. This frees up several bit positions and ensures that no flags use bit positions 30 and above. We previously had a flag with the value `1 << 30`, the use of which adversely impacted performance because the VM boxes values in that range.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/43732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/43732/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/44176","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44176/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44176/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44176/events","html_url":"https://github.com/microsoft/TypeScript/pull/44176","id":896107282,"node_id":"MDExOlB1bGxSZXF1ZXN0NjQ4MjQ5NTM4","number":44176,"title":"Include actual generated module specifiers in module specifier cache","user":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"assignees":[{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true}],"milestone":null,"comments":3,"created_at":"2021-05-20T00:39:09Z","updated_at":"2021-06-10T17:26:36Z","closed_at":"2021-06-10T17:26:32Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/44176","html_url":"https://github.com/microsoft/TypeScript/pull/44176","diff_url":"https://github.com/microsoft/TypeScript/pull/44176.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/44176.patch","merged_at":"2021-06-10T17:26:32Z"},"body":"<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `master` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\nAs part of #43149, I added a misnamed “module specifier cache,” which stopped short of actually caching final module specifiers, partly because that makes cache invalidation more complicated, and partly because the intermediate result that I was caching is sometimes used when we don’t actually need a final module specifier, but mainly because I didn’t realize just how worthwhile it would be to cache that final step. When experimenting with the feature more, I was disappointed that when requesting import statement completions at the exact same position twice in a row, the performance of the second call wasn’t _that_ much better.\r\n\r\nThe problem is that the last uncached step of module specifier resolution for modules inside node_modules actually has to _read_ the package’s package.json file for `types` and `typesVersions`, and this work was excluded from the cache. And it’s _extremely likely_ to be re-done over and over even within a single import statement completion request, since most packages export more than one thing. The purple fringes at the bottom of this profile are all reading `package.json` files inside node_modules. There are thousands of reads, even though there are only one or two dozen distinct package.json files. Basically, it was just a huge oversight on my part that we were redoing all this work.\r\n\r\n![CPU profile flame graph showing lots of system calls](https://user-images.githubusercontent.com/3277153/118901466-33fb2880-b8c8-11eb-9642-797cadfabf30.png)\r\n\r\nThis PR takes the module specifier cache a step farther by adding final module specifiers to the cache, in addition to the intermediate results (arrays of `ModulePath`s) that were being cached previously. Doing this requires clearing the cache when resolution-affecting config settings change, as well as when any dependency’s package.json changes, which I’ve simplified to “when there are changes in node_modules.”\r\n\r\n### Testing scenario\r\n\r\n<details><summary>Dependencies</summary>\r\n\r\n```json\r\n{\r\n    \"dependencies\": {\r\n        \"@angular/core\": \"^10.0.7\",\r\n        \"@types/eslint\": \"^7.2.5\",\r\n        \"@types/lodash\": \"^4.14.165\",\r\n        \"@angular/material\": \"^11.2.5\",\r\n        \"@reduxjs/toolkit\": \"^1.5.0\",\r\n        \"@types/node\": \"^14.14.17\",\r\n        \"@types/puppeteer\": \"^5.4.2\",\r\n        \"@types/react\": \"^17.0.3\",\r\n        \"@types/serverless\": \"^1.78.17\",\r\n        \"aggregate-error\": \"^3.1.0\",\r\n        \"antd\": \"^4.5.1\",\r\n        \"aws-sdk\": \"*\",\r\n        \"eslint\": \"^7.14.0\",\r\n        \"lodash\": \"4.17.15\",\r\n        \"mobx\": \"^5.15.4\",\r\n        \"moment\": \"2.24.0\",\r\n        \"puppeteer\": \"^6.0.0\",\r\n        \"react\": \"16.12.0\",\r\n        \"typescript\": \"^4.3.0-dev.20210322\"\r\n    }\r\n}\r\n```\r\n</details>\r\n\r\n1. `import c|` (cold cache) - 6446 entries\r\n2. Backspace once, `import c|` (warm cache, same results)\r\n3. Backspace once, `import a` (warm cache, different results) - 3855 entries\r\n\r\n### Results\r\n\r\nTimes are mean of 3 trials, elapsed time reported on `completionInfo` TS Server log.\r\n\r\n| Step | 4.4.0-dev.20210517 | This PR |\r\n|-----:|---------------------------------:|--------:|\r\n| 1 | <!-- (2076+2613+2153) / 3 --> 2,281 ms | <!-- (686+644+718) / 3 --> 683 ms |\r\n| 2 | <!-- (1732+1782+1730) / 3 --> 1,748 ms | <!-- (230+221+218) / 3 --> 223 ms |\r\n| 3 | <!-- (1048+1225+1106) / 3 --> 1,126 ms | <!-- (168+155+153) / 3 --> 159 ms |\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/44176/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44176/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/44409","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44409/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44409/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44409/events","html_url":"https://github.com/microsoft/TypeScript/pull/44409","id":910504922,"node_id":"MDExOlB1bGxSZXF1ZXN0NjYwOTE1NTk3","number":44409,"title":"Update descriptions for all compiler options","user":{"login":"orta","id":49038,"node_id":"MDQ6VXNlcjQ5MDM4","avatar_url":"https://avatars.githubusercontent.com/u/49038?v=4","gravatar_id":"","url":"https://api.github.com/users/orta","html_url":"https://github.com/orta","followers_url":"https://api.github.com/users/orta/followers","following_url":"https://api.github.com/users/orta/following{/other_user}","gists_url":"https://api.github.com/users/orta/gists{/gist_id}","starred_url":"https://api.github.com/users/orta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/orta/subscriptions","organizations_url":"https://api.github.com/users/orta/orgs","repos_url":"https://api.github.com/users/orta/repos","events_url":"https://api.github.com/users/orta/events{/privacy}","received_events_url":"https://api.github.com/users/orta/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"orta","id":49038,"node_id":"MDQ6VXNlcjQ5MDM4","avatar_url":"https://avatars.githubusercontent.com/u/49038?v=4","gravatar_id":"","url":"https://api.github.com/users/orta","html_url":"https://github.com/orta","followers_url":"https://api.github.com/users/orta/followers","following_url":"https://api.github.com/users/orta/following{/other_user}","gists_url":"https://api.github.com/users/orta/gists{/gist_id}","starred_url":"https://api.github.com/users/orta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/orta/subscriptions","organizations_url":"https://api.github.com/users/orta/orgs","repos_url":"https://api.github.com/users/orta/repos","events_url":"https://api.github.com/users/orta/events{/privacy}","received_events_url":"https://api.github.com/users/orta/received_events","type":"User","site_admin":false},"assignees":[{"login":"orta","id":49038,"node_id":"MDQ6VXNlcjQ5MDM4","avatar_url":"https://avatars.githubusercontent.com/u/49038?v=4","gravatar_id":"","url":"https://api.github.com/users/orta","html_url":"https://github.com/orta","followers_url":"https://api.github.com/users/orta/followers","following_url":"https://api.github.com/users/orta/following{/other_user}","gists_url":"https://api.github.com/users/orta/gists{/gist_id}","starred_url":"https://api.github.com/users/orta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/orta/subscriptions","organizations_url":"https://api.github.com/users/orta/orgs","repos_url":"https://api.github.com/users/orta/repos","events_url":"https://api.github.com/users/orta/events{/privacy}","received_events_url":"https://api.github.com/users/orta/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2021-06-03T13:38:59Z","updated_at":"2021-06-15T20:20:15Z","closed_at":"2021-06-15T20:20:14Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/44409","html_url":"https://github.com/microsoft/TypeScript/pull/44409","diff_url":"https://github.com/microsoft/TypeScript/pull/44409.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/44409.patch","merged_at":"2021-06-15T20:20:14Z"},"body":"Back at the [end of 2020](https://hackmd.io/@DFx8wpb6T2mUkhOHRFuOmw/H1xlos-Xv) we had a series of meetings going through all the tsconfig options, revising their descriptions and making them all consistent. They were then moved into the website, with the goal of bringing them upstream later. Today is that later, heh.\r\n\r\n\r\nOverview of the new descriptions:\r\n```\r\n❯ node built/local/tsc.js --help --all\r\nVersion 4.4.0-dev\r\nSyntax:   tsc [options] [file...]\r\n\r\nExamples: tsc hello.ts\r\n          tsc --outFile file.js file.ts\r\n          tsc @args.txt\r\n          tsc --build tsconfig.json\r\n\r\nOptions:\r\n --all                                              Show all compiler options.\r\n --allowJs                                          Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files.\r\n --allowSyntheticDefaultImports                     Allow 'import x from y' when a module doesn't have a default export.\r\n --allowUmdGlobalAccess                             Allow accessing UMD globals from modules.\r\n --allowUnreachableCode                             Disable error reporting for unreachable code.\r\n --allowUnusedLabels                                Disable error reporting for unused labels.\r\n --alwaysStrict                                     Ensure 'use strict' is always emitted.\r\n --assumeChangesOnlyAffectDirectDependencies        Have recompiles in projects that use `incremental` and `watch` mode assume that changes within a file will only affect files directly depending on it.\r\n --baseUrl                                          Specify the base directory to resolve non-relative module names.\r\n -b, --build                                        Build one or more projects and their dependencies, if out of date\r\n --charset                                          No longer supported. In early versions, manually set the text encoding for reading files.\r\n --checkJs                                          Enable error reporting in type-checked JavaScript files.\r\n --composite                                        Enable constraints that allow a TypeScript project to be used with project references.\r\n -d, --declaration                                  Generate .d.ts files from TypeScript and JavaScript files in your project.\r\n --declarationDir DIRECTORY                         Specify the output directory for generated declaration files.\r\n --declarationMap                                   Create sourcemaps for d.ts files.\r\n --diagnostics                                      Output compiler performance information after building.\r\n --disableReferencedProjectLoad                     Reduce the number of projects loaded automatically by TypeScript.\r\n --disableSizeLimit                                 Remove the 20mb cap on total source code size for JavaScript files in the TypeScript language server.\r\n --disableSolutionSearching                         Opt a project out of multi-project reference checking when editing.\r\n --disableSourceOfProjectReferenceRedirect          Disable preferring source files instead of declaration files when referencing composite projects\r\n --downlevelIteration                               Emit more compliant, but verbose and less performant JavaScript for iteration.\r\n --emitBOM                                          Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.\r\n --emitDeclarationOnly                              Only output d.ts files and not JavaScript files.\r\n --emitDecoratorMetadata                            Emit design-type metadata for decorated declarations in source files.\r\n --esModuleInterop                                  Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility.\r\n --experimentalDecorators                           Enable experimental support for TC39 stage 2 draft decorators.\r\n --explainFiles                                     Print files read during the compilation including why it was included.\r\n --extendedDiagnostics                              Output more detailed compiler performance information after building.\r\n --forceConsistentCasingInFileNames                 Ensure that casing is correct in imports.\r\n --generateCpuProfile FILE OR DIRECTORY             Emit a v8 CPU profile of the compiler run for debugging.\r\n --generateTrace DIRECTORY                          Generates an event trace and a list of types.\r\n -h, --help                                         Print this message.\r\n --importHelpers                                    Allow importing helper functions from tslib once per project, instead of including them per-file.\r\n --importsNotUsedAsValues                           Specify emit/checking behavior for imports that are only used for types\r\n -i, --incremental                                  Enable incremental compilation\r\n --init                                             Initializes a TypeScript project and creates a tsconfig.json file.\r\n --inlineSourceMap                                  Include sourcemap files inside the emitted JavaScript.\r\n --inlineSources                                    Include source code in the sourcemaps inside the emitted JavaScript.\r\n --isolatedModules                                  Ensure that each file can be safely transpiled without relying on other imports.\r\n --jsx KIND                                         Specify what JSX code is generated.\r\n --jsxFactory                                       Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'\r\n --jsxFragmentFactory                               Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'.\r\n --jsxImportSource                                  Specify module specifier used to import the JSX factory functions when using `jsx: react-jsx*`.`\r\n --keyofStringsOnly                                 Make keyof only return strings instead of string, numbers or symbols. Legacy option.\r\n --lib                                              Specify a set of bundled library declaration files that describe the target runtime environment.\r\n                                                      'es5' 'es6' 'es2015' 'es7' 'es2016' 'es2017' 'es2018' 'es2019' 'es2020' 'es2021' 'esnext' 'dom' 'dom.iterable' 'webworker' 'webworker.importscripts' 'webworker.iterable' 'scripthost' 'es2015.core' 'es2015.collection' 'es2015.generator' 'es2015.iterable' 'es2015.promise' 'es2015.proxy' 'es2015.reflect' 'es2015.symbol' 'es2015.symbol.wellknown' 'es2016.array.include' 'es2017.object' 'es2017.sharedmemory' 'es2017.string' 'es2017.intl' 'es2017.typedarrays' 'es2018.asyncgenerator' 'es2018.asynciterable' 'es2018.intl' 'es2018.promise' 'es2018.regexp' 'es2019.array' 'es2019.object' 'es2019.string' 'es2019.symbol' 'es2020.bigint' 'es2020.promise' 'es2020.sharedmemory' 'es2020.string' 'es2020.symbol.wellknown' 'es2020.intl' 'es2021.promise' 'es2021.string' 'es2021.weakref' 'esnext.array' 'esnext.symbol' 'esnext.asynciterable' 'esnext.intl' 'esnext.bigint' 'esnext.string' 'esnext.promise' 'esnext.weakref' \r\n --listEmittedFiles                                 Print the names of emitted files after a compilation.\r\n --listFiles                                        Print all of the files read during the compilation.\r\n --listFilesOnly                                    Print names of files that are part of the compilation and then stop processing.\r\n --locale                                           Set the language of the messaging from TypeScript. This does not affect emit.\r\n --mapRoot LOCATION                                 Specify the location where debugger should locate map files instead of generated locations.\r\n --maxNodeModuleJsDepth                             Specify the maximum folder depth used for checking JavaScript files from `node_modules`. Only applicable with `allowJs`.\r\n -m KIND, --module KIND                             Specify what module code is generated.\r\n --moduleResolution STRATEGY                        Specify how TypeScript looks up a file from a given module specifier.\r\n --newLine NEWLINE                                  Set the newline character for emitting files.\r\n --noEmit                                           Disable emitting file from a compilation.\r\n --noEmitHelpers                                    Disable generating custom helper functions like `__extends` in compiled output.\r\n --noEmitOnError                                    Disable emitting files if any type checking errors are reported.\r\n --noErrorTruncation                                Disable truncating types in error messages.\r\n --noFallthroughCasesInSwitch                       Enable error reporting for fallthrough cases in switch statements.\r\n --noImplicitAny                                    Enable error reporting for expressions and declarations with an implied `any` type..\r\n --noImplicitOverride                               Add `undefined` to a type when accessed using an index.\r\n --noImplicitReturns                                Enable error reporting for codepaths that do not explicitly return in a function.\r\n --noImplicitThis                                   Enable error reporting when `this` is given the type `any`.\r\n --noImplicitUseStrict                              Disable adding 'use strict' directives in emitted JavaScript files.\r\n --noLib                                            Disable including any library files, including the default lib.d.ts.\r\n --noPropertyAccessFromIndexSignature               Enforces using indexed accessors for keys declared using an indexed type\r\n --noResolve                                        Disallow `import`s, `require`s or `<reference>`s from expanding the number of files TypeScript should add to a project.\r\n --noStrictGenericChecks                            Disable strict checking of generic signatures in function types.\r\n --noUncheckedIndexedAccess                         Include 'undefined' in index signature results\r\n --noUnusedLocals                                   Enable error reporting when a local variables aren't read.\r\n --noUnusedParameters                               Raise an error when a function parameter isn't read\r\n --out FILE                                         Deprecated setting. Use `outFile` instead.\r\n --outDir DIRECTORY                                 Specify an output folder for all emitted files.\r\n --outFile FILE                                     Specify a file that bundles all outputs into one JavaScript file. If `declaration` is true, also designates a file that bundles all .d.ts output.\r\n --paths                                            Specify a set of entries that re-map imports to additional lookup locations.\r\n --plugins                                          List of language service plugins.\r\n --preserveConstEnums                               Disable erasing `const enum` declarations in generated code.\r\n --preserveSymlinks                                 Disable resolving symlinks to their realpath. This correlates to the same flag in node.\r\n --preserveWatchOutput                              Disable wiping the console in watch mode\r\n --pretty                                           Enable color and formatting in output to make compiler errors easier to read\r\n -p FILE OR DIRECTORY, --project FILE OR DIRECTORY  Compile the project given the path to its configuration file, or to a folder with a 'tsconfig.json'.\r\n --reactNamespace                                   Specify the object invoked for `createElement`. This only applies when targeting `react` JSX emit.\r\n --removeComments                                   Disable emitting comments.\r\n --resolveJsonModule                                Enable importing .json files\r\n --rootDir LOCATION                                 Specify the root folder within your source files.\r\n --rootDirs                                         Allow multiple folders to be treated as one when resolving modules.\r\n --showConfig                                       Print the final configuration instead of building.\r\n --skipDefaultLibCheck                              Skip type checking .d.ts files that are included with TypeScript.\r\n --skipLibCheck                                     Skip type checking all .d.ts files.\r\n --sourceMap                                        Create source map files for emitted JavaScript files.\r\n --sourceRoot LOCATION                              Specify the root path for debuggers to find the reference source code.\r\n --strict                                           Enable all strict type-checking options.\r\n --strictBindCallApply                              Check that the arguments for `bind`, `call`, and `apply` methods match the original function.\r\n --strictFunctionTypes                              When assigning functions, check to ensure parameters and the return values are subtype-compatible.\r\n --strictNullChecks                                 When type checking, take into account `null` and `undefined`.\r\n --strictOptionalProperties                         Enable strict checking of optional properties.\r\n --strictPropertyInitialization                     Check for class properties that are declared but not set in the constructor.\r\n --stripInternal                                    Disable emitting declarations that have `@internal` in their JSDoc comments.\r\n --suppressExcessPropertyErrors                     Disable reporting of excess property errors during the creation of object literals.\r\n --suppressImplicitAnyIndexErrors                   Suppress `noImplicitAny` errors when indexing objects that lack index signatures.\r\n -t VERSION, --target VERSION                       Set the JavaScript language version for emitted JavaScript and include compatible library declarations.\r\n --traceResolution                                  Log paths used during the `moduleResolution` process.\r\n --tsBuildInfoFile FILE                             Specify the folder for .tsbuildinfo incremental compilation files.\r\n --typeRoots                                        Specify multiple folders that act like `./node_modules/@types`.\r\n --types                                            Specify type package names to be included without being referenced in a source file.\r\n --useDefineForClassFields                          Emit ECMAScript-standard-compliant class fields.\r\n -v, --version                                      Print the compiler's version.\r\n -w, --watch                                        Watch input files.\r\n @<file>                                            Insert command line options and files from a file.\r\n```","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/44409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/44409/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/36643","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36643/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36643/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36643/events","html_url":"https://github.com/microsoft/TypeScript/pull/36643","id":560666155,"node_id":"MDExOlB1bGxSZXF1ZXN0MzcxNjE2NTMx","number":36643,"title":"Baseline arity checks for jsx sfc tags","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"assignees":[{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2020-02-05T22:26:17Z","updated_at":"2021-03-31T21:38:18Z","closed_at":"2020-02-25T21:44:23Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/36643","html_url":"https://github.com/microsoft/TypeScript/pull/36643","diff_url":"https://github.com/microsoft/TypeScript/pull/36643.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/36643.patch","merged_at":"2020-02-25T21:44:23Z"},"body":"Fixes the worst cases of #33104 without going so far as #29818 (which is terrible for performance).\r\n\r\nIn this change, we lookup the jsx factory function during jsx signature resolution, and check if _any_ overload expects a function-ish thing; if one does, we validate that, for at least one of those overloads, the number of arguments the FC being used as the tag is less than or equal to the number provided by the JSX library.\r\n\r\nThis will _not_ cause an error in the two-argument case for `react`, as `react` specifies FCs can have a second argument of type `any` for the react `context`. So the actual example from the original report in #33104 would be completely uncaught (and there's really nothing we can do about it, since the function actually looks like a completely valid FC), however the more egregious examples down-thread of 3+ arguments do get caught.\r\n\r\nNotably, I have _not_ made this contingent on `strictFunctionTypes` - normally our signature arity rules outside of `strictFunctionTypes` mode would allow the assignment (function bivariance, wooo), were we actually assigning the tag type to the argument type, but that does not come into play here, as I am decomposing the types and checking argument counts directly.\r\n\r\ncc @DanielRosenwasser for error message feedback~","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/36643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36643/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/40593","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40593/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40593/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40593/events","html_url":"https://github.com/microsoft/TypeScript/pull/40593","id":702973097,"node_id":"MDExOlB1bGxSZXF1ZXN0NDg4MTYyMTk4","number":40593,"title":"Migrate 'ts.performance' to use native performance hooks when available","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"assignees":[{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false}],"milestone":null,"comments":18,"created_at":"2020-09-16T18:10:46Z","updated_at":"2020-10-24T00:33:13Z","closed_at":"2020-10-24T00:32:56Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/40593","html_url":"https://github.com/microsoft/TypeScript/pull/40593","diff_url":"https://github.com/microsoft/TypeScript/pull/40593.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/40593.patch","merged_at":"2020-10-24T00:32:56Z"},"body":"The Web Performance User Timings API has been available in [NodeJS since 8.4](https://nodejs.org/dist/latest-v14.x/docs/api/perf_hooks.html), and is supported by [pretty much every major browser (except for Opera Mini)](https://caniuse.com/user-timing). \r\n\r\nThis PR refactors `ts.performance` to leverage either the browser version or the version from Node's `perf_hooks` module when available. There's also a shim that's only loaded in the language service, but I may end up removing the shim and just have the `ts.performance` API be a noop if there's no native support available.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/40593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40593/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/42540","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42540/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42540/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42540/events","html_url":"https://github.com/microsoft/TypeScript/pull/42540","id":796378456,"node_id":"MDExOlB1bGxSZXF1ZXN0NTYzNTY5NDA1","number":42540,"title":"Narrow QualifiedName inside typeof","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"assignees":[{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2021-01-28T21:12:46Z","updated_at":"2021-01-28T23:19:06Z","closed_at":"2021-01-28T23:19:02Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/42540","html_url":"https://github.com/microsoft/TypeScript/pull/42540","diff_url":"https://github.com/microsoft/TypeScript/pull/42540.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/42540.patch","merged_at":"2021-01-28T23:19:02Z"},"body":"Previously this wasn't narrowed at all. Now there is a control flow node and code in isMatchingReference.\r\n\r\nI think this is a straightforward improvement as long as it doesn't cause performance problems.\r\n\r\nFixes #40977\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/42540/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42540/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/42653","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42653/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42653/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42653/events","html_url":"https://github.com/microsoft/TypeScript/pull/42653","id":801650455,"node_id":"MDExOlB1bGxSZXF1ZXN0NTY3OTI4Njk0","number":42653,"title":"Use a (hopefully) more efficient regex for matching jquery in the safelist","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"assignees":[{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2021-02-04T21:31:29Z","updated_at":"2021-02-04T21:53:05Z","closed_at":"2021-02-04T21:53:05Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/42653","html_url":"https://github.com/microsoft/TypeScript/pull/42653","diff_url":"https://github.com/microsoft/TypeScript/pull/42653.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/42653.patch","merged_at":"2021-02-04T21:53:05Z"},"body":"This was flagged as a [potential performance issue](https://github.com/microsoft/TypeScript/security/code-scanning/9?query=ref%3Arefs%2Fheads%2Fmaster) for files named like `jquery-99999999999999999999999999.js` (or similar), which, while unlikely to occur in the wild, is probably simple enough for us to change the regex to avoid triggering (vs suppressing the codeQL result). I'm not 100% sure the new regex won't also have catastrophic backtracking, but I trust codeQL'll probably flag this PR if it does~\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/42653/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42653/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/40590","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40590/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40590/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40590/events","html_url":"https://github.com/microsoft/TypeScript/pull/40590","id":702941552,"node_id":"MDExOlB1bGxSZXF1ZXN0NDg4MTM1NTYx","number":40590,"title":"`performanceTimestamp`: use `performance.now` on node","user":{"login":"elibarzilay","id":185905,"node_id":"MDQ6VXNlcjE4NTkwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/185905?v=4","gravatar_id":"","url":"https://api.github.com/users/elibarzilay","html_url":"https://github.com/elibarzilay","followers_url":"https://api.github.com/users/elibarzilay/followers","following_url":"https://api.github.com/users/elibarzilay/following{/other_user}","gists_url":"https://api.github.com/users/elibarzilay/gists{/gist_id}","starred_url":"https://api.github.com/users/elibarzilay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elibarzilay/subscriptions","organizations_url":"https://api.github.com/users/elibarzilay/orgs","repos_url":"https://api.github.com/users/elibarzilay/repos","events_url":"https://api.github.com/users/elibarzilay/events{/privacy}","received_events_url":"https://api.github.com/users/elibarzilay/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820464799,"node_id":"MDU6TGFiZWwxODIwNDY0Nzk5","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Backlog%20Bug","name":"For Backlog Bug","color":"9ff4ed","default":false,"description":"PRs that fix a backlog bug"}],"state":"closed","locked":false,"assignee":{"login":"elibarzilay","id":185905,"node_id":"MDQ6VXNlcjE4NTkwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/185905?v=4","gravatar_id":"","url":"https://api.github.com/users/elibarzilay","html_url":"https://github.com/elibarzilay","followers_url":"https://api.github.com/users/elibarzilay/followers","following_url":"https://api.github.com/users/elibarzilay/following{/other_user}","gists_url":"https://api.github.com/users/elibarzilay/gists{/gist_id}","starred_url":"https://api.github.com/users/elibarzilay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elibarzilay/subscriptions","organizations_url":"https://api.github.com/users/elibarzilay/orgs","repos_url":"https://api.github.com/users/elibarzilay/repos","events_url":"https://api.github.com/users/elibarzilay/events{/privacy}","received_events_url":"https://api.github.com/users/elibarzilay/received_events","type":"User","site_admin":false},"assignees":[{"login":"elibarzilay","id":185905,"node_id":"MDQ6VXNlcjE4NTkwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/185905?v=4","gravatar_id":"","url":"https://api.github.com/users/elibarzilay","html_url":"https://github.com/elibarzilay","followers_url":"https://api.github.com/users/elibarzilay/followers","following_url":"https://api.github.com/users/elibarzilay/following{/other_user}","gists_url":"https://api.github.com/users/elibarzilay/gists{/gist_id}","starred_url":"https://api.github.com/users/elibarzilay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elibarzilay/subscriptions","organizations_url":"https://api.github.com/users/elibarzilay/orgs","repos_url":"https://api.github.com/users/elibarzilay/repos","events_url":"https://api.github.com/users/elibarzilay/events{/privacy}","received_events_url":"https://api.github.com/users/elibarzilay/received_events","type":"User","site_admin":false},{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2020-09-16T17:25:31Z","updated_at":"2020-10-15T23:02:09Z","closed_at":"2020-10-15T23:01:52Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/40590","html_url":"https://github.com/microsoft/TypeScript/pull/40590","diff_url":"https://github.com/microsoft/TypeScript/pull/40590.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/40590.patch","merged_at":"2020-10-15T23:01:51Z"},"body":"On node, `performance` is found in `require(\"perf_hooks\")`.\r\n\r\nFixes #40591.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/40590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40590/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/42095","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42095/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42095/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42095/events","html_url":"https://github.com/microsoft/TypeScript/pull/42095","id":774090356,"node_id":"MDExOlB1bGxSZXF1ZXN0NTQ1MDY4NjI0","number":42095,"title":"Do not suggest paths inside node_modules/.pnpm as module specifiers","user":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"assignees":[{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true}],"milestone":null,"comments":5,"created_at":"2020-12-23T23:21:50Z","updated_at":"2021-01-13T21:11:19Z","closed_at":"2021-01-12T22:04:03Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/42095","html_url":"https://github.com/microsoft/TypeScript/pull/42095","diff_url":"https://github.com/microsoft/TypeScript/pull/42095.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/42095.patch","merged_at":"2021-01-12T22:04:03Z"},"body":"<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `master` branch\r\n* [ ] You've successfully run `gulp runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\nFixes the superfluous import fix suggestions in #40584 and improves the performance of the fixes by ~60%. Additional work is still necessary to improve perf further, but this is a first step that stands on its own.\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/42095/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/42095/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/37283","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/37283/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/37283/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/37283/events","html_url":"https://github.com/microsoft/TypeScript/pull/37283","id":577562974,"node_id":"MDExOlB1bGxSZXF1ZXN0Mzg1MzExNjU5","number":37283,"title":"Added runtime TypeError for non-function, non-null __extends","user":{"login":"JoshuaKGoldberg","id":3335181,"node_id":"MDQ6VXNlcjMzMzUxODE=","avatar_url":"https://avatars.githubusercontent.com/u/3335181?v=4","gravatar_id":"","url":"https://api.github.com/users/JoshuaKGoldberg","html_url":"https://github.com/JoshuaKGoldberg","followers_url":"https://api.github.com/users/JoshuaKGoldberg/followers","following_url":"https://api.github.com/users/JoshuaKGoldberg/following{/other_user}","gists_url":"https://api.github.com/users/JoshuaKGoldberg/gists{/gist_id}","starred_url":"https://api.github.com/users/JoshuaKGoldberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JoshuaKGoldberg/subscriptions","organizations_url":"https://api.github.com/users/JoshuaKGoldberg/orgs","repos_url":"https://api.github.com/users/JoshuaKGoldberg/repos","events_url":"https://api.github.com/users/JoshuaKGoldberg/events{/privacy}","received_events_url":"https://api.github.com/users/JoshuaKGoldberg/received_events","type":"User","site_admin":false},"labels":[{"id":1820464799,"node_id":"MDU6TGFiZWwxODIwNDY0Nzk5","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Backlog%20Bug","name":"For Backlog Bug","color":"9ff4ed","default":false,"description":"PRs that fix a backlog bug"}],"state":"closed","locked":false,"assignee":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"assignees":[{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false}],"milestone":null,"comments":11,"created_at":"2020-03-08T20:44:55Z","updated_at":"2020-12-02T01:56:47Z","closed_at":"2020-12-02T01:43:26Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/37283","html_url":"https://github.com/microsoft/TypeScript/pull/37283","diff_url":"https://github.com/microsoft/TypeScript/pull/37283.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/37283.patch","merged_at":"2020-12-02T01:43:25Z"},"body":"As per the linked issue, although TypeScript already has checking in place that tries to prevent users from extending classes before their declaration, it's still possible to accidentally work around the checker. This adds a block to `__extends` that throws a `TypeError` if the base class `b` isn't a function.\r\n\r\nThis'll be what the new error message is:\r\n\r\n```\r\nC:\\Code\\tstest\\index.js:10\r\n            throw new TypeError(\"Class extends value \" + b + \" is not a constructor or null\");\r\n            ^\r\n\r\nTypeError: Class extends value undefined is not a constructor or null\r\n    at __extends (C:\\Code\\tstest\\index.js:10:19)\r\n    at C:\\Code\\tstest\\index.js:18:5\r\n    at Object.<anonymous> (C:\\Code\\tstest\\index.js:23:2)\r\n```\r\n\r\nMy _hope_ is that this will not have a negative performance impact on community performance-critical applications, as they would likely already prefer newer browser/Node versions and output ES2015+ code. If there is something you can think of that I should do to verify that hope, I'd love to know!\r\n\r\n<details>\r\n<summary>These errors match the behavior in Chrome, Node, and Firefox</summary>\r\nRuntime errors in Chrome 80 and Node 12.0.0:\r\n\r\n```js\r\nclass X extends null { }\r\n// undefined\r\n\r\nclass Y extends undefined { }\r\n// TypeError: Class extends value undefined is not a constructor or null\r\n\r\nclass Z extends 0 { }\r\n// TypeError: Class extends value 0 is not a constructor or null\r\n```\r\n\r\n`Class extends value {0} is not a constructor or null` matches the Node.js behavior:\r\n* [Message template](https://github.com/nodejs/node/blob/2bdeb88c27b4d8de3a8f6b7a438cf0bcb88fa927/deps/v8/src/common/message-template.h) for `ExtendsValueNotConstructor`\r\n* [Error thrown with that message](https://github.com/nodejs/node/blob/6ca81ad72a3c6fdf16c683335be748f22aaa9a0d/deps/v8/src/runtime/runtime-classes.cc#L617) when `!super_class->IsConstructor()`\r\n\r\nRuntime errors in Firefox 72.0.1:\r\n\r\n```js\r\nclass X extends null { }\r\n// undefined\r\n\r\nclass Y extends undefined { }\r\n// TypeError: class heritage undefined is not an object or null\r\n\r\nclass Z extends 0 { }\r\n// TypeError: class heritage 0 is not an object or null\r\n```\r\n</details>\r\n\r\nFixes #5794.\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/37283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/37283/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/40953","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40953/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40953/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40953/events","html_url":"https://github.com/microsoft/TypeScript/pull/40953","id":715185064,"node_id":"MDExOlB1bGxSZXF1ZXN0NDk4MTM2OTk2","number":40953,"title":"Improve the performance of requesting completions within a massive array literal","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""},{"id":1820418576,"node_id":"MDU6TGFiZWwxODIwNDE4NTc2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Milestone%20Bug","name":"For Milestone Bug","color":"001f77","default":false,"description":"PRs that fix a bug with a specific milestone"}],"state":"closed","locked":false,"assignee":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"assignees":[{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2020-10-05T21:48:21Z","updated_at":"2020-10-07T19:53:31Z","closed_at":"2020-10-07T19:44:21Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/40953","html_url":"https://github.com/microsoft/TypeScript/pull/40953","diff_url":"https://github.com/microsoft/TypeScript/pull/40953.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/40953.patch","merged_at":"2020-10-07T19:44:20Z"},"body":"By binary searching for the first child whose `end` position is greater than the input position, rather than scanning them all in order (since tokens and nodes are generally sorted by both their `pos` and `end` in lists of `children`). This takes the runtime of the example given in the linked issue (which is the test verbatim) down from \"will this ever end, I've waited at least 5 minutes\" to a somewhat more reasonable 11s.\r\n\r\nFixes #40100\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/40953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40953/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/40667","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40667/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40667/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40667/events","html_url":"https://github.com/microsoft/TypeScript/pull/40667","id":705656037,"node_id":"MDExOlB1bGxSZXF1ZXN0NDkwMzQ1Mjcw","number":40667,"title":"Remove duplicate comment","user":{"login":"TimvdLippe","id":5948271,"node_id":"MDQ6VXNlcjU5NDgyNzE=","avatar_url":"https://avatars.githubusercontent.com/u/5948271?v=4","gravatar_id":"","url":"https://api.github.com/users/TimvdLippe","html_url":"https://github.com/TimvdLippe","followers_url":"https://api.github.com/users/TimvdLippe/followers","following_url":"https://api.github.com/users/TimvdLippe/following{/other_user}","gists_url":"https://api.github.com/users/TimvdLippe/gists{/gist_id}","starred_url":"https://api.github.com/users/TimvdLippe/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TimvdLippe/subscriptions","organizations_url":"https://api.github.com/users/TimvdLippe/orgs","repos_url":"https://api.github.com/users/TimvdLippe/repos","events_url":"https://api.github.com/users/TimvdLippe/events{/privacy}","received_events_url":"https://api.github.com/users/TimvdLippe/received_events","type":"User","site_admin":false},"labels":[{"id":1820465235,"node_id":"MDU6TGFiZWwxODIwNDY1MjM1","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Housekeeping","name":"Housekeeping","color":"4DDEB7","default":false,"description":"Housekeeping PRs"},{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2020-09-21T14:35:46Z","updated_at":"2020-09-30T16:41:38Z","closed_at":"2020-09-30T16:41:32Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/40667","html_url":"https://github.com/microsoft/TypeScript/pull/40667","diff_url":"https://github.com/microsoft/TypeScript/pull/40667.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/40667.patch","merged_at":"2020-09-30T16:41:32Z"},"body":"Discovered while I was reading the source code to investigate a performance problem.\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/40667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40667/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/40043","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40043/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40043/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40043/events","html_url":"https://github.com/microsoft/TypeScript/pull/40043","id":678739923,"node_id":"MDExOlB1bGxSZXF1ZXN0NDY3NjM4MzI5","number":40043,"title":"Set stackTraceLimit to 0 in fileSystemEntryExists ","user":{"login":"gluxon","id":906558,"node_id":"MDQ6VXNlcjkwNjU1OA==","avatar_url":"https://avatars.githubusercontent.com/u/906558?v=4","gravatar_id":"","url":"https://api.github.com/users/gluxon","html_url":"https://github.com/gluxon","followers_url":"https://api.github.com/users/gluxon/followers","following_url":"https://api.github.com/users/gluxon/following{/other_user}","gists_url":"https://api.github.com/users/gluxon/gists{/gist_id}","starred_url":"https://api.github.com/users/gluxon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gluxon/subscriptions","organizations_url":"https://api.github.com/users/gluxon/orgs","repos_url":"https://api.github.com/users/gluxon/repos","events_url":"https://api.github.com/users/gluxon/events{/privacy}","received_events_url":"https://api.github.com/users/gluxon/received_events","type":"User","site_admin":false},"labels":[{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/microsoft/TypeScript/milestones/128","html_url":"https://github.com/microsoft/TypeScript/milestone/128","labels_url":"https://api.github.com/repos/microsoft/TypeScript/milestones/128/labels","id":5795669,"node_id":"MDk6TWlsZXN0b25lNTc5NTY2OQ==","number":128,"title":"TypeScript 4.0.3","description":null,"creator":{"login":"DanielRosenwasser","id":972891,"node_id":"MDQ6VXNlcjk3Mjg5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/972891?v=4","gravatar_id":"","url":"https://api.github.com/users/DanielRosenwasser","html_url":"https://github.com/DanielRosenwasser","followers_url":"https://api.github.com/users/DanielRosenwasser/followers","following_url":"https://api.github.com/users/DanielRosenwasser/following{/other_user}","gists_url":"https://api.github.com/users/DanielRosenwasser/gists{/gist_id}","starred_url":"https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DanielRosenwasser/subscriptions","organizations_url":"https://api.github.com/users/DanielRosenwasser/orgs","repos_url":"https://api.github.com/users/DanielRosenwasser/repos","events_url":"https://api.github.com/users/DanielRosenwasser/events{/privacy}","received_events_url":"https://api.github.com/users/DanielRosenwasser/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":6,"state":"closed","created_at":"2020-08-21T06:43:31Z","updated_at":"2021-03-04T23:21:03Z","due_on":null,"closed_at":"2021-03-04T23:21:03Z"},"comments":22,"created_at":"2020-08-13T21:18:17Z","updated_at":"2020-09-18T22:48:44Z","closed_at":"2020-08-18T20:54:59Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/40043","html_url":"https://github.com/microsoft/TypeScript/pull/40043","diff_url":"https://github.com/microsoft/TypeScript/pull/40043.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/40043.patch","merged_at":"2020-08-18T20:54:59Z"},"body":"The exception thrown by Node.js's fs.statSync function contains a stack trace that can be expensive to compute. Since this exception isn't used by fileSystemEntryExists, we can safely set Error.stackTraceLimit to 0 without a change in behavior.\r\n\r\nA significant performance improvement was noticed with this change while profiling tsserver on packages within a proprietary monorepo. Specifically, my team saw high self time percentages for Node.js's `uvException` and `handleErrorFromBinding` internal functions. These functions are executed within `fs.statSync` when it fails to find the given path.\r\n\r\n<img width=\"1468\" alt=\"Screen Shot 2020-08-12 at 4 13 41 PM\" src=\"https://user-images.githubusercontent.com/906558/90183227-220cb800-dd81-11ea-8d61-f41f89481f46.png\">\r\n\r\n`fs.statSync`: https://github.com/nodejs/node/blob/v14.4.0/lib/fs.js#L1030-L1037\r\n`handleErrorFromBinding`: https://github.com/nodejs/node/blob/v14.4.0/lib/internal/fs/utils.js#L254-L269\r\n`uvException`: https://github.com/nodejs/node/blob/v14.4.0/lib/internal/errors.js#L390-L443\r\n\r\n ## Measurements\r\n\r\nAfter adding `Error.stackTraceLimit = 0`, we saw:\r\n\r\n- For a large configured project with 12,565 files, tsserver reached the `projectLoadingFinish` event 48.78% faster. (~46.786s vs ~31.447s)\r\n- For a medium project with 7,064 files, tsserver was 25.75% faster. (~20.897s vs ~16.618s)\r\n- For a small project with 796 files, tsserver was only a negligible 3.00% faster. (~3.545s vs ~3.442)\r\n\r\nMeasurements were taken on macOS 10.15.6, Node.js 14.4.0, and a recent master commit of TypeScript (`610fa28d`). The average of 3 runs before and after this change were taken.\r\n\r\nI would normally include `.cpuprofile` and `isolate-*-*-*.log` files, but can't post them publicly in this case. If there's any other summaries the TypeScript team would be curious about I can report them.\r\n\r\n## fs.statSync Misses\r\n\r\nWithin our monorepo, the `fs.statSync` misses were mostly searches for alternative file extensions of module imports.\r\n\r\n- For node_modules imports, a lot of `.ts`/`.tsx` lookups failed until the `.d.ts` file was found.\r\n- Within projects with a lot of JSX files, `.ts` files were looked for before finding the `.tsx` version.\r\n- In the medium scale project mentioned above, a total of 38,515 non-existent files were queried during `createProgram`.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/40043/reactions","total_count":3,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40043/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/40444","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40444/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40444/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40444/events","html_url":"https://github.com/microsoft/TypeScript/pull/40444","id":696288198,"node_id":"MDExOlB1bGxSZXF1ZXN0NDgyMzg5NDk5","number":40444,"title":"Set stackTraceLimit to 0 in fileSystemEntryExists","user":{"login":"amcasey","id":10508071,"node_id":"MDQ6VXNlcjEwNTA4MDcx","avatar_url":"https://avatars.githubusercontent.com/u/10508071?v=4","gravatar_id":"","url":"https://api.github.com/users/amcasey","html_url":"https://github.com/amcasey","followers_url":"https://api.github.com/users/amcasey/followers","following_url":"https://api.github.com/users/amcasey/following{/other_user}","gists_url":"https://api.github.com/users/amcasey/gists{/gist_id}","starred_url":"https://api.github.com/users/amcasey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amcasey/subscriptions","organizations_url":"https://api.github.com/users/amcasey/orgs","repos_url":"https://api.github.com/users/amcasey/repos","events_url":"https://api.github.com/users/amcasey/events{/privacy}","received_events_url":"https://api.github.com/users/amcasey/received_events","type":"User","site_admin":false},"labels":[{"id":1883362416,"node_id":"MDU6TGFiZWwxODgzMzYyNDE2","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Uncommitted%20Bug","name":"For Uncommitted Bug","color":"ededed","default":false,"description":"PR for untriaged, rejected, closed or missing bug"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-09-09T00:54:05Z","updated_at":"2020-09-16T19:51:07Z","closed_at":"2020-09-16T19:50:58Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/40444","html_url":"https://github.com/microsoft/TypeScript/pull/40444","diff_url":"https://github.com/microsoft/TypeScript/pull/40444.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/40444.patch","merged_at":"2020-09-16T19:50:58Z"},"body":"[This is a cherry-pick of #40043]\r\n\r\nThe exception thrown by Node.js's fs.statSync function contains a stack\r\ntrace that can be expensive to compute. Since this exception isn't used\r\nby fileSystemEntryExists, we can safely set Error.stackTraceLimit to 0\r\nwithout a change in behavior.\r\n\r\n---\r\n\r\nA significant performance improvement was noticed with this change while\r\nprofiling tsserver on packages within a proprietary monorepo.\r\nSpecifically, my team saw high self time percentages for Node.js's\r\nuvException and handleErrorFromBinding internal functions. These\r\nfunctions are executed within fs.statSync when it fails to find the\r\ngiven path.\r\n\r\n<img src=\"https://user-images.githubusercontent.com/906558/90183227-220cb800-dd81-11ea-8d61-f41f89481f46.png\">\r\n\r\nfs.statSync: https://github.com/nodejs/node/blob/v14.4.0/lib/fs.js#L1030-L1037\r\nhandleErrorFromBinding: https://github.com/nodejs/node/blob/v14.4.0/lib/internal/fs/utils.js#L254-L269\r\nuvException: https://github.com/nodejs/node/blob/v14.4.0/lib/internal/errors.js#L390-L443\r\n\r\n ## Measurements\r\n\r\nAfter adding Error.stackTraceLimit = 0, we saw:\r\n\r\n- For a large configured project with 12,565 files, tsserver reached the\r\n  projectLoadingFinish event 48.78% faster. (~46.786s vs ~31.447s)\r\n- For a medium project with 7,064 files, tsserver was 25.75% faster.\r\n  (~20.897s vs ~16.618s)\r\n- For a small project with 796 files, tsserver was only a negligible\r\n  3.00% faster. (~3.545s vs ~3.442)\r\n\r\nMeasurements were taken on macOS 10.15.6, Node.js 14.4.0, and a recent\r\nmaster commit of TypeScript (610fa28d). The average of 3 runs before and\r\nafter this change were taken.\r\n\r\nI would normally include .cpuprofile and isolate-*-*-*.log files, but\r\ncan't post them publicly in this case. If there's any other summaries\r\nthe TypeScript team would be curious about I can report them.\r\n\r\n ## fs.statSync Misses\r\n\r\nWithin our monorepo, the fs.statSync misses were mostly searches for\r\nalternative file extensions of module imports.\r\n\r\n- For node_modules imports, a lot of .ts/.tsx lookups failed until the\r\n  .d.ts file was found.\r\n- Within projects with a lot of JSX files, .ts files were looked for\r\n  before finding the .tsx version.\r\n- In the medium scale project mentioned above, a total of 38,515\r\n  non-existent files were queried during createProgram.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/40444/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/40444/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/39487","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/39487/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/39487/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/39487/events","html_url":"https://github.com/microsoft/TypeScript/pull/39487","id":652706856,"node_id":"MDExOlB1bGxSZXF1ZXN0NDQ1NzM1MzE3","number":39487,"title":"Better checking of @param/@property tags","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"assignees":[{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false}],"milestone":null,"comments":4,"created_at":"2020-07-07T22:41:22Z","updated_at":"2020-07-08T20:55:23Z","closed_at":"2020-07-08T20:55:19Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/39487","html_url":"https://github.com/microsoft/TypeScript/pull/39487","diff_url":"https://github.com/microsoft/TypeScript/pull/39487.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/39487.patch","merged_at":"2020-07-08T20:55:19Z"},"body":"1. Use getWidenedTypeForVariableLikeDeclaration, instead of directly calling tryGetTypeFromEffectiveTypeNode. This requires some changes in the former function since it can't assume that the declaration has an initializer. See below for details.\r\n2. isOptional now calls isOptionalJSDocPropertyLikeTag.\r\n3. isOptionalJSDocPropertyLikeTag now handles JSDocPropertyTag (previously it was named isOptionalJSDocParameterTag).\r\n\r\ngetWidenedTypeForVariableLikeDeclaration now handles `@param` and `@property` tags. I switched a couple of places to use type guards and added a call to `hasExpressionInitializer`. Then, to avoid calling it twice, I moved a js-only check inside that block. I'm not certain it's the right thing -- the code is cleaner now, but I could have left it as-is and added casts instead. If performance is worse it's the first thing I'm going to try undoing.\r\n\r\nFixes #39111","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/39487/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/39487/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/35731","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/35731/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/35731/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/35731/events","html_url":"https://github.com/microsoft/TypeScript/pull/35731","id":539244077,"node_id":"MDExOlB1bGxSZXF1ZXN0MzU0MjU0MjU2","number":35731,"title":"Add jsdoc support for @public/@private/@protected","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[{"id":1550702359,"node_id":"MDU6TGFiZWwxNTUwNzAyMzU5","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Update%20Docs%20on%20Next%20Release","name":"Update Docs on Next Release","color":"fbca04","default":false,"description":"Indicates that this PR affects docs"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":13,"created_at":"2019-12-17T18:42:59Z","updated_at":"2020-02-05T13:16:52Z","closed_at":"2019-12-18T20:58:13Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/35731","html_url":"https://github.com/microsoft/TypeScript/pull/35731","diff_url":"https://github.com/microsoft/TypeScript/pull/35731.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/35731.patch","merged_at":"2019-12-18T20:58:13Z"},"body":"They should work exactly as they do in typescript.\r\n\r\nFixes #14009 \r\n\r\nThis adds a potentially expensive check when retrieving modifiers, but it should only apply to JS, and modifiers are usually cached, so I don't think the impact will be that great.\r\n\r\nIn any case it should be completely unobservable from our current performance suite. I'll double-check that.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/35731/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/35731/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/36516","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36516/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36516/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36516/events","html_url":"https://github.com/microsoft/TypeScript/pull/36516","id":557125358,"node_id":"MDExOlB1bGxSZXF1ZXN0MzY4NzczNTM4","number":36516,"title":"Actually use the cached resolvedJSDocType","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[{"id":1503029093,"node_id":"MDU6TGFiZWwxNTAzMDI5MDkz","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Author:%20Team","name":"Author: Team","color":"3178C6","default":false,"description":""}],"state":"closed","locked":false,"assignee":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"assignees":[{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2020-01-29T21:26:36Z","updated_at":"2020-01-29T22:58:11Z","closed_at":"2020-01-29T22:58:07Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/36516","html_url":"https://github.com/microsoft/TypeScript/pull/36516","diff_url":"https://github.com/microsoft/TypeScript/pull/36516.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/36516.patch","merged_at":"2020-01-29T22:58:07Z"},"body":"[This code path](https://github.com/mui-org/material-ui/issues/19113#issuecomment-579943654) was mentioned as a possible performance-impacting path. We have a cache in this codepath that we were failing to ever reuse the value from, so we were recalculating the value on every invocation.\r\n\r\nTry turning the whitespace diff off when reviewing 😉 ","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/36516/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/36516/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/33794","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/33794/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/33794/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/33794/events","html_url":"https://github.com/microsoft/TypeScript/pull/33794","id":502324378,"node_id":"MDExOlB1bGxSZXF1ZXN0MzI0NDMwNTgw","number":33794,"title":"[WIP] Improve optional chaining checker performance","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2019-10-03T22:11:38Z","updated_at":"2019-10-19T02:12:01Z","closed_at":"2019-10-19T00:27:48Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/33794","html_url":"https://github.com/microsoft/TypeScript/pull/33794","diff_url":"https://github.com/microsoft/TypeScript/pull/33794.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/33794.patch","merged_at":"2019-10-19T00:27:48Z"},"body":"Investigating possible performance improvements in the checker related to optional chaining.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/33794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/33794/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/33431","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/33431/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/33431/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/33431/events","html_url":"https://github.com/microsoft/TypeScript/pull/33431","id":493599216,"node_id":"MDExOlB1bGxSZXF1ZXN0MzE3NTQ1NTk3","number":33431,"title":"Separate Tokens and Identifiers from other Nodes","user":{"login":"Swatinem","id":580492,"node_id":"MDQ6VXNlcjU4MDQ5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/580492?v=4","gravatar_id":"","url":"https://api.github.com/users/Swatinem","html_url":"https://github.com/Swatinem","followers_url":"https://api.github.com/users/Swatinem/followers","following_url":"https://api.github.com/users/Swatinem/following{/other_user}","gists_url":"https://api.github.com/users/Swatinem/gists{/gist_id}","starred_url":"https://api.github.com/users/Swatinem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Swatinem/subscriptions","organizations_url":"https://api.github.com/users/Swatinem/orgs","repos_url":"https://api.github.com/users/Swatinem/repos","events_url":"https://api.github.com/users/Swatinem/events{/privacy}","received_events_url":"https://api.github.com/users/Swatinem/received_events","type":"User","site_admin":false},"labels":[{"id":1820464799,"node_id":"MDU6TGFiZWwxODIwNDY0Nzk5","url":"https://api.github.com/repos/microsoft/TypeScript/labels/For%20Backlog%20Bug","name":"For Backlog Bug","color":"9ff4ed","default":false,"description":"PRs that fix a backlog bug"}],"state":"closed","locked":false,"assignee":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"assignees":[{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false}],"milestone":null,"comments":23,"created_at":"2019-09-14T08:29:58Z","updated_at":"2020-02-17T23:52:45Z","closed_at":"2020-02-12T19:54:26Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/33431","html_url":"https://github.com/microsoft/TypeScript/pull/33431","diff_url":"https://github.com/microsoft/TypeScript/pull/33431.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/33431.patch","merged_at":"2020-02-12T19:54:26Z"},"body":"I have been profiling tsc quite extensively recently, with the following super huge project:\r\n\r\n```\r\nFiles:           4745\r\nLines:         713103\r\nNodes:        2395069\r\nIdentifiers:   832041\r\nSymbols:      1011676\r\nTypes:         309045\r\nMemory used: 1061792K\r\n```\r\n\r\nAnalyzing a heap snapshot, I noticed that a large portion of the memory usage is due to `Node`, which is 160 bytes. (~370M worth)\r\n\r\nLooking at the code, I noticed that TS already has the code to split `Token` and `Identifier` from `Node`, which I did. `Token` is now 88 bytes, and `Identifier` is at 104 bytes.\r\n\r\nIn total, this gives *before* stats of:\r\n```\r\nMemory used: 1061792K\r\nI/O read:       0.29s\r\nI/O write:      0.00s\r\nParse time:     5.92s\r\nBind time:      1.94s\r\nCheck time:    21.23s\r\nEmit time:      0.00s\r\nTotal time:    29.09s\r\n```\r\n\r\nand *after* stats of:\r\n\r\n```\r\nMemory used: 993297K\r\nI/O read:      0.25s\r\nI/O write:     0.00s\r\nParse time:    5.73s\r\nBind time:     2.18s\r\nCheck time:   21.16s\r\nEmit time:     0.00s\r\nTotal time:   29.07s\r\n```\r\n\r\nWhich in total is a **~6%** reduction in Memory used, without any significant change in runtime, by such a simple change.\r\nThanks to using `node --expose-gc`, those numbers are really stable!\r\n\r\nBut I am not done yet. Digging deeper into the code, and instrumenting things a bit, I noticed that literals (strings, numbers, etc) are also of type `Token`, but they participate in type-checking, and get some additional properties attached, which might spill out of the allocated storage, which might slow down accesses.\r\nI suspect splitting this up further into *syntax only* Tokens, and `Literal` types would even lead to improved performance.\r\n\r\nSo I would really appreciate some help further building on this Idea:\r\n* Is a change such as this appreciated?\r\n* Does it really make sense to further split off `Literal` nodes?\r\n* Does someone have more insight into which properties belong onto which node type? I mostly went with a bit of instrumentation, and a lot of experimentation :-D\r\n* Is it a good idea to use `--expose-gc` to get more stable numbers? How about using it inside of TS own perf infrastructure?\r\n* Speaking of perf infrastructure… Would someone kindly trigger a perf test for this? I would really like to validate the effectiveness of this change using the official testsuite.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/33431/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/33431/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/32388","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/32388/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/32388/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/32388/events","html_url":"https://github.com/microsoft/TypeScript/pull/32388","id":467733383,"node_id":"MDExOlB1bGxSZXF1ZXN0Mjk3MzI0NDIw","number":32388,"title":"addTypeToIntersection performance improvement","user":{"login":"miloszpp","id":729022,"node_id":"MDQ6VXNlcjcyOTAyMg==","avatar_url":"https://avatars.githubusercontent.com/u/729022?v=4","gravatar_id":"","url":"https://api.github.com/users/miloszpp","html_url":"https://github.com/miloszpp","followers_url":"https://api.github.com/users/miloszpp/followers","following_url":"https://api.github.com/users/miloszpp/following{/other_user}","gists_url":"https://api.github.com/users/miloszpp/gists{/gist_id}","starred_url":"https://api.github.com/users/miloszpp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/miloszpp/subscriptions","organizations_url":"https://api.github.com/users/miloszpp/orgs","repos_url":"https://api.github.com/users/miloszpp/repos","events_url":"https://api.github.com/users/miloszpp/events{/privacy}","received_events_url":"https://api.github.com/users/miloszpp/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2019-07-13T15:27:54Z","updated_at":"2019-07-18T03:32:30Z","closed_at":"2019-07-17T20:22:54Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/32388","html_url":"https://github.com/microsoft/TypeScript/pull/32388","diff_url":"https://github.com/microsoft/TypeScript/pull/32388.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/32388.patch","merged_at":"2019-07-17T20:22:54Z"},"body":"Fixes #29289\r\n\r\nChanges the type of `types` argument from `Type[]` to `Map<Type>` so that membership checking can be done in O(1) instead of O(n).","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/32388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/32388/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/34853","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/34853/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/34853/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/34853/events","html_url":"https://github.com/microsoft/TypeScript/pull/34853","id":515718823,"node_id":"MDExOlB1bGxSZXF1ZXN0MzM1MTMxOTM5","number":34853,"title":"When calculating spreads, merge empty object into nonempty object to …","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2019-10-31T20:21:18Z","updated_at":"2019-11-23T01:19:24Z","closed_at":"2019-11-23T01:19:18Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/34853","html_url":"https://github.com/microsoft/TypeScript/pull/34853","diff_url":"https://github.com/microsoft/TypeScript/pull/34853.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/34853.patch","merged_at":"2019-11-23T01:19:18Z"},"body":"…produce a partial object to reduce complexity of the calculation. This special-cases scenarios like repeated spreads of `false | ObjType` or `ObjType | undefined` so they produce a single type (rather than a union of types_ that we can operate on. Specifically, in this PR, we recognize unions similar to `{} | {a: string}` when spreading, and interpret them as `{a?: string}` instead (essentially moving the outer union to an inner union, though the constraint is a bit stronger than a nonfresh `{}` would normally imply). Strictly speaking, this reduces the accuracy of the type logic a bit, but in exchange, improves its performance in pathological scenarios like those described in the linked issue.\r\n\r\nTo some up, while previously, `{} | {a: string}` spread with `{} | {b: string}` would produce `{} | {a: string} | {b: string} | {a: string; b: string}`, now it produces just `{a?: string; b?: string;}` instead.\r\n\r\nFixes #34599\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/34853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/34853/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/32517","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/32517/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/32517/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/32517/events","html_url":"https://github.com/microsoft/TypeScript/pull/32517","id":471354641,"node_id":"MDExOlB1bGxSZXF1ZXN0MzAwMDUxODM1","number":32517,"title":"Updated: Only auto-import from package.json","user":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"labels":[{"id":1550702359,"node_id":"MDU6TGFiZWwxNTUwNzAyMzU5","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Update%20Docs%20on%20Next%20Release","name":"Update Docs on Next Release","color":"fbca04","default":false,"description":"Indicates that this PR affects docs"}],"state":"closed","locked":false,"assignee":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"assignees":[{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true}],"milestone":null,"comments":29,"created_at":"2019-07-22T21:48:15Z","updated_at":"2019-09-30T14:42:26Z","closed_at":"2019-09-27T20:38:32Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/32517","html_url":"https://github.com/microsoft/TypeScript/pull/32517","diff_url":"https://github.com/microsoft/TypeScript/pull/32517.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/32517.patch","merged_at":"2019-09-27T20:38:32Z"},"body":"Restores (and improves upon) the behavior introduced in #31893 without the significant performance regression by adding several caches. (Closes #32441.)\r\n\r\n[Diff compared to original PR](https://github.com/andrewbranch/TypeScript/compare/old-package-json-pr..enhancement/only-import-from-package-json) (trying to keep changes to master out of it but will fall behind every now and then)\r\n\r\n**Note**: comments about performance and bugs and changes in the thread below are talking about various states during the draft lifetime of this PR. This PR description reflects the state as of the time I’m changing it from “Draft” to “Ready for Review,” August 26 at 12:00 PM PDT.\r\n\r\n## Performance impact of this PR\r\n\r\n**TL;DR:** Disregarding the very first completions request made to TS Server, the worst-case completions request is 28% slower than before. But, getting the completions list plus completion details is only 1% slower at worst, and typical requests are 76–80% _faster_ thanks to some added caching.\r\n\r\nThere are two language service operations to consider:\r\n\r\n1. **`getCompletionsAtPosition`** returns an array of available completions without much detailed info about each. \r\n2. **`getCompletionEntryDetails`** is called for a specific entry from the results of the former operation, and gets more details about that completion, like JSDoc, symbol display parts, and CodeActions that will occur.\r\n\r\nIn VS Code, the completion list UI appears after the former returns. The latter is then called in immediate succession, and its response inserts more details into the same UI. So, the duration of `getCompletionsAtPosition` is a lower bound of UI response time, but the _sum_ of the two calls affects perceived responsiveness since the UI doesn’t settle until both are complete.\r\n\r\nI measured response times before and after this PR in a large project and took the average of 5 samples of each type of measurement reported here. In reporting timings for cached calls, I’ll report “Aug 10 Nightly” as “N/A” to indicate that the original code base performed no caching, but I’ll use the uncached timings to calculate the percent difference, since those would be the timings measured in identical scenarios.\r\n\r\n|                        | Aug 10 Nightly (ms) | PR (ms) | Diff |\r\n|--------------|-------------|-----------|----|\r\n| list, no cache | 74 | 116 | +56% |\r\n| details, no cache | 51 | 21 | -59% |\r\n| |\r\n| list, package.json cached <sup>1</sup> | N/A | 95 | +28% |\r\n| list, cached <sup>2</sup> | N/A | 18 | -76% |\r\n| details, cached <sup>3</sup> | N/A | 10 | -80% |\r\n| |\r\n| sum, best-case realistic scenario | 125 | 28 | -78% |\r\n| sum, worst-case realistic scenario <sup>4</sup> | 125 | 126 | +1% |\r\n\r\n<sup>1.</sup> The package.json cache is populated upon the first request that uses it, and future changes to package.json files update the cache eagerly. In other words, this number only ever happens on the very first completions request that a project receives.\r\n<sup>2.</sup> Cache lives for the duration of editing a single file, except after edge-case edits to that file that modify modules visible to the program.\r\n<sup>3.</sup> Cache lives while the program is identical, which happens frequently for details, e.g. when navigating the completion list with arrow keys to view details of other items. The only time details requests trigger _without_ a cache is after typing rapidly, such that previous requests get canceled.\r\n<sup>4.</sup> The worst-case scenario for this PR is a cold cache (nothing in the lifetime of the language service has yet requested package.json information) followed by a cached details call. They can’t both be uncached, because the former populates the cache of the latter. The cache could be invalidated by continuing to type quickly, but at that point the original cold request for the list would be canceled too, and the next call would use the cached package.json.\r\n\r\n## Implementation\r\n\r\nEven the absolute worst measurement of 56% slower is much better than #31893, which was ~12,000% slower. Here’s what made the difference.\r\n\r\n### Caching symlinks discovery\r\n\r\nGetting the best module specifier to use from one module to another requires determining if there are any symlinks hanging around. The original PR tries to get the module specifier for every possible auto-import in a loop, which re-ran the symlink discovery code every time. But, the inputs to that code are constant over that loop, so it needs only be run once. This PR introduces a function  `moduleSpecifiers.withCachedSymlinks` that uses a constant set of symlinks within a callback. This alone brought the performance impact down from ~12,000% slower to ~100% slower.\r\n\r\n### Caching package.json content\r\n\r\nThe previous PR searched for and read package.json files from disk during each request. This PR adds:\r\n\r\n1. A cache that keeps track of what folders definitely don’t have a package.json file to avoid reading directories\r\n2. A cache of package.json dependencies for a folder where a package.json file was previously found\r\n3. An added function in an existing directory watch that invalidates 1) and 2) when a package.json has been added or removed within the project\r\n4. An additional watch on any package.json file found (outside of node_modules) to invalidate 2) when the content changes.\r\n\r\n@sheetalkamat suggested replacing the additional package.json watch with an existing directory watch that detects changes to node_modules. I tried this approach, but it's quite common to run `npm install --save dep` when `dep` was already in node_modules required by something else, or `npm uninstall --save dep` when `dep` is still required by something else. In these cases, package.json changes, but node_modules does not.\r\n\r\n### Caching the auto-import list itself\r\n\r\nGenerally, the auto-imports available to a particular file don’t change while editing that file alone. So, we now cache auto-imports, and invalidate them when:\r\n\r\n1. A different file requests auto-imports\r\n2. The same file adds or removes an import or triple-slash reference that changes the modules in the program\r\n3. The same file adds or removes an ambient module or module augmentation\r\n4. The same file edits the contents of an ambient module or module augmentation\r\n5. The same file has ATA enabled, has acquired `@types/node` via ATA, and makes an edit that causes it to have imports of node core modules when it didn’t before, or vice versa. The same logic introduced in #31893 about inferring whether to offer node core module auto-imports still exists, so the cache needs to be invalidated when the input to that inference changes. _(Note: I plan to make this inference smarter in a later PR—didn’t want this one to balloon in scope more than it already has.)_\r\n\r\n### Caching auto-imports for completion entry details\r\n\r\nCompletion details display type information, so they can’t be as aggressively cached as the list of auto-imports available. But, completion details are commonly requested when the program hasn’t changed at all, so the same cache used for the auto-import list described above can be used for completion details requests if the project version hasn’t changed.\r\n\r\n### Avoiding computing the full specifier for a node_modules module\r\n\r\nWhen determining whether a module that can be referred to by some node_modules-style path e.g. `import 'foo/lib/whatever'` should be filtered out by a package.json file or not, the path after `foo/` is irrelevant. The previous PR used an existing function that calculated the entire path, which requires FS operations (to look for a dependency’s package.json and find a `types` entry). To avoid unnecessary FS operations, this PR adds an option to that function (`tryGetModuleNameAsNodeModule`) that prevents it from calculating the full path.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/32517/reactions","total_count":5,"+1":5,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/32517/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/31142","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31142/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31142/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31142/events","html_url":"https://github.com/microsoft/TypeScript/pull/31142","id":437995141,"node_id":"MDExOlB1bGxSZXF1ZXN0Mjc0MTQwMTk3","number":31142,"title":"Fix binder performance regression","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2019-04-27T23:49:44Z","updated_at":"2019-05-09T18:25:43Z","closed_at":"2019-04-29T18:52:35Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/31142","html_url":"https://github.com/microsoft/TypeScript/pull/31142","diff_url":"https://github.com/microsoft/TypeScript/pull/31142.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/31142.patch","merged_at":"2019-04-29T18:52:35Z"},"body":"When we introduced `globalThis` support, we inadvertently regressed binder performance by over 100%. This regression appears to be due to an early change to the shape of our `Symbol` type prior to binder being called.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/31142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31142/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/32847","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/32847/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/32847/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/32847/events","html_url":"https://github.com/microsoft/TypeScript/pull/32847","id":480311685,"node_id":"MDExOlB1bGxSZXF1ZXN0MzA3MDMyNjQx","number":32847,"title":"Check cancellation token in function/arrow/class expresisons, Cleanup after open file only if new file is opened in the request","user":{"login":"sheetalkamat","id":8052792,"node_id":"MDQ6VXNlcjgwNTI3OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8052792?v=4","gravatar_id":"","url":"https://api.github.com/users/sheetalkamat","html_url":"https://github.com/sheetalkamat","followers_url":"https://api.github.com/users/sheetalkamat/followers","following_url":"https://api.github.com/users/sheetalkamat/following{/other_user}","gists_url":"https://api.github.com/users/sheetalkamat/gists{/gist_id}","starred_url":"https://api.github.com/users/sheetalkamat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sheetalkamat/subscriptions","organizations_url":"https://api.github.com/users/sheetalkamat/orgs","repos_url":"https://api.github.com/users/sheetalkamat/repos","events_url":"https://api.github.com/users/sheetalkamat/events{/privacy}","received_events_url":"https://api.github.com/users/sheetalkamat/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-08-13T18:50:24Z","updated_at":"2019-08-13T19:51:51Z","closed_at":"2019-08-13T19:51:47Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/32847","html_url":"https://github.com/microsoft/TypeScript/pull/32847","diff_url":"https://github.com/microsoft/TypeScript/pull/32847.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/32847.patch","merged_at":"2019-08-13T19:51:47Z"},"body":"This includes fixes to improve the performance with completions in large js files.\r\n1. Cleanup after script info open needs to be done only if file is opened in `updateOpen` command\r\n2. Check cancellation token in Class expression, function expression and arrow expression as their counter part declarations so that we can exit sooner if the request is cancelled. (Which happens to be case in #31452 where suggestion diagnostics takes 30s for `typescript.js` and takes about 6-7 sec to cancel without this fix resulting in delays with completions)\r\n\r\nFixes #31452, #28389\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/32847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/32847/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/31478","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31478/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31478/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31478/events","html_url":"https://github.com/microsoft/TypeScript/pull/31478","id":446253613,"node_id":"MDExOlB1bGxSZXF1ZXN0MjgwNDk4MjU2","number":31478,"title":"Control flow for element access expressions","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2019-05-20T18:34:33Z","updated_at":"2019-07-16T17:11:04Z","closed_at":"2019-07-16T17:10:59Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/31478","html_url":"https://github.com/microsoft/TypeScript/pull/31478","diff_url":"https://github.com/microsoft/TypeScript/pull/31478.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/31478.patch","merged_at":"2019-07-16T17:10:59Z"},"body":"Fixes #28081\r\n\r\nI did some additional performance investigation, using the same synthetic stress test as above with 3 variants:\r\n\r\n## Variant 1 - Literal, Narrowing\r\n\r\n```ts \r\nfunction stress(o: { [s: string]: \"aa\" | \"ab\" | \"ac\" | ... }) {\r\n  o[\"x\"] = o[\"z\"] === \"de\" ? \"ff\" : \"ip\";\r\n  // many more lines like this...\r\n  return [o['x'], o['y'], o['z']] as const\r\n}\r\n```\r\n\r\n## Variant 2 - Primitive, Non-Narrowing\r\n\r\n```ts\r\nfunction stress(o: { [s: string]: \"aa\" | \"ab\" | \"ac\" | ... }, x: string, y: string, z: string) {\r\n  o[x] = o[z] === \"de\" ? \"ff\" : \"ip\";\r\n  // many more lines like this...\r\n  return [o[x], o[y], o[z]] as const\r\n}\r\n```\r\n\r\n## Variant 3 - Literal Type, Non-Narrowing\r\n\r\n```ts\r\nfunction stress(o: { [s: string]: \"aa\" | \"ab\" | \"ac\" | ... }, x: 'x', y: 'y', z: 'z') {\r\n  o[x] = o[z] === \"de\" ? \"ff\" : \"ip\";\r\n  // many more lines like this...\r\n  return [o[x], o[y], o[z]] as const\r\n}\r\n```\r\n\r\nThe most important result is that in real-world scenarios, this change never makes a significant difference in compile time: the second two variants don't actually create flow nodes in the binder, so control flow quits early as there's nothing to analyze. This means that no narrowing happens, of course. Inserting flow nodes only for element accesses with literal access expressions was a performance decision from quite some time ago. As far as I know, we have no reason to revisit that decision.\r\n\r\nThe first variant does narrow, but only 1000 lines. After that, control flow throws an error \"The containing function or module body is too large for control flow analysis.\"\r\n\r\nSo I cut the stress tests down to 1000 lines and did a before/after comparison of them:\r\n![Selection_046](https://user-images.githubusercontent.com/293473/61314189-e59f0f00-a7b0-11e9-84d7-b872743db559.png)\r\n\r\nAs you can see, the worst case is less than 50% increase per very-long function. I think that's acceptable given the improvement in narrowing for the common case.\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/31478/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31478/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/31893","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31893/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31893/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31893/events","html_url":"https://github.com/microsoft/TypeScript/pull/31893","id":455913164,"node_id":"MDExOlB1bGxSZXF1ZXN0Mjg4MDYzNTgz","number":31893,"title":"Proposal: If there’s a package.json, only auto-import things in it, more or less","user":{"login":"andrewbranch","id":3277153,"node_id":"MDQ6VXNlcjMyNzcxNTM=","avatar_url":"https://avatars.githubusercontent.com/u/3277153?v=4","gravatar_id":"","url":"https://api.github.com/users/andrewbranch","html_url":"https://github.com/andrewbranch","followers_url":"https://api.github.com/users/andrewbranch/followers","following_url":"https://api.github.com/users/andrewbranch/following{/other_user}","gists_url":"https://api.github.com/users/andrewbranch/gists{/gist_id}","starred_url":"https://api.github.com/users/andrewbranch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andrewbranch/subscriptions","organizations_url":"https://api.github.com/users/andrewbranch/orgs","repos_url":"https://api.github.com/users/andrewbranch/repos","events_url":"https://api.github.com/users/andrewbranch/events{/privacy}","received_events_url":"https://api.github.com/users/andrewbranch/received_events","type":"User","site_admin":true},"labels":[],"state":"closed","locked":false,"assignee":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"assignees":[{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},{"login":"sheetalkamat","id":8052792,"node_id":"MDQ6VXNlcjgwNTI3OTI=","avatar_url":"https://avatars.githubusercontent.com/u/8052792?v=4","gravatar_id":"","url":"https://api.github.com/users/sheetalkamat","html_url":"https://github.com/sheetalkamat","followers_url":"https://api.github.com/users/sheetalkamat/followers","following_url":"https://api.github.com/users/sheetalkamat/following{/other_user}","gists_url":"https://api.github.com/users/sheetalkamat/gists{/gist_id}","starred_url":"https://api.github.com/users/sheetalkamat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sheetalkamat/subscriptions","organizations_url":"https://api.github.com/users/sheetalkamat/orgs","repos_url":"https://api.github.com/users/sheetalkamat/repos","events_url":"https://api.github.com/users/sheetalkamat/events{/privacy}","received_events_url":"https://api.github.com/users/sheetalkamat/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2019-06-13T19:25:13Z","updated_at":"2019-07-12T17:09:00Z","closed_at":"2019-07-12T17:08:56Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/31893","html_url":"https://github.com/microsoft/TypeScript/pull/31893","diff_url":"https://github.com/microsoft/TypeScript/pull/31893.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/31893.patch","merged_at":"2019-07-12T17:08:56Z"},"body":"This started out as an attempt to solve #30713 in the general case, as an alternative to #31065. As it stands, it’s possible that this doesn’t change the status of #30713 at all, depending on the specifics of the project, but my hunch is that this is, in other ways, an improvement over the status quo.\r\n\r\n### You shouldn’t import node_modules that aren’t in your package.json\r\n\r\nYour node_modules folder has bazillions of things in it as dependencies of dependencies that you shouldn’t import directly without explicitly adding them to your own top-level dependencies (in your package.json). And yet, if any of these second-order dependencies have typings (whether included or in `@types`), TypeScript happily offers to import it for you. This is especially frustrating when the correct import would be offered to you were it not shadowed by a wrong one. For example, I installed `@emotion/core` which re-exports some symbols from `@emotion/css`. Obviously I want to import from my explicit dependency of `@emotion/core`, not one of its dependencies:\r\n\r\n<details>\r\n  <summary><strong>Before (GIF)</strong></summary>\r\n\r\n  ![auto-import-wrong](https://user-images.githubusercontent.com/3277153/59382967-d6d9be00-8d13-11e9-8663-c605c907d978.gif)\r\n\r\n  _Imports from `@emotion/css` because that’s the shorter path. ESLint rule `no-extraneous-dependencies` enabled for emphasis._\r\n</details>\r\n<details>\r\n  <summary><strong>After (GIF)</strong></summary>\r\n  \r\n  ![auto-import-right](https://user-images.githubusercontent.com/3277153/59386802-7a2ed100-8d1c-11e9-8d0e-30e013dc1ae7.gif)\r\n\r\n  _Imports from `@emotion/core` because that’s an explicit dependency in my package.json._\r\n</details>\r\n\r\n### Special handling for Node core modules\r\n\r\nCore modules like `os` and `crypto` are the one exception to the rule. Actually, in a TypeScript project, they’re almost _not_ an exception, because the user is expected to have `@types/node` in their package.json if they’re using those modules. But in a JavaScript project supported by type acquisition in VS Code, the user will probably not explicitly install `@types/node`, but will still expect IntelliSense and auto-import to work for those modules _if_ they’re writing for Node. If they’re purely writing for the browser, they expect _not_ to see auto-import suggestions for them (#30713).\r\n\r\nIn a JavaScript project, especially one that tends not to install `@types` and doesn’t have a `jsconfig.json`, I haven’t found a bulletproof heuristic for whether or not to offer Node core module imports. Today, they’re offered if you have `@types/node` in your program for any reason, including as a dependency of a dependency, which happens [pretty](https://github.com/facebook/jest/issues/8092) [frequently](https://github.com/DefinitelyTyped/DefinitelyTyped/issues/21310).\r\n\r\nMy proposed heuristic is “are you already importing Node core modules.” If you are, we should probably help you import more of them. If you’re not, either you don’t want to import any, or we’ll help you after you write the first one by hand. We can also define this more or less conservatively, depending on where we think is the best balance between minimizing false positives, minimizing false negatives, and maximizing performance:\r\n\r\n- Does the file you’re editing import core modules? Super cheap to check, and if yes, we can definitely offer the auto-import. (PR currently does this.)\r\n- Do any other script files in the same directory as the file you’re editing import core modules? A little more expensive to check, but eliminates a lot of false negatives (not offering an import when we should), with low chance of introducing false positives (offering an import when we shouldn’t). (This might be the best middle ground IMO.)\r\n- Do any other script files in your program import core modules? More expensive to check, but likely not outrageously so, and could be cached. Likely introduces false positives for many projects that are primarily browser apps with a small amount of Node build scripts. (I don’t think this is a great option.)\r\n\r\n<details>\r\n  <summary><strong>JS auto-import from node core heuristic (GIF)</strong></summary>\r\n  \r\n  ![auto-import-node-same-file](https://user-images.githubusercontent.com/3277153/59460360-c557eb00-8dd3-11e9-9922-d57e2ca9634b.gif)\r\n\r\n  _`writeFile` is offered as an auto-import once there’s another import from a Node core module in the file._\r\n</details>\r\n\r\n### Open questions\r\n\r\n1. **Performance and code reuse.** There are a few different places that analyze package.json files in the language service now (string literal completions for module specifiers is the other most significant). I initially tried to pull some functions from other places into some common utils, but the other use cases were just different enough that it was non-trivial to generalize without sacrificing performance. Rather than invest the time into making a general util for getting info out of package.json(s) that runs every time someone is requesting it, I wondered if it would be worthwhile to cache some of this in the language service so it can be reused for as long as the `package.json` stays the same, which is obviously much longer than script files on average. Thoughts?\r\n2. **Corner cases where this implementation will break.** This PR seems to work in the tests I’ve written and playing around with small projects in VS Code, but I expect there will be feedback on how I’ve approached a couple things; I may have missed some subtle complexities. I’ll leave a review of my own code inline to point out some things I wasn’t 100% confident on.\r\n3. **Corner cases on why we might not want this at all?** I think my logic is sound as far as the desirability of this feature goes, and I think the only place where we still might do the wrong thing is with JS and Node core modules, but we _already_ do the wrong thing there some of the time. Projects almost always have a package.json from the first moment of their existence, but if they don’t we simply fall back to the current behavior of not filtering. But are there any other reasons why this might not be a good idea? Can you think of any edge cases where it’s deal-breakingly disruptive?","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/31893/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31893/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/30278","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/30278/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/30278/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/30278/events","html_url":"https://github.com/microsoft/TypeScript/pull/30278","id":418919474,"node_id":"MDExOlB1bGxSZXF1ZXN0MjU5NTc3MzE3","number":30278,"title":"Improve performance of fallback hash function","user":{"login":"RyanCavanaugh","id":6685088,"node_id":"MDQ6VXNlcjY2ODUwODg=","avatar_url":"https://avatars.githubusercontent.com/u/6685088?v=4","gravatar_id":"","url":"https://api.github.com/users/RyanCavanaugh","html_url":"https://github.com/RyanCavanaugh","followers_url":"https://api.github.com/users/RyanCavanaugh/followers","following_url":"https://api.github.com/users/RyanCavanaugh/following{/other_user}","gists_url":"https://api.github.com/users/RyanCavanaugh/gists{/gist_id}","starred_url":"https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RyanCavanaugh/subscriptions","organizations_url":"https://api.github.com/users/RyanCavanaugh/orgs","repos_url":"https://api.github.com/users/RyanCavanaugh/repos","events_url":"https://api.github.com/users/RyanCavanaugh/events{/privacy}","received_events_url":"https://api.github.com/users/RyanCavanaugh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-03-08T19:12:24Z","updated_at":"2019-03-09T14:36:12Z","closed_at":"2019-03-09T14:36:05Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/30278","html_url":"https://github.com/microsoft/TypeScript/pull/30278","diff_url":"https://github.com/microsoft/TypeScript/pull/30278.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/30278.patch","merged_at":"2019-03-09T14:36:05Z"},"body":"This code only runs on systems where the node crypto module isn't available, which I don't even know when happens, but if it does run it's basically a denial of service attack on the GC and is problematically slow. The imperative version isn't as fancy but is about 25 times faster.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/30278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/30278/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/31354","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31354/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31354/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31354/events","html_url":"https://github.com/microsoft/TypeScript/pull/31354","id":443015193,"node_id":"MDExOlB1bGxSZXF1ZXN0Mjc3OTk1Mjk2","number":31354,"title":"Defer resolution of true and false branches in conditional types","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/microsoft/TypeScript/milestones/89","html_url":"https://github.com/microsoft/TypeScript/milestone/89","labels_url":"https://api.github.com/repos/microsoft/TypeScript/milestones/89/labels","id":3997767,"node_id":"MDk6TWlsZXN0b25lMzk5Nzc2Nw==","number":89,"title":"TypeScript 3.5.0","description":"The release that comes after 3.4","creator":{"login":"RyanCavanaugh","id":6685088,"node_id":"MDQ6VXNlcjY2ODUwODg=","avatar_url":"https://avatars.githubusercontent.com/u/6685088?v=4","gravatar_id":"","url":"https://api.github.com/users/RyanCavanaugh","html_url":"https://github.com/RyanCavanaugh","followers_url":"https://api.github.com/users/RyanCavanaugh/followers","following_url":"https://api.github.com/users/RyanCavanaugh/following{/other_user}","gists_url":"https://api.github.com/users/RyanCavanaugh/gists{/gist_id}","starred_url":"https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RyanCavanaugh/subscriptions","organizations_url":"https://api.github.com/users/RyanCavanaugh/orgs","repos_url":"https://api.github.com/users/RyanCavanaugh/repos","events_url":"https://api.github.com/users/RyanCavanaugh/events{/privacy}","received_events_url":"https://api.github.com/users/RyanCavanaugh/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":117,"state":"closed","created_at":"2019-01-24T00:02:03Z","updated_at":"2019-06-12T15:43:36Z","due_on":null,"closed_at":"2019-06-12T15:43:36Z"},"comments":12,"created_at":"2019-05-11T16:59:20Z","updated_at":"2019-05-14T17:12:48Z","closed_at":"2019-05-14T00:17:27Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/31354","html_url":"https://github.com/microsoft/TypeScript/pull/31354","diff_url":"https://github.com/microsoft/TypeScript/pull/31354.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/31354.patch","merged_at":"2019-05-14T00:17:27Z"},"body":"This PR restores our previous behavior of deferring resolution of the true and false branches of conditional types. This fixes the performance regression we were seeing with statement completion in projects using `styled-components` (performance is now similar to 3.3).\r\n\r\n~~Because resolution of the true and false branches is deferred, simplifications of conditional types of the form `T extends xxx ? T : never` and `T extends xxx ? never : T` only occur when the actual declarations of the conditional types are written with identical types in the `T` position and type `never` in the other position (i.e. simplification doesn't occur when conditional types only match the pattern following instantiation). This shouldn't matter in practice as the types we really care about, `Exclude` and `Extract`, follow the pattern. For example, #28748 is still fixed.~~\r\n\r\nEDIT: Conditional type simplification now takes place in `getSimplifiedType` and we simplify to the same extent as before, so the above comment no longer applies.\r\n\r\nFixes #31302.\r\nFixes #31341.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/31354/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31354/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/31476","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31476/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31476/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31476/events","html_url":"https://github.com/microsoft/TypeScript/pull/31476","id":446133790,"node_id":"MDExOlB1bGxSZXF1ZXN0MjgwNDA0Mzg0","number":31476,"title":"Cache unnormalized intersection types","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/microsoft/TypeScript/milestones/97","html_url":"https://github.com/microsoft/TypeScript/milestone/97","labels_url":"https://api.github.com/repos/microsoft/TypeScript/milestones/97/labels","id":4318229,"node_id":"MDk6TWlsZXN0b25lNDMxODIyOQ==","number":97,"title":"TypeScript 3.5.1","description":null,"creator":{"login":"DanielRosenwasser","id":972891,"node_id":"MDQ6VXNlcjk3Mjg5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/972891?v=4","gravatar_id":"","url":"https://api.github.com/users/DanielRosenwasser","html_url":"https://github.com/DanielRosenwasser","followers_url":"https://api.github.com/users/DanielRosenwasser/followers","following_url":"https://api.github.com/users/DanielRosenwasser/following{/other_user}","gists_url":"https://api.github.com/users/DanielRosenwasser/gists{/gist_id}","starred_url":"https://api.github.com/users/DanielRosenwasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DanielRosenwasser/subscriptions","organizations_url":"https://api.github.com/users/DanielRosenwasser/orgs","repos_url":"https://api.github.com/users/DanielRosenwasser/repos","events_url":"https://api.github.com/users/DanielRosenwasser/events{/privacy}","received_events_url":"https://api.github.com/users/DanielRosenwasser/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":6,"state":"closed","created_at":"2019-05-15T19:43:12Z","updated_at":"2019-06-12T15:43:42Z","due_on":null,"closed_at":"2019-06-12T15:43:42Z"},"comments":6,"created_at":"2019-05-20T13:59:03Z","updated_at":"2019-05-21T13:42:58Z","closed_at":"2019-05-21T13:42:52Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/31476","html_url":"https://github.com/microsoft/TypeScript/pull/31476","diff_url":"https://github.com/microsoft/TypeScript/pull/31476.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/31476.patch","merged_at":"2019-05-21T13:42:52Z"},"body":"When creating intersection types we first normalize combinations of intersection and union types to place union types topmost. For example, this process turns `X & (A | B)` into the equivalent `X & A | X & B`. The normalization process can be very costly for intersections involving large union types. With this PR we cache both unnormalized and normalized intersection types, where previously we would only cache the latter. This means that for a particular set of unnormalized input types, we will only perform the potentially expensive normalization process once.\r\n\r\nThe improved caching lowers the check times for `react` and `styled-components` by ~25% and makes our performance better than 3.3:\r\n\r\n||3.3|3.4|Master|This PR|\r\n|---|---|---|---|---|\r\n|react|3.57s|4.25s|4.61s|3.42s|\r\n|styled-components|4.70s|7.55s|5.84s|4.44s|\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/31476/reactions","total_count":10,"+1":5,"-1":0,"laugh":0,"hooray":3,"confused":0,"heart":2,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31476/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/30814","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/30814/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/30814/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/30814/events","html_url":"https://github.com/microsoft/TypeScript/pull/30814","id":430554887,"node_id":"MDExOlB1bGxSZXF1ZXN0MjY4NDE3MDYx","number":30814,"title":"Cache ATA per patch version","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-04-08T16:52:10Z","updated_at":"2019-04-08T19:45:40Z","closed_at":"2019-04-08T19:45:34Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/30814","html_url":"https://github.com/microsoft/TypeScript/pull/30814","diff_url":"https://github.com/microsoft/TypeScript/pull/30814.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/30814.patch","merged_at":"2019-04-08T19:45:34Z"},"body":"Previously, we created one cache per minor version. This changes allows us to invalidate the ATA cache by releasing a new patch version of Typescript. Invaliding the ATA cache may be necessary to work around performance bugs in a version of Typescript, like those in 3.4.\r\n\r\nAlso, bump the version to 3.4.3.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/30814/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/30814/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/31945","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31945/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31945/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31945/events","html_url":"https://github.com/microsoft/TypeScript/pull/31945","id":457139020,"node_id":"MDExOlB1bGxSZXF1ZXN0Mjg5MDEyNTM3","number":31945,"title":"Skip costly tests","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2019-06-17T20:42:13Z","updated_at":"2019-06-25T22:47:53Z","closed_at":"2019-06-25T22:47:50Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/31945","html_url":"https://github.com/microsoft/TypeScript/pull/31945","diff_url":"https://github.com/microsoft/TypeScript/pull/31945.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/31945.patch","merged_at":"2019-06-25T22:47:50Z"},"body":"This PR speeds up runtests-parallel by selectively skipping tests that take a long time to run, but are rarely changed. That means that skipping them is unlikely to cause a problem, but have a large benefit. However, it does mean that rarely &mdash; the rate is configurable and defaults to 5% &mdash; you will see a failure on CI that you did not see when running `gulp runtests-parallel` locally. \r\n\r\nSee the Cost-based sorting section for details.\r\n\r\n## Jest \r\n\r\nI considered a number of other ways to make tests run faster as well, mostly based on the idea that tests that don't touch the code you edit should not need to be run. The best implementation of this is coverage-based testing, but when I tried Jest, its Istanbul-based coverage ran out of memory. I [filed a bug](https://github.com/facebook/jest/issues/8557) and it looks like v8-based coverage is needed, which will take quite a bit of work. We might need to be the ones to do it; in the meantime I want an easy speedup.\r\n\r\nI looked at a few recent PRs and guessed that coverage-based testing would cut off 50-80% of our current test time.\r\n\r\n## Which tests to skip\r\n\r\nI considered lots of ways to skip tests. I measured the quality of each method on four criteria:\r\n\r\n* chance of failure\r\n* percent of current test runtime saved\r\n* ease of implementation\r\n* determinism\r\n\r\nA given PR *fails* if it edits a test that was skipped.\r\n\r\n### Fourslash\r\n\r\nMy simplest idea was to just skip fourslash tests when only files in src/compiler are edited, since fourslash takes about 40% of test time. Unfortunately, that fails 7.5% of PRs, and would be useless for non-compiler PRs -- the failure rate would be above 50% for services code. Skipping other test suites besides compiler/conformance wouldn't help because none take that much time.\r\n\r\n### Cost-based sorting\r\n\r\nMy next idea was to sort tests from slow to fast, and just skip the slowest ones. But a slow test that catches lots of failures is still valuable. So I decided on Math.log(*time*% / *edit*%) as the measure of cost. Every test's runtime is scaled by the number of edits to the test, so slow, useful tests cost less than slow, useless ones.\r\n\r\nThis saves 38% of test runtime for a 5% chance of failure, or 29% time saving for 2.5% chance of failure. It's also deterministic -- the same tests are skipped for everybody every time -- and configurable -- you decide what failure rate you can tolerate and the tests will speed up by a commensurate amount.\r\n\r\nI thought of some variations that I did not implement for various reasons:\r\n\r\n### Cost-based sampling\r\n\r\nInstead of dropping the most costly tests, you could drop tests randomly based on their cost. But this would result in the most costly tests *usually* being dropped, and is not deterministic, which would be annoying over many local runs.\r\n\r\n### Per-user training of cost\r\n\r\nIt is possible to count only tests that you yourself have edited. If you personally never break fourslash tests (for example), there's no value in running them.\r\n\r\nHowever, intelligently generating the test cost is a little more complex and little less deterministic, and only helps performance a little bit &mdash; 2% or so. Instead I included the data as part of the PR, along with the script used to update it.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/31945/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/31945/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/30259","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/30259/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/30259/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/30259/events","html_url":"https://github.com/microsoft/TypeScript/pull/30259","id":418462996,"node_id":"MDExOlB1bGxSZXF1ZXN0MjU5MjMwNzQ1","number":30259,"title":"Transform flag cleanup","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-03-07T18:57:23Z","updated_at":"2019-03-08T23:08:30Z","closed_at":"2019-03-08T23:08:27Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/30259","html_url":"https://github.com/microsoft/TypeScript/pull/30259","diff_url":"https://github.com/microsoft/TypeScript/pull/30259.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/30259.patch","merged_at":"2019-03-08T23:08:27Z"},"body":"With the recent change to add a `ContainsES2019` flag to the `TransformFlags` enum, we have now run out of space for additional flags. This PR removes a number of entries in the `TransformFlags` enum in favor of some simple checks. Benchmark comparisons against `master` indicate no noticeable regression in performance.\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/30259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/30259/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/29923","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/29923/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/29923/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/29923/events","html_url":"https://github.com/microsoft/TypeScript/pull/29923","id":410538926,"node_id":"MDExOlB1bGxSZXF1ZXN0MjUzMjU5MjU0","number":29923,"title":"Free up some type flags","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-02-14T23:29:01Z","updated_at":"2019-02-15T17:10:24Z","closed_at":"2019-02-15T17:10:21Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/29923","html_url":"https://github.com/microsoft/TypeScript/pull/29923","diff_url":"https://github.com/microsoft/TypeScript/pull/29923.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/29923.patch","merged_at":"2019-02-15T17:10:21Z"},"body":"This PR frees up three `TypeFlags` by moving the propagating flags into `ObjectFlags` and adding an `objectFlags` property to the `null` and `undefined` types as well as union and intersection types. There should be no API or performance impact from this.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/29923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/29923/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/28028","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28028/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28028/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28028/events","html_url":"https://github.com/microsoft/TypeScript/pull/28028","id":372331993,"node_id":"MDExOlB1bGxSZXF1ZXN0MjI0NTUyNjIz","number":28028,"title":"Fix performance regression when reusing old state","user":{"login":"ajafff","id":11968040,"node_id":"MDQ6VXNlcjExOTY4MDQw","avatar_url":"https://avatars.githubusercontent.com/u/11968040?v=4","gravatar_id":"","url":"https://api.github.com/users/ajafff","html_url":"https://github.com/ajafff","followers_url":"https://api.github.com/users/ajafff/followers","following_url":"https://api.github.com/users/ajafff/following{/other_user}","gists_url":"https://api.github.com/users/ajafff/gists{/gist_id}","starred_url":"https://api.github.com/users/ajafff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajafff/subscriptions","organizations_url":"https://api.github.com/users/ajafff/orgs","repos_url":"https://api.github.com/users/ajafff/repos","events_url":"https://api.github.com/users/ajafff/events{/privacy}","received_events_url":"https://api.github.com/users/ajafff/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2018-10-21T16:26:32Z","updated_at":"2018-11-01T21:00:46Z","closed_at":"2018-10-25T18:12:54Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/28028","html_url":"https://github.com/microsoft/TypeScript/pull/28028","diff_url":"https://github.com/microsoft/TypeScript/pull/28028.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/28028.patch","merged_at":"2018-10-25T18:12:54Z"},"body":"Fixes: #28025\r\n\r\nThis (hopefully) fixes the performance regression reported in #28025.\r\n`moduleNameResolvesToAmbientModuleInNonModifiedFile` may be executed for each import (or type reference directive) in every file of the program.\r\nPreviously it would iterate through all files of the program where most of them are likely to have no ambient module names.\r\nThe new implementation stores a file of unmodified files that contain ambient module names. This list is typically a lot shorter than the list of all files.\r\n\r\nNote that I removed some unnecessary parameters because their contents are already available in an enclosing scope.\r\nAlso note that the old implementation used `modifiedFilePaths` even if it was `undefined`. In that case it assumed all files to be unchanged. But in fact every file could have been changed because reusing the old program aborted before populating that variable.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/28028/reactions","total_count":60,"+1":42,"-1":0,"laugh":0,"hooray":10,"confused":0,"heart":8,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28028/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/28089","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28089/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28089/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28089/events","html_url":"https://github.com/microsoft/TypeScript/pull/28089","id":373225072,"node_id":"MDExOlB1bGxSZXF1ZXN0MjI1MjA0MzM3","number":28089,"title":"Improve performance of suggestionDiagnostics for convertToAsyncFunction","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-10-23T22:13:12Z","updated_at":"2018-10-25T04:23:51Z","closed_at":"2018-10-25T04:23:48Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/28089","html_url":"https://github.com/microsoft/TypeScript/pull/28089","diff_url":"https://github.com/microsoft/TypeScript/pull/28089.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/28089.patch","merged_at":"2018-10-25T04:23:48Z"},"body":"Previously we would unconditionally get the type of every functionExpression, which could take a while. Now we will first check if it syntactically looks like a promise handler before checking the type.\r\nAlso separated `hasReturnStatementWithPromiseHandler` from `getReturnStatementsWithPromiseHandlers` to avoid allocating arrays unnecessarily.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/28089/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28089/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/26941","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26941/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26941/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26941/events","html_url":"https://github.com/microsoft/TypeScript/pull/26941","id":357723646,"node_id":"MDExOlB1bGxSZXF1ZXN0MjEzNjcwNjIw","number":26941,"title":"Fix #25172: Add narrowing for `unknown` with triple equals","user":{"login":"jack-williams","id":4489219,"node_id":"MDQ6VXNlcjQ0ODkyMTk=","avatar_url":"https://avatars.githubusercontent.com/u/4489219?v=4","gravatar_id":"","url":"https://api.github.com/users/jack-williams","html_url":"https://github.com/jack-williams","followers_url":"https://api.github.com/users/jack-williams/followers","following_url":"https://api.github.com/users/jack-williams/following{/other_user}","gists_url":"https://api.github.com/users/jack-williams/gists{/gist_id}","starred_url":"https://api.github.com/users/jack-williams/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jack-williams/subscriptions","organizations_url":"https://api.github.com/users/jack-williams/orgs","repos_url":"https://api.github.com/users/jack-williams/repos","events_url":"https://api.github.com/users/jack-williams/events{/privacy}","received_events_url":"https://api.github.com/users/jack-williams/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"RyanCavanaugh","id":6685088,"node_id":"MDQ6VXNlcjY2ODUwODg=","avatar_url":"https://avatars.githubusercontent.com/u/6685088?v=4","gravatar_id":"","url":"https://api.github.com/users/RyanCavanaugh","html_url":"https://github.com/RyanCavanaugh","followers_url":"https://api.github.com/users/RyanCavanaugh/followers","following_url":"https://api.github.com/users/RyanCavanaugh/following{/other_user}","gists_url":"https://api.github.com/users/RyanCavanaugh/gists{/gist_id}","starred_url":"https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RyanCavanaugh/subscriptions","organizations_url":"https://api.github.com/users/RyanCavanaugh/orgs","repos_url":"https://api.github.com/users/RyanCavanaugh/repos","events_url":"https://api.github.com/users/RyanCavanaugh/events{/privacy}","received_events_url":"https://api.github.com/users/RyanCavanaugh/received_events","type":"User","site_admin":false},"assignees":[{"login":"RyanCavanaugh","id":6685088,"node_id":"MDQ6VXNlcjY2ODUwODg=","avatar_url":"https://avatars.githubusercontent.com/u/6685088?v=4","gravatar_id":"","url":"https://api.github.com/users/RyanCavanaugh","html_url":"https://github.com/RyanCavanaugh","followers_url":"https://api.github.com/users/RyanCavanaugh/followers","following_url":"https://api.github.com/users/RyanCavanaugh/following{/other_user}","gists_url":"https://api.github.com/users/RyanCavanaugh/gists{/gist_id}","starred_url":"https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RyanCavanaugh/subscriptions","organizations_url":"https://api.github.com/users/RyanCavanaugh/orgs","repos_url":"https://api.github.com/users/RyanCavanaugh/repos","events_url":"https://api.github.com/users/RyanCavanaugh/events{/privacy}","received_events_url":"https://api.github.com/users/RyanCavanaugh/received_events","type":"User","site_admin":false}],"milestone":{"url":"https://api.github.com/repos/microsoft/TypeScript/milestones/2","html_url":"https://github.com/microsoft/TypeScript/milestone/2","labels_url":"https://api.github.com/repos/microsoft/TypeScript/milestones/2/labels","id":721044,"node_id":"MDk6TWlsZXN0b25lNzIxMDQ0","number":2,"title":"Community (deprecated)","description":"Please use the \"Backlog\" milestone instead","creator":{"login":"RyanCavanaugh","id":6685088,"node_id":"MDQ6VXNlcjY2ODUwODg=","avatar_url":"https://avatars.githubusercontent.com/u/6685088?v=4","gravatar_id":"","url":"https://api.github.com/users/RyanCavanaugh","html_url":"https://github.com/RyanCavanaugh","followers_url":"https://api.github.com/users/RyanCavanaugh/followers","following_url":"https://api.github.com/users/RyanCavanaugh/following{/other_user}","gists_url":"https://api.github.com/users/RyanCavanaugh/gists{/gist_id}","starred_url":"https://api.github.com/users/RyanCavanaugh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RyanCavanaugh/subscriptions","organizations_url":"https://api.github.com/users/RyanCavanaugh/orgs","repos_url":"https://api.github.com/users/RyanCavanaugh/repos","events_url":"https://api.github.com/users/RyanCavanaugh/events{/privacy}","received_events_url":"https://api.github.com/users/RyanCavanaugh/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":142,"state":"closed","created_at":"2014-07-14T23:24:58Z","updated_at":"2021-02-07T08:24:33Z","due_on":null,"closed_at":"2019-03-07T21:45:58Z"},"comments":6,"created_at":"2018-09-06T16:01:29Z","updated_at":"2019-01-30T00:51:42Z","closed_at":"2019-01-30T00:43:52Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/26941","html_url":"https://github.com/microsoft/TypeScript/pull/26941","diff_url":"https://github.com/microsoft/TypeScript/pull/26941.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/26941.patch","merged_at":"2019-01-30T00:43:51Z"},"body":"Fixes #25172.\r\n\r\nNarrows an identifier of type `unknown` when strict compared (`===`) with a value of primitive, non-primitive, or object type.\r\n\r\n- Comparing with a primitive/non-primitive type narrows to the type of the operand, retaining any literal types.\r\n- Comparing with an object type narrows to the default non-primitive type `object`.\r\n\r\nLimitations.\r\n- Does not work with `==` because we would need to consider coercion rules.\r\n- Does not work with intersection or union:\r\n  - Intersection: Branding tricks like `number & \"age\"` make it hard to tell the actual runtime type. We could inherit the intersection type but this might violate branding expectations.\r\n  - Union: To narrow from a union would require traversing the union and collecting the set possible target types. The performance impacts of this aren't clear, and I'm not sure how often this happens anyway.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/26941/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26941/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/28282","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28282/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28282/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28282/events","html_url":"https://github.com/microsoft/TypeScript/pull/28282","id":376375545,"node_id":"MDExOlB1bGxSZXF1ZXN0MjI3NjA1ODEw","number":28282,"title":" Fix performance regression when reusing old state (#28028)","user":{"login":"ajafff","id":11968040,"node_id":"MDQ6VXNlcjExOTY4MDQw","avatar_url":"https://avatars.githubusercontent.com/u/11968040?v=4","gravatar_id":"","url":"https://api.github.com/users/ajafff","html_url":"https://github.com/ajafff","followers_url":"https://api.github.com/users/ajafff/followers","following_url":"https://api.github.com/users/ajafff/following{/other_user}","gists_url":"https://api.github.com/users/ajafff/gists{/gist_id}","starred_url":"https://api.github.com/users/ajafff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajafff/subscriptions","organizations_url":"https://api.github.com/users/ajafff/orgs","repos_url":"https://api.github.com/users/ajafff/repos","events_url":"https://api.github.com/users/ajafff/events{/privacy}","received_events_url":"https://api.github.com/users/ajafff/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-11-01T12:38:39Z","updated_at":"2018-11-01T20:48:37Z","closed_at":"2018-11-01T20:48:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/28282","html_url":"https://github.com/microsoft/TypeScript/pull/28282","diff_url":"https://github.com/microsoft/TypeScript/pull/28282.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/28282.patch","merged_at":"2018-11-01T20:48:36Z"},"body":"Backport of #28028 to 3.1\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/28282/reactions","total_count":35,"+1":20,"-1":0,"laugh":0,"hooray":8,"confused":0,"heart":7,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28282/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/27517","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/27517/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/27517/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/27517/events","html_url":"https://github.com/microsoft/TypeScript/pull/27517","id":366157153,"node_id":"MDExOlB1bGxSZXF1ZXN0MjE5OTAyMzI2","number":27517,"title":"fix typo in performance mark name","user":{"login":"brandonmbanks","id":10030196,"node_id":"MDQ6VXNlcjEwMDMwMTk2","avatar_url":"https://avatars.githubusercontent.com/u/10030196?v=4","gravatar_id":"","url":"https://api.github.com/users/brandonmbanks","html_url":"https://github.com/brandonmbanks","followers_url":"https://api.github.com/users/brandonmbanks/followers","following_url":"https://api.github.com/users/brandonmbanks/following{/other_user}","gists_url":"https://api.github.com/users/brandonmbanks/gists{/gist_id}","starred_url":"https://api.github.com/users/brandonmbanks/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brandonmbanks/subscriptions","organizations_url":"https://api.github.com/users/brandonmbanks/orgs","repos_url":"https://api.github.com/users/brandonmbanks/repos","events_url":"https://api.github.com/users/brandonmbanks/events{/privacy}","received_events_url":"https://api.github.com/users/brandonmbanks/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-10-03T03:04:37Z","updated_at":"2018-10-03T18:04:54Z","closed_at":"2018-10-03T16:41:12Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/27517","html_url":"https://github.com/microsoft/TypeScript/pull/27517","diff_url":"https://github.com/microsoft/TypeScript/pull/27517.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/27517.patch","merged_at":"2018-10-03T16:41:12Z"},"body":"Housekeeping typo fix.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/27517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/27517/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/28645","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28645/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28645/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28645/events","html_url":"https://github.com/microsoft/TypeScript/pull/28645","id":383390055,"node_id":"MDExOlB1bGxSZXF1ZXN0MjMyODY2Njk3","number":28645,"title":"Add perf optimizations for path comparisons","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-11-22T05:53:35Z","updated_at":"2018-11-26T23:12:02Z","closed_at":"2018-11-26T23:06:40Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/28645","html_url":"https://github.com/microsoft/TypeScript/pull/28645","diff_url":"https://github.com/microsoft/TypeScript/pull/28645.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/28645.patch","merged_at":"2018-11-26T23:06:40Z"},"body":"This adds a few minor changes to improve the performance of path comparisons.\r\n\r\nPrior to #28629, this change shaved about 60 seconds off of the owa controls build time, though following #28629 this only saves about 2 seconds.\r\n\r\n```\r\nBefore:\r\nTotal time:  142.71s\r\n\r\nAfter:\r\nTotal time:  140.65s\r\n```","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/28645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28645/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/27980","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/27980/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/27980/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/27980/events","html_url":"https://github.com/microsoft/TypeScript/pull/27980","id":371739216,"node_id":"MDExOlB1bGxSZXF1ZXN0MjI0MTE5NDUx","number":27980,"title":"match leading slash imports with path mappings - fixes #13730","user":{"login":"EECOLOR","id":1486362,"node_id":"MDQ6VXNlcjE0ODYzNjI=","avatar_url":"https://avatars.githubusercontent.com/u/1486362?v=4","gravatar_id":"","url":"https://api.github.com/users/EECOLOR","html_url":"https://github.com/EECOLOR","followers_url":"https://api.github.com/users/EECOLOR/followers","following_url":"https://api.github.com/users/EECOLOR/following{/other_user}","gists_url":"https://api.github.com/users/EECOLOR/gists{/gist_id}","starred_url":"https://api.github.com/users/EECOLOR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EECOLOR/subscriptions","organizations_url":"https://api.github.com/users/EECOLOR/orgs","repos_url":"https://api.github.com/users/EECOLOR/repos","events_url":"https://api.github.com/users/EECOLOR/events{/privacy}","received_events_url":"https://api.github.com/users/EECOLOR/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2018-10-18T22:32:23Z","updated_at":"2018-11-09T23:55:44Z","closed_at":"2018-11-08T17:20:46Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/27980","html_url":"https://github.com/microsoft/TypeScript/pull/27980","diff_url":"https://github.com/microsoft/TypeScript/pull/27980.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/27980.patch","merged_at":"2018-11-08T17:20:46Z"},"body":"Checklist:\r\n* [x] There is an [associated issue](https://github.com/Microsoft/TypeScript/issues/13730)\r\n* [ ] The issue is labeled 'Bug' or 'help wanted' or is in the Community milestone\r\n* [x] Code is up-to-date with the `master` branch\r\n* [x] You've successfully run `jake runtests` locally\r\n* [x] You've signed the CLA\r\n* [x] There are new or updated unit tests validating the change\r\n\r\nAbout the code changes: I can imagine you would like to have the code structured differently or have different traces. I just looked at what currently been implemented and took the most straightforward approach making the changes easy to diff. Feel free to make suggestions.\r\n\r\nAbout the tests: I am missing information to provide the correct amount of tests, or actually I don't know what your policy is. I think the tests I added should cover all of the code I added and prevent future breakage. \r\n\r\nAbout performance: I tried to minimize the performance impact. I am not sure how often this code is called in situations where high performance is required. That said, I noticed a lot of places where performance could be improved, so I am not sure how much you guys want to focus on that.\r\n\r\nAbout caching: I noticed a few places where `isExternalModuleNameRelative` is used in relation to caching. We might want to add the 'is potentially an alias import' there as well. This however requires some extra thought. An example of such a place:\r\n\r\n```js\r\nif (perFolderCache) {\r\n  perFolderCache.set(moduleName, result);\r\n  if (!isExternalModuleNameRelative(moduleName)) {\r\n    // put result in per-module name cache\r\n    cache!.getOrCreateCacheForModuleName(moduleName).set(containingDirectory, result);\r\n  }\r\n}\r\n```\r\n\r\nFixes #13730\r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/27980/reactions","total_count":4,"+1":2,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/27980/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/28742","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28742/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28742/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28742/events","html_url":"https://github.com/microsoft/TypeScript/pull/28742","id":385868856,"node_id":"MDExOlB1bGxSZXF1ZXN0MjM0NzQxNTM3","number":28742,"title":"Fix incremental parsing bailout logic","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-11-29T18:31:13Z","updated_at":"2018-11-30T01:11:37Z","closed_at":"2018-11-30T01:11:31Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/28742","html_url":"https://github.com/microsoft/TypeScript/pull/28742","diff_url":"https://github.com/microsoft/TypeScript/pull/28742.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/28742.patch","merged_at":"2018-11-30T01:11:31Z"},"body":"Incremental parsing is designed to bail out in certain parsing contexts, such as element lists of array literals. The bailout logic does a lot of redundant work before exiting, however, and this can lead to very poor performance in the language service. While investigating a fix for #28540 I experienced language service delays of up to 30 seconds when typing in a file containing a very large array literal. This PR fixes the issue by optimizing the bailout logic.\r\n\r\nThere are no tests associated with this PR as we don't have suitable infrastructure, but the fix has been experimentally verified.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/28742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28742/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/28588","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28588/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28588/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28588/events","html_url":"https://github.com/microsoft/TypeScript/pull/28588","id":381880581,"node_id":"MDExOlB1bGxSZXF1ZXN0MjMxNzM4NjAy","number":28588,"title":"Remove jsdoc comment on ts namespace","user":{"login":"dsherret","id":1609021,"node_id":"MDQ6VXNlcjE2MDkwMjE=","avatar_url":"https://avatars.githubusercontent.com/u/1609021?v=4","gravatar_id":"","url":"https://api.github.com/users/dsherret","html_url":"https://github.com/dsherret","followers_url":"https://api.github.com/users/dsherret/followers","following_url":"https://api.github.com/users/dsherret/following{/other_user}","gists_url":"https://api.github.com/users/dsherret/gists{/gist_id}","starred_url":"https://api.github.com/users/dsherret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsherret/subscriptions","organizations_url":"https://api.github.com/users/dsherret/orgs","repos_url":"https://api.github.com/users/dsherret/repos","events_url":"https://api.github.com/users/dsherret/events{/privacy}","received_events_url":"https://api.github.com/users/dsherret/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-11-17T17:00:13Z","updated_at":"2018-11-19T16:44:30Z","closed_at":"2018-11-19T16:44:30Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/28588","html_url":"https://github.com/microsoft/TypeScript/pull/28588","diff_url":"https://github.com/microsoft/TypeScript/pull/28588.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/28588.patch","merged_at":"2018-11-19T16:44:30Z"},"body":"Opening a PR for this instead of going through an issue because it's small.\r\n\r\nRemoves this \"Non-internal stuff goes here\" jsdoc comment seen when importing `ts`.\r\n\r\n![image](https://user-images.githubusercontent.com/1609021/48663513-6f9aaa80-ea5f-11e8-9d15-033391ba9a8b.png)\r\n\r\n(On a sidenote, just wanted to give some unrelated feedback: I've sadly had to switch to using vscode because visual studio 2017 performance with TypeScript is abysmal, but vscode is snappy. Other devs have mentioned this to me too. I hope it's better once VS 2019 comes out.)","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/28588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/28588/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/27693","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/27693/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/27693/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/27693/events","html_url":"https://github.com/microsoft/TypeScript/pull/27693","id":368881279,"node_id":"MDExOlB1bGxSZXF1ZXN0MjIxOTUzNDA3","number":27693,"title":"noImplicitAny as suggestion","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-10-10T22:31:06Z","updated_at":"2018-10-11T23:23:35Z","closed_at":"2018-10-11T23:15:39Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/27693","html_url":"https://github.com/microsoft/TypeScript/pull/27693","diff_url":"https://github.com/microsoft/TypeScript/pull/27693.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/27693.patch","merged_at":"2018-10-11T23:15:39Z"},"body":"With noImplicitAny suggestions, people will see suggestions for the infer-from-usage codefix even with noImplicitAny turned off. This applies to JS users, who are otherwise unlikely to see that codefix.\r\n\r\nNotes:\r\n\r\n1. I want to evaluate performance before merging this.\r\n2. I want to make sure the suggestions are mostly reliable and sensical before merging as well. I'm going to look over our user tests.\r\n3. Not all noImplicitAny errors turn into suggestions. In\r\nparticular:\r\n\r\n    1. reportErrorsFromWidening does not, because it doesn't log an error that infer-from-usage fixes, and fixing it would require otherwise-unnecessary code.\r\n   2. auto types do not have implicit any suggestions, because that would require running control flow in noImplicitAny mode.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/27693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/27693/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/26790","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26790/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26790/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26790/events","html_url":"https://github.com/microsoft/TypeScript/pull/26790","id":355743573,"node_id":"MDExOlB1bGxSZXF1ZXN0MjEyMjAyNzg1","number":26790,"title":"Fix weak object relation check","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2018-08-30T20:34:21Z","updated_at":"2018-08-31T13:34:52Z","closed_at":"2018-08-31T05:08:45Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/26790","html_url":"https://github.com/microsoft/TypeScript/pull/26790","diff_url":"https://github.com/microsoft/TypeScript/pull/26790.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/26790.patch","merged_at":"2018-08-31T05:08:44Z"},"body":"This PR optimizes two code paths:\r\n\r\n* Weak object checks now exclude generic types and therefore never fetch constraints. Previously, for a type variable constrained by a union type we'd end up computing the property set of the union type which can be an expensive operation. Also, we'd do this *before* checking whether the target is actually a weak type (a relatively cheap check). Now we do it the other way around.\r\n* Type relationship checks with a tuple on the source side and an array on the target side are now specialized to just check the type of the index signature. This improves performance and error elaborations.\r\n\r\nFixes #26756.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/26790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26790/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/23516","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23516/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23516/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23516/events","html_url":"https://github.com/microsoft/TypeScript/pull/23516","id":315581799,"node_id":"MDExOlB1bGxSZXF1ZXN0MTgyNTU2Njcw","number":23516,"title":"Improve performance of duplicate check","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-04-18T17:55:47Z","updated_at":"2018-07-30T19:13:35Z","closed_at":"2018-04-18T19:58:17Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/23516","html_url":"https://github.com/microsoft/TypeScript/pull/23516","diff_url":"https://github.com/microsoft/TypeScript/pull/23516.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/23516.patch","merged_at":"2018-04-18T19:58:17Z"},"body":"Don't loop over the entire array in the inner loop, just the elements past the current one.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/23516/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23516/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/25538","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25538/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25538/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25538/events","html_url":"https://github.com/microsoft/TypeScript/pull/25538","id":339655351,"node_id":"MDExOlB1bGxSZXF1ZXN0MjAwMjU2MTIz","number":25538,"title":"Pass sourceFile to getChildren in getTokenAtPositionWorker (#25505)","user":{"login":"Quantumplation","id":49870,"node_id":"MDQ6VXNlcjQ5ODcw","avatar_url":"https://avatars.githubusercontent.com/u/49870?v=4","gravatar_id":"","url":"https://api.github.com/users/Quantumplation","html_url":"https://github.com/Quantumplation","followers_url":"https://api.github.com/users/Quantumplation/followers","following_url":"https://api.github.com/users/Quantumplation/following{/other_user}","gists_url":"https://api.github.com/users/Quantumplation/gists{/gist_id}","starred_url":"https://api.github.com/users/Quantumplation/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Quantumplation/subscriptions","organizations_url":"https://api.github.com/users/Quantumplation/orgs","repos_url":"https://api.github.com/users/Quantumplation/repos","events_url":"https://api.github.com/users/Quantumplation/events{/privacy}","received_events_url":"https://api.github.com/users/Quantumplation/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-07-10T00:50:48Z","updated_at":"2018-07-10T01:19:16Z","closed_at":"2018-07-10T01:15:41Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/25538","html_url":"https://github.com/microsoft/TypeScript/pull/25538","diff_url":"https://github.com/microsoft/TypeScript/pull/25538.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/25538.patch","merged_at":"2018-07-10T01:15:40Z"},"body":"For performance reasons, we should always pass sourceFile to getChildren, if available.\r\n\r\n* [X] There is an associated issue that is labeled 'Bug' or 'help wanted' or is in the Community milestone\r\n* [X] Code is up-to-date with the `master` branch\r\n* [X] You've successfully run `jake runtests` locally\r\n* [X] You've signed the CLA\r\n* [ ] There are new or updated unit tests validating the change (N/A, see note below)\r\n\r\nFixes #25505 \r\n\r\nNote that per suggestion of @DanielRosenwasser and @andy-ms, this doesn't include a unit test since it's primarily a performance improvement, but if someone feels strongly otherwise, I'm happy to write one.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/25538/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25538/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/26424","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26424/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26424/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26424/events","html_url":"https://github.com/microsoft/TypeScript/pull/26424","id":350198340,"node_id":"MDExOlB1bGxSZXF1ZXN0MjA4MTA3MzEz","number":26424,"title":"Narrow on element access of literal","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[{"id":114834677,"node_id":"MDU6TGFiZWwxMTQ4MzQ2Nzc=","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Breaking%20Change","name":"Breaking Change","color":"eb6420","default":false,"description":"Would introduce errors in existing code"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-08-13T21:19:54Z","updated_at":"2018-11-06T02:32:57Z","closed_at":"2018-08-15T16:58:40Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/26424","html_url":"https://github.com/microsoft/TypeScript/pull/26424","diff_url":"https://github.com/microsoft/TypeScript/pull/26424.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/26424.patch","merged_at":"2018-08-15T16:58:40Z"},"body":"This means that, for example, the tuple `[number, string?]` allows its second element to be narrowed with element access:\r\n\r\n```ts\r\nexport function f(pair: [number, string?]): string {\r\n  return pair[1] ? pair[1] : 'nope';\r\n}\r\n```\r\n\r\nOr you can narrow on properties that don't work with property access:\r\n\r\n```ts\r\ninterface Square {\r\n    [\"dash-ok\"]: \"square\";\r\n    [\"square-size\"]: number;\r\n}\r\n interface Rectangle {\r\n    [\"dash-ok\"]: \"rectangle\";\r\n    width: number;\r\n    height: number;\r\n}\r\n interface Circle {\r\n    [\"dash-ok\"]: \"circle\";\r\n    radius: number;\r\n}\r\n type Shape = Square | Rectangle | Circle;\r\nfunction area(s: Shape): number {\r\n    switch(s['dash-ok']) {\r\n        case \"square\": return s['square-size'] * s['square-size'];\r\n        case \"rectangle\": return s.width * s['height'];\r\n        case \"circle\": return Math.PI * s['radius'] * s.radius;\r\n    }\r\n}\r\n```\r\n\r\nThis only works for actual literal references, not expressions with literal types, to prevent the binder from making the control flow graph much bigger than it is currently. In other words, this doesn't work:\r\n\r\n```ts\r\nexport function f(pair: [number, string?]): string {\r\n  const one = 1\r\n  return pair[one] ? pair[one] : 'nope';\r\n}\r\n```\r\n\r\nPerformance is not significantly different from today, even on the Compiler, Unions Edition, which is full of very large unions:\r\n\r\n```\r\n┌─────────────┬─────────────────────┬─────────────────────┬───────────────────┬──────────┬──────────┐\r\n│ Project     │            Baseline │             Current │             Delta │     Best │    Worst │\r\n╞═════════════╧═════════════════════╧═════════════════════╧═══════════════════╧══════════╧══════════╡\r\n│ Angular - node (v10.7.0, x64)                                                                     │\r\n├─────────────┬─────────────────────┬─────────────────────┬───────────────────┬──────────┬──────────┤\r\n│ Memory used │ 366,503k (±  0.01%) │ 366,586k (±  0.01%) │   +82k (+  0.02%) │ 366,421k │ 366,712k │\r\n│ Parse Time  │    1.46s (±  0.97%) │    1.47s (±  0.97%) │ +0.01s (+  0.48%) │    1.43s │    1.56s │\r\n│ Bind Time   │    0.66s (±  0.86%) │    0.67s (±  1.05%) │ +0.01s (+  1.29%) │    0.65s │    0.69s │\r\n│ Check Time  │    3.44s (±  0.48%) │    3.47s (±  0.60%) │ +0.02s (+  0.71%) │    3.41s │    3.60s │\r\n│ Emit Time   │    4.85s (±  0.59%) │    4.88s (±  0.52%) │ +0.03s (+  0.55%) │    4.82s │    5.05s │\r\n├─────────────┼─────────────────────┼─────────────────────┼───────────────────┼──────────┼──────────┤\r\n│ Total Time  │   10.41s (±  0.29%) │   10.47s (±  0.35%) │ +0.06s (+  0.62%) │   10.37s │   10.65s │\r\n╞═════════════╧═════════════════════╧═════════════════════╧═══════════════════╧══════════╧══════════╡\r\n│ Compiler - node (v10.7.0, x64)                                                                    │\r\n├─────────────┬─────────────────────┬─────────────────────┬───────────────────┬──────────┬──────────┤\r\n│ Memory used │ 198,369k (±  0.33%) │ 197,846k (±  0.22%) │  -523k (-  0.26%) │ 197,377k │ 200,636k │\r\n│ Parse Time  │    0.61s (±  1.05%) │    0.61s (±  1.76%) │ +0.01s (+  0.91%) │    0.59s │    0.69s │\r\n│ Bind Time   │    0.67s (±  1.26%) │    0.67s (±  1.29%) │ +0.00s (+  0.15%) │    0.65s │    0.71s │\r\n│ Check Time  │    2.88s (±  0.61%) │    2.89s (±  0.95%) │ +0.01s (+  0.33%) │    2.82s │    3.00s │\r\n│ Emit Time   │    2.00s (±  0.69%) │    2.01s (±  0.74%) │ +0.00s (+  0.07%) │    1.97s │    2.09s │\r\n├─────────────┼─────────────────────┼─────────────────────┼───────────────────┼──────────┼──────────┤\r\n│ Total Time  │    6.15s (±  0.38%) │    6.17s (±  0.56%) │ +0.02s (+  0.29%) │    6.07s │    6.33s │\r\n╞═════════════╧═════════════════════╧═════════════════════╧═══════════════════╧══════════╧══════════╡\r\n│ Compiler - Unions - node (v10.7.0, x64)                                                           │\r\n├─────────────┬─────────────────────┬─────────────────────┬───────────────────┬──────────┬──────────┤\r\n│ Memory used │ 219,013k (±  0.27%) │ 218,586k (±  0.13%) │  -427k (-  0.20%) │ 218,148k │ 221,204k │\r\n│ Parse Time  │    0.56s (±  1.42%) │    0.56s (±  1.19%) │ -0.00s (-  0.18%) │    0.54s │    0.59s │\r\n│ Bind Time   │    0.62s (±  1.19%) │    0.62s (±  1.09%) │ +0.00s (+  0.65%) │    0.60s │    0.65s │\r\n│ Check Time  │    9.26s (±  0.46%) │    9.27s (±  0.43%) │ +0.01s (+  0.12%) │    9.09s │    9.42s │\r\n│ Emit Time   │    1.92s (±  0.73%) │    1.90s (±  0.91%) │ -0.02s (-  0.81%) │    1.85s │    1.98s │\r\n├─────────────┼─────────────────────┼─────────────────────┼───────────────────┼──────────┼──────────┤\r\n│ Total Time  │   12.36s (±  0.43%) │   12.36s (±  0.34%) │ -0.00s (-  0.00%) │   12.22s │   12.54s │\r\n╞═════════════╧═════════════════════╧═════════════════════╧═══════════════════╧══════════╧══════════╡\r\n│ Monaco - node (v10.7.0, x64)                                                                      │\r\n├─────────────┬─────────────────────┬─────────────────────┬───────────────────┬──────────┬──────────┤\r\n│ Memory used │ 370,896k (±  0.01%) │ 370,943k (±  0.01%) │   +48k (+  0.01%) │ 370,735k │ 371,128k │\r\n│ Parse Time  │    1.18s (±  1.07%) │    1.18s (±  1.30%) │ +0.01s (+  0.47%) │    1.12s │    1.24s │\r\n│ Bind Time   │    0.60s (±  1.26%) │    0.61s (±  0.93%) │ +0.01s (+  1.00%) │    0.59s │    0.63s │\r\n│ Check Time  │    3.45s (±  0.71%) │    3.47s (±  0.65%) │ +0.02s (+  0.61%) │    3.41s │    3.56s │\r\n│ Emit Time   │    2.43s (±  0.68%) │    2.44s (±  0.55%) │ +0.01s (+  0.39%) │    2.40s │    2.50s │\r\n├─────────────┼─────────────────────┼─────────────────────┼───────────────────┼──────────┼──────────┤\r\n│ Total Time  │    7.65s (±  0.50%) │    7.70s (±  0.35%) │ +0.04s (+  0.59%) │    7.61s │    7.82s │\r\n╞═════════════╧═════════════════════╧═════════════════════╧═══════════════════╧══════════╧══════════╡\r\n│ TFS - node (v10.7.0, x64)                                                                         │\r\n├─────────────┬─────────────────────┬─────────────────────┬───────────────────┬──────────┬──────────┤\r\n│ Memory used │ 328,758k (±  0.01%) │ 328,830k (±  0.02%) │   +72k (+  0.02%) │ 328,637k │ 328,995k │\r\n│ Parse Time  │    0.88s (±  1.52%) │    0.87s (±  1.05%) │ -0.01s (-  0.68%) │    0.85s │    0.92s │\r\n│ Bind Time   │    0.54s (±  1.69%) │    0.54s (±  0.86%) │ -0.00s (-  0.65%) │    0.52s │    0.55s │\r\n│ Check Time  │    3.46s (±  0.66%) │    3.46s (±  0.82%) │ +0.01s (+  0.16%) │    3.39s │    3.64s │\r\n│ Emit Time   │    2.56s (±  0.69%) │    2.57s (±  0.80%) │ +0.01s (+  0.35%) │    2.49s │    2.65s │\r\n├─────────────┼─────────────────────┼─────────────────────┼───────────────────┼──────────┼──────────┤\r\n│ Total Time  │    7.44s (±  0.51%) │    7.44s (±  0.55%) │ +0.01s (+  0.09%) │    7.34s │    7.66s │\r\n╞═════════════╧═════════════════════╧═════════════════════╧═══════════════════╧══════════╧══════════╡\r\n│ skype4life - node (v10.7.0, x64)                                                                  │\r\n├─────────────┬─────────────────────┬─────────────────────┬───────────────────┬──────────┬──────────┤\r\n│ Memory used │ 821,863k (±  0.00%) │ 822,017k (±  0.00%) │  +154k (+  0.02%) │ 821,873k │ 822,173k │\r\n│ Parse Time  │    3.48s (±  1.03%) │    3.46s (±  0.68%) │ -0.02s (-  0.56%) │    3.38s │    3.58s │\r\n│ Bind Time   │    1.37s (±  1.76%) │    1.37s (±  1.25%) │ -0.00s (-  0.07%) │    1.32s │    1.46s │\r\n│ Check Time  │    9.76s (±  0.33%) │    9.79s (±  0.45%) │ +0.03s (+  0.32%) │    9.66s │   10.02s │\r\n│ Emit Time   │    7.13s (±  0.58%) │    7.18s (±  0.59%) │ +0.05s (+  0.76%) │    7.05s │    7.39s │\r\n├─────────────┼─────────────────────┼─────────────────────┼───────────────────┼──────────┼──────────┤\r\n│ Total Time  │   21.74s (±  0.29%) │   21.80s (±  0.32%) │ +0.06s (+  0.29%) │   21.54s │   22.18s │\r\n└─────────────┴─────────────────────┴─────────────────────┴───────────────────┴──────────┴──────────┘\r\n```\r\n\r\nFinally, unions with index signatures behave slightly differently:\r\n\r\n```ts\r\ntype Urg = { 0: string } | { [n: number]: number }\r\nvar u: Urg = { 0: 1 }\r\nconst n: number = u[0]\r\nu[0] = 'no'\r\n```\r\n\r\nWhich is visible in one baseline change. I'll check the user tests and Definitely Typed, then report back.\r\n\r\nFixes #10530  (and probably a few others that are still open; there are tons of duplicates of this one.)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/26424/reactions","total_count":6,"+1":3,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":2,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26424/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/25859","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25859/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25859/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25859/events","html_url":"https://github.com/microsoft/TypeScript/pull/25859","id":343363312,"node_id":"MDExOlB1bGxSZXF1ZXN0MjAzMDMxNTQ3","number":25859,"title":"Optimize creation of intersections of union types","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-07-21T23:30:58Z","updated_at":"2018-07-25T17:28:47Z","closed_at":"2018-07-25T17:28:43Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/25859","html_url":"https://github.com/microsoft/TypeScript/pull/25859","diff_url":"https://github.com/microsoft/TypeScript/pull/25859.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/25859.patch","merged_at":"2018-07-25T17:28:43Z"},"body":"This PR optimizes creation of intersections of union types containing both unit types (such as string and numeric literal types) and primitive types (such as `string` and `number`). This fixes the severe performance issues we have when `keyof` is applied to large unions of object types that have string and/or numeric index signatures. (Given a union type `U` with constituents `T0 | T1 | ... | Tn`, we rewrite `keyof U` to `keyof T0 & keyof T1 & ... & keyof Tn`. Thus it is important to have efficient resolution of such types.)\r\n\r\nFixes #24223.\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/25859/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25859/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/26160","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26160/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26160/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26160/events","html_url":"https://github.com/microsoft/TypeScript/pull/26160","id":347070659,"node_id":"MDExOlB1bGxSZXF1ZXN0MjA1NzgwNzky","number":26160,"title":"Fixes #26128 - signature comp for  jsdoc @class.","user":{"login":"jameskeane","id":186679,"node_id":"MDQ6VXNlcjE4NjY3OQ==","avatar_url":"https://avatars.githubusercontent.com/u/186679?v=4","gravatar_id":"","url":"https://api.github.com/users/jameskeane","html_url":"https://github.com/jameskeane","followers_url":"https://api.github.com/users/jameskeane/followers","following_url":"https://api.github.com/users/jameskeane/following{/other_user}","gists_url":"https://api.github.com/users/jameskeane/gists{/gist_id}","starred_url":"https://api.github.com/users/jameskeane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jameskeane/subscriptions","organizations_url":"https://api.github.com/users/jameskeane/orgs","repos_url":"https://api.github.com/users/jameskeane/repos","events_url":"https://api.github.com/users/jameskeane/events{/privacy}","received_events_url":"https://api.github.com/users/jameskeane/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-08-02T15:47:39Z","updated_at":"2018-08-14T20:35:52Z","closed_at":"2018-08-14T20:35:52Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/26160","html_url":"https://github.com/microsoft/TypeScript/pull/26160","diff_url":"https://github.com/microsoft/TypeScript/pull/26160.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/26160.patch","merged_at":"2018-08-14T20:35:51Z"},"body":"Another issue caused by js functions tagged with jsdoc\r\n`@constructor` not having construct signatures.\r\n\r\nA jsdoc function type that constructs a type (`function(new: Ex)`),\r\nhas a construct signature and return value inferred as the\r\nconstructed type where as a jsdoc `@constructor` has no construct\r\nsignatures, and it's call signature has a void return type\r\n(or undefined).\r\n\r\ni.e:\r\n```javascript\r\n/** @constructor **/ function E() {};\r\n\r\n// typeof E -> call signature: () => void\r\n\r\n/** @param {function(new: E)} d */ function c(d) {}\r\n\r\n// typeof d -> construct: () => E\r\n```\r\n\r\n--\r\n\r\nThis commit fixes this (in an inelegant way) by considering `@class` function signatures as construct signatures and synthesizing it's return value _only for signature comparison_.\r\n\r\nThere might be a slight performance hit, since the synthesized return value is not cached; but changing the `@class` function's return type in `getReturnTypeOfSignature` causes other issues.\r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nHere's a checklist you might find useful.\r\n* [ ] There is an associated issue that is labeled\r\n  'Bug' or 'help wanted' or is in the Community milestone\r\n* [ ] Code is up-to-date with the `master` branch\r\n* [ ] You've successfully run `jake runtests` locally\r\n* [ ] You've signed the CLA\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\nFixes #26128\r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/26160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/26160/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/24953","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/24953/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/24953/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/24953/events","html_url":"https://github.com/microsoft/TypeScript/pull/24953","id":332462014,"node_id":"MDExOlB1bGxSZXF1ZXN0MTk0OTM5NTAw","number":24953,"title":"Avoid huge inferred type","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-06-14T15:51:04Z","updated_at":"2018-06-14T16:23:44Z","closed_at":"2018-06-14T16:23:41Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/24953","html_url":"https://github.com/microsoft/TypeScript/pull/24953","diff_url":"https://github.com/microsoft/TypeScript/pull/24953.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/24953.patch","merged_at":"2018-06-14T16:23:41Z"},"body":"Noticed while reviewing #24927 -- without a type annotation the inferred type of the function is an enormous union which happens to be equivalent to `SyntaxKind`.\r\nI wonder if this behavior is causing performance problems elsewhere?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/24953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/24953/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/25107","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25107/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25107/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25107/events","html_url":"https://github.com/microsoft/TypeScript/pull/25107","id":334244767,"node_id":"MDExOlB1bGxSZXF1ZXN0MTk2MjY4NjI4","number":25107,"title":"Multifaceted approach to performantly enabling fileExists outside of the synchronize step in the emit host","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-06-20T20:51:18Z","updated_at":"2018-06-22T21:05:37Z","closed_at":"2018-06-22T21:05:37Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/25107","html_url":"https://github.com/microsoft/TypeScript/pull/25107","diff_url":"https://github.com/microsoft/TypeScript/pull/25107.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/25107.patch","merged_at":"2018-06-22T21:05:37Z"},"body":"First, in `program`, as @sheetalkamat suggested, we use the local caches if they have a result for the desired path. Since they still may not (ie, because the file isn't in the program, which is possibly the case when attempting to check paths for module specifiers), we also keep around a \"thin\" version of the host cache - effectively a host cache that doesn't contain any file contents, just metadata. (This way if the file is looked up for other reasons, that data is still there.) Finally, if both of those fail, we should hit disk (via the language server host).\r\n\r\nFixes #25047\r\n\r\nDeleting the host cache was a performance optimization so we didn't hold on to file contents for files we weren't actively using - this should retain that invariant, since we're replacing the cache with one with no content.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/25107/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25107/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/25212","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25212/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25212/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25212/events","html_url":"https://github.com/microsoft/TypeScript/pull/25212","id":335603571,"node_id":"MDExOlB1bGxSZXF1ZXN0MTk3MjYzMTMx","number":25212,"title":"Add bailout case to sourcemap searching code","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2018-06-25T23:28:55Z","updated_at":"2018-06-28T18:40:35Z","closed_at":"2018-06-28T18:40:32Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/25212","html_url":"https://github.com/microsoft/TypeScript/pull/25212","diff_url":"https://github.com/microsoft/TypeScript/pull/25212.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/25212.patch","merged_at":"2018-06-28T18:40:32Z"},"body":"<!--\r\nThank you for submitting a pull request!\r\n\r\nHere's a checklist you might find useful.\r\n* [ ] There is an associated issue that is labeled\r\n  'Bug' or 'help wanted' or is in the Community milestone\r\n* [ ] Code is up-to-date with the `master` branch\r\n* [ ] You've successfully run `jake runtests` locally\r\n* [ ] You've signed the CLA\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\nFixes #25209\r\n\r\nThe test I added (a namespace with 580k blank lines inside it) drops from 21s to 1s with this change, so I think this aughta solve the problem.\r\n\r\ncc @rbuckton who's more familiar with the performance aspects of v8's implementation, since optimizing this, even though it's only run once per file (per edit, potentially, since files are discarded on edit), is probably a good idea. It's be nice if you could remark on this style of matching - I don't think string slicing is worse than the `gm` regex we were using before, but I'm unsure, personally (I think it's better with the bail case we have now?). \r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/25212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/25212/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/23882","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23882/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23882/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23882/events","html_url":"https://github.com/microsoft/TypeScript/pull/23882","id":320109695,"node_id":"MDExOlB1bGxSZXF1ZXN0MTg1ODYwNjU1","number":23882,"title":"Minor changes to reduce stack depth during emit","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-05-03T23:08:49Z","updated_at":"2018-07-31T17:31:50Z","closed_at":"2018-05-03T23:46:12Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/23882","html_url":"https://github.com/microsoft/TypeScript/pull/23882","diff_url":"https://github.com/microsoft/TypeScript/pull/23882.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/23882.patch","merged_at":"2018-05-03T23:46:12Z"},"body":"This is a subset of the changes found in #21754. This does _not_ supersede that PR, as that PR contains additional more-aggressive changes. However, #21754 currently suffers from an as of yet undiagnosed performance regression. The minimal set of changes in this PR do not regress performance, but also do not fully resolve the issues referenced in #21754.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/23882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23882/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/23834","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23834/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23834/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23834/events","html_url":"https://github.com/microsoft/TypeScript/pull/23834","id":319709574,"node_id":"MDExOlB1bGxSZXF1ZXN0MTg1NTU5MDA5","number":23834,"title":"Pre-generate names ahead of time","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-05-02T20:57:33Z","updated_at":"2018-07-31T17:31:39Z","closed_at":"2018-05-03T00:51:38Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/23834","html_url":"https://github.com/microsoft/TypeScript/pull/23834","diff_url":"https://github.com/microsoft/TypeScript/pull/23834.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/23834.patch","merged_at":"2018-05-03T00:51:38Z"},"body":"This change ensures that we pre-generate all names in a lexical scope before descending the tree. This allows us to ensure that generated names that must be preserved in nested scopes are allocated at the right time before traversing the tree. In addition to allowing us to remove the `SkipNameGenerationScope` flag for generated identifiers, this sets up some other future PRs that will need name generation to occur at an earlier time.\r\n\r\nFor most of our performance suite the performance cost is not statistically significant. However, there is a very small increase in emit time (over one second) for very large projects (though still not statistically significant compared to an average emit time of over one minute).","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/23834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23834/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/23307","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23307/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23307/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23307/events","html_url":"https://github.com/microsoft/TypeScript/pull/23307","id":313018440,"node_id":"MDExOlB1bGxSZXF1ZXN0MTgwNjczOTc0","number":23307,"title":"JSDoc:positional matching of destructured params","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-04-10T17:25:38Z","updated_at":"2018-07-25T23:37:23Z","closed_at":"2018-04-10T19:48:36Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/23307","html_url":"https://github.com/microsoft/TypeScript/pull/23307","diff_url":"https://github.com/microsoft/TypeScript/pull/23307.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/23307.patch","merged_at":"2018-04-10T19:48:36Z"},"body":"1. When looking up tags for a parameter whose name is a binding pattern, use the index of the parameter to get the type.\r\n2. When reporting errors for `@param` tags with no matching parameter name, do not report the error for tags whose index in the `@param` tag list matches the index of a parameter whose name is a binding pattern.\r\n\r\nFixes #19645 \r\n\r\nThis is a small-ish change while we figure out how to make #18832 not hurt performance in the common case of Typescript code or non-destructuring parameters.\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/23307/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/23307/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/22091","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/22091/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/22091/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/22091/events","html_url":"https://github.com/microsoft/TypeScript/pull/22091","id":299096370,"node_id":"MDExOlB1bGxSZXF1ZXN0MTcwNTY0NjA2","number":22091,"title":"Debug.failBadSyntaxKind should always be defined and return 'never'","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-21T19:24:53Z","updated_at":"2018-07-25T19:27:24Z","closed_at":"2018-03-27T20:35:49Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/22091","html_url":"https://github.com/microsoft/TypeScript/pull/22091","diff_url":"https://github.com/microsoft/TypeScript/pull/22091.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/22091.patch","merged_at":"2018-03-27T20:35:49Z"},"body":"In some places we need to ensure that a function returns, so we call `Debug.failBadSyntaxKind` in a default case. But if that function is not defined we will just fall through and return `undefined` (which breaks in #22088). This is an unconditional failure rather than an assertion, so I don't think it hurts performance to remove the `AssertionLevel` check.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/22091/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/22091/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/11354","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/11354/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/11354/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/11354/events","html_url":"https://github.com/microsoft/TypeScript/pull/11354","id":180911734,"node_id":"MDExOlB1bGxSZXF1ZXN0ODc5MDcyNzI=","number":11354,"title":"Use native maps when they're available","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2016-10-04T14:38:45Z","updated_at":"2018-06-19T23:36:55Z","closed_at":"2016-10-27T20:27:47Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/11354","html_url":"https://github.com/microsoft/TypeScript/pull/11354","diff_url":"https://github.com/microsoft/TypeScript/pull/11354.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/11354.patch","merged_at":"2016-10-27T20:27:47Z"},"body":"The summary is that using native maps, the compiler works 5% faster and uses 5% less memory. Using shims, the performance is surprisingly less than 5% worse.\n\nI was able to achieve good baseline performance by disabling Windows Defender in my work directory and using \"High Performance\" in Control Panel -> Hardware and Sound -> Power Options. There is much less variance this time around.\n### Benchmark numbers\n\nThis is from using our internal `ts-perf` tool.\n### map4\n#### Monaco\n##### tsc (x86)\n\n| Project | Baseline | Current | Delta | Best | Worst |\n| --- | --- | --- | --- | --- | --- |\n| Parse Time | 1.79s (±  0.95%) | 1.72s (±  1.10%) | -0.07s (-  4.08%) | 1.70s | 1.74s |\n| Bind Time | 0.69s (±  4.74%) | 0.52s (±  3.50%) | -0.17s (- 24.86%) | 0.50s | 0.54s |\n| Check Time | 3.37s (±  1.66%) | 2.91s (±  3.16%) | -0.46s (- 13.69%) | 2.78s | 2.98s |\n| Emit Time | 5.01s (±  4.73%) | 4.87s (±  1.35%) | -0.14s (-  2.77%) | 4.79s | 4.94s |\n| Total Time | 10.87s (±  2.34%) | 10.02s (±  1.18%) | -0.84s (-  7.77%) | 9.86s | 10.12s |\n##### node (v6.7.0, x64)\n\n| Project | Baseline | Current | Delta | Best | Worst |\n| --- | --- | --- | --- | --- | --- |\n| Memory used | 379,924k (±  0.00%) | 356,928k (±  0.01%) | -22,996k (-  6.05%) | 356,890k | 356,956k |\n| Parse Time | 2.40s (±  0.75%) | 2.32s (±  2.13%) | -0.08s (-  3.37%) | 2.28s | 2.39s |\n| Bind Time | 0.92s (±  1.79%) | 0.71s (±  1.84%) | -0.21s (- 22.52%) | 0.70s | 0.73s |\n| Check Time | 4.26s (±  1.36%) | 3.84s (±  6.33%) | -0.42s (-  9.94%) | 3.66s | 4.18s |\n| Emit Time | 1.87s (±  2.44%) | 1.82s (±  3.16%) | -0.05s (-  2.80%) | 1.77s | 1.89s |\n| Total Time | 9.46s (±  1.19%) | 8.69s (±  3.96%) | -0.77s (-  8.12%) | 8.42s | 9.16s |\n##### node (v6.7.0, x86)\n\n| Project | Baseline | Current | Delta | Best | Worst |\n| --- | --- | --- | --- | --- | --- |\n| Memory used | 201,971k (±  0.00%) | 190,504k (±  0.01%) | -11,467k (-  5.68%) | 190,474k | 190,538k |\n| Parse Time | 2.30s (±  0.89%) | 2.20s (±  2.07%) | -0.09s (-  4.09%) | 2.17s | 2.27s |\n| Bind Time | 0.72s (±  0.99%) | 0.57s (±  4.73%) | -0.15s (- 21.33%) | 0.55s | 0.61s |\n| Check Time | 3.48s (±  1.73%) | 3.27s (±  4.68%) | -0.21s (-  6.08%) | 3.08s | 3.38s |\n| Emit Time | 1.91s (±  3.15%) | 1.78s (±  8.00%) | -0.13s (-  6.94%) | 1.65s | 1.94s |\n| Total Time | 8.41s (±  0.61%) | 7.82s (±  1.68%) | -0.59s (-  7.03%) | 7.71s | 7.99s |\n#### TFS\n##### tsc (x86)\n\n| Project | Baseline | Current | Delta | Best | Worst |\n| --- | --- | --- | --- | --- | --- |\n| Parse Time | 1.22s (±  2.62%) | 1.15s (±  1.31%) | -0.07s (-  6.06%) | 1.13s | 1.16s |\n| Bind Time | 0.56s (±  2.96%) | 0.54s (±  4.08%) | -0.02s (-  3.13%) | 0.52s | 0.57s |\n| Check Time | 2.81s (±  1.48%) | 2.46s (±  1.85%) | -0.35s (- 12.34%) | 2.43s | 2.53s |\n| Emit Time | 3.11s (±  0.85%) | 3.19s (±  0.91%) | +0.07s (+  2.33%) | 3.15s | 3.22s |\n| Total Time | 7.70s (±  0.84%) | 7.34s (±  1.14%) | -0.37s (-  4.78%) | 7.28s | 7.46s |\n##### node (v6.7.0, x64)\n\n| Project | Baseline | Current | Delta | Best | Worst |\n| --- | --- | --- | --- | --- | --- |\n| Memory used | 328,005k (±  0.00%) | 309,449k (±  0.02%) | -18,556k (-  5.66%) | 309,386k | 309,516k |\n| Parse Time | 1.50s (±  1.02%) | 1.44s (±  0.88%) | -0.07s (-  4.32%) | 1.42s | 1.45s |\n| Bind Time | 0.73s (±  0.73%) | 0.58s (±  1.65%) | -0.14s (- 19.89%) | 0.57s | 0.59s |\n| Check Time | 3.89s (±  0.65%) | 3.56s (±  4.42%) | -0.32s (-  8.27%) | 3.42s | 3.74s |\n| Emit Time | 1.54s (±  0.91%) | 1.57s (±  4.86%) | +0.03s (+  2.25%) | 1.51s | 1.67s |\n| Total Time | 7.65s (±  0.65%) | 7.16s (±  3.13%) | -0.50s (-  6.48%) | 6.96s | 7.42s |\n##### node (v6.7.0, x86)\n\n| Project | Baseline | Current | Delta | Best | Worst |\n| --- | --- | --- | --- | --- | --- |\n| Memory used | 174,749k (±  0.00%) | 165,316k (±  0.01%) | -9,433k (-  5.40%) | 165,292k | 165,344k |\n| Parse Time | 1.41s (±  1.63%) | 1.33s (±  0.77%) | -0.08s (-  5.36%) | 1.33s | 1.35s |\n| Bind Time | 0.62s (±  5.95%) | 0.50s (±  3.40%) | -0.12s (- 19.68%) | 0.48s | 0.52s |\n| Check Time | 2.98s (±  0.64%) | 2.75s (±  0.96%) | -0.23s (-  7.73%) | 2.71s | 2.77s |\n| Emit Time | 1.35s (±  0.83%) | 1.35s (±  1.29%) | +0.01s (+  0.45%) | 1.33s | 1.37s |\n| Total Time | 6.36s (±  1.07%) | 5.94s (±  0.82%) | -0.42s (-  6.60%) | 5.88s | 5.98s |\n### map4 with `usingNativeMaps = false` and `usingNativeSets = false`\n#### Monaco\n##### tsc (x86)\n\n| Project | Baseline | Current | Delta | Best | Worst |\n| --- | --- | --- | --- | --- | --- |\n| Parse Time | 1.79s (±  0.95%) | 1.80s (±  1.47%) | +0.01s (+  0.73%) | 1.77s | 1.82s |\n| Bind Time | 0.69s (±  4.74%) | 0.71s (± 13.45%) | +0.02s (+  3.18%) | 0.66s | 0.86s |\n| Check Time | 3.37s (±  1.66%) | 3.43s (±  3.44%) | +0.06s (+  1.68%) | 3.29s | 3.57s |\n| Emit Time | 5.01s (±  4.73%) | 5.04s (±  4.80%) | +0.03s (+  0.66%) | 4.93s | 5.42s |\n| Total Time | 10.87s (±  2.34%) | 10.98s (±  1.85%) | +0.12s (+  1.09%) | 10.83s | 11.29s |\n##### node (v6.7.0, x64)\n\n| Project | Baseline | Current | Delta | Best | Worst |\n| --- | --- | --- | --- | --- | --- |\n| Memory used | 379,924k (±  0.00%) | 383,279k (±  0.01%) | +3,355k (+  0.88%) | 383,241k | 383,338k |\n| Parse Time | 2.40s (±  0.75%) | 2.39s (±  2.42%) | -0.01s (-  0.29%) | 2.33s | 2.44s |\n| Bind Time | 0.92s (±  1.79%) | 0.90s (±  4.74%) | -0.02s (-  2.55%) | 0.86s | 0.96s |\n| Check Time | 4.26s (±  1.36%) | 4.29s (±  0.29%) | +0.03s (+  0.66%) | 4.28s | 4.31s |\n| Emit Time | 1.87s (±  2.44%) | 1.88s (±  1.90%) | +0.01s (+  0.51%) | 1.85s | 1.92s |\n| Total Time | 9.46s (±  1.19%) | 9.47s (±  0.86%) | +0.01s (+  0.11%) | 9.36s | 9.54s |\n##### node (v6.7.0, x86)\n\n| Project | Baseline | Current | Delta | Best | Worst |\n| --- | --- | --- | --- | --- | --- |\n| Memory used | 201,971k (±  0.00%) | 203,972k (±  0.01%) | +2,001k (+  0.99%) | 203,951k | 203,991k |\n| Parse Time | 2.30s (±  0.89%) | 2.29s (±  0.76%) | -0.01s (-  0.52%) | 2.27s | 2.31s |\n| Bind Time | 0.72s (±  0.99%) | 0.68s (±  1.41%) | -0.04s (-  5.87%) | 0.67s | 0.69s |\n| Check Time | 3.48s (±  1.73%) | 3.83s (±  1.77%) | +0.35s (+ 10.19%) | 3.78s | 3.92s |\n| Emit Time | 1.91s (±  3.15%) | 1.62s (±  3.72%) | -0.29s (- 15.12%) | 1.58s | 1.71s |\n| Total Time | 8.41s (±  0.61%) | 8.42s (±  1.66%) | +0.01s (+  0.12%) | 8.32s | 8.63s |\n#### TFS\n##### tsc (x86)\n\n| Project | Baseline | Current | Delta | Best | Worst |\n| --- | --- | --- | --- | --- | --- |\n| Parse Time | 1.22s (±  2.62%) | 1.22s (±  5.54%) | -0.01s (-  0.49%) | 1.17s | 1.28s |\n| Bind Time | 0.56s (±  2.96%) | 0.58s (±  5.13%) | +0.02s (+  4.38%) | 0.57s | 0.63s |\n| Check Time | 2.81s (±  1.48%) | 2.84s (±  3.00%) | +0.03s (+  1.03%) | 2.77s | 2.95s |\n| Emit Time | 3.11s (±  0.85%) | 3.16s (±  1.84%) | +0.05s (+  1.56%) | 3.08s | 3.21s |\n| Total Time | 7.70s (±  0.84%) | 7.81s (±  2.01%) | +0.10s (+  1.32%) | 7.60s | 7.94s |\n##### node (v6.7.0, x64)\n\n| Project | Baseline | Current | Delta | Best | Worst |\n| --- | --- | --- | --- | --- | --- |\n| Memory used | 328,005k (±  0.00%) | 329,980k (±  0.02%) | +1,975k (+  0.60%) | 329,913k | 330,079k |\n| Parse Time | 1.50s (±  1.02%) | 1.49s (±  0.69%) | -0.02s (-  1.13%) | 1.47s | 1.49s |\n| Bind Time | 0.73s (±  0.73%) | 0.71s (±  3.11%) | -0.01s (-  2.00%) | 0.68s | 0.73s |\n| Check Time | 3.89s (±  0.65%) | 4.04s (±  1.24%) | +0.15s (+  3.87%) | 3.96s | 4.06s |\n| Emit Time | 1.54s (±  0.91%) | 1.64s (±  0.63%) | +0.10s (+  6.55%) | 1.63s | 1.65s |\n| Total Time | 7.65s (±  0.65%) | 7.87s (±  0.76%) | +0.21s (+  2.80%) | 7.79s | 7.92s |\n##### node (v6.7.0, x86)\n\n| Project | Baseline | Current | Delta | Best | Worst |\n| --- | --- | --- | --- | --- | --- |\n| Memory used | 174,749k (±  0.00%) | 175,835k (±  0.01%) | +1,086k (+  0.62%) | 175,822k | 175,855k |\n| Parse Time | 1.41s (±  1.63%) | 1.39s (±  0.74%) | -0.02s (-  1.10%) | 1.39s | 1.41s |\n| Bind Time | 0.62s (±  5.95%) | 0.57s (±  3.30%) | -0.05s (-  8.48%) | 0.56s | 0.59s |\n| Check Time | 2.98s (±  0.64%) | 2.99s (±  1.14%) | +0.02s (+  0.60%) | 2.96s | 3.04s |\n| Emit Time | 1.35s (±  0.83%) | 1.38s (±  4.53%) | +0.03s (+  2.52%) | 1.33s | 1.45s |\n| Total Time | 6.36s (±  1.07%) | 6.34s (±  1.32%) | -0.02s (-  0.25%) | 6.25s | 6.43s |\n### Heap snapshot numbers\n\nThe memory usage tended to be about the same up until the `beforeEmit` event, AKA after checking.\n\nMaster had 365,935 KB total, map4 had 343,774 KB (94% as much), and map4 with shims had 368,978 KB (100% as much as master, 106% as much as map4).\n\n(I added an event `heapAfterBind` to test the effects of that; map4 used 97% as much memory as master, meaning the real memory savings are during checking.)\n\nFor map4, the chrome heap snaprhot viewer shows Maps as accounting for 2% of all objects, with a shallow size equal to their retained size at 1%. However, this is misleading because most of them are mere 32KB wrapper objects which have internal `_keys` and `_values` (or `table` in some cases), which is what really takes up space. I wish there were a way we could include the size of those.\n### VSCode numbers\n\nI also ran a simple test on the VSCode repo.\n#### master\n\n`tsc -p src --noEmit --diagnostics` (Run with `2.1.0-dev.20161005`)\n\n| Kind | Amount | Samples |\n| --- | --- | --- |\n| Memory used | 737211 K | 736716, 733971, 743103, 742334, 729932 |\n| I/O read | 0.17 s | 0.27, 0.12, 0.20, 0.14, 0.14 |\n| Parse time | 5.22 s | 5.21, 5.18, 5.22, 5.22, 5.29 |\n| Bind time | 1.74 s | 1.77, 1.72, 1.74, 1.72, 1.75 |\n| Check time | 8.57 s | 8.69, 8.48, 8.54, 8.50, 8.63 |\n| Total time | 15.54 s | 15.67, 15.38, 15.51, 15.45, 15.67 |\n#### map4\n\n`node ../TypeScript/built/local/tsc.js -p src --noEmit --diagnostics`\n\n| Kind | Relative | Amount | Samples |\n| --- | --- | --- | --- |\n| Memory used | 94% | 690972 K | 691500, 690621, 691097, 690872, 690772 |\n| I/O read: | 100% | 0.17 s | 0.16, 0.18, 0.20, 0.14, 0.16 |\n| Parse time | 96% | 5.02 s | 5.03, 4.95, 4.99, 4.96, 5.18 |\n| Bind time: | 83% | 1.44 s | 1.42, 1.40, 1.44, 1.42, 1.53 |\n| Check time | 97% | 8.34 s | 8.32, 8.27, 8.38, 8.42, 8.33 |\n| Total time | 95% | 14.81 s | 14.78, 14.62, 14.81, 14.80, 15.05 |\n#### map4 with shims\n\nSame command as for `map4`, after rebuilding with `usingNativeMaps = false` and `usingNativeSets = false`.\n\n| Kind | Relative | Amount | Samples |\n| --- | --- | --- | --- |\n| Memory used | 101% | 744718 K | 745408, 744639, 744845, 745511, 743185 |\n| I/O read | 106% | 0.18 s | 0.22, 0.19, 0.20, 0.14, 0.17 |\n| Parse time | 99% | 5.19 s | 5.28, 5.18, 5.20, 5.17, 5.13 |\n| Bind time | 98% | 1.71 s | 1.72, 1.69, 1.70, 1.73, 1.72 |\n| Check time | 101% | 8.68 s | 8.58, 8.72, 8.68, 8.72, 8.73 |\n| Total time | 100% | 15.59 s | 15.59, 15.59, 15.58, 15.62, 15.57 |\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/11354/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/11354/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/21751","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/21751/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/21751/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/21751/events","html_url":"https://github.com/microsoft/TypeScript/pull/21751","id":295336545,"node_id":"MDExOlB1bGxSZXF1ZXN0MTY3ODQyMTE1","number":21751,"title":"Try out CircleCI.","user":{"login":"felicianotech","id":6017470,"node_id":"MDQ6VXNlcjYwMTc0NzA=","avatar_url":"https://avatars.githubusercontent.com/u/6017470?v=4","gravatar_id":"","url":"https://api.github.com/users/felicianotech","html_url":"https://github.com/felicianotech","followers_url":"https://api.github.com/users/felicianotech/followers","following_url":"https://api.github.com/users/felicianotech/following{/other_user}","gists_url":"https://api.github.com/users/felicianotech/gists{/gist_id}","starred_url":"https://api.github.com/users/felicianotech/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/felicianotech/subscriptions","organizations_url":"https://api.github.com/users/felicianotech/orgs","repos_url":"https://api.github.com/users/felicianotech/repos","events_url":"https://api.github.com/users/felicianotech/events{/privacy}","received_events_url":"https://api.github.com/users/felicianotech/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":20,"created_at":"2018-02-07T23:53:12Z","updated_at":"2018-07-30T19:12:31Z","closed_at":"2018-02-16T22:12:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/21751","html_url":"https://github.com/microsoft/TypeScript/pull/21751","diff_url":"https://github.com/microsoft/TypeScript/pull/21751.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/21751.patch","merged_at":"2018-02-16T22:12:36Z"},"body":"- [x] You've signed the CLA\r\n\r\nP.S. The sign in link on <https://cla.opensource.microsoft.com/> is white text on a white background so it was hard to find.\r\n\r\n---\r\n\r\nI can see that this repo is being build with multiple CI providers in mind. I created a config for CircleCI 2.0 and wanted to demo that it brings with it reduced build times.\r\n\r\n| Node.js Version | Travis CI | CircleCI |\r\n| --- | --- | -- |\r\n| 9 | 10min 30sec | 6min 15sec |\r\n| 8 | 9min 40sec | 7min 23sec |\r\n| 6 | 14min 28sec | 9min 28sec |\r\n\r\nHere's my fork on CircleCI: https://circleci.com/workflow-run/a2a9cad4-53d9-4238-a78c-3f20d6ff03a9\r\n\r\nCircleCI is free just like Travis CI for something like TypeScript and clearly has better performance. Something to consider. Also, this PR shouldn't be merged as is. There's a `circleci` branch mentioned in the config that I put there for my testing purposes. Depending on your maintenance schedule, we could probably use regex for the release branches. If there's any questions on additional customization, please let me know.\r\n\r\n---\r\n\r\nSidenote, you can see from this table, regardless of the provider, that Node.js has more or less been building faster with each new major release. That's encouraging.\r\n\r\ncc @DanielRosenwasser ","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/21751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/21751/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/22389","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/22389/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/22389/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/22389/events","html_url":"https://github.com/microsoft/TypeScript/pull/22389","id":303281509,"node_id":"MDExOlB1bGxSZXF1ZXN0MTczNTkwMjMy","number":22389,"title":"Call process.stdout._handle.setBlocking(true)","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-03-07T22:20:03Z","updated_at":"2018-07-25T19:28:10Z","closed_at":"2018-03-08T20:38:30Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/22389","html_url":"https://github.com/microsoft/TypeScript/pull/22389","diff_url":"https://github.com/microsoft/TypeScript/pull/22389.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/22389.patch","merged_at":"2018-03-08T20:38:30Z"},"body":"This prevents output from being truncated when the compiler can output errors to stdout faster than it can receive them. This may slow down performance for compilations for many errors, but those were already quite slow.\r\n\r\nFixes truncation of output in user tests when run with jake runtests-parallel. This only manifests on Linux platforms right now. ","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/22389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/22389/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/15364","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/15364/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/15364/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/15364/events","html_url":"https://github.com/microsoft/TypeScript/pull/15364","id":223989830,"node_id":"MDExOlB1bGxSZXF1ZXN0MTE3Mzg1NTk5","number":15364,"title":"RulesProvider performance improvements (alternate implementation)","user":{"login":"jramsay","id":8161247,"node_id":"MDQ6VXNlcjgxNjEyNDc=","avatar_url":"https://avatars.githubusercontent.com/u/8161247?v=4","gravatar_id":"","url":"https://api.github.com/users/jramsay","html_url":"https://github.com/jramsay","followers_url":"https://api.github.com/users/jramsay/followers","following_url":"https://api.github.com/users/jramsay/following{/other_user}","gists_url":"https://api.github.com/users/jramsay/gists{/gist_id}","starred_url":"https://api.github.com/users/jramsay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jramsay/subscriptions","organizations_url":"https://api.github.com/users/jramsay/orgs","repos_url":"https://api.github.com/users/jramsay/repos","events_url":"https://api.github.com/users/jramsay/events{/privacy}","received_events_url":"https://api.github.com/users/jramsay/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-04-25T00:52:00Z","updated_at":"2018-06-14T21:02:50Z","closed_at":"2017-04-27T23:48:00Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/15364","html_url":"https://github.com/microsoft/TypeScript/pull/15364","diff_url":"https://github.com/microsoft/TypeScript/pull/15364.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/15364.patch","merged_at":"2017-04-27T23:48:00Z"},"body":"1. Add all rules to the RulesProvider’s RulesMap regardless of user options\r\n2. Pass FormatCodeSettings to the FormattingContext\r\n3. Update RuleOperationContext's InContext to check if a rule should be applied based on the FormattingCodeOptions\r\n4. Update rules to consume new RuleOperationContext options check\r\n5. compareDataObjects fix to check if the object has the same number of keys\r\n\r\nFixes:\r\n• TS: [TSServer] Formatting RulesProvider (re)initialization performance issues\r\n• VS: Bug 373219: [TypeScript Perf] WebForms_DDRIT.0300.Typing HTML5 HTML regressed Duration_AccumulatedElapsedTime (60ms)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/15364/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/15364/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/22204","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/22204/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/22204/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/22204/events","html_url":"https://github.com/microsoft/TypeScript/pull/22204","id":300751548,"node_id":"MDExOlB1bGxSZXF1ZXN0MTcxNzUzMjE4","number":22204,"title":"Add 'Suggestion' diagnostics","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2018-02-27T18:56:28Z","updated_at":"2018-07-31T17:29:32Z","closed_at":"2018-02-28T19:16:33Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/22204","html_url":"https://github.com/microsoft/TypeScript/pull/22204","diff_url":"https://github.com/microsoft/TypeScript/pull/22204.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/22204.patch","merged_at":"2018-02-28T19:16:33Z"},"body":"Fixes #19392\r\n\r\nPreviously we had just syntax and semantic diagnostics. This adds a third layer of \"info\" diagnostics. They are only a part of services, so do not impact command line compilation.\r\n\r\nNow when the editor sends us a \"geterr\" request, we will send *3* responses for \"syntaxDiag\", \"semanticDiag\", and \"infoDiag\". (See changes to `updateErrorCheck`.) All return a Diagnostic[].\r\n\r\nFor use from Visual Studio, this also adds a \"infoDiagnosticsSync\" command. (@amcasey or would it be easier to just send it along with \"semanticDiagnosticsSync\"? Might impact performance as we add more info diagnostics though.)\r\n\r\nFor now there is only one info diagnostic, for a file that could be converted to commonJs. Moved the `convertToEs6Module` refactoring to a codefix.\r\n\r\nCC @mjbvz","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/22204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/22204/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/19937","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/19937/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/19937/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/19937/events","html_url":"https://github.com/microsoft/TypeScript/pull/19937","id":273117696,"node_id":"MDExOlB1bGxSZXF1ZXN0MTUyMDQxMDc3","number":19937,"title":"Remove length limit on spelling suggestions; use levenshteinWithMax for performance","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-11-11T04:19:47Z","updated_at":"2018-06-14T20:41:31Z","closed_at":"2017-11-28T17:37:30Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/19937","html_url":"https://github.com/microsoft/TypeScript/pull/19937","diff_url":"https://github.com/microsoft/TypeScript/pull/19937.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/19937.patch","merged_at":"2017-11-28T17:37:30Z"},"body":"Removes the length limit so we can get spelling suggestions for `Diagnostics.new_T_cannot_be_used_to_create_an_aray_Use_new_Array_T_instead`.\r\nAlgorithm is roughly based on https://www.lemoda.net/c/edit-distance-with-max/. I fixed a bug where they set `col_min = INT_MAX` when they should have set it to `i` (which is the value at the 0th element in the column).","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/19937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/19937/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/21573","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/21573/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/21573/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/21573/events","html_url":"https://github.com/microsoft/TypeScript/pull/21573","id":293933942,"node_id":"MDExOlB1bGxSZXF1ZXN0MTY2ODM2NTQ4","number":21573,"title":"Optimize union and intersection types","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-02T15:53:47Z","updated_at":"2018-07-03T00:32:20Z","closed_at":"2018-02-02T20:41:04Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/21573","html_url":"https://github.com/microsoft/TypeScript/pull/21573","diff_url":"https://github.com/microsoft/TypeScript/pull/21573.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/21573.patch","merged_at":"2018-02-02T20:41:04Z"},"body":"This PR optimizes creation of union and intersection types. Previously we would use dynamically added properties to track attributes of the types in the union/intersection. Now we instead use a flags enum.\r\n\r\nAlso, we now initialize more common properties in the `Symbol` constructor which reduces polymorphism.\r\n\r\nPerformance of the check phase when compiling the compiler improves by 6-7% with these changes.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/21573/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/21573/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/21470","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/21470/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/21470/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/21470/events","html_url":"https://github.com/microsoft/TypeScript/pull/21470","id":292621310,"node_id":"MDExOlB1bGxSZXF1ZXN0MTY1ODYzNjM0","number":21470,"title":"Skip unnecessary type and symbol instantiations","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-01-30T01:25:54Z","updated_at":"2018-07-03T00:32:01Z","closed_at":"2018-01-30T14:39:09Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/21470","html_url":"https://github.com/microsoft/TypeScript/pull/21470","diff_url":"https://github.com/microsoft/TypeScript/pull/21470.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/21470.patch","merged_at":"2018-01-30T14:39:09Z"},"body":"This PR optimizes type instantiation as follows:\r\n\r\n* During instantiation of a symbol, if the type of the symbol has already been resolved and if that type is one that is never affected by instantiation, just return the symbol itself.\r\n* During instantiation of a type reference, union type, or intersection type, only create a new type if something changes when instantiating the constituent type list.\r\n\r\nHaven't measured effects on performance, but it certainly removes unnecessary work and causes fewer symbols to be created.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/21470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/21470/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/18279","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18279/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18279/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18279/events","html_url":"https://github.com/microsoft/TypeScript/pull/18279","id":255678550,"node_id":"MDExOlB1bGxSZXF1ZXN0MTM5NjE3NDI4","number":18279,"title":"Optimize strict generic signature checking performance","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-09-06T17:12:12Z","updated_at":"2018-06-14T20:49:10Z","closed_at":"2017-09-06T20:26:40Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/18279","html_url":"https://github.com/microsoft/TypeScript/pull/18279","diff_url":"https://github.com/microsoft/TypeScript/pull/18279.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/18279.patch","merged_at":"2017-09-06T20:26:40Z"},"body":"This PR optimizes the performance of strict generic signature checking introduced in #16368. When a generic class or interface is instantiated, each generic method in the class or interface is instantiated with a fresh set of cloned type parameters (which we need to handle scenarios where different generations of the same type parameter are in scope). This leads to a lot of new type identities, and potentially a lot of work comparing those identities in strict generic checking mode. As an optimization we now base signature comparisons on \"canonical instantiations\" that uses a single type identity for all unconstrained type parameters.\r\n\r\nProjects that make heavy use of generic methods see dramatically improved type check times. For example:\r\n\r\n* https://github.com/falsandtru/spica: From 4.24s to 1.83s.\r\n* https://github.com/arturkulig/immview: From 18.25s to 1.35s.\r\n* https://github.com/emmanueltouzery/prelude.ts: From 21.34s to 0.93s.\r\n\r\nOnly changes in RWC baselines are missing error elaborations due to improved sharing.\r\n\r\nFixes #18257.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/18279/reactions","total_count":4,"+1":0,"-1":0,"laugh":0,"hooray":4,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18279/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/14214","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/14214/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/14214/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/14214/events","html_url":"https://github.com/microsoft/TypeScript/pull/14214","id":209281356,"node_id":"MDExOlB1bGxSZXF1ZXN0MTA3Mjg0OTgx","number":14214,"title":"Adding cancellation token checks for lower priority tasks (navbar & outlining spans)","user":{"login":"jramsay","id":8161247,"node_id":"MDQ6VXNlcjgxNjEyNDc=","avatar_url":"https://avatars.githubusercontent.com/u/8161247?v=4","gravatar_id":"","url":"https://api.github.com/users/jramsay","html_url":"https://github.com/jramsay","followers_url":"https://api.github.com/users/jramsay/followers","following_url":"https://api.github.com/users/jramsay/following{/other_user}","gists_url":"https://api.github.com/users/jramsay/gists{/gist_id}","starred_url":"https://api.github.com/users/jramsay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jramsay/subscriptions","organizations_url":"https://api.github.com/users/jramsay/orgs","repos_url":"https://api.github.com/users/jramsay/repos","events_url":"https://api.github.com/users/jramsay/events{/privacy}","received_events_url":"https://api.github.com/users/jramsay/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-02-21T21:41:35Z","updated_at":"2018-06-19T23:48:50Z","closed_at":"2017-03-27T22:48:08Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/14214","html_url":"https://github.com/microsoft/TypeScript/pull/14214","diff_url":"https://github.com/microsoft/TypeScript/pull/14214.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/14214.patch","merged_at":"2017-03-27T22:48:08Z"},"body":"Adding cancellation token checks for lower priority tasks (navbar & outlining spans) \r\n(will send a separate PR for other tasks after this has been reviewed.  I plan on using the same pattern & test infrastructure)\r\n\r\nFixes: VS issue # 380240 (performance delays) ","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/14214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/14214/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/16051","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/16051/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/16051/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/16051/events","html_url":"https://github.com/microsoft/TypeScript/pull/16051","id":230875458,"node_id":"MDExOlB1bGxSZXF1ZXN0MTIyMTE0NzMw","number":16051,"title":"Port rules provider fix to release-2.3","user":{"login":"jramsay","id":8161247,"node_id":"MDQ6VXNlcjgxNjEyNDc=","avatar_url":"https://avatars.githubusercontent.com/u/8161247?v=4","gravatar_id":"","url":"https://api.github.com/users/jramsay","html_url":"https://github.com/jramsay","followers_url":"https://api.github.com/users/jramsay/followers","following_url":"https://api.github.com/users/jramsay/following{/other_user}","gists_url":"https://api.github.com/users/jramsay/gists{/gist_id}","starred_url":"https://api.github.com/users/jramsay/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jramsay/subscriptions","organizations_url":"https://api.github.com/users/jramsay/orgs","repos_url":"https://api.github.com/users/jramsay/repos","events_url":"https://api.github.com/users/jramsay/events{/privacy}","received_events_url":"https://api.github.com/users/jramsay/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/microsoft/TypeScript/milestones/48","html_url":"https://github.com/microsoft/TypeScript/milestone/48","labels_url":"https://api.github.com/repos/microsoft/TypeScript/milestones/48/labels","id":2538767,"node_id":"MDk6TWlsZXN0b25lMjUzODc2Nw==","number":48,"title":"TypeScript 2.3.4","description":"","creator":{"login":"mhegazy","id":8000722,"node_id":"MDQ6VXNlcjgwMDA3MjI=","avatar_url":"https://avatars.githubusercontent.com/u/8000722?v=4","gravatar_id":"","url":"https://api.github.com/users/mhegazy","html_url":"https://github.com/mhegazy","followers_url":"https://api.github.com/users/mhegazy/followers","following_url":"https://api.github.com/users/mhegazy/following{/other_user}","gists_url":"https://api.github.com/users/mhegazy/gists{/gist_id}","starred_url":"https://api.github.com/users/mhegazy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mhegazy/subscriptions","organizations_url":"https://api.github.com/users/mhegazy/orgs","repos_url":"https://api.github.com/users/mhegazy/repos","events_url":"https://api.github.com/users/mhegazy/events{/privacy}","received_events_url":"https://api.github.com/users/mhegazy/received_events","type":"User","site_admin":false},"open_issues":0,"closed_issues":3,"state":"closed","created_at":"2017-05-23T17:21:23Z","updated_at":"2017-05-30T20:56:15Z","due_on":null,"closed_at":"2017-05-30T20:56:15Z"},"comments":0,"created_at":"2017-05-23T23:11:48Z","updated_at":"2018-06-14T20:59:38Z","closed_at":"2017-05-24T00:05:43Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/16051","html_url":"https://github.com/microsoft/TypeScript/pull/16051","diff_url":"https://github.com/microsoft/TypeScript/pull/16051.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/16051.patch","merged_at":"2017-05-24T00:05:43Z"},"body":"Add all rules to the RulesProvider’s RulesMap regardless of user options\r\nPass FormatCodeSettings to the FormattingContext\r\nUpdate RuleOperationContext's InContext to check if a rule should be applied based on the FormattingCodeOptions\r\nUpdate rules to consume new RuleOperationContext options check\r\ncompareDataObjects fix to check if the object has the same number of keys\r\nFixes:\r\n• TS: [TSServer] Formatting RulesProvider (re)initialization performance issues\r\n• VS: Bug 373219: [TypeScript Perf] WebForms_DDRIT.0300.Typing HTML5 HTML regressed Duration_AccumulatedElapsedTime (60ms)\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/16051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/16051/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/16836","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/16836/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/16836/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/16836/events","html_url":"https://github.com/microsoft/TypeScript/pull/16836","id":239564612,"node_id":"MDExOlB1bGxSZXF1ZXN0MTI4MjEyNDY4","number":16836,"title":"Improve performance of JSDoc tag utilities","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-06-29T18:03:02Z","updated_at":"2018-06-14T20:55:57Z","closed_at":"2017-07-10T18:27:00Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/16836","html_url":"https://github.com/microsoft/TypeScript/pull/16836","diff_url":"https://github.com/microsoft/TypeScript/pull/16836.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/16836.patch","merged_at":"2017-07-10T18:27:00Z"},"body":"We currently have no good performance regression tests of large `--checkJs` projects, since it's a new feature. Previously the process for something like `getJSDocReturnTag` looked like this:\r\n\r\n* Look at the cache. If it is `undefined`, either it's not in the cache yet, or we already tried getting jsdoc tags and there were none.\r\n* Iterate over all JSDocs and collect an array of comments / tags.\r\n* Then flatMap over it:\r\n\t- At each doc comment, create a new array that filters its tags of the correct kind.\r\n* Get `firstOrUndefined` of that.\r\n\r\nThis changes it to:\r\n\r\n* Look at the cache. If it is `null`, then we've already determined that this node has no jsdoc tags.\r\n* If it is `undefined`, iterate and get tags as before.\r\n* Iterate over the (cached) array of tags looking for one of kind `JSDocReturnTag`.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/16836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/16836/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/18662","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18662/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18662/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18662/events","html_url":"https://github.com/microsoft/TypeScript/pull/18662","id":259617465,"node_id":"MDExOlB1bGxSZXF1ZXN0MTQyNDM0MzE2","number":18662,"title":"Handle @typedef tag with missing type","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-09-21T20:11:30Z","updated_at":"2018-06-14T20:47:17Z","closed_at":"2017-09-25T19:11:34Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/18662","html_url":"https://github.com/microsoft/TypeScript/pull/18662","diff_url":"https://github.com/microsoft/TypeScript/pull/18662.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/18662.patch","merged_at":"2017-09-25T19:11:34Z"},"body":"Fixes #18637\r\n\r\nI'll have to test tomorrow if starting to check jsdoc is hurting performance. But we'll need it to fix issue #15852.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/18662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18662/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/17832","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17832/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17832/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17832/events","html_url":"https://github.com/microsoft/TypeScript/pull/17832","id":250660049,"node_id":"MDExOlB1bGxSZXF1ZXN0MTM2MDQ4NjE5","number":17832,"title":"Avoid climbing ancestors in `getAnyImportSyntax`","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-08-16T15:03:38Z","updated_at":"2018-06-14T20:51:20Z","closed_at":"2017-08-29T16:41:57Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/17832","html_url":"https://github.com/microsoft/TypeScript/pull/17832","diff_url":"https://github.com/microsoft/TypeScript/pull/17832.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/17832.patch","merged_at":"2017-08-29T16:41:57Z"},"body":"Usually a node does not have an import declaration as its ancestor. A `findAncestor` call like this will hurt performance as it makes us climb to the root node most of the time. (See #17831)","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/17832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17832/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/18126","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18126/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18126/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18126/events","html_url":"https://github.com/microsoft/TypeScript/pull/18126","id":253811282,"node_id":"MDExOlB1bGxSZXF1ZXN0MTM4Mjg4OTMz","number":18126,"title":"Compare shapes of objects before comparing contained types","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-08-29T21:31:09Z","updated_at":"2018-06-14T20:49:53Z","closed_at":"2017-09-03T19:33:59Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/18126","html_url":"https://github.com/microsoft/TypeScript/pull/18126","diff_url":"https://github.com/microsoft/TypeScript/pull/18126.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/18126.patch","merged_at":"2017-09-03T19:33:59Z"},"body":"With this PR, when comparing two object types we first check that the source type contains all properties required by the target type. Only when that is the case do we then proceed to compare the types of the properties. Previously we'd do both of these things in the same pass which could cause us to needlessly drill into the (possibly deep) types of matching properties only to later discover that other properties are missing (meaning that the types are not related).\r\n\r\nAs can be seen from the baseline differences, we now bail out quicker when types are not related. This reduces noise in error messages and should also help performance.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/18126/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18126/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/18025","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18025/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18025/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18025/events","html_url":"https://github.com/microsoft/TypeScript/pull/18025","id":252719332,"node_id":"MDExOlB1bGxSZXF1ZXN0MTM3NTQyNDc1","number":18025,"title":"Don't try to extract `import` to a method","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-08-24T20:19:24Z","updated_at":"2018-06-14T20:50:26Z","closed_at":"2017-08-25T16:53:57Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/18025","html_url":"https://github.com/microsoft/TypeScript/pull/18025","diff_url":"https://github.com/microsoft/TypeScript/pull/18025.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/18025.patch","merged_at":"2017-08-25T16:53:57Z"},"body":"Fixes #17997 \r\nReplaced an invalid `as Expression` cast with a check for `isExpression`.\r\nI had to refactor `isExpression` to take a `Node` and not a `SyntaxKind` because an `ImportKeyword` is an expression only if its parent is a `CallExpression`. @rbuckton I hope that doesn't hurt performance?","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/18025/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18025/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/17984","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17984/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17984/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17984/events","html_url":"https://github.com/microsoft/TypeScript/pull/17984","id":252386230,"node_id":"MDExOlB1bGxSZXF1ZXN0MTM3Mjk1NDc4","number":17984,"title":"Recursive-related-check generic type references based on the id of their targets and type arguments","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-08-23T19:10:32Z","updated_at":"2018-06-14T20:50:39Z","closed_at":"2017-08-23T20:22:28Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/17984","html_url":"https://github.com/microsoft/TypeScript/pull/17984","diff_url":"https://github.com/microsoft/TypeScript/pull/17984.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/17984.patch","merged_at":"2017-08-23T20:22:27Z"},"body":"Fixes #17097\r\nFixes #17070\r\nFixes #16777\r\n\r\nThis change makes relating the following types faster:\r\n\r\n```ts\r\ninterface B<T> {\r\n  contents: T[]\r\n  map<U>(f: (t: T) => U): B<U>\r\n}\r\ninterface D<T> extends B<T> {\r\n  contents: List<T>\r\n  map<U>(f: (t: T) => U): D<U>\r\n}\r\n```\r\n\r\nPreviously, relating the return types of map, `D<U> ===> B<U>`, would cause a recursive check. This recursion would continue until the depth limit was hit. However, no new information will result from relating `D<U> ===> B<U>` vs `D<T> ===> B<T>` &mdash; one type parameter is interchangeable with any other in terms of relatability (with the exception of constrained type parameters).\r\n\r\nWith this change, the check in `recursiveTypeRelatedTo` for whether a type is already being compared will treat `A<T>` not by its identity but the identity of `A` and its type arguments. Previously, `A<T>` and `A<U>` would have different ids. Now, they both have ids like \"111=0\", if `A.id = 111`. Because both `T` and `U` are unconstrained type parameters, they just get a simple index based on when they were first seen in the argument list. A type like `C<T, number, number, U, T>` would produce a key like `112=0-33-33=1=0` where C.id=112 and number.id=33.\r\n\r\nLike #17947, this changes fixes immview and Immutable.js's oomemory crashes from 2.4.1. And it finishes about 10% faster. It also fixes the ng-typeview and monet crashes provided in #16777.\r\n\r\nI tested the performance of this change and #17947. On TFS and Monaco, there is no performance difference with either change. I also ran the change on our real-world code corpus. Some duplicate error elaborations disappear from identical errors because of improved caching (in linq, RxJs, etc), but this is a slight improvement overall.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/17984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17984/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/18619","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18619/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18619/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18619/events","html_url":"https://github.com/microsoft/TypeScript/pull/18619","id":259315248,"node_id":"MDExOlB1bGxSZXF1ZXN0MTQyMjEzMDg5","number":18619,"title":"Avoid calling `indexOf` when checking array element types","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-09-20T22:00:10Z","updated_at":"2018-06-14T20:47:28Z","closed_at":"2017-09-22T15:49:56Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/18619","html_url":"https://github.com/microsoft/TypeScript/pull/18619","diff_url":"https://github.com/microsoft/TypeScript/pull/18619.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/18619.patch","merged_at":"2017-09-22T15:49:56Z"},"body":"Shlemiel gets a job as a type checker, checking the contextual types of array elements. On the first day he takes his array contextual type out to the AST and finishes 300 elements of the array. \"That's pretty good!\" says his boss, \"you're a fast worker!\" and pays him a kopeck.\r\n\r\nThe next day Shlemiel only checks 150 elements. \"Well, that's not nearly as good as yesterday, but you're still a fast worker. 150 elements is respectable,\" and pays him a kopeck.\r\n\r\nThe next day Shlemiel checks 30 elements of the array. \"Only 30!\" shouts his boss. \"That's unacceptable! On the first day you did ten times that much work! What's going on?\"\r\n\r\n\"I can't help it,\" says Shlemiel. \"Every day I get farther and farther away from the beginning of the array!\"\r\n\r\n---\r\n\r\n`indexOf` was causing us to take ever-increasing time when for every array element, we would start counting again from the beginning of the array to find our position. (This only happens if the array has a contextual type.) This is an instance of a general problem where we climb ancestors to recompute information instead of passing it down directly.\r\n\r\nI ran the performance tests and saw no negative effect on checker time, probably because our tests don't use lots of long arrays.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/18619/reactions","total_count":4,"+1":1,"-1":0,"laugh":2,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/18619/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/17721","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17721/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17721/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17721/events","html_url":"https://github.com/microsoft/TypeScript/pull/17721","id":249381962,"node_id":"MDExOlB1bGxSZXF1ZXN0MTM1MTUxNTY3","number":17721,"title":"Use NodeFlags to detect nodes inside with statements instead of climbing ancestors","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-08-10T15:16:53Z","updated_at":"2018-06-14T20:51:51Z","closed_at":"2017-10-23T20:38:51Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/17721","html_url":"https://github.com/microsoft/TypeScript/pull/17721","diff_url":"https://github.com/microsoft/TypeScript/pull/17721.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/17721.patch","merged_at":"2017-10-23T20:38:51Z"},"body":"Previously, every time we needed to know whether a node was in a with statement, we would climb all of its ancestor nodes looking for a with statement. Since there usually wasn't one, this would take a while.\r\n\r\nNow we just add a `NodeFlags` for this during parsing. This is similar to the optimization done to detect whether we're in JSDoc. (https://github.com/Microsoft/TypeScript/pull/17176#discussion_r127505422)\r\n\r\nThis appears to give a 1% average improvement in performance in the checker, without any major slowdown in the parser.\r\n\r\n#### Monaco - node (v8.2.1, x64)\r\n\r\n| Project     |            Baseline |             Current |             Delta |     Best |    Worst |\r\n| ----------- | ------------------- | ------------------- | ----------------- | -------- | -------- |\r\n| Memory used | 356,983k (±  0.01%) | 356,966k (±  0.01%) |   -17k (-  0.00%) | 356,905k | 357,082k |\r\n| Parse Time  |    2.12s (±  0.69%) |    2.12s (±  0.50%) | -0.00s (-  0.09%) |    2.10s |    2.15s |\r\n| Bind Time   |    0.82s (±  0.63%) |    0.82s (±  0.75%) | +0.00s (+  0.24%) |    0.81s |    0.83s |\r\n| Check Time  |    4.30s (±  0.59%) |    4.17s (±  0.49%) | -0.13s (-  3.03%) |    4.12s |    4.20s |\r\n| Emit Time   |    2.80s (±  1.40%) |    2.76s (±  0.96%) | -0.03s (-  1.11%) |    2.73s |    2.85s |\r\n| Total Time  |   10.03s (±  0.74%) |    9.87s (±  0.41%) | -0.16s (-  1.63%) |    9.78s |    9.94s |\r\n\r\n#### Monaco - tsc (x86)\r\n\r\n| Project     |            Baseline |             Current |             Delta |     Best |    Worst |\r\n| ----------- | ------------------- | ------------------- | ----------------- | -------- | -------- |\r\n| Parse Time  |    1.48s (±  1.10%) |    1.49s (±  0.59%) | +0.01s (+  0.40%) |    1.47s |    1.51s |\r\n| Bind Time   |    0.57s (±  2.08%) |    0.58s (±  2.56%) | +0.01s (+  1.40%) |    0.55s |    0.62s |\r\n| Check Time  |    4.04s (±  1.97%) |    3.96s (±  1.13%) | -0.08s (-  2.01%) |    3.86s |    4.03s |\r\n| Emit Time   |    7.65s (±  3.77%) |    7.59s (±  0.99%) | -0.06s (-  0.81%) |    7.52s |    7.86s |\r\n| Total Time  |   13.75s (±  2.26%) |   13.62s (±  0.72%) | -0.13s (-  0.96%) |   13.45s |   13.87s |\r\n\r\n#### TFS - node (v8.2.1, x64)\r\n\r\n| Project     |            Baseline |             Current |             Delta |     Best |    Worst |\r\n| ----------- | ------------------- | ------------------- | ----------------- | -------- | -------- |\r\n| Memory used | 309,625k (±  0.01%) | 309,627k (±  0.01%) |    +3k (+  0.00%) | 309,542k | 309,666k |\r\n| Parse Time  |    1.54s (±  2.26%) |    1.55s (±  2.43%) | +0.00s (+  0.13%) |    1.44s |    1.58s |\r\n| Bind Time   |    0.70s (±  5.85%) |    0.70s (±  5.63%) | -0.00s (-  0.71%) |    0.66s |    0.81s |\r\n| Check Time  |    3.68s (±  0.42%) |    3.68s (±  1.73%) | +0.00s (+  0.05%) |    3.61s |    3.93s |\r\n| Emit Time   |    2.45s (±  0.34%) |    2.46s (±  0.55%) | +0.01s (+  0.24%) |    2.44s |    2.49s |\r\n| Total Time  |    8.38s (±  0.29%) |    8.38s (±  0.77%) | +0.00s (+  0.05%) |    8.30s |    8.62s |\r\n\r\n#### TFS - tsc (x86)\r\n\r\n| Project     |            Baseline |             Current |             Delta |     Best |    Worst |\r\n| ----------- | ------------------- | ------------------- | ----------------- | -------- | -------- |\r\n| Parse Time  |    1.07s (±  1.78%) |    1.08s (±  1.52%) | +0.00s (+  0.47%) |    1.05s |    1.12s |\r\n| Bind Time   |    0.57s (±  4.34%) |    0.58s (±  2.75%) | +0.01s (+  1.22%) |    0.53s |    0.61s |\r\n| Check Time  |    3.29s (±  1.79%) |    3.26s (±  1.71%) | -0.03s (-  0.82%) |    3.16s |    3.41s |\r\n| Emit Time   |    4.53s (±  1.59%) |    4.47s (±  0.87%) | -0.06s (-  1.32%) |    4.39s |    4.57s |\r\n| Total Time  |    9.46s (±  0.90%) |    9.39s (±  0.70%) | -0.07s (-  0.78%) |    9.26s |    9.53s |\r\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/17721/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17721/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/17589","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17589/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17589/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17589/events","html_url":"https://github.com/microsoft/TypeScript/pull/17589","id":247747539,"node_id":"MDExOlB1bGxSZXF1ZXN0MTMzOTc1NjYw","number":17589,"title":"Add simple version of `chooseOverload` for common case of single non-generic signature","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-08-03T15:33:51Z","updated_at":"2018-06-14T20:52:27Z","closed_at":"2017-08-09T21:41:39Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/17589","html_url":"https://github.com/microsoft/TypeScript/pull/17589","diff_url":"https://github.com/microsoft/TypeScript/pull/17589.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/17589.patch","merged_at":"2017-08-09T21:41:39Z"},"body":"This does change one baseline; I think the change is an improvement. I've added a simpler way to reproduce the change in the `contextualTypingFunctionReturningFunction.ts` test. Previously, the `types` baseline would have contained `b: () => {}`, while now it uses `b : () => (n: number) => void`. I think this change is related to #17586, so it won't be fully fixed until that is.\r\n\r\nThere was a 2% performance improvement in the Monaco baseline and no improvement in the TFS baseline. If you look at just the changes to check time (which is the only thing that should have changed) there is an average 1% improvement.\r\n\r\n#### Monaco - node (v8.2.1, x64)\r\n| Project     |            Baseline |             Current |             Delta |     Best |    Worst |\r\n| ----------- | ------------------- | ------------------- | ----------------- | -------- | -------- |\r\n| Memory used | 356,878k (±  0.00%) | 356,876k (±  0.00%) |    -2k (-  0.00%) | 356,847k | 356,929k |\r\n| Parse Time  |    2.13s (±  1.54%) |    2.11s (±  0.56%) | -0.02s (-  0.99%) |    2.09s |    2.15s |\r\n| Bind Time   |    0.83s (±  1.89%) |    0.82s (±  1.35%) | -0.01s (-  1.21%) |    0.80s |    0.85s |\r\n| Check Time  |    4.30s (±  1.57%) |    4.22s (±  0.67%) | -0.08s (-  1.88%) |    4.14s |    4.30s |\r\n| Emit Time   |    2.87s (±  3.28%) |    2.73s (±  0.34%) | -0.14s (-  4.74%) |    2.71s |    2.75s |\r\n| Total Time  |   10.13s (±  1.79%) |    9.88s (±  0.36%) | -0.25s (-  2.45%) |    9.79s |    9.99s |\r\n\r\n#### TFS - node (v8.2.1, x64)\r\n| Project     |            Baseline |             Current |             Delta |     Best |    Worst |\r\n| ----------- | ------------------- | ------------------- | ----------------- | -------- | -------- |\r\n| Memory used | 309,614k (±  0.01%) | 309,573k (±  0.01%) |   -41k (-  0.01%) | 309,510k | 309,626k |\r\n| Parse Time  |    1.55s (±  1.77%) |    1.55s (±  1.69%) | +0.00s (+  0.13%) |    1.45s |    1.58s |\r\n| Bind Time   |    0.68s (±  4.50%) |    0.69s (±  4.55%) | +0.01s (+  1.03%) |    0.66s |    0.81s |\r\n| Check Time  |    3.66s (±  0.32%) |    3.64s (±  0.55%) | -0.02s (-  0.41%) |    3.60s |    3.69s |\r\n| Emit Time   |    2.38s (±  0.52%) |    2.41s (±  0.68%) | +0.03s (+  1.09%) |    2.37s |    2.45s |\r\n| Total Time  |    8.27s (±  0.23%) |    8.29s (±  0.36%) | +0.01s (+  0.17%) |    8.22s |    8.35s |","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/17589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/17589/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/16174","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/16174/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/16174/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/16174/events","html_url":"https://github.com/microsoft/TypeScript/pull/16174","id":232619596,"node_id":"MDExOlB1bGxSZXF1ZXN0MTIzMzEyNzIy","number":16174,"title":"Stop spelling suggestions after 10 name-not-found errors","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-05-31T16:15:36Z","updated_at":"2018-06-14T20:59:02Z","closed_at":"2017-05-31T16:45:37Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/16174","html_url":"https://github.com/microsoft/TypeScript/pull/16174","diff_url":"https://github.com/microsoft/TypeScript/pull/16174.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/16174.patch","merged_at":"2017-05-31T16:45:37Z"},"body":"Spelling suggestions now stop after the tenth name-not-found error, which is better for performance.\r\n\r\nPreviously, spelling suggestions stopped after name-not-found errors led to 10 *suggestions*. This may never happen for a failed import, which is the most common case for lots of name-not-found errors. In that worst case, we would continue to search for spelling suggestions for every name-not-found error but never find any.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/16174/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/16174/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/15856","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/15856/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/15856/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/15856/events","html_url":"https://github.com/microsoft/TypeScript/pull/15856","id":228855657,"node_id":"MDExOlB1bGxSZXF1ZXN0MTIwNzAxOTM1","number":15856,"title":"Support for JSDoc in services","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-05-15T21:45:55Z","updated_at":"2018-06-14T21:00:33Z","closed_at":"2017-05-22T14:46:53Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/15856","html_url":"https://github.com/microsoft/TypeScript/pull/15856","diff_url":"https://github.com/microsoft/TypeScript/pull/15856.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/15856.patch","merged_at":"2017-05-22T14:46:52Z"},"body":"Fixes #2452 and #14397\r\nDoes not fix #15855, #15853, or #13371\r\n\r\nNotes:\r\n\r\n* We now *always* bind jsdoc, even in typescript files. This doesn't necessarily mean that we'll get a good Symbol, but at least parent pointers will be set. I'll have to test how this branch affects performance.\r\n\r\n* `forEachChild` is now typed as providing a `NodeArray<Node>` to `cbNodeArray` instead of a `Node[]`. We already had casts to this effect.\r\n\r\n* `.getChildren()` on a JSDocComment node used to provide a garbage array of \"tokens\" as if the content was TypeScript code. Now avoid collecting tokens at all and just have it be the array of nodes from `forEachChild`.","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/15856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/15856/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/15507","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/15507/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/15507/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/15507/events","html_url":"https://github.com/microsoft/TypeScript/pull/15507","id":225495956,"node_id":"MDExOlB1bGxSZXF1ZXN0MTE4NDE4NTAz","number":15507,"title":"Spelling correction","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2017-05-01T18:48:33Z","updated_at":"2018-06-14T21:02:13Z","closed_at":"2017-05-09T17:10:11Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/15507","html_url":"https://github.com/microsoft/TypeScript/pull/15507","diff_url":"https://github.com/microsoft/TypeScript/pull/15507.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/15507.patch","merged_at":"2017-05-09T17:10:11Z"},"body":"Suggest spellings based on Levenshtein distance. This includes a quick fix.\r\n\r\nSome tweaks that are possible:\r\n1. Don't suggest spellings from the global scope. The main value seems to be for the tests trying to do `new number()`, which probably doesn't happen much in the real world.\r\n2. Only report 100 suggestions and stop afterwards. If your program has more than 100 unknown symbols, it's probably missing some libraries, not full of typos.\r\n3. Lower the threshold slightly to `0.6 * source.length` from `0.7 * source.length`. This would prevent 2-character suggestions entirely (currently they can add one letter) and restrict 3-character suggestions to adding one letter (currently they can also substitute one letter).\r\n\r\nPerformance seems to be about the same based on timing `jake runtests` on a 2 Ghz CPU. If I add the 100-error cutoff or stop suggestions from global scope, then I think there won't be any concerns about performance anyway.\r\n\r\nFixes #15333 \r\nFixes #15565","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/15507/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/15507/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/14996","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/14996/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/14996/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/14996/events","html_url":"https://github.com/microsoft/TypeScript/pull/14996","id":219070424,"node_id":"MDExOlB1bGxSZXF1ZXN0MTE0MDI5MzIy","number":14996,"title":"Rename local variable `arguments` to `args`","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-04-03T21:42:37Z","updated_at":"2018-06-21T19:47:46Z","closed_at":"2017-04-05T20:45:51Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/14996","html_url":"https://github.com/microsoft/TypeScript/pull/14996","diff_url":"https://github.com/microsoft/TypeScript/pull/14996.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/14996.patch","merged_at":"2017-04-05T20:45:51Z"},"body":"This may be affecting performance? CC @rbuckton ","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/14996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/14996/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/6739","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6739/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6739/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6739/events","html_url":"https://github.com/microsoft/TypeScript/pull/6739","id":129910734,"node_id":"MDExOlB1bGxSZXF1ZXN0NTc3MTczODk=","number":6739,"title":"This function types","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2016-01-29T23:28:14Z","updated_at":"2018-06-19T20:37:10Z","closed_at":"2016-04-07T17:31:01Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/6739","html_url":"https://github.com/microsoft/TypeScript/pull/6739","diff_url":"https://github.com/microsoft/TypeScript/pull/6739.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/6739.patch","merged_at":"2016-04-07T17:31:01Z"},"body":"Implements the proposal at #6018 and finishes the work described at #3694. See the bottom of this description for a tutorial and usage recommendations for this new feature.\n\nThis change adds checking for this types in functions. With this-function types, you can prevent the use of methods as free functions. And this types allow you to make constructor functions that return a real type rather than `any`. A number of other common javascript patterns can be given types or even inferred with `--strictThis` turned on.\n## Correctly prevent references to `this` when assigning callbacks\n\n``` ts\ninterface Callbacks {\n  property: number;\n  onClick(this: void, e: Event): void;\n}\nfunction handleClick(this:void, e: Event) {\n  console.log(this.property); // error, 'void' has no member 'property'\n}\nclass C {\n  property: string\n  tryHandleClick(this: this, e: Event): void {\n    console.log(this.property); // OK, 'C' has member 'property'\n  }\n  actuallyHandleClick(this: void, e: Event): void {\n    console.log(this.property); // error, 'void' has no member 'property'\n  }\n}\nlet c: C;\nlet callbacks: Callbacks;\ncallbacks.onClick = handleClick; // OK, this: void for both\ncallbacks.onClick = c.tryHandleClick; // Error, 'C' is not assignable to 'void'\ncallbacks.onClick = c.actuallyHandleClick; // OK, this: void for both\n```\n\nNote that callback functions are prevented from referring to members of `this` because they declare that `this: void` in order to be assignable to `onClick`.\n\nAlso note that the less common case of callback _methods_ still allows _functions_ to be assigned to these properties:\n\n``` ts\nclass Callbacks {\n  m: number;\n  callback: (this: this, n: number) => number;\n}\nfunction f(this: void, n: number) {\n  return n;\n}\nlet c: Callbacks;\nc.callback = f; // OK, because f does not refer to any properties of `this`.\n```\n\nYou can even require a _different_ `this` for methods that will be used as a callback:\n\n``` ts\ninterface Callbacks {\n  property: number;\n  onClick(this: Callbacks, e: Event): void;\n}\nclass C {\n  property: string\n  tryHandleClick(this: Callbacks, e: Event): void {\n    console.log(this.property); // OK, 'C' has member 'property'\n  }\n}\nlet c: C;\nlet callbacks: Callbacks;\ncallbacks.onClick = c.tryHandleClick;\n```\n## Contextual typing of methods and functions in object literals\n\nNow when an object literal declares that it is of some type, `this` is also contextually typed inside the object literal.\n\n``` ts\ninterface I {\n  n: number;\n  method(m: number): number;\n  callback: (m: number) => number;\n}\nlet o: I = {\n  n: 12,\n  method(m) {\n    return this.n + m; // OK, `this: I` from context\n  },\n  callback = m => m + 1, // OK, `this: void` from context\n}\n```\n## Build object literals from existing functions\n\nYou can also define functions alone and then later build an object literal from them. If the functions specify the `this` type, then the compiler will check references to this in the function's body. And it will also check that the function's `this` is assignable to the `this` of the object literal's type.\n\n``` ts\ninterface I {\n  n: number;\n  method: (m: number) => number;\n}\nfunction futureMethod(this: I, m: number) {\n  return this.n + m;\n}\nlet o: I = { n: 12, method: futureMethod };\n```\n\nDefining a function this way also requires that it cannot be called free:\n\n``` ts\nfutureMethod(12); // error, 'void' is not assignable to 'I'\no.futureMethod(12); // ok, 'o' is of type 'I'\n```\n## The type of functions when used as constructors is now known.\n\nWhen you use `new` with a function, you can now declare the type of the object that will be constructed with `this`. Previously, the type was always `any`. The compiler will also check that your assignments to `this` are correct in the body of the function.\n\n``` ts\nfunction Symbol(this: Symbol, flags: SymbolFlags, name: string) {\n  this.flags = flags;\n  this.name = name;\n  this.declarations = undefined;\n}\nlet s = new Symbol(flags, \"core\"); // s: Symbol\n```\n# `strictThisChecks` flag default types\n## UPDATE: --strictThisChecks removed\n\nBecause of performance concerns and lack of information on how people will use `this` types, we decided to remove `--strictThisChecks` for this release. I left the original explanation below.\n## --noImplicitThis\n\n`--noImplicitThis` makes it an error to use `this` that is implicitly `any` inside of a function:\n\n``` ts\nfunction F(x: number, y: number) {\n    this.x = x; // this: any, so anything is legal\n    this.z = y; // missed horrible typo\n}\nlet f = new F(); // also, f: any  <-- that's sad :(\n```\n\nAdd an annotation to fix this:\n\n``` ts\ninterface F { \n    x: number;\n    y: number \n}\nfunction F(this: F, x: number, y: number) {\n    this.x = x;\n    this.y = y;\n}\nlet f = new F(12, 13); // f: F <-- hooray! :)\n```\n## Previous explanation of `strictThisChecks`\n\nFor backward compatibility, `this` types default to `any` if not specified. However, if `--strictThis` is specified, then functions will default `this: void` and methods will default `this: this`. This removes the need for most of the annotations in the previous examples. For example, an interface can declare a function with `this: void` by using function syntax and a method with `this: this` by using method syntax:\n\n``` ts\ninterface I {\n  f: (n: number) => number; // this: void\n  m(n: number): number; // this: this\n}\nfunction g(n: number) { // this: void\n  return n;\n}\nclass C {\n  private special: number = 12;\n  m(n: number): number { return n + this.special; }\n}\n\nlet i: I;\nlet c: C;\ni.f = g; // ok, this: void\ni.f = c.m; // error, 'void' is not assignable to 'C' (missing member 'm')\ni.m = c.m; // error, 'I' is not assignable to 'C' (missing member 'special')\n```\n\nThis breaks a lot of existing code, but is easy to write for future code.\n# How to upgrade code to `--strictThis`\n\nWhen you switch on `--strictThis` you'll see a lot of errors with calling a method as if it were a function:\n\n``` ts\ninterface Object {\n  method(n: number): void;\n}\nconst f = object.method; \nf(12); // ERROR, this should be 'Object' not 'void'\n```\n\nYou can fix the usage or the interface definition:\n\n``` ts\n// Fix usage:\nconst fix1 = n => object.method(n);\ncorrect(12); // OK, lambda captures the object and doesn't require 'this'\nf.call(object, 12); // alternate fix: use Function.call\n\n/// OR ///\n// Fix definition:\ninterface Object {\n  method(this: void, n: number): void;\n}\n// alternate fix: use function syntax to implicitly set this: void\ninterface Object {\n  method: (n: number) => void;\n}\nconst f = object.method;\nf(12); // OK, this is void\n```\n# Designing new, strict-this code\n\nTo be able to switch `--strictThis` on, the style that you write interfaces needs to change. You need to consider how people will use your interfaces. If they will treat your interface's functions as methods on an object, you should use the normal method declaration syntax. If they will treat them as a callback or some other kind of free function, you should declare them using the function property syntax. For example:\n\n``` ts\ninterface Extractor {\n  extract(input: string): Row[]; // method style\n}\n\ninterface Callbacks {\n  callback: (e: Event) => void; // function property style\n}\n```\n\nA safe default is to use the method declaration syntax. I discuss the tradeoffs below.\n## OO programming style\n\nIf you are writing pure OO Typescript/ES6, then you don't need to change much to work with  `--strictThis`. \n- OO interfaces should have `this: this`\n- The only exception should be callbacks, which should have `this: void`.\n\nFortunately, these are the default types for the method and function syntax, respectively, so you don't have to write anything much different:\n\n``` ts\ninterface Extractor {\n    extract(input: string): Row[];\n    // the default (this: this) makes this the same as writing:\n    // extract(this: this, input: string): Item[];\n\n}\nclass XmlExtractor implements Extractor {\n    extract(input: string): Row[] {\n        // read from Xml into your Row objects\n        // you can call private methods, etc, like before.\n    }\n    private helperMethod(sub: string): Row {\n        // ...\n    }\n}\n```\n\nNow you can't assign `extract` to a function by mistake:\n\n``` ts\nconst xml = new XmlExtractor();\notherObject.onCall = xml.extract; // error: types of this are not compatible\nlet ex = xml.extract; // ok ...\nex('<row>...</row>'); // error, this: void is not compatible with this: XmlExtractor\notherObject.onExtract = ex; // error this: void is not compatible with this: XmlExtractor\n```\n\nAnd if you implement an interface, your methods get the right this-type regardless of what syntax you use:\n\n``` ts\ninterface Callbacks {\n  callback: (e: Event) => void;\n}\nclass XmlExtractor implements Extractor, Callbacks {\n  extract(input: string): Row[] {\n    // here, this: XmlExtractor\n  }\n  callback(e: Event) {\n    // here, this: void\n    this.extract(e.data); // error! 'this: void' has no method 'extract'\n  }\n}\notherObject.onExtract = xml.extract // error\notherObject.onExtract = xml.callback // ok!\n```\n### How can I use a method as a callback?\n\nYou may have noticed that `XmlExtractor.callback` isn't that useful as a method since you can't actually refer to any other methods. The solution is the same as you use today: wrap the method call inside a lambda:\n\n``` ts\nclass XmlExtractor implements Extractors, Callbacks {\n  extract(input: string): Row[] { ... }\n  callback = e => this.extract(e.data); // ok, => doesn't capture 'this'\n}\n```\n\nThis formulation is OK because lambda (`=>`) doesn't bind `this`, so `this` comes from the class instead of from the implementing function. \n## Functional style\n\nIf you are writing your code in functional style, you probably use interfaces to describe records of functions. You can still declare the functions using the method style and build instances of the interface using an object literal of your functions:\n\n``` ts\ninterface Compiler {\n  parse(program: string): Node;\n  bind(tree: Node): Map<Symbol>;\n  check(tree: Node): Diagnostic[];\n}\nfunction parse(program: string) {\n  // code inside does not refer to this\n}\n// etc ...\nlet compiler: Compiler = { parse, bind, check }\n```\n\nBut this prevents users from pulling these functions off of `compiler` and using them individually:\n\n``` ts\nlet tree = compiler.parse(\"console.log('hello')\");\nlet parse = compiler.parse;\nparse(\"console.log('goodbye')\"); // error, this is 'void' which is not assignable to 'Compiler'\n```\n\nThis is safe because of course they _are_ free functions that do not require access to this. If you want enable this usage, you need to use the function property declaration syntax for the interface:\n\n``` ts\ninterface Compiler {\n  parse: (program: string) => Node;\n  bind: (tree: Node) => Map<Symbol>;\n  check: (tree: Node) => Diagnostic[];\n}\nfunction parse(program: string) {\n  // code inside doesn't refer to this\n}\nlet compiler: Compiler = { parse, bind, check }\nlet parse = compiler.parse;\nparse(\"console.log('goodbye')\");\n```\n### How can I implement an OO-style interface with nothing but functions?\n\nIf you want to implement an OO-style interface using only functions, you'll need to declare the `this` type in order to have access to that interface's members inside the function body.\n\n``` ts\nfunction extract(this: Extractor, input: string): Row[] {\n  // code here can refer to members of Extractor\n}\n```\n\nThen you can create an object literal that contains that function:\n\n``` ts\nlet extractor: Extractor = {\n  extract\n}\n```\n\nThis is essentially the code you would write today, but now usages of `this` are checked. For even more convenience you can use the contextual typing that comes from writing a function inside an object literal:\n\n``` ts\nlet extract: Extractor = {\n  function extract(input: string): Row[] {\n    // code here can refer to members of Extractor\n  }\n}\n```\n\nBut at this point you might as well write a new class that implements Extractor.\n## Interfacing with JavaScript\n\nThe problem with interfacing to JavaScript is that it may use any or all of the above styles. A good default for writing types for Javascript code is the method declaration style. This makes implementing the interface easier. On the other hand, it prevents users of the interface from pulling functions off of the interface in order to save them as variables or to use them as callbacks. \n\nThis is the main reason that DefinitelyTyped definitions can't automatically compiled with --strictThis: it's impossible to predict which style of usage is the desired one for a currently-unmarked interface:\n\n``` ts\ninterface WholeClass {\n  method(): void; // probably a method?\n}\ninterface Record {\n  func(x: string): number; // probably a function?\n}\n```\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/6739/reactions","total_count":18,"+1":7,"-1":0,"laugh":0,"hooray":10,"confused":0,"heart":1,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6739/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/13006","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/13006/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/13006/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/13006/events","html_url":"https://github.com/microsoft/TypeScript/pull/13006","id":196261540,"node_id":"MDExOlB1bGxSZXF1ZXN0OTg0NjY1Mzk=","number":13006,"title":"Fix latest tslint errors","user":{"login":"saschanaz","id":3396686,"node_id":"MDQ6VXNlcjMzOTY2ODY=","avatar_url":"https://avatars.githubusercontent.com/u/3396686?v=4","gravatar_id":"","url":"https://api.github.com/users/saschanaz","html_url":"https://github.com/saschanaz","followers_url":"https://api.github.com/users/saschanaz/followers","following_url":"https://api.github.com/users/saschanaz/following{/other_user}","gists_url":"https://api.github.com/users/saschanaz/gists{/gist_id}","starred_url":"https://api.github.com/users/saschanaz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saschanaz/subscriptions","organizations_url":"https://api.github.com/users/saschanaz/orgs","repos_url":"https://api.github.com/users/saschanaz/repos","events_url":"https://api.github.com/users/saschanaz/events{/privacy}","received_events_url":"https://api.github.com/users/saschanaz/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":14,"created_at":"2016-12-18T06:51:10Z","updated_at":"2018-06-19T23:44:41Z","closed_at":"2016-12-26T19:24:26Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/13006","html_url":"https://github.com/microsoft/TypeScript/pull/13006","diff_url":"https://github.com/microsoft/TypeScript/pull/13006.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/13006.patch","merged_at":"2016-12-26T19:24:25Z"},"body":"Except this type of errors:\r\n\r\n```ts\r\nexport function getNavigationTree(sourceFile: SourceFile): NavigationTree {\r\n    curSourceFile = sourceFile;\r\n    const result = convertToTree(rootNavigationBarNode(sourceFile));\r\n    curSourceFile = undefined;\r\n    return result;\r\n}\r\nlet curSourceFile: SourceFile;\r\n// Identifier 'curSourceFile' is never reassigned; use 'const' instead of 'let'.\r\n```\r\n\r\n```ts\r\nlet response: protocol.Response;\r\ntry {\r\n    ({ response } = this.executeCommand(msg));\r\n}\r\n//  Identifier 'response' is never reassigned; use 'const' instead of 'let'.\r\n```\r\n\r\nI think they are tslint bugs rather than actual code problem. (https://github.com/palantir/tslint/issues/1898)\r\n\r\nBTW I feel fairly painful to create a new constant for every for-loop, I hope there is a better way to keep high performance...","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/13006/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/13006/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/10270","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10270/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10270/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10270/events","html_url":"https://github.com/microsoft/TypeScript/pull/10270","id":170548177,"node_id":"MDExOlB1bGxSZXF1ZXN0ODA4ODkzNTE=","number":10270,"title":"Optimize performance of maps","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2016-08-11T00:21:00Z","updated_at":"2018-06-19T22:36:35Z","closed_at":"2016-08-13T03:41:40Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/10270","html_url":"https://github.com/microsoft/TypeScript/pull/10270","diff_url":"https://github.com/microsoft/TypeScript/pull/10270.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/10270.patch","merged_at":"2016-08-13T03:41:40Z"},"body":"This PR optimizes the compiler's use of objects as maps as follows:\n- Require the host to be ECMAScript 5 compliant and create maps using `Object.create(null)`. This ensures maps have no prototype (and thus no inherited members).\n- Apply the `delete` operator to every newly created map object. This causes V8 to put the object in \"dictionary mode\" and disables creation of hidden classes which are very expensive for objects that are constantly changing shape.\n- Skip `hasOwnProperty` calls on property lookups. They're no longer necessary when objects are known to have no prototype.\n\nThe PR introduces a new `MapLike<T>` type that represents a regular object used as a lookup (e.g. an object literal). A `MapLike<T>` requires use of `hasOwnProperty` to determine whether a particular property was inherited from the prototype.\n\nThe `Map<T>` type now has a brand and `Map<T>` instances can only be created by calling `createMap<T>()` (which in turn calls `Object.create(null)` and puts the object into dictionary mode).\n\nPerformance impact on the Monaco real world code base is as follows:\n- 15% overall speed increase (6.7s vs. 7.9s).\n- 19% less memory consumed (211Mb vs. 261Mb).\n\nDefinitely a worthwhile optimization, provided we're ok with dropping support for ECMAScript 3 hosts.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/10270/reactions","total_count":18,"+1":18,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10270/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/10327","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10327/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10327/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10327/events","html_url":"https://github.com/microsoft/TypeScript/pull/10327","id":171043664,"node_id":"MDExOlB1bGxSZXF1ZXN0ODEyMzQ3MzI=","number":10327,"title":"Simplifies performance API","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-08-14T05:36:23Z","updated_at":"2018-06-19T23:32:10Z","closed_at":"2016-08-15T18:11:20Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/10327","html_url":"https://github.com/microsoft/TypeScript/pull/10327","diff_url":"https://github.com/microsoft/TypeScript/pull/10327.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/10327.patch","merged_at":"2016-08-15T18:11:20Z"},"body":"This change streamlines the performance API and moves the various markers and measurements to `Map` over `MapLike`. As a result, some scenarios such as Angular are improved by another 3% (350ms). This change also improves integration with the ts-perf profiler, making it easier to analyze performance events. \n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/10327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10327/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/9956","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9956/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9956/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9956/events","html_url":"https://github.com/microsoft/TypeScript/pull/9956","id":167662846,"node_id":"MDExOlB1bGxSZXF1ZXN0Nzg4OTA3MTY=","number":9956,"title":"In ts.performance.now, bind window.performance.now","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2016-07-26T17:17:55Z","updated_at":"2018-06-19T22:35:27Z","closed_at":"2016-07-26T18:31:54Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/9956","html_url":"https://github.com/microsoft/TypeScript/pull/9956","diff_url":"https://github.com/microsoft/TypeScript/pull/9956.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/9956.patch","merged_at":"2016-07-26T18:31:54Z"},"body":"Fixes #9954\n\nUsing an arrow function. Previously, it was set directly to window.performance.now, which fails when used in Chrome.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/9956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9956/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/9852","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9852/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9852/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9852/events","html_url":"https://github.com/microsoft/TypeScript/pull/9852","id":166715648,"node_id":"MDExOlB1bGxSZXF1ZXN0NzgyNDM1NTM=","number":9852,"title":"[Transforms] Address visitor performance.","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[{"id":352640964,"node_id":"MDU6TGFiZWwzNTI2NDA5NjQ=","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Domain:%20Transforms","name":"Domain: Transforms","color":"006b75","default":false,"description":"Relates to the public transform API"}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-07-21T01:02:19Z","updated_at":"2018-06-19T22:35:03Z","closed_at":"2016-07-22T00:49:44Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/9852","html_url":"https://github.com/microsoft/TypeScript/pull/9852","diff_url":"https://github.com/microsoft/TypeScript/pull/9852.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/9852.patch","merged_at":"2016-07-22T00:49:44Z"},"body":"This PR adds more optimizations for `reduceEachChild` and `visitEachChild` to shave off some emit time.\n\nAlso removes a number of single-purpose functions that could be inlined or refactored into other functions.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/9852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9852/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/9845","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9845/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9845/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9845/events","html_url":"https://github.com/microsoft/TypeScript/pull/9845","id":166648528,"node_id":"MDExOlB1bGxSZXF1ZXN0NzgxOTUxMDc=","number":9845,"title":"Integrate feedback from @mihailik to performance framework","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-07-20T18:22:56Z","updated_at":"2018-06-19T22:35:01Z","closed_at":"2016-07-20T22:42:29Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/9845","html_url":"https://github.com/microsoft/TypeScript/pull/9845","diff_url":"https://github.com/microsoft/TypeScript/pull/9845.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/9845.patch","merged_at":"2016-07-20T22:42:29Z"},"body":"Integrates @mihailik's comments from #9536. Also flattens the namespaces in `performance.ts` (removing mostly meaningless whitespace), and unifies all timestamping found in the compiler to use a single `timestamp` function.\n\nThe definition of `timestamp` is still in `performance`, since `performance` still needs to use it, and it defined before `core`.\n\n@rbuckton Do you wanna okay this change?\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/9845/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9845/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/9536","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9536/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9536/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9536/events","html_url":"https://github.com/microsoft/TypeScript/pull/9536","id":164140274,"node_id":"MDExOlB1bGxSZXF1ZXN0NzY0NzY5OTQ=","number":9536,"title":"Add performance framework from transforms branch","user":{"login":"weswigham","id":2932786,"node_id":"MDQ6VXNlcjI5MzI3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/2932786?v=4","gravatar_id":"","url":"https://api.github.com/users/weswigham","html_url":"https://github.com/weswigham","followers_url":"https://api.github.com/users/weswigham/followers","following_url":"https://api.github.com/users/weswigham/following{/other_user}","gists_url":"https://api.github.com/users/weswigham/gists{/gist_id}","starred_url":"https://api.github.com/users/weswigham/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weswigham/subscriptions","organizations_url":"https://api.github.com/users/weswigham/orgs","repos_url":"https://api.github.com/users/weswigham/repos","events_url":"https://api.github.com/users/weswigham/events{/privacy}","received_events_url":"https://api.github.com/users/weswigham/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-07-06T18:15:30Z","updated_at":"2018-06-19T22:33:49Z","closed_at":"2016-07-19T22:10:29Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/9536","html_url":"https://github.com/microsoft/TypeScript/pull/9536","diff_url":"https://github.com/microsoft/TypeScript/pull/9536.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/9536.patch","merged_at":"2016-07-19T22:10:29Z"},"body":"@rbuckton \n@mhegazy \n\nI was working on suspiciously similar code for doing extension profiling in #9038 - by splitting the performance tools framework from either PR, we can merge them in more quickly and start using a common framework across all PRs.\n\nNotable differences from the original code in the transforms branch:\n- When the new `extendedDiagnostics` argument is supplied, all recorded perf buckets are reported under the friendly name they use as their key (unlike before, where they used a codename and had to be explicitly printed). This is very useful since extensions are likely to add extra perf buckets on the fly (and we have no idea what they'll be named, but would still like to report them in the summary).\n- The `counter` and `emit` code is presently unused - @rbuckton uses them in profiling and inspecting transformations in his branch, but I don't yet have a need to insert profiling events or replace counters elsewhere in our codebase (and I may use them for extensions, too).\n- The function used to `mark` internally is now chosen as one of `performance.now`, `Date.now`, and `() => new Date().getTime()` (in that order) - this way a higher resolution/performance marker is used when available, but falls back to a universal option if they are unavailable. (And as @rbuckton explained the other day, it doesn't try to use process.hrtime since that would allocate arrays.)\n- It's in its own file, rather than in `core.ts` - it's an isolated set of work and is understandable/reusable. IMO, it makes sense for it to be its own unit.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/9536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/9536/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/11165","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/11165/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/11165/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/11165/events","html_url":"https://github.com/microsoft/TypeScript/pull/11165","id":179375632,"node_id":"MDExOlB1bGxSZXF1ZXN0ODY4NDczNzI=","number":11165,"title":"Transformation API Cleanup","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-09-27T01:17:43Z","updated_at":"2018-06-19T23:35:57Z","closed_at":"2016-09-30T00:44:06Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/11165","html_url":"https://github.com/microsoft/TypeScript/pull/11165","diff_url":"https://github.com/microsoft/TypeScript/pull/11165.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/11165.patch","merged_at":"2016-09-30T00:44:06Z"},"body":"This PR cleans up and improves the design of the transformer and pretty printer, and reduces the overall size of `Node`. Notable changes include:\n- Moved `emitFlags`, `sourceMapRange`, and `commentRange` to `EmitNode` object.\n  - This reduces the overall size of `Node` and seems to reduce the total memory used by 5-8MB (based on the \"Memory Used\" statistic as part of our performance tests.\n- Moved `getNodeEmitFlags`, `setNodeEmitFlags`, etc. out of `transformer.ts` to `factory.ts`.\n- Cleaned up the emit pipeline in `emitter.ts`.\n- Moved `emitNodeWithSourceMaps` into `sourcemaps.ts`.\n- Moved `emitNodeWithNotification` into `transformer.ts`.\n- Moved `trySubstituteNode` into `transformer.ts` (as `emitNodeWithSubstitution`).\n- Moved `tryEmitConstantValue` into `ts.ts` as part of substitution.\n- Removed unused and deprecated functionality from `sourcemap.ts`\n- Moved `chain` and `compose` from `transformer.ts` to `core.ts`\n- Fixes an issue when emitting PropertyAccessExpression for a const enum value when comments are emitted.\n\nIn addition to the aforementioned reduction in memory footprint, this results in a small performance improvement in overall compiler time for most scenarios (between 0.6% to 1.5% improvement).\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/11165/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/11165/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/8824","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8824/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8824/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8824/events","html_url":"https://github.com/microsoft/TypeScript/pull/8824","id":156829974,"node_id":"MDExOlB1bGxSZXF1ZXN0NzE0NDgzNTg=","number":8824,"title":"[Transforms] Performance fixes","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[{"id":352640964,"node_id":"MDU6TGFiZWwzNTI2NDA5NjQ=","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Domain:%20Transforms","name":"Domain: Transforms","color":"006b75","default":false,"description":"Relates to the public transform API"}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-05-25T19:23:41Z","updated_at":"2018-06-19T22:31:03Z","closed_at":"2016-05-27T23:19:48Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/8824","html_url":"https://github.com/microsoft/TypeScript/pull/8824","diff_url":"https://github.com/microsoft/TypeScript/pull/8824.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/8824.patch","merged_at":"2016-05-27T23:19:48Z"},"body":"This PR addresses several performance issues in tree transformations. This includes:\n- A new internal performance API, which helps to avoid deoptimizations on the `ts` namespace in node.\n- A new (temporary) `--extendedDiagnostics` compiler flag which dumps all of the performance marks and measures.\n- Storage of transient transformation properties such as `NodeEmitFlags` and custom ranges for comments and source maps on the node.\n- Caching for `getNodeEmitFlags` to speed up repeated lookups.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/8824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8824/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/8906","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8906/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8906/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8906/events","html_url":"https://github.com/microsoft/TypeScript/pull/8906","id":157792335,"node_id":"MDExOlB1bGxSZXF1ZXN0NzIxMDE1NTY=","number":8906,"title":"[Transforms] Performance improvements in the comment emitter.","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[{"id":352640964,"node_id":"MDU6TGFiZWwzNTI2NDA5NjQ=","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Domain:%20Transforms","name":"Domain: Transforms","color":"006b75","default":false,"description":"Relates to the public transform API"}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-05-31T23:24:35Z","updated_at":"2018-06-19T22:31:23Z","closed_at":"2016-06-01T22:15:52Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/8906","html_url":"https://github.com/microsoft/TypeScript/pull/8906","diff_url":"https://github.com/microsoft/TypeScript/pull/8906.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/8906.patch","merged_at":"2016-06-01T22:15:52Z"},"body":"Simplifies the comment emitter and reduces allocations for Comment Ranges. Also allows the `runtests-file` jake task to run in parallel.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/8906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8906/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/8899","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8899/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8899/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8899/events","html_url":"https://github.com/microsoft/TypeScript/pull/8899","id":157743336,"node_id":"MDExOlB1bGxSZXF1ZXN0NzIwNjY2Mjg=","number":8899,"title":"[Transforms] Performance improvements in the binder.","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[{"id":352640964,"node_id":"MDU6TGFiZWwzNTI2NDA5NjQ=","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Domain:%20Transforms","name":"Domain: Transforms","color":"006b75","default":false,"description":"Relates to the public transform API"}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-05-31T18:51:00Z","updated_at":"2018-06-19T22:31:21Z","closed_at":"2016-05-31T22:49:28Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/8899","html_url":"https://github.com/microsoft/TypeScript/pull/8899","diff_url":"https://github.com/microsoft/TypeScript/pull/8899.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/8899.patch","merged_at":"2016-05-31T22:49:28Z"},"body":"This extracts logic from `computeTransformFlagsForNode` for switch cases that use properties on `Node` subtypes. This allows NodeJS (or other hosts) to make deoptimization decisions for each branch rather than for the entire `computeTransformFlagsForNode` function which reduces bind time by 10-14% depending on scenario when compared to the \"transforms\" branch. \n\nThis also manually inlines the `updateTransformFlags` function as it was too polymorphic to be properly inlined.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/8899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8899/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/10359","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10359/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10359/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10359/events","html_url":"https://github.com/microsoft/TypeScript/pull/10359","id":171288754,"node_id":"MDExOlB1bGxSZXF1ZXN0ODEzOTQ5OTg=","number":10359,"title":"Migrate more MapLikes to Maps","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2016-08-15T23:50:16Z","updated_at":"2018-06-19T23:32:20Z","closed_at":"2016-08-17T03:11:35Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/10359","html_url":"https://github.com/microsoft/TypeScript/pull/10359","diff_url":"https://github.com/microsoft/TypeScript/pull/10359.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/10359.patch","merged_at":"2016-08-17T03:11:35Z"},"body":"This change migrates a number of remaining `MapLike<T>` entries to `Map<T>`, as well as adds a number of additional functions for working with both `MapLike<T>` and `Map<T>`.\n\nThe changes in the compiler itself add an additional performance improvement, shaving another ~400ms off of the total emit time of Monaco and Angular.\n\nThis also disables the tslint restriction on use of the `in` operator, as offline performance tests I've run show that using `in` is faster than both `hasOwnProperty` and `obj[key]` when merely testing for the presence of a key. The `in` operator also works better when paired with `delete`, which is faster at removing entries from a `Map<T>` than setting the entry to `undefined`.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/10359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10359/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/10240","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10240/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10240/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10240/events","html_url":"https://github.com/microsoft/TypeScript/pull/10240","id":170299105,"node_id":"MDExOlB1bGxSZXF1ZXN0ODA3MTUwNTk=","number":10240,"title":"Optimize format of type list id strings used in maps","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-08-10T00:00:09Z","updated_at":"2018-06-19T22:36:28Z","closed_at":"2016-08-11T17:11:41Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/10240","html_url":"https://github.com/microsoft/TypeScript/pull/10240","diff_url":"https://github.com/microsoft/TypeScript/pull/10240.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/10240.patch","merged_at":"2016-08-11T17:11:41Z"},"body":"The compiler extensively uses caches to share instantiations of generic types as well as union, intersection, and tuple types. These caches are simply objects where the entries are keyed by property names synthesized from the unique IDs assigned to type objects. Previously we'd construct type cache keys as comma separated lists of type IDs. For example, the union type A | B | C | D would have a key like \"1000,1001,1002,1003\", where each numeric string is the unique ID of the type. This PR optimizes the key format by encoding two or more consecutive IDs as \"xxxx:nnnn\", where xxxx is the starting ID and nnnn is the number of IDs. So, the key for A | B | C | D simply becomes \"1000:4\" if the types have consecutive IDs. Since union types often have constituents with consecutive IDs (particularly union enum types), this can dramatically reduce the length of keys, which helps performance and memory consumption. Informal tests show a 2-3% speedup of the type check phase when compiling the compiler itself.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/10240/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/10240/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/8946","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8946/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8946/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8946/events","html_url":"https://github.com/microsoft/TypeScript/pull/8946","id":158226647,"node_id":"MDExOlB1bGxSZXF1ZXN0NzI0MDc5MjA=","number":8946,"title":"Revert \"Merge pull request #7235 from weswigham/narrow-all-types\"","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2016-06-02T19:59:58Z","updated_at":"2018-06-19T22:31:32Z","closed_at":"2016-06-02T20:46:06Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/8946","html_url":"https://github.com/microsoft/TypeScript/pull/8946","diff_url":"https://github.com/microsoft/TypeScript/pull/8946.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/8946.patch","merged_at":"2016-06-02T20:46:06Z"},"body":"This reverts commit ef0f6c8fe4f94a7e294cfe42d7025c9dca6535d5, reversing\nchanges made to 9f087cb62ade7a879e23c229df752fc8f87d679c.\n\nWe need to investigate possible performance impact first.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/8946/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8946/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/8873","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8873/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8873/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8873/events","html_url":"https://github.com/microsoft/TypeScript/pull/8873","id":157308986,"node_id":"MDExOlB1bGxSZXF1ZXN0NzE3ODU3NTc=","number":8873,"title":"[Transforms] Optimize frequent paths in `visitEachChild`.","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[{"id":352640964,"node_id":"MDU6TGFiZWwzNTI2NDA5NjQ=","url":"https://api.github.com/repos/microsoft/TypeScript/labels/Domain:%20Transforms","name":"Domain: Transforms","color":"006b75","default":false,"description":"Relates to the public transform API"}],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2016-05-27T23:54:58Z","updated_at":"2018-06-19T22:31:15Z","closed_at":"2016-05-31T18:06:04Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/8873","html_url":"https://github.com/microsoft/TypeScript/pull/8873","diff_url":"https://github.com/microsoft/TypeScript/pull/8873.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/8873.patch","merged_at":"2016-05-31T18:06:04Z"},"body":"This change addresses performance issues related to the general behavior of `visitEachChild`. The current `visitEachChild` function is highly generic, which make it difficult for hosts to optimize. This change adds individual, more optimized `visitEachChildOf*` functions for the most common nodes in our current test suite.\n\nAlso fixes some issues when compiling processDiagnosticMessages following \"jake clean\".\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/8873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8873/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/8595","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8595/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8595/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8595/events","html_url":"https://github.com/microsoft/TypeScript/pull/8595","id":154741451,"node_id":"MDExOlB1bGxSZXF1ZXN0NzAwMTYwNDI=","number":8595,"title":"Declaration expressions","user":{"login":"andy-ms","id":19274678,"node_id":"MDQ6VXNlcjE5Mjc0Njc4","avatar_url":"https://avatars.githubusercontent.com/u/19274678?v=4","gravatar_id":"","url":"https://api.github.com/users/andy-ms","html_url":"https://github.com/andy-ms","followers_url":"https://api.github.com/users/andy-ms/followers","following_url":"https://api.github.com/users/andy-ms/following{/other_user}","gists_url":"https://api.github.com/users/andy-ms/gists{/gist_id}","starred_url":"https://api.github.com/users/andy-ms/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andy-ms/subscriptions","organizations_url":"https://api.github.com/users/andy-ms/orgs","repos_url":"https://api.github.com/users/andy-ms/repos","events_url":"https://api.github.com/users/andy-ms/events{/privacy}","received_events_url":"https://api.github.com/users/andy-ms/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":{"login":"mhegazy","id":8000722,"node_id":"MDQ6VXNlcjgwMDA3MjI=","avatar_url":"https://avatars.githubusercontent.com/u/8000722?v=4","gravatar_id":"","url":"https://api.github.com/users/mhegazy","html_url":"https://github.com/mhegazy","followers_url":"https://api.github.com/users/mhegazy/followers","following_url":"https://api.github.com/users/mhegazy/following{/other_user}","gists_url":"https://api.github.com/users/mhegazy/gists{/gist_id}","starred_url":"https://api.github.com/users/mhegazy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mhegazy/subscriptions","organizations_url":"https://api.github.com/users/mhegazy/orgs","repos_url":"https://api.github.com/users/mhegazy/repos","events_url":"https://api.github.com/users/mhegazy/events{/privacy}","received_events_url":"https://api.github.com/users/mhegazy/received_events","type":"User","site_admin":false},"assignees":[{"login":"mhegazy","id":8000722,"node_id":"MDQ6VXNlcjgwMDA3MjI=","avatar_url":"https://avatars.githubusercontent.com/u/8000722?v=4","gravatar_id":"","url":"https://api.github.com/users/mhegazy","html_url":"https://github.com/mhegazy","followers_url":"https://api.github.com/users/mhegazy/followers","following_url":"https://api.github.com/users/mhegazy/following{/other_user}","gists_url":"https://api.github.com/users/mhegazy/gists{/gist_id}","starred_url":"https://api.github.com/users/mhegazy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mhegazy/subscriptions","organizations_url":"https://api.github.com/users/mhegazy/orgs","repos_url":"https://api.github.com/users/mhegazy/repos","events_url":"https://api.github.com/users/mhegazy/events{/privacy}","received_events_url":"https://api.github.com/users/mhegazy/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2016-05-13T15:40:19Z","updated_at":"2018-06-19T22:30:03Z","closed_at":"2016-05-17T19:36:39Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/8595","html_url":"https://github.com/microsoft/TypeScript/pull/8595","diff_url":"https://github.com/microsoft/TypeScript/pull/8595.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/8595.patch","merged_at":"2016-05-17T19:36:39Z"},"body":"Fixes #4481\n\nBroken into 2 commits. The second commit, which does deep searching for declarations, may have a performance impact.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/8595/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/8595/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/6987","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6987/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6987/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6987/events","html_url":"https://github.com/microsoft/TypeScript/pull/6987","id":132548985,"node_id":"MDExOlB1bGxSZXF1ZXN0NTg4MTU3Njk=","number":6987,"title":"Adds a simplified pretty printer for tree transformations","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2016-02-09T22:02:11Z","updated_at":"2018-06-19T20:38:16Z","closed_at":"2016-03-18T23:39:12Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/6987","html_url":"https://github.com/microsoft/TypeScript/pull/6987","diff_url":"https://github.com/microsoft/TypeScript/pull/6987.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/6987.patch","merged_at":"2016-03-18T23:39:12Z"},"body":"Unfortunately, we cannot easily leverage our existing emitter to emit transformed nodes. The current emitter often assumes nodes are original source tree nodes, rather than synthesized nodes created during a transformation phase. Transformers are not required to set parent pointers on nodes, as they will often reuse existing source tree nodes and should not change the parent pointers on these nodes.\n\nInstead we will add a new, simpler node printer whose responsibility is to emit the exact node tree provided.\n\nThe `printFiles` function will eventually supplant the existing `emitFiles` function. When called, this function will get a list of `Transformer` callbacks based on the provided compiler options, adding the node printer as the last transformer in the list.  This gives the node printer access to the `TransformationContext`, allowing it to process substitutions and track any hoisted declarations added during just-in-time substitution.\n\nThe node printer in `printFiles` is designed for performance, and minimizes the number of conditional branches within the emit for any node. The expectation is that all transformers have finished every non-substitution transformation before the printer is called, and therefore the node printer will print nodes verbatim.\n\nIn addition, similarly to how source maps were extracted from `emitter.ts` and into a `SourceMapWriter` to support the node printer, comment emit is now also extracted into a `CommentWriter`. \n\n**Related Pull Requests:**\n- #6892 - Adds the visitor API foundation for tree transformations.\n- #6983 - Adds the Transform Flags concept for tree transformations.\n- #6986 - Adds the transformFiles API for tree transformations.\n- #6987 - **Adds a simplified pretty printer for tree transformations.**\n- #7191 - Adds the TypeScript transformer.\n- #7192 - Adds the JSX transformer.\n- #7193 - Adds the ES7 transformer.\n- #7194 - Adds the ES6 transformer.\n- #7206 - Adds the Module transformer.\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.svg\" height=\"40\" alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/microsoft/typescript/6987)\n\n<!-- Reviewable:end -->\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/6987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6987/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/6983","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6983/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6983/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6983/events","html_url":"https://github.com/microsoft/TypeScript/pull/6983","id":132512865,"node_id":"MDExOlB1bGxSZXF1ZXN0NTg3OTc4NTU=","number":6983,"title":"Adds the Transform Flags concept for tree transformations","user":{"login":"rbuckton","id":3902892,"node_id":"MDQ6VXNlcjM5MDI4OTI=","avatar_url":"https://avatars.githubusercontent.com/u/3902892?v=4","gravatar_id":"","url":"https://api.github.com/users/rbuckton","html_url":"https://github.com/rbuckton","followers_url":"https://api.github.com/users/rbuckton/followers","following_url":"https://api.github.com/users/rbuckton/following{/other_user}","gists_url":"https://api.github.com/users/rbuckton/gists{/gist_id}","starred_url":"https://api.github.com/users/rbuckton/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rbuckton/subscriptions","organizations_url":"https://api.github.com/users/rbuckton/orgs","repos_url":"https://api.github.com/users/rbuckton/repos","events_url":"https://api.github.com/users/rbuckton/events{/privacy}","received_events_url":"https://api.github.com/users/rbuckton/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2016-02-09T19:40:59Z","updated_at":"2018-06-19T20:38:15Z","closed_at":"2016-03-18T23:39:49Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/6983","html_url":"https://github.com/microsoft/TypeScript/pull/6983","diff_url":"https://github.com/microsoft/TypeScript/pull/6983.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/6983.patch","merged_at":"2016-03-18T23:39:49Z"},"body":"To ensure tree transformations in the TypeScript compiler are efficient, we compute information about various required transformations for each node. Transform flags are aggregated in a bottom-up fashion, so that we already have information about a node's subtree when we compute the transform flags for the node. These transform flags are initially computed during the **bind** phase of the compiler, as at that point we guarantee a full walk of the tree.\n\n![transformflags](https://cloud.githubusercontent.com/assets/3902892/12927470/3b5c45cc-cf1d-11e5-92cb-39c0ca0ec4f7.png)\n\nThe values in the `TransformFlags` enum fall into several categories:\n- _Facts_ - State something about a node or its subtree. Facts that start with \"Contains\" indicate that a node somewhere within the current node's subtree requires a transformation. Facts that do not start with \"Contains\" indicate that the current node itself requires a transformation.\n  - _Markers_ - A special class of _Facts_ that indicate specific transformations that need to occur higher in the source tree.\n- _Assertions_ - Sets of _Facts_ to apply to a node. These are used primarily in the `computeTransformFlagsForNode` function in `binder.ts`.\n- _Exclusions_ - Bitmasks that are used to prevent some _Facts_ from being copied up the subtree.\n\nAs a result, the `Node` interface is extended to include two additional properties:\n- `transformFlags` - Contains the `TransformFlags` that pertain to this specific node.\n- `excludeTransformFlags` - Contains a bitmask of `TransformFlags` that should be excluded from this node's `transformFlags` when aggregating the transform flags of a subtree containing this node.\n\nThe binder is modified to compute the transform flags for each node as it walks the tree. As a performance optimization, we skip transform flag aggregation for ambient nodes, type nodes, and declaration files. \n\nEach transformation phase will likely introduce new nodes. As a result, the `visitNode` and `visitNodes` functions in `visitor.ts` perform supplemental aggregation of transform flags to ensure successive transformation phases have the requisite information to perform additional transformations. \n\nFor example, it is possible that during the transformation from TypeScript to ES6 we may introduce an arrow function a for more idiomatic ES6 emit. This may then result in a new `this` capture which we would then need to know about during the next transformation. Rather than send the new tree through another pass of the checker, we will instead leverage the `TransformFlags.ContainsLexicalThis` and `TransformFlags.ContainsCapturedLexicalThis` flags to determine whether we need further transformation.\n\nThese flags will enable us to have more efficient transformers in the long term, that can make decisions about whether to continue to walk a subtree based on querying these flags. The following example builds on the one found in #6892:\n\n``` ts\nfunction visitor(node: Node) {\n  if (node.transformFlags & TransformFlags.ES7) {\n    // This node is an ES7 node and needs a specific transformation\n    return visitorWorker(node);\n  }\n  else if (node.transformFlags & TransformFlags.ContainsES7) {\n    // This node contains an ES7 node somewhere in its subtree, so we must walk the subtree\n    return visitEachChild(node, visitor);\n  }\n  else {\n    // Neither this node, nor its subtree, require any transformation, so we can simply \n    // reuse the node and its subtree and avoid a costly walk\n    return node;\n  }\n}\n\nfunction visitorWorker(node: Node) {\n  switch (node.kind) {\n    case SyntaxKind.BinaryExpression:\n      return visitBinaryExpression(<BinaryExpression>node);\n    ...\n    default:\n      return visitEachChild(node, visitor);\n  }\n}\n\nfunction visitBinaryExpression(node: BinaryExpression) {\n  if (node.operatorToken.kind === SyntaxKind.AsteriskAsteriskToken) {\n    return createCall(\n      createPropertyAccess(createIdentifier(\"Math\"), \"pow\"),\n      [\n        visitNode(node.left, visitor, isExpressionNode),\n        visitNode(node.right, visitor, isExpressionNode)\n      ]\n    );\n  }\n  else {\n    return visitEachChild(node, visitor);\n  }\n}\n```\n\n**Related Pull Requests:**\n- #6892 - Adds the visitor API foundation for tree transformations.\n- #6983 - **Adds the Transform Flags concept for tree transformations.**\n- #6986 - Adds the transformFiles API for tree transformations.\n- #6987 - Adds a simplified pretty printer for tree transformations.\n- #7191 - Adds the TypeScript transformer.\n- #7192 - Adds the JSX transformer.\n- #7193 - Adds the ES7 transformer.\n- #7194 - Adds the ES6 transformer.\n- #7206 - Adds the Module transformer.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/6983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6983/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/5934","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/5934/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/5934/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/5934/events","html_url":"https://github.com/microsoft/TypeScript/pull/5934","id":120444810,"node_id":"MDExOlB1bGxSZXF1ZXN0NTI2OTUyMDI=","number":5934,"title":"Inherit construct signature from extended interface","user":{"login":"sandersn","id":293473,"node_id":"MDQ6VXNlcjI5MzQ3Mw==","avatar_url":"https://avatars.githubusercontent.com/u/293473?v=4","gravatar_id":"","url":"https://api.github.com/users/sandersn","html_url":"https://github.com/sandersn","followers_url":"https://api.github.com/users/sandersn/followers","following_url":"https://api.github.com/users/sandersn/following{/other_user}","gists_url":"https://api.github.com/users/sandersn/gists{/gist_id}","starred_url":"https://api.github.com/users/sandersn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandersn/subscriptions","organizations_url":"https://api.github.com/users/sandersn/orgs","repos_url":"https://api.github.com/users/sandersn/repos","events_url":"https://api.github.com/users/sandersn/events{/privacy}","received_events_url":"https://api.github.com/users/sandersn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2015-12-04T17:08:55Z","updated_at":"2018-06-19T20:33:26Z","closed_at":"2015-12-04T22:23:07Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/5934","html_url":"https://github.com/microsoft/TypeScript/pull/5934","diff_url":"https://github.com/microsoft/TypeScript/pull/5934.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/5934.patch","merged_at":"2015-12-04T22:23:07Z"},"body":"Fixes #5864. Previously, when a class had no constructors, `getDefaultConstructSignature` only checked class base types for constructors. Now it checks all types that the class extends.\n\nThe performance should be about the same -- the original guard called `getBaseTypes` which calls `getBaseConstructorTypeOfClass`. The new code calls `getBaseConstructorTypeOfClass` up-front and then guards on the number of signatures.\n\nThis change improves the error message of an existing test which previously was _not_ the desired message according to the comment in the text of the test.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/5934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/5934/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/5920","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/5920/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/5920/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/5920/events","html_url":"https://github.com/microsoft/TypeScript/pull/5920","id":120306515,"node_id":"MDExOlB1bGxSZXF1ZXN0NTI2MTUyMjc=","number":5920,"title":"Fix slowdown in type inference involving union types","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-12-04T00:41:34Z","updated_at":"2018-06-19T20:33:21Z","closed_at":"2015-12-04T01:11:08Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/5920","html_url":"https://github.com/microsoft/TypeScript/pull/5920","diff_url":"https://github.com/microsoft/TypeScript/pull/5920.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/5920.patch","merged_at":"2015-12-04T01:11:08Z"},"body":"Fixes #5849.\n\nWhen inferring types, if the source and target are both non-generic object types we don't descend into the types because it we know it won't produce inferences. However, in 1.7 all classes are generic because of the implied this type parameter, so we ended up doing a lot more work. With this PR, we check that the type references actually have _explicitly_ specified type arguments and only descend into the types then.\n\nI have manually verified that performance is back to where it was before.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/5920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/5920/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/6083","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6083/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6083/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6083/events","html_url":"https://github.com/microsoft/TypeScript/pull/6083","id":121888953,"node_id":"MDExOlB1bGxSZXF1ZXN0NTM0ODkzMzY=","number":6083,"title":"Simplify deferred function, class, and accessor checking","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-12-13T00:20:24Z","updated_at":"2018-06-19T20:34:09Z","closed_at":"2015-12-15T17:07:07Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/6083","html_url":"https://github.com/microsoft/TypeScript/pull/6083","diff_url":"https://github.com/microsoft/TypeScript/pull/6083.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/6083.patch","merged_at":"2015-12-15T17:07:07Z"},"body":"We defer checking of function, class, and accessor bodies that are contained in expressions in order to avoid type checking circularities. For example:\n\n``` typescript\nconst foo = function () {\n    const s = foo();\n    return \"hello\";\n}\n```\n\nHere, performing a full type check of the body of the function expression whilst in the process of determining the type of foo would cause foo to be given type any because of the recursive reference. Delaying the type check of the body ensures foo has been assigned a type.\n\nWe previously performed an AST walk to find the deferred function, class, and accessor bodies. The walker was a rather brittle piece of logic with lots of cases to reason about (and possibly forget). This PR replaces the logic with a simple list of deferred nodes to be checked later. This removes a bunch of code and improves checker performance by 5% or so (with the Monaco project) due to the elimination of the extra AST walk.\n\nThe baseline changes are caused by the fact that we now never check the expression in an out-of-place return statement (as intended). We previously _sometimes_ checked it (specifically in cases when the return statement contained a deferred function, class, or accessor body).\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/6083/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/6083/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/2265","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/2265/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/2265/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/2265/events","html_url":"https://github.com/microsoft/TypeScript/pull/2265","id":60290660,"node_id":"MDExOlB1bGxSZXF1ZXN0MzA3MzI1MDE=","number":2265,"title":"Move line preservation in emit behind an experimental compiler flag.","user":{"login":"CyrusNajmabadi","id":4564579,"node_id":"MDQ6VXNlcjQ1NjQ1Nzk=","avatar_url":"https://avatars.githubusercontent.com/u/4564579?v=4","gravatar_id":"","url":"https://api.github.com/users/CyrusNajmabadi","html_url":"https://github.com/CyrusNajmabadi","followers_url":"https://api.github.com/users/CyrusNajmabadi/followers","following_url":"https://api.github.com/users/CyrusNajmabadi/following{/other_user}","gists_url":"https://api.github.com/users/CyrusNajmabadi/gists{/gist_id}","starred_url":"https://api.github.com/users/CyrusNajmabadi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CyrusNajmabadi/subscriptions","organizations_url":"https://api.github.com/users/CyrusNajmabadi/orgs","repos_url":"https://api.github.com/users/CyrusNajmabadi/repos","events_url":"https://api.github.com/users/CyrusNajmabadi/events{/privacy}","received_events_url":"https://api.github.com/users/CyrusNajmabadi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2015-03-09T02:26:01Z","updated_at":"2018-06-18T18:45:47Z","closed_at":"2015-03-09T03:25:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/2265","html_url":"https://github.com/microsoft/TypeScript/pull/2265","diff_url":"https://github.com/microsoft/TypeScript/pull/2265.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/2265.patch","merged_at":"2015-03-09T03:25:36Z"},"body":"This means by default we emit code uniformly, regardless of how your code was originally written.\n\nBeing 'experimental', it also means we can do things on a 'best effort' basis,  changing formatting and adding support on a case by case basis.\n\nIt may also improve performance as we can do less work while emitting.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/2265/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/2265/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/2470","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/2470/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/2470/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/2470/events","html_url":"https://github.com/microsoft/TypeScript/pull/2470","id":63855651,"node_id":"MDExOlB1bGxSZXF1ZXN0MzE3ODM1NzE=","number":2470,"title":"Revert \"Emit, even in the presence of declaration errors and noEmitOnError","user":{"login":"CyrusNajmabadi","id":4564579,"node_id":"MDQ6VXNlcjQ1NjQ1Nzk=","avatar_url":"https://avatars.githubusercontent.com/u/4564579?v=4","gravatar_id":"","url":"https://api.github.com/users/CyrusNajmabadi","html_url":"https://github.com/CyrusNajmabadi","followers_url":"https://api.github.com/users/CyrusNajmabadi/followers","following_url":"https://api.github.com/users/CyrusNajmabadi/following{/other_user}","gists_url":"https://api.github.com/users/CyrusNajmabadi/gists{/gist_id}","starred_url":"https://api.github.com/users/CyrusNajmabadi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CyrusNajmabadi/subscriptions","organizations_url":"https://api.github.com/users/CyrusNajmabadi/orgs","repos_url":"https://api.github.com/users/CyrusNajmabadi/repos","events_url":"https://api.github.com/users/CyrusNajmabadi/events{/privacy}","received_events_url":"https://api.github.com/users/CyrusNajmabadi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-23T23:14:04Z","updated_at":"2018-06-18T18:46:47Z","closed_at":"2015-03-24T19:25:00Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/2470","html_url":"https://github.com/microsoft/TypeScript/pull/2470","diff_url":"https://github.com/microsoft/TypeScript/pull/2470.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/2470.patch","merged_at":"2015-03-24T19:25:00Z"},"body":"This reverts commit 19517ac0ddf8e7ed67ee1328f379071d8e8feb51.\n\nThe impact of this change is that we will now no longer emit in the presence of declaration errors, if the user has noEmitOnError set to true.  \n\nPerformance-wise, this seems to add about 1% to the overall compile time (i tested using the compiler).  This seems like a reasonable cost in order to implement the noEmitOnError feature correctly.  \n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/2470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/2470/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/2475","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/2475/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/2475/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/2475/events","html_url":"https://github.com/microsoft/TypeScript/pull/2475","id":63903161,"node_id":"MDExOlB1bGxSZXF1ZXN0MzE3OTc0Mzg=","number":2475,"title":"Share code between getCompletionsAtPosition and getCompletionEntryDetails.","user":{"login":"CyrusNajmabadi","id":4564579,"node_id":"MDQ6VXNlcjQ1NjQ1Nzk=","avatar_url":"https://avatars.githubusercontent.com/u/4564579?v=4","gravatar_id":"","url":"https://api.github.com/users/CyrusNajmabadi","html_url":"https://github.com/CyrusNajmabadi","followers_url":"https://api.github.com/users/CyrusNajmabadi/followers","following_url":"https://api.github.com/users/CyrusNajmabadi/following{/other_user}","gists_url":"https://api.github.com/users/CyrusNajmabadi/gists{/gist_id}","starred_url":"https://api.github.com/users/CyrusNajmabadi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CyrusNajmabadi/subscriptions","organizations_url":"https://api.github.com/users/CyrusNajmabadi/orgs","repos_url":"https://api.github.com/users/CyrusNajmabadi/repos","events_url":"https://api.github.com/users/CyrusNajmabadi/events{/privacy}","received_events_url":"https://api.github.com/users/CyrusNajmabadi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2015-03-24T04:58:28Z","updated_at":"2018-06-18T18:46:48Z","closed_at":"2015-03-25T00:05:39Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/2475","html_url":"https://github.com/microsoft/TypeScript/pull/2475","diff_url":"https://github.com/microsoft/TypeScript/pull/2475.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/2475.patch","merged_at":"2015-03-25T00:05:39Z"},"body":"Previously, the completion item code in teh LS did something fairly unsafe.  it would cache information about symbols from a previous version of the 'program' (and typechecker), and then attempt to ask questions about those symbols after files had gone through edits\n\nThe completion details code uses this cached information to try to get the type of the symbol so it can build the display information.\n\nThis is not something safe to do.  Because of the edits, we'll have totally different symbols for this file.  This inconsistancy can lead to situations where the typeChecker we use cannot understand what's going on.  This can happen when it goes from a symbol back to the source, and back to some symbol.  This symbol will then not be one it knows about and we'll usually end up with an 'unknown' symbol result.\n## \n\nThe new approach is to extract out a common core routine for getting completion symbols.  This routine can be called by getCompletionsAtPosition to get the set of symbols to display.  The routine can also be called with a completion entry name.  In this case, instead of collecting all symbols, it instead searches, but ignores all symbols that don't match that name, and immediately returns the moment it finds the first match.  \n\nNow there is no cached information stored between calls.  We always synchronize, and the LS, program and typeChecker are always in a consistent state.\n\nTesting this out with our own project revealed no performance issue with this approach.  Completion entry details are returned just as quickly as before, and we no longer get errant 'any's in the completion entry details. \n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/2475/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/2475/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/597","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/597/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/597/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/597/events","html_url":"https://github.com/microsoft/TypeScript/pull/597","id":41962186,"node_id":"MDExOlB1bGxSZXF1ZXN0MjA3NTg4MjQ=","number":597,"title":"Cache unsuccessful file lookups for improved performance.","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-09-04T17:20:01Z","updated_at":"2018-06-18T18:38:19Z","closed_at":"2014-09-04T17:48:52Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/597","html_url":"https://github.com/microsoft/TypeScript/pull/597","diff_url":"https://github.com/microsoft/TypeScript/pull/597.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/597.patch","merged_at":"2014-09-04T17:48:52Z"},"body":"This change improves performance on compilations that are heavy on file lookups, such as projects comprised of a large number of external modules.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/597/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/1221","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/1221/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/1221/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/1221/events","html_url":"https://github.com/microsoft/TypeScript/pull/1221","id":49499378,"node_id":"MDExOlB1bGxSZXF1ZXN0MjQ3NDUzNjg=","number":1221,"title":"Move syntactic checks out of the parser","user":{"login":"CyrusNajmabadi","id":4564579,"node_id":"MDQ6VXNlcjQ1NjQ1Nzk=","avatar_url":"https://avatars.githubusercontent.com/u/4564579?v=4","gravatar_id":"","url":"https://api.github.com/users/CyrusNajmabadi","html_url":"https://github.com/CyrusNajmabadi","followers_url":"https://api.github.com/users/CyrusNajmabadi/followers","following_url":"https://api.github.com/users/CyrusNajmabadi/following{/other_user}","gists_url":"https://api.github.com/users/CyrusNajmabadi/gists{/gist_id}","starred_url":"https://api.github.com/users/CyrusNajmabadi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/CyrusNajmabadi/subscriptions","organizations_url":"https://api.github.com/users/CyrusNajmabadi/orgs","repos_url":"https://api.github.com/users/CyrusNajmabadi/repos","events_url":"https://api.github.com/users/CyrusNajmabadi/events{/privacy}","received_events_url":"https://api.github.com/users/CyrusNajmabadi/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-11-20T06:28:13Z","updated_at":"2018-06-18T18:41:09Z","closed_at":"2014-11-20T23:03:31Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/1221","html_url":"https://github.com/microsoft/TypeScript/pull/1221","diff_url":"https://github.com/microsoft/TypeScript/pull/1221.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/1221.patch","merged_at":"2014-11-20T23:03:31Z"},"body":"Being in the parser makes the incremental parser work much harder.  It means any nodes with a syntactic error cannot be reused, and it also means we need a way to appropriately persist and track that information in the tree.\n\nAround 150 errors were removed from the parser and made into grammar checks.  There are still about 20 errors in the parser that i'd like to address to see if we can get down to <5.  At that point, adding incremental becomes much simpler without having to maintain the invariants necessary to produce these errors.\n\nOne downside of this approach is we go back to the old Fidelity way of reporting syntax errors.  Namely, if there are any parse errors, then all grammar errors are supressed.  The current way (only reporting grammar errors if no parse errors were encountered _under that node_) was nicer, but computationally costly to provide in this new model.\n\nPerformance impact of this change appears to be negligible.  On my machine, after all the changes, we only got about a 6ms difference in speed compiling the compiler.  In batch scenarios, the impact here should be utterly negligible.   Conversely, this will eventually allow us to speed up incremental scenarios by a factor of 50-100x on large files.  Given that we only care about milliseconds for latency sensitive operations (like editing), and we don't care about it for batch, this seems like the right tradeoff to make.  (Note: the incremental speedup factor is assumed from the performance we had with the old incremental system).\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/1221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/1221/timeline","performed_via_github_app":null,"state_reason":null,"score":1},{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/971","repository_url":"https://api.github.com/repos/microsoft/TypeScript","labels_url":"https://api.github.com/repos/microsoft/TypeScript/issues/971/labels{/name}","comments_url":"https://api.github.com/repos/microsoft/TypeScript/issues/971/comments","events_url":"https://api.github.com/repos/microsoft/TypeScript/issues/971/events","html_url":"https://github.com/microsoft/TypeScript/pull/971","id":46862221,"node_id":"MDExOlB1bGxSZXF1ZXN0MjMzNTk0NTM=","number":971,"title":"Fix the resolveName function","user":{"login":"ahejlsberg","id":4226954,"node_id":"MDQ6VXNlcjQyMjY5NTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4226954?v=4","gravatar_id":"","url":"https://api.github.com/users/ahejlsberg","html_url":"https://github.com/ahejlsberg","followers_url":"https://api.github.com/users/ahejlsberg/followers","following_url":"https://api.github.com/users/ahejlsberg/following{/other_user}","gists_url":"https://api.github.com/users/ahejlsberg/gists{/gist_id}","starred_url":"https://api.github.com/users/ahejlsberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahejlsberg/subscriptions","organizations_url":"https://api.github.com/users/ahejlsberg/orgs","repos_url":"https://api.github.com/users/ahejlsberg/repos","events_url":"https://api.github.com/users/ahejlsberg/events{/privacy}","received_events_url":"https://api.github.com/users/ahejlsberg/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":true,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2014-10-27T01:23:08Z","updated_at":"2018-06-18T18:39:59Z","closed_at":"2014-10-27T13:48:30Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/microsoft/TypeScript/pulls/971","html_url":"https://github.com/microsoft/TypeScript/pull/971","diff_url":"https://github.com/microsoft/TypeScript/pull/971.diff","patch_url":"https://github.com/microsoft/TypeScript/pull/971.patch","merged_at":"2014-10-27T13:48:30Z"},"body":"The `resolveName` function requires a replacement argument string which in most invocations is provided by calling `identifierToString`. That in turn causes a lot of upfront work to be performed just in case an error needs to be reported. That doesn't make sense, particularly for such a performance critical function.\n\nThis PR changes the `nameArg` argument to be a `string | Identifier` such that the `identifierToString` call can be deferred to when it is actually needed. It also gets rid of a nested function that was added to perform certain checks before returning the result (which in turn created a nested function closure on every invocation). These checks are now performed at the end of the function itself.\n","reactions":{"url":"https://api.github.com/repos/microsoft/TypeScript/issues/971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/microsoft/TypeScript/issues/971/timeline","performed_via_github_app":null,"state_reason":null,"score":1}]